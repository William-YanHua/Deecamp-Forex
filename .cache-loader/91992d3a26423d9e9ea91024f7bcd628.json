{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/d3-composite-projections/node_modules/d3-geo/src/rotation.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/d3-composite-projections/node_modules/d3-geo/src/rotation.js","mtime":1573552214000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import compose from \"./compose.js\";\nimport { abs, asin, atan2, cos, degrees, pi, radians, sin, tau } from \"./math.js\";\nfunction rotationIdentity(lambda, phi) {\n    return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\nrotationIdentity.invert = rotationIdentity;\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n    return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n        : rotationLambda(deltaLambda))\n        : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n            : rotationIdentity);\n}\nfunction forwardRotationLambda(deltaLambda) {\n    return function (lambda, phi) {\n        return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n    };\n}\nfunction rotationLambda(deltaLambda) {\n    var rotation = forwardRotationLambda(deltaLambda);\n    rotation.invert = forwardRotationLambda(-deltaLambda);\n    return rotation;\n}\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n    var cosDeltaPhi = cos(deltaPhi), sinDeltaPhi = sin(deltaPhi), cosDeltaGamma = cos(deltaGamma), sinDeltaGamma = sin(deltaGamma);\n    function rotation(lambda, phi) {\n        var cosPhi = cos(phi), x = cos(lambda) * cosPhi, y = sin(lambda) * cosPhi, z = sin(phi), k = z * cosDeltaPhi + x * sinDeltaPhi;\n        return [\n            atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n            asin(k * cosDeltaGamma + y * sinDeltaGamma)\n        ];\n    }\n    rotation.invert = function (lambda, phi) {\n        var cosPhi = cos(phi), x = cos(lambda) * cosPhi, y = sin(lambda) * cosPhi, z = sin(phi), k = z * cosDeltaGamma - y * sinDeltaGamma;\n        return [\n            atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n            asin(k * cosDeltaPhi - x * sinDeltaPhi)\n        ];\n    };\n    return rotation;\n}\nexport default function (rotate) {\n    rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n    function forward(coordinates) {\n        coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n        return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n    }\n    forward.invert = function (coordinates) {\n        coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n        return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n    };\n    return forward;\n}\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/d3-composite-projections/node_modules/d3-geo/src/rotation.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/d3-composite-projections/node_modules/d3-geo/src/rotation.js"],"names":[],"mappings":"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","sourcesContent":["import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n"]}]}