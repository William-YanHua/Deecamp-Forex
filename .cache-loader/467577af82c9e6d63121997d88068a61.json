{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/is-what/dist/index.esm.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/is-what/dist/index.esm.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function getType(payload) {\n    return Object.prototype.toString.call(payload).slice(8, -1);\n}\nfunction isUndefined(payload) {\n    return getType(payload) === 'Undefined';\n}\nfunction isNull(payload) {\n    return getType(payload) === 'Null';\n}\nfunction isPlainObject(payload) {\n    if (getType(payload) !== 'Object')\n        return false;\n    return payload.constructor === Object && Object.getPrototypeOf(payload) === Object.prototype;\n}\nfunction isObject(payload) {\n    return isPlainObject(payload);\n}\nfunction isEmptyObject(payload) {\n    return isPlainObject(payload) && Object.keys(payload).length === 0;\n}\nfunction isAnyObject(payload) {\n    return getType(payload) === 'Object';\n}\nfunction isObjectLike(payload) {\n    return isAnyObject(payload);\n}\nfunction isFunction(payload) {\n    return getType(payload) === 'Function';\n}\nfunction isArray(payload) {\n    return getType(payload) === 'Array';\n}\nfunction isEmptyArray(payload) {\n    return isArray(payload) && payload.length === 0;\n}\nfunction isString(payload) {\n    return getType(payload) === 'String';\n}\nfunction isFullString(payload) {\n    return isString(payload) && payload !== '';\n}\nfunction isEmptyString(payload) {\n    return payload === '';\n}\nfunction isNumber(payload) {\n    return getType(payload) === 'Number' && !isNaN(payload);\n}\nfunction isBoolean(payload) {\n    return getType(payload) === 'Boolean';\n}\nfunction isRegExp(payload) {\n    return getType(payload) === 'RegExp';\n}\nfunction isMap(payload) {\n    return getType(payload) === 'Map';\n}\nfunction isWeakMap(payload) {\n    return getType(payload) === 'WeakMap';\n}\nfunction isSet(payload) {\n    return getType(payload) === 'Set';\n}\nfunction isWeakSet(payload) {\n    return getType(payload) === 'WeakSet';\n}\nfunction isSymbol(payload) {\n    return getType(payload) === 'Symbol';\n}\nfunction isDate(payload) {\n    return getType(payload) === 'Date' && !isNaN(payload);\n}\nfunction isBlob(payload) {\n    return getType(payload) === 'Blob';\n}\nfunction isFile(payload) {\n    return getType(payload) === 'File';\n}\nfunction isPromise(payload) {\n    return getType(payload) === 'Promise';\n}\nfunction isError(payload) {\n    return getType(payload) === 'Error';\n}\nfunction isNaNValue(payload) {\n    return getType(payload) === 'Number' && isNaN(payload);\n}\nfunction isPrimitive(payload) {\n    return (isBoolean(payload) ||\n        isNull(payload) ||\n        isUndefined(payload) ||\n        isNumber(payload) ||\n        isString(payload) ||\n        isSymbol(payload));\n}\nfunction isNullOrUndefined(payload) {\n    return isNull(payload) || isUndefined(payload);\n}\nfunction isType(payload, type) {\n    if (!(type instanceof Function)) {\n        throw new TypeError('Type must be a function');\n    }\n    if (!Object.prototype.hasOwnProperty.call(type, 'prototype')) {\n        throw new TypeError('Type is not a class');\n    }\n    var name = type.name;\n    return getType(payload) === name || Boolean(payload && payload.constructor === type);\n}\nexport { getType, isAnyObject, isArray, isBlob, isBoolean, isDate, isEmptyArray, isEmptyObject, isEmptyString, isError, isFile, isFullString, isFunction, isMap, isNaNValue, isNull, isNullOrUndefined, isNumber, isObject, isObjectLike, isPlainObject, isPrimitive, isPromise, isRegExp, isSet, isString, isSymbol, isType, isUndefined, isWeakMap, isWeakSet };\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/is-what/dist/index.esm.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/is-what/dist/index.esm.js"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Returns the object type of the given payload\r\n *\r\n * @param {*} payload\r\n * @returns {string}\r\n */\r\nfunction getType(payload) {\r\n    return Object.prototype.toString.call(payload).slice(8, -1);\r\n}\r\n/**\r\n * Returns whether the payload is undefined\r\n *\r\n * @param {*} payload\r\n * @returns {payload is undefined}\r\n */\r\nfunction isUndefined(payload) {\r\n    return getType(payload) === 'Undefined';\r\n}\r\n/**\r\n * Returns whether the payload is null\r\n *\r\n * @param {*} payload\r\n * @returns {payload is null}\r\n */\r\nfunction isNull(payload) {\r\n    return getType(payload) === 'Null';\r\n}\r\n/**\r\n * Returns whether the payload is a plain JavaScript object (excluding special classes or objects with other prototypes)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is {[key: string]: any}}\r\n */\r\nfunction isPlainObject(payload) {\r\n    if (getType(payload) !== 'Object')\r\n        return false;\r\n    return payload.constructor === Object && Object.getPrototypeOf(payload) === Object.prototype;\r\n}\r\n/**\r\n * Returns whether the payload is a plain JavaScript object (excluding special classes or objects with other prototypes)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is {[key: string]: any}}\r\n */\r\nfunction isObject(payload) {\r\n    return isPlainObject(payload);\r\n}\r\n/**\r\n * Returns whether the payload is a an empty object (excluding special classes or objects with other prototypes)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is {}}\r\n */\r\nfunction isEmptyObject(payload) {\r\n    return isPlainObject(payload) && Object.keys(payload).length === 0;\r\n}\r\n/**\r\n * Returns whether the payload is an any kind of object (including special classes or objects with different prototypes)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is {[key: string]: any}}\r\n */\r\nfunction isAnyObject(payload) {\r\n    return getType(payload) === 'Object';\r\n}\r\n/**\r\n * Returns whether the payload is an object like a type passed in < >\r\n *\r\n * Usage: isObjectLike<{id: any}>(payload) // will make sure it's an object and has an `id` prop.\r\n *\r\n * @template T this must be passed in < >\r\n * @param {*} payload\r\n * @returns {payload is T}\r\n */\r\nfunction isObjectLike(payload) {\r\n    return isAnyObject(payload);\r\n}\r\n/**\r\n * Returns whether the payload is a function\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Function}\r\n */\r\nfunction isFunction(payload) {\r\n    return getType(payload) === 'Function';\r\n}\r\n/**\r\n * Returns whether the payload is an array\r\n *\r\n * @param {*} payload\r\n * @returns {payload is undefined}\r\n */\r\nfunction isArray(payload) {\r\n    return getType(payload) === 'Array';\r\n}\r\n/**\r\n * Returns whether the payload is a an empty array\r\n *\r\n * @param {*} payload\r\n * @returns {payload is []}\r\n */\r\nfunction isEmptyArray(payload) {\r\n    return isArray(payload) && payload.length === 0;\r\n}\r\n/**\r\n * Returns whether the payload is a string\r\n *\r\n * @param {*} payload\r\n * @returns {payload is string}\r\n */\r\nfunction isString(payload) {\r\n    return getType(payload) === 'String';\r\n}\r\n/**\r\n * Returns whether the payload is a string, BUT returns false for ''\r\n *\r\n * @param {*} payload\r\n * @returns {payload is string}\r\n */\r\nfunction isFullString(payload) {\r\n    return isString(payload) && payload !== '';\r\n}\r\n/**\r\n * Returns whether the payload is ''\r\n *\r\n * @param {*} payload\r\n * @returns {payload is string}\r\n */\r\nfunction isEmptyString(payload) {\r\n    return payload === '';\r\n}\r\n/**\r\n * Returns whether the payload is a number\r\n *\r\n * This will return false for NaN\r\n *\r\n * @param {*} payload\r\n * @returns {payload is number}\r\n */\r\nfunction isNumber(payload) {\r\n    return getType(payload) === 'Number' && !isNaN(payload);\r\n}\r\n/**\r\n * Returns whether the payload is a boolean\r\n *\r\n * @param {*} payload\r\n * @returns {payload is boolean}\r\n */\r\nfunction isBoolean(payload) {\r\n    return getType(payload) === 'Boolean';\r\n}\r\n/**\r\n * Returns whether the payload is a regular expression (RegExp)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is RegExp}\r\n */\r\nfunction isRegExp(payload) {\r\n    return getType(payload) === 'RegExp';\r\n}\r\n/**\r\n * Returns whether the payload is a Map\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Map}\r\n */\r\nfunction isMap(payload) {\r\n    return getType(payload) === 'Map';\r\n}\r\n/**\r\n * Returns whether the payload is a WeakMap\r\n *\r\n * @param {*} payload\r\n * @returns {payload is WeakMap}\r\n */\r\nfunction isWeakMap(payload) {\r\n    return getType(payload) === 'WeakMap';\r\n}\r\n/**\r\n * Returns whether the payload is a Set\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Set}\r\n */\r\nfunction isSet(payload) {\r\n    return getType(payload) === 'Set';\r\n}\r\n/**\r\n * Returns whether the payload is a WeakSet\r\n *\r\n * @param {*} payload\r\n * @returns {payload is WeakSet}\r\n */\r\nfunction isWeakSet(payload) {\r\n    return getType(payload) === 'WeakSet';\r\n}\r\n/**\r\n * Returns whether the payload is a Symbol\r\n *\r\n * @param {*} payload\r\n * @returns {payload is symbol}\r\n */\r\nfunction isSymbol(payload) {\r\n    return getType(payload) === 'Symbol';\r\n}\r\n/**\r\n * Returns whether the payload is a Date, and that the date is valid\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Date}\r\n */\r\nfunction isDate(payload) {\r\n    return getType(payload) === 'Date' && !isNaN(payload);\r\n}\r\n/**\r\n * Returns whether the payload is a Blob\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Blob}\r\n */\r\nfunction isBlob(payload) {\r\n    return getType(payload) === 'Blob';\r\n}\r\n/**\r\n * Returns whether the payload is a File\r\n *\r\n * @param {*} payload\r\n * @returns {payload is File}\r\n */\r\nfunction isFile(payload) {\r\n    return getType(payload) === 'File';\r\n}\r\n/**\r\n * Returns whether the payload is a Promise\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Promise}\r\n */\r\nfunction isPromise(payload) {\r\n    return getType(payload) === 'Promise';\r\n}\r\n/**\r\n * Returns whether the payload is an Error\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Error}\r\n */\r\nfunction isError(payload) {\r\n    return getType(payload) === 'Error';\r\n}\r\n/**\r\n * Returns whether the payload is `NaN` but also a `number`\r\n *\r\n * @param {*} payload\r\n * @returns {payload is typeof NaN}\r\n */\r\nfunction isNaNValue(payload) {\r\n    return getType(payload) === 'Number' && isNaN(payload);\r\n}\r\n/**\r\n * Returns whether the payload is a primitive type (eg. Boolean | Null | Undefined | Number | String | Symbol)\r\n *\r\n * @param {*} payload\r\n * @returns {(payload is boolean | null | undefined | number | string | symbol)}\r\n */\r\nfunction isPrimitive(payload) {\r\n    return (isBoolean(payload) ||\r\n        isNull(payload) ||\r\n        isUndefined(payload) ||\r\n        isNumber(payload) ||\r\n        isString(payload) ||\r\n        isSymbol(payload));\r\n}\r\n/**\r\n * Returns true whether the payload is null or undefined\r\n *\r\n * @param {*} payload\r\n * @returns {(payload is null | undefined)}\r\n */\r\nfunction isNullOrUndefined(payload) {\r\n    return isNull(payload) || isUndefined(payload);\r\n}\r\n/**\r\n * Does a generic check to check that the given payload is of a given type.\r\n * In cases like Number, it will return true for NaN as NaN is a Number (thanks javascript!);\r\n * It will, however, differentiate between object and null\r\n *\r\n * @template T\r\n * @param {*} payload\r\n * @param {T} type\r\n * @throws {TypeError} Will throw type error if type is an invalid type\r\n * @returns {payload is T}\r\n */\r\nfunction isType(payload, type) {\r\n    if (!(type instanceof Function)) {\r\n        throw new TypeError('Type must be a function');\r\n    }\r\n    if (!Object.prototype.hasOwnProperty.call(type, 'prototype')) {\r\n        throw new TypeError('Type is not a class');\r\n    }\r\n    // Classes usually have names (as functions usually have names)\r\n    var name = type.name;\r\n    return getType(payload) === name || Boolean(payload && payload.constructor === type);\r\n}\n\nexport { getType, isAnyObject, isArray, isBlob, isBoolean, isDate, isEmptyArray, isEmptyObject, isEmptyString, isError, isFile, isFullString, isFunction, isMap, isNaNValue, isNull, isNullOrUndefined, isNumber, isObject, isObjectLike, isPlainObject, isPrimitive, isPromise, isRegExp, isSet, isString, isSymbol, isType, isUndefined, isWeakMap, isWeakSet };\n"]}]}