{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-geo-projection\\src\\polyhedral\\collignon.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-geo-projection\\src\\polyhedral\\collignon.js","mtime":1478025116000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { geoCentroid as centroid, geoProjection as projection } from \"d3-geo\";\r\nimport { collignonRaw } from \"../collignon\";\r\nimport { pi, sqrt } from \"../math\";\r\nimport polyhedral from \"./index\";\r\nimport octahedron from \"./octahedron\";\r\nvar kx = 2 / sqrt(3);\r\nfunction collignonK(a, b) {\r\n    var p = collignonRaw(a, b);\r\n    return [p[0] * kx, p[1]];\r\n}\r\ncollignonK.invert = function (x, y) {\r\n    return collignonRaw.invert(x / kx, y);\r\n};\r\nexport default function (faceProjection) {\r\n    faceProjection = faceProjection || function (face) {\r\n        var c = centroid({ type: \"MultiPoint\", coordinates: face });\r\n        return projection(collignonK).translate([0, 0]).scale(1).rotate(c[1] > 0 ? [-c[0], 0] : [180 - c[0], 180]);\r\n    };\r\n    var faces = octahedron.map(function (face) {\r\n        return { face: face, project: faceProjection(face) };\r\n    });\r\n    [-1, 0, 0, 1, 0, 1, 4, 5].forEach(function (d, i) {\r\n        var node = faces[d];\r\n        node && (node.children || (node.children = [])).push(faces[i]);\r\n    });\r\n    return polyhedral(faces[0], function (lambda, phi) {\r\n        return faces[lambda < -pi / 2 ? phi < 0 ? 6 : 4\r\n            : lambda < 0 ? phi < 0 ? 2 : 0\r\n                : lambda < pi / 2 ? phi < 0 ? 3 : 1\r\n                    : phi < 0 ? 7 : 5];\r\n    })\r\n        .scale(121.906)\r\n        .center([0, 48.5904]);\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-geo-projection\\src\\polyhedral\\collignon.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-geo-projection\\src\\polyhedral\\collignon.js"],"names":[],"mappings":"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","sourcesContent":["import {geoCentroid as centroid, geoProjection as projection} from \"d3-geo\";\nimport {collignonRaw} from \"../collignon\";\nimport {pi, sqrt} from \"../math\";\nimport polyhedral from \"./index\";\nimport octahedron from \"./octahedron\";\n\nvar kx = 2 / sqrt(3);\n\nfunction collignonK(a, b) {\n  var p = collignonRaw(a, b);\n  return [p[0] * kx, p[1]];\n}\n\ncollignonK.invert = function(x,y) {\n  return collignonRaw.invert(x / kx, y);\n};\n\nexport default function(faceProjection) {\n\n  faceProjection = faceProjection || function(face) {\n    var c = centroid({type: \"MultiPoint\", coordinates: face});\n    return projection(collignonK).translate([0, 0]).scale(1).rotate(c[1] > 0 ? [-c[0], 0] : [180 - c[0], 180]);\n  };\n\n  var faces = octahedron.map(function(face) {\n    return {face: face, project: faceProjection(face)};\n  });\n\n  [-1, 0, 0, 1, 0, 1, 4, 5].forEach(function(d, i) {\n    var node = faces[d];\n    node && (node.children || (node.children = [])).push(faces[i]);\n  });\n\n  return polyhedral(faces[0], function(lambda, phi) {\n        return faces[lambda < -pi / 2 ? phi < 0 ? 6 : 4\n            : lambda < 0 ? phi < 0 ? 2 : 0\n            : lambda < pi / 2 ? phi < 0 ? 3 : 1\n            : phi < 0 ? 7 : 5];\n      })\n      .scale(121.906)\n      .center([0, 48.5904]);\n}\n"]}]}