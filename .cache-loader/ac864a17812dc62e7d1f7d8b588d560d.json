{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\component\\esm\\util\\matrix.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\component\\esm\\util\\matrix.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { ext, vec2, vec3 } from '@antv/matrix-util';\r\nvar identityMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\r\nexport function getMatrixByAngle(point, angle) {\r\n    if (!angle) {\r\n        return null;\r\n    }\r\n    var m = ext.transform(identityMatrix, [\r\n        ['t', -point.x, -point.y],\r\n        ['r', angle],\r\n        ['t', point.x, point.y],\r\n    ]);\r\n    return m;\r\n}\r\nexport function getMatrixByTranslate(point, currentMatrix) {\r\n    if (!point.x && !point.y) {\r\n        return null;\r\n    }\r\n    return ext.transform(currentMatrix || identityMatrix, [['t', point.x, point.y]]);\r\n}\r\nexport function getAngleByMatrix(matrix) {\r\n    var xVector = [1, 0, 0];\r\n    var out = [0, 0, 0];\r\n    vec3.transformMat3(out, xVector, matrix);\r\n    return Math.atan2(out[1], out[0]);\r\n}\r\nfunction multiplyVec2(matrix, v) {\r\n    var out = [0, 0];\r\n    vec2.transformMat3(out, v, matrix);\r\n    return out;\r\n}\r\nexport function applyMatrix2BBox(matrix, bbox) {\r\n    var topLeft = multiplyVec2(matrix, [bbox.minX, bbox.minY]);\r\n    var topRight = multiplyVec2(matrix, [bbox.maxX, bbox.minY]);\r\n    var bottomLeft = multiplyVec2(matrix, [bbox.minX, bbox.maxY]);\r\n    var bottomRight = multiplyVec2(matrix, [bbox.maxX, bbox.maxY]);\r\n    var minX = Math.min(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]);\r\n    var maxX = Math.max(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]);\r\n    var minY = Math.min(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1]);\r\n    var maxY = Math.max(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1]);\r\n    return {\r\n        x: minX,\r\n        y: minY,\r\n        minX: minX,\r\n        minY: minY,\r\n        maxX: maxX,\r\n        maxY: maxY,\r\n        width: maxX - minX,\r\n        height: maxY - minY,\r\n    };\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\component\\esm\\util\\matrix.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\component\\esm\\util\\matrix.js"],"names":[],"mappings":"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","sourcesContent":["import { ext, vec2, vec3 } from '@antv/matrix-util';\nvar identityMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\nexport function getMatrixByAngle(point, angle) {\n    if (!angle) {\n        // 角度为 0 或者 null 时返回 null\n        return null;\n    }\n    var m = ext.transform(identityMatrix, [\n        ['t', -point.x, -point.y],\n        ['r', angle],\n        ['t', point.x, point.y],\n    ]);\n    return m;\n}\nexport function getMatrixByTranslate(point, currentMatrix) {\n    if (!point.x && !point.y) {\n        // 0，0 或者 nan 的情况下返回 null\n        return null;\n    }\n    return ext.transform(currentMatrix || identityMatrix, [['t', point.x, point.y]]);\n}\n// 从矩阵获取旋转的角度\nexport function getAngleByMatrix(matrix) {\n    var xVector = [1, 0, 0];\n    var out = [0, 0, 0];\n    vec3.transformMat3(out, xVector, matrix);\n    return Math.atan2(out[1], out[0]);\n}\n// 矩阵 * 向量\nfunction multiplyVec2(matrix, v) {\n    var out = [0, 0];\n    vec2.transformMat3(out, v, matrix);\n    return out;\n}\nexport function applyMatrix2BBox(matrix, bbox) {\n    var topLeft = multiplyVec2(matrix, [bbox.minX, bbox.minY]);\n    var topRight = multiplyVec2(matrix, [bbox.maxX, bbox.minY]);\n    var bottomLeft = multiplyVec2(matrix, [bbox.minX, bbox.maxY]);\n    var bottomRight = multiplyVec2(matrix, [bbox.maxX, bbox.maxY]);\n    var minX = Math.min(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]);\n    var maxX = Math.max(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]);\n    var minY = Math.min(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1]);\n    var maxY = Math.max(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1]);\n    return {\n        x: minX,\n        y: minY,\n        minX: minX,\n        minY: minY,\n        maxX: maxX,\n        maxY: maxY,\n        width: maxX - minX,\n        height: maxY - minY,\n    };\n}\n//# sourceMappingURL=matrix.js.map"]}]}