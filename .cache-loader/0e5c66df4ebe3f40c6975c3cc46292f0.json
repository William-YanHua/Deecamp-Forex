{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\moment\\locale\\ru.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\moment\\locale\\ru.js","mtime":1527836312000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":[";\r\n(function (global, factory) {\r\n    typeof exports === 'object' && typeof module !== 'undefined'\r\n        && typeof require === 'function' ? factory(require('../moment')) :\r\n        typeof define === 'function' && define.amd ? define(['../moment'], factory) :\r\n            factory(global.moment);\r\n}(this, (function (moment) {\r\n    'use strict';\r\n    function plural(word, num) {\r\n        var forms = word.split('_');\r\n        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\r\n    }\r\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\r\n        var format = {\r\n            'ss': withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\r\n            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\r\n            'hh': 'час_часа_часов',\r\n            'dd': 'день_дня_дней',\r\n            'MM': 'месяц_месяца_месяцев',\r\n            'yy': 'год_года_лет'\r\n        };\r\n        if (key === 'm') {\r\n            return withoutSuffix ? 'минута' : 'минуту';\r\n        }\r\n        else {\r\n            return number + ' ' + plural(format[key], +number);\r\n        }\r\n    }\r\n    var monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];\r\n    var ru = moment.defineLocale('ru', {\r\n        months: {\r\n            format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),\r\n            standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')\r\n        },\r\n        monthsShort: {\r\n            format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),\r\n            standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')\r\n        },\r\n        weekdays: {\r\n            standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\r\n            format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),\r\n            isFormat: /\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/\r\n        },\r\n        weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\r\n        weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\r\n        monthsParse: monthsParse,\r\n        longMonthsParse: monthsParse,\r\n        shortMonthsParse: monthsParse,\r\n        monthsRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\r\n        monthsShortRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\r\n        monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,\r\n        monthsShortStrictRegex: /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,\r\n        longDateFormat: {\r\n            LT: 'H:mm',\r\n            LTS: 'H:mm:ss',\r\n            L: 'DD.MM.YYYY',\r\n            LL: 'D MMMM YYYY г.',\r\n            LLL: 'D MMMM YYYY г., H:mm',\r\n            LLLL: 'dddd, D MMMM YYYY г., H:mm'\r\n        },\r\n        calendar: {\r\n            sameDay: '[Сегодня, в] LT',\r\n            nextDay: '[Завтра, в] LT',\r\n            lastDay: '[Вчера, в] LT',\r\n            nextWeek: function (now) {\r\n                if (now.week() !== this.week()) {\r\n                    switch (this.day()) {\r\n                        case 0:\r\n                            return '[В следующее] dddd, [в] LT';\r\n                        case 1:\r\n                        case 2:\r\n                        case 4:\r\n                            return '[В следующий] dddd, [в] LT';\r\n                        case 3:\r\n                        case 5:\r\n                        case 6:\r\n                            return '[В следующую] dddd, [в] LT';\r\n                    }\r\n                }\r\n                else {\r\n                    if (this.day() === 2) {\r\n                        return '[Во] dddd, [в] LT';\r\n                    }\r\n                    else {\r\n                        return '[В] dddd, [в] LT';\r\n                    }\r\n                }\r\n            },\r\n            lastWeek: function (now) {\r\n                if (now.week() !== this.week()) {\r\n                    switch (this.day()) {\r\n                        case 0:\r\n                            return '[В прошлое] dddd, [в] LT';\r\n                        case 1:\r\n                        case 2:\r\n                        case 4:\r\n                            return '[В прошлый] dddd, [в] LT';\r\n                        case 3:\r\n                        case 5:\r\n                        case 6:\r\n                            return '[В прошлую] dddd, [в] LT';\r\n                    }\r\n                }\r\n                else {\r\n                    if (this.day() === 2) {\r\n                        return '[Во] dddd, [в] LT';\r\n                    }\r\n                    else {\r\n                        return '[В] dddd, [в] LT';\r\n                    }\r\n                }\r\n            },\r\n            sameElse: 'L'\r\n        },\r\n        relativeTime: {\r\n            future: 'через %s',\r\n            past: '%s назад',\r\n            s: 'несколько секунд',\r\n            ss: relativeTimeWithPlural,\r\n            m: relativeTimeWithPlural,\r\n            mm: relativeTimeWithPlural,\r\n            h: 'час',\r\n            hh: relativeTimeWithPlural,\r\n            d: 'день',\r\n            dd: relativeTimeWithPlural,\r\n            M: 'месяц',\r\n            MM: relativeTimeWithPlural,\r\n            y: 'год',\r\n            yy: relativeTimeWithPlural\r\n        },\r\n        meridiemParse: /ночи|утра|дня|вечера/i,\r\n        isPM: function (input) {\r\n            return /^(дня|вечера)$/.test(input);\r\n        },\r\n        meridiem: function (hour, minute, isLower) {\r\n            if (hour < 4) {\r\n                return 'ночи';\r\n            }\r\n            else if (hour < 12) {\r\n                return 'утра';\r\n            }\r\n            else if (hour < 17) {\r\n                return 'дня';\r\n            }\r\n            else {\r\n                return 'вечера';\r\n            }\r\n        },\r\n        dayOfMonthOrdinalParse: /\\d{1,2}-(й|го|я)/,\r\n        ordinal: function (number, period) {\r\n            switch (period) {\r\n                case 'M':\r\n                case 'd':\r\n                case 'DDD':\r\n                    return number + '-й';\r\n                case 'D':\r\n                    return number + '-го';\r\n                case 'w':\r\n                case 'W':\r\n                    return number + '-я';\r\n                default:\r\n                    return number;\r\n            }\r\n        },\r\n        week: {\r\n            dow: 1,\r\n            doy: 4\r\n        }\r\n    });\r\n    return ru;\r\n})));\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\moment\\locale\\ru.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\moment\\locale\\ru.js"],"names":[],"mappings":"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","sourcesContent":["//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n    }\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            'ss': withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n            'hh': 'час_часа_часов',\n            'dd': 'день_дня_дней',\n            'MM': 'месяц_месяца_месяцев',\n            'yy': 'год_года_лет'\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'минута' : 'минуту';\n        }\n        else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n    var monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];\n\n    // http://new.gramota.ru/spravka/rules/139-prop : § 103\n    // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637\n    // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753\n    var ru = moment.defineLocale('ru', {\n        months : {\n            format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),\n            standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')\n        },\n        monthsShort : {\n            // по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку ?\n            format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),\n            standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')\n        },\n        weekdays : {\n            standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\n            format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),\n            isFormat: /\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/\n        },\n        weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n        weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n        monthsParse : monthsParse,\n        longMonthsParse : monthsParse,\n        shortMonthsParse : monthsParse,\n\n        // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки\n        monthsRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n\n        // копия предыдущего\n        monthsShortRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n\n        // полные названия с падежами\n        monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,\n\n        // Выражение, которое соотвествует только сокращённым формам\n        monthsShortStrictRegex: /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY г.',\n            LLL : 'D MMMM YYYY г., H:mm',\n            LLLL : 'dddd, D MMMM YYYY г., H:mm'\n        },\n        calendar : {\n            sameDay: '[Сегодня, в] LT',\n            nextDay: '[Завтра, в] LT',\n            lastDay: '[Вчера, в] LT',\n            nextWeek: function (now) {\n                if (now.week() !== this.week()) {\n                    switch (this.day()) {\n                        case 0:\n                            return '[В следующее] dddd, [в] LT';\n                        case 1:\n                        case 2:\n                        case 4:\n                            return '[В следующий] dddd, [в] LT';\n                        case 3:\n                        case 5:\n                        case 6:\n                            return '[В следующую] dddd, [в] LT';\n                    }\n                } else {\n                    if (this.day() === 2) {\n                        return '[Во] dddd, [в] LT';\n                    } else {\n                        return '[В] dddd, [в] LT';\n                    }\n                }\n            },\n            lastWeek: function (now) {\n                if (now.week() !== this.week()) {\n                    switch (this.day()) {\n                        case 0:\n                            return '[В прошлое] dddd, [в] LT';\n                        case 1:\n                        case 2:\n                        case 4:\n                            return '[В прошлый] dddd, [в] LT';\n                        case 3:\n                        case 5:\n                        case 6:\n                            return '[В прошлую] dddd, [в] LT';\n                    }\n                } else {\n                    if (this.day() === 2) {\n                        return '[Во] dddd, [в] LT';\n                    } else {\n                        return '[В] dddd, [в] LT';\n                    }\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'через %s',\n            past : '%s назад',\n            s : 'несколько секунд',\n            ss : relativeTimeWithPlural,\n            m : relativeTimeWithPlural,\n            mm : relativeTimeWithPlural,\n            h : 'час',\n            hh : relativeTimeWithPlural,\n            d : 'день',\n            dd : relativeTimeWithPlural,\n            M : 'месяц',\n            MM : relativeTimeWithPlural,\n            y : 'год',\n            yy : relativeTimeWithPlural\n        },\n        meridiemParse: /ночи|утра|дня|вечера/i,\n        isPM : function (input) {\n            return /^(дня|вечера)$/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночи';\n            } else if (hour < 12) {\n                return 'утра';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечера';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(й|го|я)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'M':\n                case 'd':\n                case 'DDD':\n                    return number + '-й';\n                case 'D':\n                    return number + '-го';\n                case 'w':\n                case 'W':\n                    return number + '-я';\n                default:\n                    return number;\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return ru;\n\n})));\n"]}]}