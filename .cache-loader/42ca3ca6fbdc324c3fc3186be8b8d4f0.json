{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-geo\\src\\length.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-geo\\src\\length.js","mtime":1470073379000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import adder from \"./adder\";\r\nimport { abs, atan2, cos, radians, sin, sqrt } from \"./math\";\r\nimport noop from \"./noop\";\r\nimport stream from \"./stream\";\r\nvar lengthSum = adder(), lambda0, sinPhi0, cosPhi0;\r\nvar lengthStream = {\r\n    sphere: noop,\r\n    point: noop,\r\n    lineStart: lengthLineStart,\r\n    lineEnd: noop,\r\n    polygonStart: noop,\r\n    polygonEnd: noop\r\n};\r\nfunction lengthLineStart() {\r\n    lengthStream.point = lengthPointFirst;\r\n    lengthStream.lineEnd = lengthLineEnd;\r\n}\r\nfunction lengthLineEnd() {\r\n    lengthStream.point = lengthStream.lineEnd = noop;\r\n}\r\nfunction lengthPointFirst(lambda, phi) {\r\n    lambda *= radians, phi *= radians;\r\n    lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\r\n    lengthStream.point = lengthPoint;\r\n}\r\nfunction lengthPoint(lambda, phi) {\r\n    lambda *= radians, phi *= radians;\r\n    var sinPhi = sin(phi), cosPhi = cos(phi), delta = abs(lambda - lambda0), cosDelta = cos(delta), sinDelta = sin(delta), x = cosPhi * sinDelta, y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta, z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\r\n    lengthSum.add(atan2(sqrt(x * x + y * y), z));\r\n    lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\r\n}\r\nexport default function (object) {\r\n    lengthSum.reset();\r\n    stream(object, lengthStream);\r\n    return +lengthSum;\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-geo\\src\\length.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-geo\\src\\length.js"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,SAAS,CAAC;AAC5B,OAAO,EAAC,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,IAAI,EAAC,MAAM,QAAQ,CAAC;AAC3D,OAAO,IAAI,MAAM,QAAQ,CAAC;AAC1B,OAAO,MAAM,MAAM,UAAU,CAAC;AAE9B,IAAI,SAAS,GAAG,KAAK,EAAE,EACnB,OAAO,EACP,OAAO,EACP,OAAO,CAAC;AAEZ,IAAI,YAAY,GAAG;IACjB,MAAM,EAAE,IAAI;IACZ,KAAK,EAAE,IAAI;IACX,SAAS,EAAE,eAAe;IAC1B,OAAO,EAAE,IAAI;IACb,YAAY,EAAE,IAAI;IAClB,UAAU,EAAE,IAAI;CACjB,CAAC;AAEF,SAAS,eAAe;IACtB,YAAY,CAAC,KAAK,GAAG,gBAAgB,CAAC;IACtC,YAAY,CAAC,OAAO,GAAG,aAAa,CAAC;AACvC,CAAC;AAED,SAAS,aAAa;IACpB,YAAY,CAAC,KAAK,GAAG,YAAY,CAAC,OAAO,GAAG,IAAI,CAAC;AACnD,CAAC;AAED,SAAS,gBAAgB,CAAC,MAAM,EAAE,GAAG;IACnC,MAAM,IAAI,OAAO,EAAE,GAAG,IAAI,OAAO,CAAC;IAClC,OAAO,GAAG,MAAM,EAAE,OAAO,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,OAAO,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;IACzD,YAAY,CAAC,KAAK,GAAG,WAAW,CAAC;AACnC,CAAC;AAED,SAAS,WAAW,CAAC,MAAM,EAAE,GAAG;IAC9B,MAAM,IAAI,OAAO,EAAE,GAAG,IAAI,OAAO,CAAC;IAClC,IAAI,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,EACjB,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,EACjB,KAAK,GAAG,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,EAC7B,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,EACrB,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,EACrB,CAAC,GAAG,MAAM,GAAG,QAAQ,EACrB,CAAC,GAAG,OAAO,GAAG,MAAM,GAAG,OAAO,GAAG,MAAM,GAAG,QAAQ,EAClD,CAAC,GAAG,OAAO,GAAG,MAAM,GAAG,OAAO,GAAG,MAAM,GAAG,QAAQ,CAAC;IACvD,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC7C,OAAO,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,CAAC;AACvD,CAAC;AAED,MAAM,CAAC,OAAO,WAAU,MAAM;IAC5B,SAAS,CAAC,KAAK,EAAE,CAAC;IAClB,MAAM,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;IAC7B,OAAO,CAAC,SAAS,CAAC;AACpB,CAAC","sourcesContent":["import adder from \"./adder\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n"]}]}