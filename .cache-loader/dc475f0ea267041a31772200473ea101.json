{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/sparkline/progress/layer.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/sparkline/progress/layer.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\nimport { isArray, mix, hasKey, each, has, isFunction, clone, deepMix, isString, isNumber } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport { getGeom } from '../../geoms/factory';\nimport TinyLayer from '../tiny-layer';\nimport Marker from './component/marker';\nimport * as EventParser from './event';\nvar G2_GEOM_MAP = {\n    progress: 'interval',\n};\nvar PLOT_GEOM_MAP = {\n    interval: 'progress',\n};\nvar DEFAULT_COLOR = ['#55A6F3', '#E8EDF3'];\nvar ProgressLayer = (function (_super) {\n    __extends(ProgressLayer, _super);\n    function ProgressLayer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'progress';\n        _this.isEntered = false;\n        return _this;\n    }\n    ProgressLayer.prototype.processProps = function () {\n        var props = this.options;\n        props.data = this.processData();\n        var cfg = {\n            padding: [0, 0, 0, 0],\n            xField: 'value',\n            yField: '1',\n            stackField: 'type',\n            barSize: props.size ? props.size : this.getSize(),\n            barStyle: props.progressStyle,\n            color: this.parseColorProps(props) || DEFAULT_COLOR,\n        };\n        props = mix(props, cfg);\n    };\n    ProgressLayer.prototype.init = function () {\n        this.processProps();\n        _super.prototype.init.call(this);\n    };\n    ProgressLayer.prototype.beforeInit = function () {\n        var percent = this.options.percent;\n        if (!isNumber(percent)) {\n            throw new Error('Percent value is required, and the type of percent must be Number.');\n        }\n    };\n    ProgressLayer.prototype.update = function (cfg) {\n        var props = this.options;\n        if (hasKey(cfg, 'percent')) {\n            props.percent = cfg.percent;\n            this.changeData(this.processData());\n        }\n        if (cfg.style) {\n            this.styleUpdateAnimation(cfg.style);\n            this.updateColorConfigByStyle(cfg.style);\n        }\n        if (cfg.color) {\n            var style = void 0;\n            if (isArray(cfg.color)) {\n                this.options.color = cfg.color;\n                style = [{ fill: cfg.color[0] }, { fill: cfg.color[1] }];\n            }\n            else {\n                this.options.color[0] = cfg.color;\n                style = { fill: cfg.color };\n            }\n            this.styleUpdateAnimation(style);\n        }\n        if (cfg.marker) {\n            this.updateMarkers(cfg.marker);\n            this.options.marker = cfg.marker;\n        }\n    };\n    ProgressLayer.prototype.destroy = function () {\n        if (this.markers && this.markers.length > 0) {\n            each(this.markers, function (marker) {\n                marker.destroy();\n            });\n            this.markers = [];\n        }\n        _super.prototype.destroy.call(this);\n    };\n    ProgressLayer.prototype.afterRender = function () {\n        var _this = this;\n        if (this.options.marker && !this.markers) {\n            this.markers = [];\n            each(this.options.marker, function (cfg) {\n                var markerCfg = mix({\n                    canvas: _this.canvas,\n                    view: _this.view,\n                    progressSize: _this.options.barSize,\n                }, cfg);\n                var marker = new Marker(markerCfg);\n                _this.markers.push(marker);\n            });\n        }\n        var progressContainer = this.view.geometries[0].container;\n        var bbox = progressContainer.getBBox();\n        var rect = progressContainer.addShape('rect', {\n            attrs: {\n                width: bbox.width,\n                height: bbox.height,\n                x: bbox.minX,\n                y: bbox.minY,\n                fill: 'rgba(0,0,0,0)',\n            },\n        });\n        this.canvas.draw();\n        rect.on('mouseenter', function (ev) {\n            _this.isEntered = true;\n            _this.view.emit('progress:mouseenter', ev);\n        });\n        rect.on('mouseleave', function (ev) {\n            _this.isEntered = false;\n            _this.view.emit('progress:mouseleave', ev);\n        });\n        var canvasDom = this.canvas.get('container');\n        canvasDom.addEventListener('mouseleave', function (ev) {\n            if (_this.isEntered) {\n                _this.view.emit('progress:mouseleave', ev);\n                _this.isEntered = false;\n            }\n        });\n    };\n    ProgressLayer.prototype.geometryParser = function (dim, type) {\n        if (dim === 'g2') {\n            return G2_GEOM_MAP[type];\n        }\n        return PLOT_GEOM_MAP[type];\n    };\n    ProgressLayer.prototype.coord = function () {\n        this.setConfig('coordinate', {\n            actions: [['transpose']],\n        });\n    };\n    ProgressLayer.prototype.addGeometry = function () {\n        var props = this.options;\n        var bar = getGeom('interval', 'main', {\n            positionFields: [props.yField, props.xField],\n            plot: this,\n        });\n        bar.adjust = [\n            {\n                type: 'stack',\n            },\n        ];\n        if (has(props, 'animation')) {\n            bar.animate = props.animation;\n        }\n        this.setConfig('geometry', bar);\n    };\n    ProgressLayer.prototype.parseEvents = function (eventParser) {\n        if (eventParser) {\n            _super.prototype.parseEvents.call(this, eventParser);\n        }\n        else {\n            _super.prototype.parseEvents.call(this, EventParser);\n        }\n    };\n    ProgressLayer.prototype.parseColorProps = function (props) {\n        var colorOption;\n        if (props.color) {\n            if (isFunction(props.color)) {\n                colorOption = props.color(props.percent);\n            }\n            else {\n                colorOption = props.color;\n            }\n            if (isString(colorOption)) {\n                var color = clone(DEFAULT_COLOR);\n                color[0] = colorOption;\n                return color;\n            }\n            else {\n                return colorOption;\n            }\n        }\n        return props.color;\n    };\n    ProgressLayer.prototype.processData = function () {\n        var props = this.options;\n        var data = [\n            { type: 'current', value: props.percent },\n            { type: 'rest', value: 1.0 - props.percent },\n        ];\n        return data;\n    };\n    ProgressLayer.prototype.updateMarkers = function (markerCfg) {\n        var markerLength = markerCfg.length;\n        var animationOptions = this.getUpdateAnimationOptions();\n        each(this.markers, function (marker, index) {\n            if (index > markerLength - 1) {\n                marker.destroy();\n            }\n            else {\n                marker.update(markerCfg[index], animationOptions.duration, animationOptions.easing);\n            }\n        });\n        if (this.markers.length < markerLength) {\n            var startIndex = this.markers.length;\n            for (var i = startIndex; i < markerLength; i++) {\n                var cfg = deepMix({}, {\n                    canvas: this.canvas,\n                    view: this.view,\n                    progressSize: this.options.barSize,\n                }, markerCfg[i]);\n                var marker = new Marker(cfg);\n                this.markers.push(marker);\n            }\n        }\n    };\n    ProgressLayer.prototype.getSize = function () {\n        var height = this.height;\n        if (height >= 50) {\n            return 10;\n        }\n        return 4;\n    };\n    ProgressLayer.prototype.styleUpdateAnimation = function (style) {\n        var _a = this.getUpdateAnimationOptions(), duration = _a.duration, easing = _a.easing;\n        var progressShapes = [];\n        var view = this.view;\n        var geometry = view.geometries;\n        each(geometry, function (geom) {\n            if (geom.type === 'interval') {\n                var elements = geom.elements;\n                each(elements, function (ele) {\n                    progressShapes.push.apply(progressShapes, ele.shape);\n                });\n            }\n        });\n        if (isArray(style)) {\n            each(style, function (s, index) {\n                progressShapes[index].animate(s, duration, easing);\n            });\n        }\n        else {\n            progressShapes[0].animate(style, duration, easing);\n        }\n    };\n    ProgressLayer.prototype.getUpdateAnimationOptions = function () {\n        var duration = 450;\n        var easing = 'easeQuadInOut';\n        var animationOptions = this.options.animation;\n        if (animationOptions && animationOptions.update) {\n            if (animationOptions.update.duration) {\n                duration = animationOptions.update.duration;\n            }\n            if (animationOptions.update.easing) {\n                easing = animationOptions.update.easing;\n            }\n        }\n        return { duration: duration, easing: easing };\n    };\n    ProgressLayer.prototype.updateColorConfigByStyle = function (style) {\n        var _this = this;\n        if (isArray(style)) {\n            each(style, function (s, index) {\n                if (s.fill) {\n                    _this.options.color[index] = s.fill;\n                }\n            });\n        }\n        else if (style.fill) {\n            this.options.color[0] = style.fill;\n        }\n    };\n    return ProgressLayer;\n}(TinyLayer));\nexport default ProgressLayer;\nregisterPlotType('progress', ProgressLayer);\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/sparkline/progress/layer.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/sparkline/progress/layer.js"],"names":[],"mappings":"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","sourcesContent":["import { __extends } from \"tslib\";\nimport { isArray, mix, hasKey, each, has, isFunction, clone, deepMix, isString, isNumber } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport { getGeom } from '../../geoms/factory';\nimport TinyLayer from '../tiny-layer';\nimport Marker from './component/marker';\nimport * as EventParser from './event';\nvar G2_GEOM_MAP = {\n    progress: 'interval',\n};\nvar PLOT_GEOM_MAP = {\n    interval: 'progress',\n};\nvar DEFAULT_COLOR = ['#55A6F3', '#E8EDF3'];\nvar ProgressLayer = /** @class */ (function (_super) {\n    __extends(ProgressLayer, _super);\n    function ProgressLayer() {\n        /**\n         * 将进度条配置项转为堆叠条形图配置项\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'progress';\n        _this.isEntered = false;\n        return _this;\n    }\n    ProgressLayer.prototype.processProps = function () {\n        var props = this.options;\n        props.data = this.processData();\n        var cfg = {\n            padding: [0, 0, 0, 0],\n            xField: 'value',\n            yField: '1',\n            stackField: 'type',\n            barSize: props.size ? props.size : this.getSize(),\n            barStyle: props.progressStyle,\n            color: this.parseColorProps(props) || DEFAULT_COLOR,\n        };\n        props = mix(props, cfg);\n    };\n    ProgressLayer.prototype.init = function () {\n        this.processProps();\n        _super.prototype.init.call(this);\n    };\n    ProgressLayer.prototype.beforeInit = function () {\n        var percent = this.options.percent;\n        if (!isNumber(percent)) {\n            throw new Error('Percent value is required, and the type of percent must be Number.');\n        }\n    };\n    ProgressLayer.prototype.update = function (cfg) {\n        var props = this.options;\n        if (hasKey(cfg, 'percent')) {\n            props.percent = cfg.percent;\n            this.changeData(this.processData());\n        }\n        if (cfg.style) {\n            this.styleUpdateAnimation(cfg.style);\n            this.updateColorConfigByStyle(cfg.style);\n        }\n        if (cfg.color) {\n            var style = void 0;\n            if (isArray(cfg.color)) {\n                this.options.color = cfg.color;\n                style = [{ fill: cfg.color[0] }, { fill: cfg.color[1] }];\n            }\n            else {\n                this.options.color[0] = cfg.color;\n                style = { fill: cfg.color };\n            }\n            this.styleUpdateAnimation(style);\n        }\n        if (cfg.marker) {\n            this.updateMarkers(cfg.marker);\n            this.options.marker = cfg.marker;\n        }\n    };\n    ProgressLayer.prototype.destroy = function () {\n        if (this.markers && this.markers.length > 0) {\n            each(this.markers, function (marker) {\n                marker.destroy();\n            });\n            this.markers = [];\n        }\n        _super.prototype.destroy.call(this);\n    };\n    ProgressLayer.prototype.afterRender = function () {\n        var _this = this;\n        if (this.options.marker && !this.markers) {\n            this.markers = [];\n            each(this.options.marker, function (cfg) {\n                var markerCfg = mix({\n                    canvas: _this.canvas,\n                    view: _this.view,\n                    progressSize: _this.options.barSize,\n                }, cfg);\n                var marker = new Marker(markerCfg);\n                _this.markers.push(marker);\n            });\n        }\n        var progressContainer = this.view.geometries[0].container;\n        var bbox = progressContainer.getBBox();\n        var rect = progressContainer.addShape('rect', {\n            attrs: {\n                width: bbox.width,\n                height: bbox.height,\n                x: bbox.minX,\n                y: bbox.minY,\n                fill: 'rgba(0,0,0,0)',\n            },\n        });\n        this.canvas.draw();\n        rect.on('mouseenter', function (ev) {\n            _this.isEntered = true;\n            _this.view.emit('progress:mouseenter', ev);\n        });\n        rect.on('mouseleave', function (ev) {\n            _this.isEntered = false;\n            _this.view.emit('progress:mouseleave', ev);\n        });\n        var canvasDom = this.canvas.get('container');\n        canvasDom.addEventListener('mouseleave', function (ev) {\n            if (_this.isEntered) {\n                _this.view.emit('progress:mouseleave', ev);\n                _this.isEntered = false;\n            }\n        });\n    };\n    ProgressLayer.prototype.geometryParser = function (dim, type) {\n        if (dim === 'g2') {\n            return G2_GEOM_MAP[type];\n        }\n        return PLOT_GEOM_MAP[type];\n    };\n    ProgressLayer.prototype.coord = function () {\n        this.setConfig('coordinate', {\n            actions: [['transpose']],\n        });\n    };\n    ProgressLayer.prototype.addGeometry = function () {\n        var props = this.options;\n        var bar = getGeom('interval', 'main', {\n            positionFields: [props.yField, props.xField],\n            plot: this,\n        });\n        bar.adjust = [\n            {\n                type: 'stack',\n            },\n        ];\n        if (has(props, 'animation')) {\n            bar.animate = props.animation;\n        }\n        this.setConfig('geometry', bar);\n    };\n    ProgressLayer.prototype.parseEvents = function (eventParser) {\n        if (eventParser) {\n            _super.prototype.parseEvents.call(this, eventParser);\n        }\n        else {\n            _super.prototype.parseEvents.call(this, EventParser);\n        }\n    };\n    ProgressLayer.prototype.parseColorProps = function (props) {\n        var colorOption;\n        if (props.color) {\n            if (isFunction(props.color)) {\n                colorOption = props.color(props.percent);\n            }\n            else {\n                colorOption = props.color;\n            }\n            if (isString(colorOption)) {\n                var color = clone(DEFAULT_COLOR);\n                color[0] = colorOption;\n                return color;\n            }\n            else {\n                return colorOption;\n            }\n        }\n        return props.color;\n    };\n    ProgressLayer.prototype.processData = function () {\n        var props = this.options;\n        var data = [\n            { type: 'current', value: props.percent },\n            { type: 'rest', value: 1.0 - props.percent },\n        ];\n        return data;\n    };\n    ProgressLayer.prototype.updateMarkers = function (markerCfg) {\n        var markerLength = markerCfg.length;\n        var animationOptions = this.getUpdateAnimationOptions();\n        // marker diff\n        each(this.markers, function (marker, index) {\n            if (index > markerLength - 1) {\n                marker.destroy();\n            }\n            else {\n                marker.update(markerCfg[index], animationOptions.duration, animationOptions.easing);\n            }\n        });\n        // add new markers\n        if (this.markers.length < markerLength) {\n            var startIndex = this.markers.length;\n            for (var i = startIndex; i < markerLength; i++) {\n                var cfg = deepMix({}, {\n                    canvas: this.canvas,\n                    view: this.view,\n                    progressSize: this.options.barSize,\n                }, markerCfg[i]);\n                var marker = new Marker(cfg);\n                this.markers.push(marker);\n            }\n        }\n    };\n    ProgressLayer.prototype.getSize = function () {\n        var height = this.height;\n        if (height >= 50) {\n            return 10;\n        }\n        return 4;\n    };\n    ProgressLayer.prototype.styleUpdateAnimation = function (style) {\n        // style更新动画接受用户animation配置的透传\n        var _a = this.getUpdateAnimationOptions(), duration = _a.duration, easing = _a.easing;\n        // get geometry shapes\n        var progressShapes = [];\n        var view = this.view;\n        var geometry = view.geometries;\n        each(geometry, function (geom) {\n            if (geom.type === 'interval') {\n                var elements = geom.elements;\n                each(elements, function (ele) {\n                    progressShapes.push.apply(progressShapes, ele.shape);\n                });\n            }\n        });\n        if (isArray(style)) {\n            each(style, function (s, index) {\n                progressShapes[index].animate(s, duration, easing);\n            });\n        }\n        else {\n            progressShapes[0].animate(style, duration, easing);\n        }\n    };\n    ProgressLayer.prototype.getUpdateAnimationOptions = function () {\n        var duration = 450;\n        var easing = 'easeQuadInOut';\n        var animationOptions = this.options.animation;\n        if (animationOptions && animationOptions.update) {\n            if (animationOptions.update.duration) {\n                duration = animationOptions.update.duration;\n            }\n            if (animationOptions.update.easing) {\n                easing = animationOptions.update.easing;\n            }\n        }\n        return { duration: duration, easing: easing };\n    };\n    ProgressLayer.prototype.updateColorConfigByStyle = function (style) {\n        var _this = this;\n        if (isArray(style)) {\n            each(style, function (s, index) {\n                if (s.fill) {\n                    _this.options.color[index] = s.fill;\n                }\n            });\n        }\n        else if (style.fill) {\n            this.options.color[0] = style.fill;\n        }\n    };\n    return ProgressLayer;\n}(TinyLayer));\nexport default ProgressLayer;\nregisterPlotType('progress', ProgressLayer);\n//# sourceMappingURL=layer.js.map"]}]}