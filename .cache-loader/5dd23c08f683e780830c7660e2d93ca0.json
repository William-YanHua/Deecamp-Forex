{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\base\\controller\\state.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\base\\controller\\state.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { isFunction, assign, each, isArray, mix, clone } from '@antv/util';\r\nimport { getComponentStateMethod } from '../../components/factory';\r\nimport { onEvent } from '../../util/event';\r\nimport StateManager from '../../util/state-manager';\r\nexport function compare(origin, condition) {\r\n    if (!isFunction(condition)) {\r\n        var name_1 = condition.name, exp = condition.exp;\r\n        if (isFunction(exp)) {\r\n            return exp(origin[name_1]);\r\n        }\r\n        return origin[name_1] === exp;\r\n    }\r\n    return condition(origin);\r\n}\r\nvar StateController = (function () {\r\n    function StateController(cfg) {\r\n        this.shapeContainers = [];\r\n        assign(this, cfg);\r\n    }\r\n    StateController.prototype.createStateManager = function () {\r\n        this.stateManager = new StateManager();\r\n    };\r\n    StateController.prototype.bindStateManager = function (manager, cfg) {\r\n        this.stateManager = manager;\r\n        if (cfg.setState) {\r\n            this._updateStateProcess(cfg.setState);\r\n        }\r\n        if (cfg.onStateChange) {\r\n            this._stateChangeProcess(cfg.onStateChange);\r\n        }\r\n    };\r\n    StateController.prototype.defaultStates = function (states) {\r\n        var _this = this;\r\n        each(states, function (state, type) {\r\n            var condition = state.condition, related = state.related;\r\n            _this.setState({ type: type, condition: condition, related: related });\r\n        });\r\n    };\r\n    StateController.prototype.setState = function (cfg) {\r\n        var _this = this;\r\n        var type = cfg.type, condition = cfg.condition, related = cfg.related;\r\n        this.shapes = this._getShapes();\r\n        this.originAttrs = this._getOriginAttrs();\r\n        each(this.shapes, function (shape, index) {\r\n            var shapeOrigin = shape.get('origin').data;\r\n            var origin = isArray(shapeOrigin) ? shapeOrigin[0] : shapeOrigin;\r\n            if (compare(origin, condition)) {\r\n                var stateStyle = cfg.style ? cfg.style : _this._getDefaultStateStyle(type, shape);\r\n                var originAttr = _this.originAttrs[index];\r\n                var attrs = void 0;\r\n                if (isFunction(stateStyle)) {\r\n                    attrs = stateStyle(originAttr);\r\n                }\r\n                else {\r\n                    attrs = mix({}, originAttr, stateStyle);\r\n                }\r\n                shape.attr(attrs);\r\n                _this.setZIndex(type, shape);\r\n            }\r\n        });\r\n        if (related) {\r\n            this._parserRelated(type, related, condition);\r\n        }\r\n        this.plot.canvas.draw();\r\n    };\r\n    StateController.prototype._updateStateProcess = function (setStateCfg) {\r\n        var _this = this;\r\n        each(setStateCfg, function (cfg) {\r\n            var state = cfg.state;\r\n            var handler;\r\n            if (isFunction(state)) {\r\n                handler = function (e) {\r\n                    var s = state(e);\r\n                    _this.stateManager.setState(s.name, s.exp);\r\n                };\r\n            }\r\n            else {\r\n                handler = function () {\r\n                    _this.stateManager.setState(state.name, state.exp);\r\n                };\r\n            }\r\n            if (cfg.event) {\r\n                onEvent(_this.plot, _this._eventParser(cfg.event), handler);\r\n            }\r\n            else {\r\n                handler();\r\n            }\r\n        });\r\n    };\r\n    StateController.prototype._stateChangeProcess = function (onChangeCfg) {\r\n        var _this = this;\r\n        each(onChangeCfg, function (cfg) {\r\n            _this.stateManager.on(cfg.name + \":change\", function (props) {\r\n                cfg.callback(props, _this.plot);\r\n            });\r\n        });\r\n    };\r\n    StateController.prototype._getShapes = function () {\r\n        var _this = this;\r\n        var shapes = [];\r\n        var geoms = this.plot.view.geometries;\r\n        each(geoms, function (geom) {\r\n            var shapeContainer = geom.container;\r\n            _this.shapeContainers.push(shapeContainer);\r\n            if (!geom.destroyed) {\r\n                shapes.push.apply(shapes, geom.getShapes());\r\n            }\r\n        });\r\n        return shapes;\r\n    };\r\n    StateController.prototype._getOriginAttrs = function () {\r\n        var attrs = [];\r\n        each(this.shapes, function (shape) {\r\n            attrs.push(clone(shape.attr()));\r\n        });\r\n        return attrs;\r\n    };\r\n    StateController.prototype._eventParser = function (event) {\r\n        var eventCfg = event.split(':');\r\n        var eventTarget = this.plot.geometryParser('g2', eventCfg[0]);\r\n        var eventName = eventCfg[1];\r\n        return eventTarget + \":\" + eventName;\r\n    };\r\n    StateController.prototype._getDefaultStateStyle = function (type, shape) {\r\n        var theme = this.plot.theme;\r\n        var plotGeomType = this.plot.geometryParser('plot', shape.name);\r\n        var styleField = plotGeomType + \"Style\";\r\n        if (theme[styleField]) {\r\n            var style = theme[styleField][type];\r\n            if (isFunction(style)) {\r\n                style = style(shape.attr());\r\n            }\r\n            return style;\r\n        }\r\n        return {};\r\n    };\r\n    StateController.prototype._parserRelated = function (type, related, condition) {\r\n        var _this = this;\r\n        each(related, function (r) {\r\n            if (_this.plot[r]) {\r\n                var method = getComponentStateMethod(r, type);\r\n                method(_this.plot, condition);\r\n            }\r\n        });\r\n    };\r\n    StateController.prototype.setZIndex = function (stateType, shape) {\r\n        if (stateType === 'active' || stateType === 'selected') {\r\n            var children = shape.get('parent').get('children');\r\n            children[children.length - 1].setZIndex(0);\r\n            shape.setZIndex(1);\r\n        }\r\n    };\r\n    StateController.prototype.resetZIndex = function () {\r\n        each(this.shapeContainers, function (container) {\r\n            var children = container.get('children');\r\n            children.sort(function (obj1, obj2) {\r\n                return obj1._INDEX - obj2._INDEX;\r\n            });\r\n        });\r\n    };\r\n    return StateController;\r\n}());\r\nexport default StateController;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\base\\controller\\state.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\base\\controller\\state.js"],"names":[],"mappings":"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","sourcesContent":["import { isFunction, assign, each, isArray, mix, clone } from '@antv/util';\nimport { getComponentStateMethod } from '../../components/factory';\nimport { onEvent } from '../../util/event';\nimport StateManager from '../../util/state-manager';\nexport function compare(origin, condition) {\n    if (!isFunction(condition)) {\n        var name_1 = condition.name, exp = condition.exp;\n        if (isFunction(exp)) {\n            return exp(origin[name_1]);\n        }\n        return origin[name_1] === exp;\n    }\n    return condition(origin);\n}\nvar StateController = /** @class */ (function () {\n    function StateController(cfg) {\n        this.shapeContainers = [];\n        assign(this, cfg);\n    }\n    StateController.prototype.createStateManager = function () {\n        this.stateManager = new StateManager();\n    };\n    StateController.prototype.bindStateManager = function (manager, cfg) {\n        this.stateManager = manager;\n        if (cfg.setState) {\n            this._updateStateProcess(cfg.setState);\n        }\n        if (cfg.onStateChange) {\n            this._stateChangeProcess(cfg.onStateChange);\n        }\n    };\n    StateController.prototype.defaultStates = function (states) {\n        var _this = this;\n        each(states, function (state, type) {\n            var condition = state.condition, related = state.related;\n            _this.setState({ type: type, condition: condition, related: related });\n        });\n    };\n    StateController.prototype.setState = function (cfg) {\n        var _this = this;\n        var type = cfg.type, condition = cfg.condition, related = cfg.related;\n        this.shapes = this._getShapes();\n        this.originAttrs = this._getOriginAttrs();\n        // this.resetZIndex();\n        each(this.shapes, function (shape, index) {\n            var shapeOrigin = shape.get('origin').data;\n            var origin = isArray(shapeOrigin) ? shapeOrigin[0] : shapeOrigin;\n            if (compare(origin, condition)) {\n                var stateStyle = cfg.style ? cfg.style : _this._getDefaultStateStyle(type, shape);\n                var originAttr = _this.originAttrs[index];\n                var attrs = void 0;\n                if (isFunction(stateStyle)) {\n                    attrs = stateStyle(originAttr);\n                }\n                else {\n                    attrs = mix({}, originAttr, stateStyle);\n                }\n                shape.attr(attrs);\n                _this.setZIndex(type, shape);\n                // const canvas = this.plot.canvas;\n                // canvas.draw();\n            }\n        });\n        // 组件与图形对状态量的响应不一定同步\n        if (related) {\n            this._parserRelated(type, related, condition);\n        }\n        this.plot.canvas.draw();\n    };\n    StateController.prototype._updateStateProcess = function (setStateCfg) {\n        var _this = this;\n        each(setStateCfg, function (cfg) {\n            var state = cfg.state;\n            var handler;\n            if (isFunction(state)) {\n                handler = function (e) {\n                    var s = state(e);\n                    _this.stateManager.setState(s.name, s.exp);\n                };\n            }\n            else {\n                handler = function () {\n                    _this.stateManager.setState(state.name, state.exp);\n                };\n            }\n            if (cfg.event) {\n                onEvent(_this.plot, _this._eventParser(cfg.event), handler);\n            }\n            else {\n                handler();\n            }\n        });\n    };\n    StateController.prototype._stateChangeProcess = function (onChangeCfg) {\n        var _this = this;\n        each(onChangeCfg, function (cfg) {\n            _this.stateManager.on(cfg.name + \":change\", function (props) {\n                cfg.callback(props, _this.plot);\n            });\n        });\n    };\n    StateController.prototype._getShapes = function () {\n        var _this = this;\n        var shapes = [];\n        var geoms = this.plot.view.geometries;\n        each(geoms, function (geom) {\n            var shapeContainer = geom.container;\n            _this.shapeContainers.push(shapeContainer);\n            if (!geom.destroyed) {\n                shapes.push.apply(shapes, geom.getShapes());\n            }\n        });\n        return shapes;\n    };\n    StateController.prototype._getOriginAttrs = function () {\n        var attrs = [];\n        each(this.shapes, function (shape) {\n            attrs.push(clone(shape.attr()));\n        });\n        return attrs;\n    };\n    // 将g2 geomtry转为plot层geometry\n    StateController.prototype._eventParser = function (event) {\n        var eventCfg = event.split(':');\n        var eventTarget = this.plot.geometryParser('g2', eventCfg[0]);\n        var eventName = eventCfg[1];\n        return eventTarget + \":\" + eventName;\n    };\n    StateController.prototype._getDefaultStateStyle = function (type, shape) {\n        var theme = this.plot.theme;\n        var plotGeomType = this.plot.geometryParser('plot', shape.name);\n        var styleField = plotGeomType + \"Style\";\n        if (theme[styleField]) {\n            var style = theme[styleField][type];\n            if (isFunction(style)) {\n                style = style(shape.attr());\n            }\n            return style;\n        }\n        return {};\n    };\n    StateController.prototype._parserRelated = function (type, related, condition) {\n        var _this = this;\n        each(related, function (r) {\n            if (_this.plot[r]) {\n                // fixme: 自定义组件\n                // this.plot[r].setState(type, condition);\n                var method = getComponentStateMethod(r, type);\n                method(_this.plot, condition);\n            }\n        });\n    };\n    // private set\n    StateController.prototype.setZIndex = function (stateType, shape) {\n        if (stateType === 'active' || stateType === 'selected') {\n            // shape.setZIndex(1);\n            var children = shape.get('parent').get('children');\n            children[children.length - 1].setZIndex(0);\n            shape.setZIndex(1);\n        }\n    };\n    StateController.prototype.resetZIndex = function () {\n        each(this.shapeContainers, function (container) {\n            var children = container.get('children');\n            children.sort(function (obj1, obj2) {\n                return obj1._INDEX - obj2._INDEX;\n            });\n        });\n    };\n    return StateController;\n}());\nexport default StateController;\n//# sourceMappingURL=state.js.map"]}]}