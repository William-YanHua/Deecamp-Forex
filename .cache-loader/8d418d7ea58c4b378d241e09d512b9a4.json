{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/unherit/index.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/unherit/index.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["'use strict';\nvar xtend = require('xtend');\nvar inherits = require('inherits');\nmodule.exports = unherit;\nfunction unherit(Super) {\n    var result;\n    var key;\n    var value;\n    inherits(Of, Super);\n    inherits(From, Of);\n    result = Of.prototype;\n    for (key in result) {\n        value = result[key];\n        if (value && typeof value === 'object') {\n            result[key] = 'concat' in value ? value.concat() : xtend(value);\n        }\n    }\n    return Of;\n    function From(parameters) {\n        return Super.apply(this, parameters);\n    }\n    function Of() {\n        if (!(this instanceof Of)) {\n            return new From(arguments);\n        }\n        return Super.apply(this, arguments);\n    }\n}\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/unherit/index.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/unherit/index.js"],"names":[],"mappings":"AAAA,YAAY,CAAA;AAEZ,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAA;AAC5B,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAA;AAElC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAA;AAIxB,SAAS,OAAO,CAAC,KAAK;IACpB,IAAI,MAAM,CAAA;IACV,IAAI,GAAG,CAAA;IACP,IAAI,KAAK,CAAA;IAET,QAAQ,CAAC,EAAE,EAAE,KAAK,CAAC,CAAA;IACnB,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAA;IAGlB,MAAM,GAAG,EAAE,CAAC,SAAS,CAAA;IAErB,KAAK,GAAG,IAAI,MAAM,EAAE;QAClB,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAA;QAEnB,IAAI,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YACtC,MAAM,CAAC,GAAG,CAAC,GAAG,QAAQ,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;SAChE;KACF;IAED,OAAO,EAAE,CAAA;IAIT,SAAS,IAAI,CAAC,UAAU;QACtB,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,UAAU,CAAC,CAAA;IACtC,CAAC;IAGD,SAAS,EAAE;QACT,IAAI,CAAC,CAAC,IAAI,YAAY,EAAE,CAAC,EAAE;YACzB,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,CAAA;SAC3B;QAED,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAA;IACrC,CAAC;AACH,CAAC","sourcesContent":["'use strict'\n\nvar xtend = require('xtend')\nvar inherits = require('inherits')\n\nmodule.exports = unherit\n\n// Create a custom constructor which can be modified without affecting the\n// original class.\nfunction unherit(Super) {\n  var result\n  var key\n  var value\n\n  inherits(Of, Super)\n  inherits(From, Of)\n\n  // Clone values.\n  result = Of.prototype\n\n  for (key in result) {\n    value = result[key]\n\n    if (value && typeof value === 'object') {\n      result[key] = 'concat' in value ? value.concat() : xtend(value)\n    }\n  }\n\n  return Of\n\n  // Constructor accepting a single argument, which itself is an `arguments`\n  // object.\n  function From(parameters) {\n    return Super.apply(this, parameters)\n  }\n\n  // Constructor accepting variadic arguments.\n  function Of() {\n    if (!(this instanceof Of)) {\n      return new From(arguments)\n    }\n\n    return Super.apply(this, arguments)\n  }\n}\n"]}]}