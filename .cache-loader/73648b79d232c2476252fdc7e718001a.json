{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/event-emitter/esm/index.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/event-emitter/esm/index.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var WILDCARD = '*';\nvar EventEmitter = (function () {\n    function EventEmitter() {\n        this._events = {};\n    }\n    EventEmitter.prototype.on = function (evt, callback, once) {\n        if (!this._events[evt]) {\n            this._events[evt] = [];\n        }\n        this._events[evt].push({\n            callback: callback,\n            once: !!once,\n        });\n        return this;\n    };\n    EventEmitter.prototype.once = function (evt, callback) {\n        this.on(evt, callback, true);\n        return this;\n    };\n    EventEmitter.prototype.emit = function (evt) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var events = this._events[evt] || [];\n        var wildcardEvents = this._events[WILDCARD] || [];\n        var doEmit = function (es) {\n            var length = es.length;\n            for (var i = 0; i < length; i++) {\n                if (!es[i]) {\n                    continue;\n                }\n                var _a = es[i], callback = _a.callback, once = _a.once;\n                if (once) {\n                    es.splice(i, 1);\n                    if (es.length === 0) {\n                        delete _this._events[evt];\n                    }\n                    length--;\n                    i--;\n                }\n                callback.apply(_this, args);\n            }\n        };\n        doEmit(events);\n        doEmit(wildcardEvents);\n    };\n    EventEmitter.prototype.off = function (evt, callback) {\n        if (!evt) {\n            this._events = {};\n        }\n        else {\n            if (!callback) {\n                delete this._events[evt];\n            }\n            else {\n                var events = this._events[evt] || [];\n                var length_1 = events.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (events[i].callback === callback) {\n                        events.splice(i, 1);\n                        length_1--;\n                        i--;\n                    }\n                }\n                if (events.length === 0) {\n                    delete this._events[evt];\n                }\n            }\n        }\n        return this;\n    };\n    EventEmitter.prototype.getEvents = function () {\n        return this._events;\n    };\n    return EventEmitter;\n}());\nexport default EventEmitter;\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/event-emitter/esm/index.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/event-emitter/esm/index.js"],"names":[],"mappings":"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","sourcesContent":["var WILDCARD = '*';\n/* event-emitter */\nvar EventEmitter = /** @class */ (function () {\n    function EventEmitter() {\n        this._events = {};\n    }\n    /**\n     * 监听一个事件\n     * @param evt\n     * @param callback\n     * @param once\n     */\n    EventEmitter.prototype.on = function (evt, callback, once) {\n        if (!this._events[evt]) {\n            this._events[evt] = [];\n        }\n        this._events[evt].push({\n            callback: callback,\n            once: !!once,\n        });\n        return this;\n    };\n    /**\n     * 监听一个事件一次\n     * @param evt\n     * @param callback\n     */\n    EventEmitter.prototype.once = function (evt, callback) {\n        this.on(evt, callback, true);\n        return this;\n    };\n    /**\n     * 触发一个事件\n     * @param evt\n     * @param args\n     */\n    EventEmitter.prototype.emit = function (evt) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var events = this._events[evt] || [];\n        var wildcardEvents = this._events[WILDCARD] || [];\n        // 实际的处理 emit 方法\n        var doEmit = function (es) {\n            var length = es.length;\n            for (var i = 0; i < length; i++) {\n                if (!es[i]) {\n                    continue;\n                }\n                var _a = es[i], callback = _a.callback, once = _a.once;\n                if (once) {\n                    es.splice(i, 1);\n                    if (es.length === 0) {\n                        delete _this._events[evt];\n                    }\n                    length--;\n                    i--;\n                }\n                callback.apply(_this, args);\n            }\n        };\n        doEmit(events);\n        doEmit(wildcardEvents);\n    };\n    /**\n     * 取消监听一个事件，或者一个channel\n     * @param evt\n     * @param callback\n     */\n    EventEmitter.prototype.off = function (evt, callback) {\n        if (!evt) {\n            // evt 为空全部清除\n            this._events = {};\n        }\n        else {\n            if (!callback) {\n                // evt 存在，callback 为空，清除事件所有方法\n                delete this._events[evt];\n            }\n            else {\n                // evt 存在，callback 存在，清除匹配的\n                var events = this._events[evt] || [];\n                var length_1 = events.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (events[i].callback === callback) {\n                        events.splice(i, 1);\n                        length_1--;\n                        i--;\n                    }\n                }\n                if (events.length === 0) {\n                    delete this._events[evt];\n                }\n            }\n        }\n        return this;\n    };\n    /* 当前所有的事件 */\n    EventEmitter.prototype.getEvents = function () {\n        return this._events;\n    };\n    return EventEmitter;\n}());\nexport default EventEmitter;\n//# sourceMappingURL=index.js.map"]}]}