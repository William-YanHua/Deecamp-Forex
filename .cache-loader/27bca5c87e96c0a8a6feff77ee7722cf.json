{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\util\\responsive\\constraints\\element-collision.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\util\\responsive\\constraints\\element-collision.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import * as MathUtil from '../../math';\r\nfunction elementCollision(a, b) {\r\n    var polygonA = [a.topLeft, a.topRight, a.bottomRight, a.bottomLeft];\r\n    var polygonB = [b.topLeft, b.topRight, b.bottomRight, b.bottomLeft];\r\n    var dist = MathUtil.minDistBetweenConvexPolygon(polygonA, polygonB);\r\n    return Math.round(dist) >= 2;\r\n}\r\nexport default {\r\n    type: 'group',\r\n    usage: 'compare',\r\n    expression: elementCollision,\r\n};\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\util\\responsive\\constraints\\element-collision.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\util\\responsive\\constraints\\element-collision.js"],"names":[],"mappings":"AAAA,OAAO,KAAK,QAAQ,MAAM,YAAY,CAAC;AACvC,SAAS,gBAAgB,CAAC,CAAC,EAAE,CAAC;IAC1B,IAAI,QAAQ,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC;IACpE,IAAI,QAAQ,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC;IACpE,IAAI,IAAI,GAAG,QAAQ,CAAC,2BAA2B,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;IACpE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjC,CAAC;AACD,eAAe;IACX,IAAI,EAAE,OAAO;IACb,KAAK,EAAE,SAAS;IAChB,UAAU,EAAE,gBAAgB;CAC/B,CAAC","sourcesContent":["import * as MathUtil from '../../math';\nfunction elementCollision(a, b) {\n    var polygonA = [a.topLeft, a.topRight, a.bottomRight, a.bottomLeft]; // 顶点顺时针\n    var polygonB = [b.topLeft, b.topRight, b.bottomRight, b.bottomLeft];\n    var dist = MathUtil.minDistBetweenConvexPolygon(polygonA, polygonB);\n    return Math.round(dist) >= 2;\n}\nexport default {\n    type: 'group',\n    usage: 'compare',\n    expression: elementCollision,\n};\n//# sourceMappingURL=element-collision.js.map"]}]}