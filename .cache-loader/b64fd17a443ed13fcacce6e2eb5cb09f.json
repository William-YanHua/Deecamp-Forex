{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\util\\graphics.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\util\\graphics.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { each, isEmpty, isNumber, isNumberEqual } from '@antv/util';\r\nfunction getPointsBox(points) {\r\n    if (isEmpty(points)) {\r\n        return null;\r\n    }\r\n    var minX = points[0].x;\r\n    var maxX = points[0].x;\r\n    var minY = points[0].y;\r\n    var maxY = points[0].y;\r\n    each(points, function (point) {\r\n        minX = minX > point.x ? point.x : minX;\r\n        maxX = maxX < point.x ? point.x : maxX;\r\n        minY = minY > point.y ? point.y : minY;\r\n        maxY = maxY < point.y ? point.y : maxY;\r\n    });\r\n    return {\r\n        minX: minX,\r\n        maxX: maxX,\r\n        minY: minY,\r\n        maxY: maxY,\r\n        centerX: (minX + maxX) / 2,\r\n        centerY: (minY + maxY) / 2,\r\n    };\r\n}\r\nexport function polarToCartesian(centerX, centerY, radius, angleInRadian) {\r\n    return {\r\n        x: centerX + radius * Math.cos(angleInRadian),\r\n        y: centerY + radius * Math.sin(angleInRadian),\r\n    };\r\n}\r\nexport function getSectorPath(centerX, centerY, radius, startAngleInRadian, endAngleInRadian, innerRadius) {\r\n    if (innerRadius === void 0) {\r\n        innerRadius = 0;\r\n    }\r\n    var start = polarToCartesian(centerX, centerY, radius, startAngleInRadian);\r\n    var end = polarToCartesian(centerX, centerY, radius, endAngleInRadian);\r\n    var innerStart = polarToCartesian(centerX, centerY, innerRadius, startAngleInRadian);\r\n    var innerEnd = polarToCartesian(centerX, centerY, innerRadius, endAngleInRadian);\r\n    if (endAngleInRadian - startAngleInRadian === Math.PI * 2) {\r\n        var middlePoint = polarToCartesian(centerX, centerY, radius, startAngleInRadian + Math.PI);\r\n        var innerMiddlePoint = polarToCartesian(centerX, centerY, innerRadius, startAngleInRadian + Math.PI);\r\n        var circlePathCommands = [\r\n            ['M', start.x, start.y],\r\n            ['A', radius, radius, 0, 1, 1, middlePoint.x, middlePoint.y],\r\n            ['A', radius, radius, 0, 1, 1, end.x, end.y],\r\n            ['M', innerStart.x, innerStart.y],\r\n        ];\r\n        if (innerRadius) {\r\n            circlePathCommands.push(['A', innerRadius, innerRadius, 0, 1, 0, innerMiddlePoint.x, innerMiddlePoint.y]);\r\n            circlePathCommands.push(['A', innerRadius, innerRadius, 0, 1, 0, innerEnd.x, innerEnd.y]);\r\n        }\r\n        circlePathCommands.push(['M', start.x, start.y]);\r\n        circlePathCommands.push(['Z']);\r\n        return circlePathCommands;\r\n    }\r\n    var arcSweep = endAngleInRadian - startAngleInRadian <= Math.PI ? 0 : 1;\r\n    var sectorPathCommands = [\r\n        ['M', start.x, start.y],\r\n        ['A', radius, radius, 0, arcSweep, 1, end.x, end.y],\r\n        ['L', innerEnd.x, innerEnd.y],\r\n    ];\r\n    if (innerRadius) {\r\n        sectorPathCommands.push(['A', innerRadius, innerRadius, 0, arcSweep, 0, innerStart.x, innerStart.y]);\r\n    }\r\n    sectorPathCommands.push(['L', start.x, start.y]);\r\n    sectorPathCommands.push(['Z']);\r\n    return sectorPathCommands;\r\n}\r\nexport function getArcPath(centerX, centerY, radius, startAngleInRadian, endAngleInRadian) {\r\n    var start = polarToCartesian(centerX, centerY, radius, startAngleInRadian);\r\n    var end = polarToCartesian(centerX, centerY, radius, endAngleInRadian);\r\n    if (isNumberEqual(endAngleInRadian - startAngleInRadian, Math.PI * 2)) {\r\n        var middlePoint = polarToCartesian(centerX, centerY, radius, startAngleInRadian + Math.PI);\r\n        return [\r\n            ['M', start.x, start.y],\r\n            ['A', radius, radius, 0, 1, 1, middlePoint.x, middlePoint.y],\r\n            ['A', radius, radius, 0, 1, 1, start.x, start.y],\r\n            ['A', radius, radius, 0, 1, 0, middlePoint.x, middlePoint.y],\r\n            ['A', radius, radius, 0, 1, 0, start.x, start.y],\r\n            ['Z'],\r\n        ];\r\n    }\r\n    var arcSweep = endAngleInRadian - startAngleInRadian <= Math.PI ? 0 : 1;\r\n    return [\r\n        ['M', start.x, start.y],\r\n        ['A', radius, radius, 0, arcSweep, 1, end.x, end.y],\r\n    ];\r\n}\r\nexport function getAngle(shapeModel, coordinate) {\r\n    var points = shapeModel.points;\r\n    var box = getPointsBox(points);\r\n    var endAngle;\r\n    var startAngle;\r\n    var coordStartAngle = coordinate.startAngle, coordEndAngle = coordinate.endAngle;\r\n    var diffAngle = coordEndAngle - coordStartAngle;\r\n    if (coordinate.isTransposed) {\r\n        endAngle = box.maxY * diffAngle;\r\n        startAngle = box.minY * diffAngle;\r\n    }\r\n    else {\r\n        endAngle = box.maxX * diffAngle;\r\n        startAngle = box.minX * diffAngle;\r\n    }\r\n    endAngle += coordStartAngle;\r\n    startAngle += coordStartAngle;\r\n    return {\r\n        startAngle: startAngle,\r\n        endAngle: endAngle,\r\n    };\r\n}\r\nexport function getPolygonCentroid(xs, ys) {\r\n    if (isNumber(xs) && isNumber(ys)) {\r\n        return [xs, ys];\r\n    }\r\n    var i = -1;\r\n    var x = 0;\r\n    var y = 0;\r\n    var former;\r\n    var current = xs.length - 1;\r\n    var diff;\r\n    var k = 0;\r\n    while (++i < xs.length) {\r\n        former = current;\r\n        current = i;\r\n        k += diff = xs[former] * ys[current] - xs[current] * ys[former];\r\n        x += (xs[former] + xs[current]) * diff;\r\n        y += (ys[former] + ys[current]) * diff;\r\n    }\r\n    k *= 3;\r\n    return [x / k, y / k];\r\n}\r\nexport function getReplaceAttrs(sourceShape, targetShape) {\r\n    var originAttrs = sourceShape.attr();\r\n    var newAttrs = targetShape.attr();\r\n    each(originAttrs, function (v, k) {\r\n        if (newAttrs[k] === undefined) {\r\n            newAttrs[k] = undefined;\r\n        }\r\n    });\r\n    return newAttrs;\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\util\\graphics.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\util\\graphics.js"],"names":[],"mappings":"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","sourcesContent":["import { each, isEmpty, isNumber, isNumberEqual } from '@antv/util';\n// 获取图形的包围盒\nfunction getPointsBox(points) {\n    if (isEmpty(points)) {\n        return null;\n    }\n    var minX = points[0].x;\n    var maxX = points[0].x;\n    var minY = points[0].y;\n    var maxY = points[0].y;\n    each(points, function (point) {\n        minX = minX > point.x ? point.x : minX;\n        maxX = maxX < point.x ? point.x : maxX;\n        minY = minY > point.y ? point.y : minY;\n        maxY = maxY < point.y ? point.y : maxY;\n    });\n    return {\n        minX: minX,\n        maxX: maxX,\n        minY: minY,\n        maxY: maxY,\n        centerX: (minX + maxX) / 2,\n        centerY: (minY + maxY) / 2,\n    };\n}\n/**\n * @ignore\n * 根据弧度计算极坐标系下的坐标点\n * @param centerX\n * @param centerY\n * @param radius\n * @param angleInRadian\n * @returns\n */\nexport function polarToCartesian(centerX, centerY, radius, angleInRadian) {\n    return {\n        x: centerX + radius * Math.cos(angleInRadian),\n        y: centerY + radius * Math.sin(angleInRadian),\n    };\n}\n/**\n * @ignore\n * 根据起始角度计算绘制扇形的 path\n * @param centerX\n * @param centerY\n * @param radius\n * @param startAngleInRadian\n * @param endAngleInRadian\n * @returns\n */\nexport function getSectorPath(centerX, centerY, radius, startAngleInRadian, endAngleInRadian, innerRadius) {\n    if (innerRadius === void 0) { innerRadius = 0; }\n    var start = polarToCartesian(centerX, centerY, radius, startAngleInRadian);\n    var end = polarToCartesian(centerX, centerY, radius, endAngleInRadian);\n    var innerStart = polarToCartesian(centerX, centerY, innerRadius, startAngleInRadian);\n    var innerEnd = polarToCartesian(centerX, centerY, innerRadius, endAngleInRadian);\n    if (endAngleInRadian - startAngleInRadian === Math.PI * 2) {\n        // 整个圆是分割成两个圆\n        var middlePoint = polarToCartesian(centerX, centerY, radius, startAngleInRadian + Math.PI);\n        var innerMiddlePoint = polarToCartesian(centerX, centerY, innerRadius, startAngleInRadian + Math.PI);\n        var circlePathCommands = [\n            ['M', start.x, start.y],\n            ['A', radius, radius, 0, 1, 1, middlePoint.x, middlePoint.y],\n            ['A', radius, radius, 0, 1, 1, end.x, end.y],\n            ['M', innerStart.x, innerStart.y],\n        ];\n        if (innerRadius) {\n            circlePathCommands.push(['A', innerRadius, innerRadius, 0, 1, 0, innerMiddlePoint.x, innerMiddlePoint.y]);\n            circlePathCommands.push(['A', innerRadius, innerRadius, 0, 1, 0, innerEnd.x, innerEnd.y]);\n        }\n        circlePathCommands.push(['M', start.x, start.y]);\n        circlePathCommands.push(['Z']);\n        return circlePathCommands;\n    }\n    var arcSweep = endAngleInRadian - startAngleInRadian <= Math.PI ? 0 : 1;\n    var sectorPathCommands = [\n        ['M', start.x, start.y],\n        ['A', radius, radius, 0, arcSweep, 1, end.x, end.y],\n        ['L', innerEnd.x, innerEnd.y],\n    ];\n    if (innerRadius) {\n        sectorPathCommands.push(['A', innerRadius, innerRadius, 0, arcSweep, 0, innerStart.x, innerStart.y]);\n    }\n    sectorPathCommands.push(['L', start.x, start.y]);\n    sectorPathCommands.push(['Z']);\n    return sectorPathCommands;\n}\n/**\n * @ignore\n * Gets arc path\n * @param centerX\n * @param centerY\n * @param radius\n * @param startAngleInRadian\n * @param endAngleInRadian\n * @returns\n */\nexport function getArcPath(centerX, centerY, radius, startAngleInRadian, endAngleInRadian) {\n    var start = polarToCartesian(centerX, centerY, radius, startAngleInRadian);\n    var end = polarToCartesian(centerX, centerY, radius, endAngleInRadian);\n    if (isNumberEqual(endAngleInRadian - startAngleInRadian, Math.PI * 2)) {\n        var middlePoint = polarToCartesian(centerX, centerY, radius, startAngleInRadian + Math.PI);\n        return [\n            ['M', start.x, start.y],\n            ['A', radius, radius, 0, 1, 1, middlePoint.x, middlePoint.y],\n            ['A', radius, radius, 0, 1, 1, start.x, start.y],\n            ['A', radius, radius, 0, 1, 0, middlePoint.x, middlePoint.y],\n            ['A', radius, radius, 0, 1, 0, start.x, start.y],\n            ['Z'],\n        ];\n    }\n    var arcSweep = endAngleInRadian - startAngleInRadian <= Math.PI ? 0 : 1;\n    return [\n        ['M', start.x, start.y],\n        ['A', radius, radius, 0, arcSweep, 1, end.x, end.y],\n    ];\n}\n/**\n * @ignore\n * 从数据模型中的 points 换算角度\n * @param shapeModel\n * @param coordinate\n * @returns\n */\nexport function getAngle(shapeModel, coordinate) {\n    var points = shapeModel.points;\n    var box = getPointsBox(points);\n    var endAngle;\n    var startAngle;\n    var coordStartAngle = coordinate.startAngle, coordEndAngle = coordinate.endAngle;\n    var diffAngle = coordEndAngle - coordStartAngle;\n    if (coordinate.isTransposed) {\n        endAngle = box.maxY * diffAngle;\n        startAngle = box.minY * diffAngle;\n    }\n    else {\n        endAngle = box.maxX * diffAngle;\n        startAngle = box.minX * diffAngle;\n    }\n    endAngle += coordStartAngle;\n    startAngle += coordStartAngle;\n    return {\n        startAngle: startAngle,\n        endAngle: endAngle,\n    };\n}\n/**\n * @ignore\n * 计算多边形重心: https://en.wikipedia.org/wiki/Centroid#Of_a_polygon\n */\nexport function getPolygonCentroid(xs, ys) {\n    if (isNumber(xs) && isNumber(ys)) {\n        // 普通色块图，xs 和 ys 是数值\n        return [xs, ys];\n    }\n    var i = -1;\n    var x = 0;\n    var y = 0;\n    var former;\n    var current = xs.length - 1;\n    var diff;\n    var k = 0;\n    while (++i < xs.length) {\n        former = current;\n        current = i;\n        k += diff = xs[former] * ys[current] - xs[current] * ys[former];\n        x += (xs[former] + xs[current]) * diff;\n        y += (ys[former] + ys[current]) * diff;\n    }\n    k *= 3;\n    return [x / k, y / k];\n}\n/**\n * @ignore\n * 获取需要替换的属性，如果原先图形元素存在，而新图形不存在，则设置 undefined\n */\nexport function getReplaceAttrs(sourceShape, targetShape) {\n    var originAttrs = sourceShape.attr();\n    var newAttrs = targetShape.attr();\n    each(originAttrs, function (v, k) {\n        if (newAttrs[k] === undefined) {\n            newAttrs[k] = undefined;\n        }\n    });\n    return newAttrs;\n}\n//# sourceMappingURL=graphics.js.map"]}]}