{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\components\\axis\\parser.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\components\\axis\\parser.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __assign, __rest } from \"tslib\";\r\nimport { deepMix, isFunction, get } from '@antv/util';\r\nimport { combineFormatter, getNoopFormatter, getPrecisionFormatter, getSuffixFormatter } from '../../util/formatter';\r\nfunction propertyMapping(source, target, field) {\r\n    if (source[field]) {\r\n        target[field] = source[field];\r\n    }\r\n}\r\nvar AxisParser = (function () {\r\n    function AxisParser(cfg) {\r\n        this.config = false;\r\n        this.plot = cfg.plot;\r\n        this.dim = cfg.dim;\r\n        this.init();\r\n    }\r\n    AxisParser.prototype.init = function () {\r\n        this.config = false;\r\n        var theme = this.plot.getPlotTheme();\r\n        this.themeConfig = theme && theme.axis && theme.axis[this.dim];\r\n        if (this._needDraw()) {\r\n            this._styleParser();\r\n        }\r\n    };\r\n    AxisParser.prototype._styleParser = function () {\r\n        this.config = __assign({}, this.localProps);\r\n        this._isVisible('line') ? this._lineParser() : (this.config.line = null);\r\n        this._isVisible('grid') ? this._gridParser() : (this.config.grid = null);\r\n        this._isVisible('tickLine') ? this._tickLineParser() : (this.config.tickLine = null);\r\n        this._isVisible('label') ? this._labelParser() : (this.config.label = null);\r\n        this._isVisible('title') ? this._titleParser() : (this.config.title = null);\r\n        propertyMapping(this.localProps, this.config, 'autoHideLabel');\r\n        propertyMapping(this.localProps, this.config, 'autoRotateLabel');\r\n        propertyMapping(this.localProps, this.config, 'autoRotateTitle');\r\n    };\r\n    AxisParser.prototype._needDraw = function () {\r\n        var propos = this.plot.options;\r\n        var propsConfig = propos[this.dim + \"Axis\"] ? propos[this.dim + \"Axis\"] : {};\r\n        var config = deepMix({}, this.themeConfig, propsConfig);\r\n        this.localProps = config;\r\n        if (config.visible) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    AxisParser.prototype._lineParser = function () {\r\n        this.config.line = this.localProps.line;\r\n        if (this.localProps.line.style) {\r\n            this.config.line = { style: this.localProps.line.style };\r\n        }\r\n        this.applyThemeConfig('line');\r\n    };\r\n    AxisParser.prototype._gridParser = function () {\r\n        var _this = this;\r\n        var _a, _b, _c, _d, _e;\r\n        var style = (_b = (_a = this.localProps.grid) === null || _a === void 0 ? void 0 : _a.line) === null || _b === void 0 ? void 0 : _b.style;\r\n        var type = (_d = (_c = this.localProps.grid) === null || _c === void 0 ? void 0 : _c.line) === null || _d === void 0 ? void 0 : _d.type;\r\n        var alternateColor = (_e = this.localProps.grid) === null || _e === void 0 ? void 0 : _e.alternateColor;\r\n        if (isFunction(style)) {\r\n            this.config.grid = function (text, index, count) {\r\n                var cfg = style(text, index, count);\r\n                return {\r\n                    line: {\r\n                        type: type,\r\n                        style: deepMix({}, get(_this.themeConfig, \"grid.line.style\"), cfg),\r\n                    },\r\n                    alternateColor: alternateColor,\r\n                };\r\n            };\r\n        }\r\n        else if (style) {\r\n            this.config.grid = {\r\n                line: {\r\n                    type: type,\r\n                    style: style,\r\n                },\r\n                alternateColor: alternateColor,\r\n            };\r\n            this.applyThemeConfig('grid');\r\n        }\r\n    };\r\n    AxisParser.prototype._tickLineParser = function () {\r\n        this.config.tickLine = this.localProps.tickLine;\r\n        if (this.localProps.tickLine.style) {\r\n            this.config.tickLine = { style: this.localProps.tickLine.style };\r\n        }\r\n        this.applyThemeConfig('tickLine');\r\n    };\r\n    AxisParser.prototype._labelParser = function () {\r\n        var _a = this.localProps.label, style = _a.style, restLabelProps = __rest(_a, [\"style\"]);\r\n        var labelConfig = __assign({}, restLabelProps);\r\n        if (style) {\r\n            labelConfig.style = __assign({}, this.localProps.label.style);\r\n        }\r\n        labelConfig.style = deepMix({}, get(this.themeConfig, 'label.style'), labelConfig.style);\r\n        var formatter = this.parseFormatter(labelConfig);\r\n        labelConfig.formatter = formatter;\r\n        this.config.label = labelConfig;\r\n    };\r\n    AxisParser.prototype._titleParser = function () {\r\n        var titleConfig = __assign({}, this.localProps.title);\r\n        var _a = this.localProps.title, visible = _a.visible, style = _a.style, text = _a.text;\r\n        if (!visible) {\r\n            this.config.showTitle = false;\r\n        }\r\n        else {\r\n            this.config.showTitle = true;\r\n            if (style) {\r\n                titleConfig.style = style;\r\n            }\r\n            titleConfig.style = deepMix({}, get(this.config, 'title.style'), titleConfig.textStyle);\r\n            if (text) {\r\n                titleConfig.text = text;\r\n            }\r\n        }\r\n        this.config.title = titleConfig;\r\n    };\r\n    AxisParser.prototype._isVisible = function (name) {\r\n        if (this.localProps[name] && this.localProps[name].visible) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    AxisParser.prototype.applyThemeConfig = function (type) {\r\n        this.config[type] = deepMix({}, get(this.themeConfig, type + \".style\"), this.config[type]);\r\n    };\r\n    AxisParser.prototype.parseFormatter = function (labelConfig) {\r\n        var formatter = combineFormatter(getNoopFormatter(), getPrecisionFormatter(labelConfig.precision), getSuffixFormatter(labelConfig.suffix));\r\n        if (labelConfig.formatter) {\r\n            formatter = combineFormatter(formatter, labelConfig.formatter);\r\n        }\r\n        return formatter;\r\n    };\r\n    return AxisParser;\r\n}());\r\nexport default AxisParser;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\components\\axis\\parser.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\components\\axis\\parser.js"],"names":[],"mappings":"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","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport { deepMix, isFunction, get } from '@antv/util';\nimport { combineFormatter, getNoopFormatter, getPrecisionFormatter, getSuffixFormatter } from '../../util/formatter';\nfunction propertyMapping(source, target, field) {\n    if (source[field]) {\n        target[field] = source[field];\n    }\n}\nvar AxisParser = /** @class */ (function () {\n    function AxisParser(cfg) {\n        this.config = false;\n        this.plot = cfg.plot;\n        this.dim = cfg.dim;\n        this.init();\n    }\n    AxisParser.prototype.init = function () {\n        this.config = false;\n        var theme = this.plot.getPlotTheme();\n        this.themeConfig = theme && theme.axis && theme.axis[this.dim];\n        if (this._needDraw()) {\n            this._styleParser();\n        }\n    };\n    AxisParser.prototype._styleParser = function () {\n        this.config = __assign({}, this.localProps);\n        this._isVisible('line') ? this._lineParser() : (this.config.line = null);\n        this._isVisible('grid') ? this._gridParser() : (this.config.grid = null);\n        this._isVisible('tickLine') ? this._tickLineParser() : (this.config.tickLine = null);\n        this._isVisible('label') ? this._labelParser() : (this.config.label = null);\n        this._isVisible('title') ? this._titleParser() : (this.config.title = null);\n        propertyMapping(this.localProps, this.config, 'autoHideLabel');\n        propertyMapping(this.localProps, this.config, 'autoRotateLabel');\n        propertyMapping(this.localProps, this.config, 'autoRotateTitle');\n    };\n    AxisParser.prototype._needDraw = function () {\n        /** 如果在图表配置项里没有设置坐标轴整体的visibility则去对应的theme取 */\n        var propos = this.plot.options;\n        var propsConfig = propos[this.dim + \"Axis\"] ? propos[this.dim + \"Axis\"] : {};\n        var config = deepMix({}, this.themeConfig, propsConfig);\n        this.localProps = config;\n        if (config.visible) {\n            return true;\n        }\n        return false;\n    };\n    AxisParser.prototype._lineParser = function () {\n        this.config.line = this.localProps.line;\n        if (this.localProps.line.style) {\n            this.config.line = { style: this.localProps.line.style };\n        }\n        this.applyThemeConfig('line');\n    };\n    AxisParser.prototype._gridParser = function () {\n        var _this = this;\n        var _a, _b, _c, _d, _e;\n        var style = (_b = (_a = this.localProps.grid) === null || _a === void 0 ? void 0 : _a.line) === null || _b === void 0 ? void 0 : _b.style;\n        var type = (_d = (_c = this.localProps.grid) === null || _c === void 0 ? void 0 : _c.line) === null || _d === void 0 ? void 0 : _d.type;\n        var alternateColor = (_e = this.localProps.grid) === null || _e === void 0 ? void 0 : _e.alternateColor;\n        if (isFunction(style)) {\n            this.config.grid = function (text, index, count) {\n                var cfg = style(text, index, count);\n                return {\n                    line: {\n                        type: type,\n                        style: deepMix({}, get(_this.themeConfig, \"grid.line.style\"), cfg),\n                    },\n                    alternateColor: alternateColor,\n                };\n            };\n        }\n        else if (style) {\n            this.config.grid = {\n                line: {\n                    type: type,\n                    style: style,\n                },\n                alternateColor: alternateColor,\n            };\n            this.applyThemeConfig('grid');\n        }\n    };\n    AxisParser.prototype._tickLineParser = function () {\n        this.config.tickLine = this.localProps.tickLine;\n        if (this.localProps.tickLine.style) {\n            this.config.tickLine = { style: this.localProps.tickLine.style };\n        }\n        this.applyThemeConfig('tickLine');\n    };\n    AxisParser.prototype._labelParser = function () {\n        var _a = this.localProps.label, style = _a.style, restLabelProps = __rest(_a, [\"style\"]);\n        var labelConfig = __assign({}, restLabelProps);\n        if (style) {\n            labelConfig.style = __assign({}, this.localProps.label.style);\n        }\n        labelConfig.style = deepMix({}, get(this.themeConfig, 'label.style'), labelConfig.style);\n        var formatter = this.parseFormatter(labelConfig);\n        labelConfig.formatter = formatter;\n        this.config.label = labelConfig;\n    };\n    AxisParser.prototype._titleParser = function () {\n        var titleConfig = __assign({}, this.localProps.title);\n        var _a = this.localProps.title, visible = _a.visible, style = _a.style, text = _a.text;\n        if (!visible) {\n            this.config.showTitle = false;\n        }\n        else {\n            this.config.showTitle = true;\n            if (style) {\n                titleConfig.style = style;\n            }\n            titleConfig.style = deepMix({}, get(this.config, 'title.style'), titleConfig.textStyle);\n            if (text) {\n                titleConfig.text = text;\n            }\n        }\n        this.config.title = titleConfig;\n    };\n    AxisParser.prototype._isVisible = function (name) {\n        if (this.localProps[name] && this.localProps[name].visible) {\n            return true;\n        }\n        return false;\n    };\n    AxisParser.prototype.applyThemeConfig = function (type) {\n        this.config[type] = deepMix({}, get(this.themeConfig, type + \".style\"), this.config[type]);\n    };\n    AxisParser.prototype.parseFormatter = function (labelConfig) {\n        var formatter = combineFormatter(getNoopFormatter(), getPrecisionFormatter(labelConfig.precision), getSuffixFormatter(labelConfig.suffix));\n        if (labelConfig.formatter) {\n            formatter = combineFormatter(formatter, labelConfig.formatter);\n        }\n        return formatter;\n    };\n    return AxisParser;\n}());\nexport default AxisParser;\n//# sourceMappingURL=parser.js.map"]}]}