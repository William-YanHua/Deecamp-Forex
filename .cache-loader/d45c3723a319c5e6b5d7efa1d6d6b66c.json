{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/geometry/shape/interval/index.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/geometry/shape/interval/index.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { __assign } from \"tslib\";\nimport { registerShape, registerShapeFactory } from '../base';\nimport { getStyle } from '../util/get-style';\nimport { getRectPath, getRectPoints } from './util';\nvar IntervalShapeFactory = registerShapeFactory('interval', {\n    defaultShapeType: 'rect',\n    getDefaultPoints: function (pointInfo) {\n        return getRectPoints(pointInfo);\n    },\n});\nregisterShape('interval', 'rect', {\n    draw: function (cfg, container) {\n        var style = getStyle(cfg, false, true);\n        var path = this.parsePath(getRectPath(cfg.points));\n        var shape = container.addShape('path', {\n            attrs: __assign(__assign({}, style), { path: path }),\n            name: 'interval',\n        });\n        return shape;\n    },\n    getMarker: function (markerCfg) {\n        var color = markerCfg.color, isInPolar = markerCfg.isInPolar;\n        if (isInPolar) {\n            return {\n                symbol: 'circle',\n                style: {\n                    r: 4.5,\n                    fill: color,\n                },\n            };\n        }\n        return {\n            symbol: 'square',\n            style: {\n                r: 4,\n                fill: color,\n            },\n        };\n    },\n});\nexport default IntervalShapeFactory;\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/geometry/shape/interval/index.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/geometry/shape/interval/index.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACjC,OAAO,EAAE,aAAa,EAAE,oBAAoB,EAAE,MAAM,SAAS,CAAC;AAC9D,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC7C,OAAO,EAAE,WAAW,EAAE,aAAa,EAAE,MAAM,QAAQ,CAAC;AAEpD,IAAI,oBAAoB,GAAG,oBAAoB,CAAC,UAAU,EAAE;IACxD,gBAAgB,EAAE,MAAM;IACxB,gBAAgB,EAAE,UAAU,SAAS;QACjC,OAAO,aAAa,CAAC,SAAS,CAAC,CAAC;IACpC,CAAC;CACJ,CAAC,CAAC;AAEH,aAAa,CAAC,UAAU,EAAE,MAAM,EAAE;IAC9B,IAAI,EAAE,UAAU,GAAG,EAAE,SAAS;QAC1B,IAAI,KAAK,GAAG,QAAQ,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QACvC,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;QACnD,IAAI,KAAK,GAAG,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE;YACnC,KAAK,EAAE,QAAQ,CAAC,QAAQ,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;YACpD,IAAI,EAAE,UAAU;SACnB,CAAC,CAAC;QACH,OAAO,KAAK,CAAC;IACjB,CAAC;IACD,SAAS,EAAE,UAAU,SAAS;QAC1B,IAAI,KAAK,GAAG,SAAS,CAAC,KAAK,EAAE,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC;QAC7D,IAAI,SAAS,EAAE;YACX,OAAO;gBACH,MAAM,EAAE,QAAQ;gBAChB,KAAK,EAAE;oBACH,CAAC,EAAE,GAAG;oBACN,IAAI,EAAE,KAAK;iBACd;aACJ,CAAC;SACL;QACD,OAAO;YACH,MAAM,EAAE,QAAQ;YAChB,KAAK,EAAE;gBACH,CAAC,EAAE,CAAC;gBACJ,IAAI,EAAE,KAAK;aACd;SACJ,CAAC;IACN,CAAC;CACJ,CAAC,CAAC;AACH,eAAe,oBAAoB,CAAC","sourcesContent":["import { __assign } from \"tslib\";\nimport { registerShape, registerShapeFactory } from '../base';\nimport { getStyle } from '../util/get-style';\nimport { getRectPath, getRectPoints } from './util';\n/** Interval 的 shape 工厂 */\nvar IntervalShapeFactory = registerShapeFactory('interval', {\n    defaultShapeType: 'rect',\n    getDefaultPoints: function (pointInfo) {\n        return getRectPoints(pointInfo);\n    },\n});\n/** Inerval 默认 shape，填充的矩形 */\nregisterShape('interval', 'rect', {\n    draw: function (cfg, container) {\n        var style = getStyle(cfg, false, true);\n        var path = this.parsePath(getRectPath(cfg.points));\n        var shape = container.addShape('path', {\n            attrs: __assign(__assign({}, style), { path: path }),\n            name: 'interval',\n        });\n        return shape;\n    },\n    getMarker: function (markerCfg) {\n        var color = markerCfg.color, isInPolar = markerCfg.isInPolar;\n        if (isInPolar) {\n            return {\n                symbol: 'circle',\n                style: {\n                    r: 4.5,\n                    fill: color,\n                },\n            };\n        }\n        return {\n            symbol: 'square',\n            style: {\n                r: 4,\n                fill: color,\n            },\n        };\n    },\n});\nexport default IntervalShapeFactory;\n//# sourceMappingURL=index.js.map"]}]}