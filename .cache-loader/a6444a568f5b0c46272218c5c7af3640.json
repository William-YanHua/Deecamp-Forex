{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-timer\\src\\interval.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-timer\\src\\interval.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { Timer, now } from \"./timer\";\r\nexport default function (callback, delay, time) {\r\n    var t = new Timer, total = delay;\r\n    if (delay == null)\r\n        return t.restart(callback, delay, time), t;\r\n    delay = +delay, time = time == null ? now() : +time;\r\n    t.restart(function tick(elapsed) {\r\n        elapsed += total;\r\n        t.restart(tick, total += delay, time);\r\n        callback(elapsed);\r\n    }, delay, time);\r\n    return t;\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-timer\\src\\interval.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-timer\\src\\interval.js"],"names":[],"mappings":"AAAA,OAAO,EAAC,KAAK,EAAE,GAAG,EAAC,MAAM,SAAS,CAAC;AAEnC,MAAM,CAAC,OAAO,WAAU,QAAQ,EAAE,KAAK,EAAE,IAAI;IAC3C,IAAI,CAAC,GAAG,IAAI,KAAK,EAAE,KAAK,GAAG,KAAK,CAAC;IACjC,IAAI,KAAK,IAAI,IAAI;QAAE,OAAO,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;IAC9D,KAAK,GAAG,CAAC,KAAK,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACpD,CAAC,CAAC,OAAO,CAAC,SAAS,IAAI,CAAC,OAAO;QAC7B,OAAO,IAAI,KAAK,CAAC;QACjB,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,IAAI,KAAK,EAAE,IAAI,CAAC,CAAC;QACtC,QAAQ,CAAC,OAAO,CAAC,CAAC;IACpB,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IAChB,OAAO,CAAC,CAAC;AACX,CAAC","sourcesContent":["import {Timer, now} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n}\n"]}]}