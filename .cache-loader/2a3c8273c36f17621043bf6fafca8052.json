{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\animate\\animation\\sector-path-update.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\animate\\animation\\sector-path-update.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __assign } from \"tslib\";\r\nimport getArcParams from '@antv/g-canvas/lib/util/arc-params';\r\nimport { isNumberEqual, isEqual } from '@antv/util';\r\nimport { getArcPath, getSectorPath } from '../../util/graphics';\r\nfunction getAngle(startPoint, arcPath) {\r\n    var _a;\r\n    var _b = getArcParams(startPoint, arcPath), startAngle = _b.startAngle, endAngle = _b.endAngle;\r\n    if (!isNumberEqual(startAngle, -Math.PI * 0.5) && startAngle < -Math.PI * 0.5) {\r\n        startAngle += Math.PI * 2;\r\n    }\r\n    if (!isNumberEqual(endAngle, -Math.PI * 0.5) && endAngle < -Math.PI * 0.5) {\r\n        endAngle += Math.PI * 2;\r\n    }\r\n    if (arcPath[5] === 0) {\r\n        _a = [endAngle, startAngle], startAngle = _a[0], endAngle = _a[1];\r\n    }\r\n    if (isNumberEqual(startAngle, Math.PI * 1.5)) {\r\n        startAngle = Math.PI * -0.5;\r\n    }\r\n    if (isNumberEqual(endAngle, Math.PI * -0.5)) {\r\n        endAngle = Math.PI * 1.5;\r\n    }\r\n    return {\r\n        startAngle: startAngle,\r\n        endAngle: endAngle,\r\n    };\r\n}\r\nfunction getArcStartPoint(path) {\r\n    var startPoint;\r\n    if (path[0] === 'M' || path[0] === 'L') {\r\n        startPoint = [path[1], path[2]];\r\n    }\r\n    else if (path[0] === 'a' || path[0] === 'A') {\r\n        startPoint = [path[path.length - 2], path[path.length - 1]];\r\n    }\r\n    return startPoint;\r\n}\r\nfunction getArcInfo(path) {\r\n    var _a;\r\n    var startAngle;\r\n    var endAngle;\r\n    var arcPaths = path.filter(function (command) {\r\n        return command[0] === 'A' || command[0] === 'a';\r\n    });\r\n    var firstArcPathCommand = arcPaths[0];\r\n    var lastArcPathCommand = arcPaths.length > 1 ? arcPaths[1] : arcPaths[0];\r\n    var firstIndex = path.indexOf(firstArcPathCommand);\r\n    var lastIndex = path.indexOf(lastArcPathCommand);\r\n    var firstStartPoint = getArcStartPoint(path[firstIndex - 1]);\r\n    var lastStartPoint = getArcStartPoint(path[lastIndex - 1]);\r\n    var _b = getAngle(firstStartPoint, firstArcPathCommand), firstStartAngle = _b.startAngle, firstEndAngle = _b.endAngle;\r\n    var _c = getAngle(lastStartPoint, lastArcPathCommand), lastStartAngle = _c.startAngle, lastEndAngle = _c.endAngle;\r\n    if (isNumberEqual(firstStartAngle, lastStartAngle) && isNumberEqual(firstEndAngle, lastEndAngle)) {\r\n        startAngle = firstStartAngle;\r\n        endAngle = firstEndAngle;\r\n    }\r\n    else {\r\n        startAngle = Math.min(firstStartAngle, lastStartAngle);\r\n        endAngle = Math.max(firstEndAngle, lastEndAngle);\r\n    }\r\n    var radius = firstArcPathCommand[1];\r\n    var innerRadius = arcPaths[arcPaths.length - 1][1];\r\n    if (radius < innerRadius) {\r\n        _a = [innerRadius, radius], radius = _a[0], innerRadius = _a[1];\r\n    }\r\n    else if (radius === innerRadius) {\r\n        innerRadius = 0;\r\n    }\r\n    return {\r\n        startAngle: startAngle,\r\n        endAngle: endAngle,\r\n        radius: radius,\r\n        innerRadius: innerRadius,\r\n    };\r\n}\r\nexport function sectorPathUpdate(shape, animateCfg, cfg) {\r\n    var toAttrs = cfg.toAttrs, coordinate = cfg.coordinate;\r\n    var path = toAttrs.path;\r\n    var pathCommands = path.map(function (command) { return command[0]; });\r\n    var _a = getArcInfo(path), curStartAngle = _a.startAngle, curEndAngle = _a.endAngle, radius = _a.radius, innerRadius = _a.innerRadius;\r\n    var _b = getArcInfo(shape.attr('path')), preStartAngle = _b.startAngle, preEndAngle = _b.endAngle;\r\n    var center = coordinate.getCenter();\r\n    var diffStartAngle = curStartAngle - preStartAngle;\r\n    var diffEndAngle = curEndAngle - preEndAngle;\r\n    shape.animate(function (ratio) {\r\n        var onFrameStartAngle = preStartAngle + ratio * diffStartAngle;\r\n        var onFrameEndAngle = preEndAngle + ratio * diffEndAngle;\r\n        return __assign(__assign({}, toAttrs), { path: isEqual(pathCommands, ['M', 'A', 'A', 'Z'])\r\n                ? getArcPath(center.x, center.y, radius, onFrameStartAngle, onFrameEndAngle)\r\n                : getSectorPath(center.x, center.y, radius, onFrameStartAngle, onFrameEndAngle, innerRadius) });\r\n    }, __assign(__assign({}, animateCfg), { callback: function () {\r\n            shape.attr('path', path);\r\n        } }));\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\animate\\animation\\sector-path-update.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\animate\\animation\\sector-path-update.js"],"names":[],"mappings":"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","sourcesContent":["import { __assign } from \"tslib\";\nimport getArcParams from '@antv/g-canvas/lib/util/arc-params';\nimport { isNumberEqual, isEqual } from '@antv/util';\nimport { getArcPath, getSectorPath } from '../../util/graphics';\nfunction getAngle(startPoint, arcPath) {\n    var _a;\n    var _b = getArcParams(startPoint, arcPath), startAngle = _b.startAngle, endAngle = _b.endAngle;\n    if (!isNumberEqual(startAngle, -Math.PI * 0.5) && startAngle < -Math.PI * 0.5) {\n        startAngle += Math.PI * 2;\n    }\n    if (!isNumberEqual(endAngle, -Math.PI * 0.5) && endAngle < -Math.PI * 0.5) {\n        endAngle += Math.PI * 2;\n    }\n    if (arcPath[5] === 0) {\n        // 逆时针，需要将 startAngle 和 endAngle 转置，因为 G2 极坐标系为顺时针方向\n        _a = [endAngle, startAngle], startAngle = _a[0], endAngle = _a[1];\n    }\n    if (isNumberEqual(startAngle, Math.PI * 1.5)) {\n        startAngle = Math.PI * -0.5;\n    }\n    if (isNumberEqual(endAngle, Math.PI * -0.5)) {\n        endAngle = Math.PI * 1.5;\n    }\n    return {\n        startAngle: startAngle,\n        endAngle: endAngle,\n    };\n}\nfunction getArcStartPoint(path) {\n    var startPoint;\n    if (path[0] === 'M' || path[0] === 'L') {\n        startPoint = [path[1], path[2]];\n    }\n    else if (path[0] === 'a' || path[0] === 'A') {\n        startPoint = [path[path.length - 2], path[path.length - 1]];\n    }\n    return startPoint;\n}\n/**\n * path 存在以下情况\n * 1. 饼图不为整圆的 path，命令为 M, L, A, L, Z\n * 2. 饼图为整圆的 path，命令为 M, M, A, A, M, Z\n * 3. 环图不为整圆的 path，命令为 M, A, L, A, L, Z\n * 4. 环图为整圆的 path，命令为 M, A, A, M, A, A, M, Z\n * 5. radial-line, 不为整圆时的 path, 命令为 M, A, A, Z\n * 6. radial-line, 为整圆时的 path，命令为 M, A, A, A, A, Z\n * @param path theta 坐标系下圆弧的 path 命令\n */\nfunction getArcInfo(path) {\n    var _a;\n    var startAngle;\n    var endAngle;\n    var arcPaths = path.filter(function (command) {\n        return command[0] === 'A' || command[0] === 'a';\n    });\n    var firstArcPathCommand = arcPaths[0];\n    var lastArcPathCommand = arcPaths.length > 1 ? arcPaths[1] : arcPaths[0];\n    var firstIndex = path.indexOf(firstArcPathCommand);\n    var lastIndex = path.indexOf(lastArcPathCommand);\n    var firstStartPoint = getArcStartPoint(path[firstIndex - 1]);\n    var lastStartPoint = getArcStartPoint(path[lastIndex - 1]);\n    var _b = getAngle(firstStartPoint, firstArcPathCommand), firstStartAngle = _b.startAngle, firstEndAngle = _b.endAngle;\n    var _c = getAngle(lastStartPoint, lastArcPathCommand), lastStartAngle = _c.startAngle, lastEndAngle = _c.endAngle;\n    if (isNumberEqual(firstStartAngle, lastStartAngle) && isNumberEqual(firstEndAngle, lastEndAngle)) {\n        startAngle = firstStartAngle;\n        endAngle = firstEndAngle;\n    }\n    else {\n        startAngle = Math.min(firstStartAngle, lastStartAngle);\n        endAngle = Math.max(firstEndAngle, lastEndAngle);\n    }\n    var radius = firstArcPathCommand[1];\n    var innerRadius = arcPaths[arcPaths.length - 1][1];\n    if (radius < innerRadius) {\n        _a = [innerRadius, radius], radius = _a[0], innerRadius = _a[1];\n    }\n    else if (radius === innerRadius) {\n        innerRadius = 0;\n    }\n    return {\n        startAngle: startAngle,\n        endAngle: endAngle,\n        radius: radius,\n        innerRadius: innerRadius,\n    };\n}\n/**\n * @ignore\n * 饼图更新动画\n * @param shape 文本图形\n * @param animateCfg\n * @param cfg\n */\nexport function sectorPathUpdate(shape, animateCfg, cfg) {\n    var toAttrs = cfg.toAttrs, coordinate = cfg.coordinate;\n    // @ts-ignore\n    var path = toAttrs.path;\n    var pathCommands = path.map(function (command) { return command[0]; });\n    var _a = getArcInfo(path), curStartAngle = _a.startAngle, curEndAngle = _a.endAngle, radius = _a.radius, innerRadius = _a.innerRadius;\n    var _b = getArcInfo(shape.attr('path')), preStartAngle = _b.startAngle, preEndAngle = _b.endAngle;\n    var center = coordinate.getCenter();\n    var diffStartAngle = curStartAngle - preStartAngle;\n    var diffEndAngle = curEndAngle - preEndAngle;\n    shape.animate(function (ratio) {\n        var onFrameStartAngle = preStartAngle + ratio * diffStartAngle;\n        var onFrameEndAngle = preEndAngle + ratio * diffEndAngle;\n        return __assign(__assign({}, toAttrs), { path: \n            // hack, 兼容 /examples/bar/basic/demo/radial-line.ts 动画\n            isEqual(pathCommands, ['M', 'A', 'A', 'Z'])\n                ? getArcPath(center.x, center.y, radius, onFrameStartAngle, onFrameEndAngle)\n                : getSectorPath(center.x, center.y, radius, onFrameStartAngle, onFrameEndAngle, innerRadius) });\n    }, __assign(__assign({}, animateCfg), { callback: function () {\n            // 将 path 保持原始态，否则会影响 setState() 的动画\n            shape.attr('path', path);\n        } }));\n}\n//# sourceMappingURL=sector-path-update.js.map"]}]}