{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/rc-util/es/createChainedFunction.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/rc-util/es/createChainedFunction.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["export default function createChainedFunction() {\n    var args = [].slice.call(arguments, 0);\n    if (args.length === 1) {\n        return args[0];\n    }\n    return function chainedFunction() {\n        for (var i = 0; i < args.length; i++) {\n            if (args[i] && args[i].apply) {\n                args[i].apply(this, arguments);\n            }\n        }\n    };\n}\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/rc-util/es/createChainedFunction.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/rc-util/es/createChainedFunction.js"],"names":[],"mappings":"AAQA,MAAM,CAAC,OAAO,UAAU,qBAAqB;IAC3C,IAAI,IAAI,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IAEvC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;QACrB,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;KAChB;IAED,OAAO,SAAS,eAAe;QAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE;gBAC5B,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;aAChC;SACF;IACH,CAAC,CAAC;AACJ,CAAC","sourcesContent":["/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @returns {function|null}\n */\nexport default function createChainedFunction() {\n  var args = [].slice.call(arguments, 0);\n\n  if (args.length === 1) {\n    return args[0];\n  }\n\n  return function chainedFunction() {\n    for (var i = 0; i < args.length; i++) {\n      if (args[i] && args[i].apply) {\n        args[i].apply(this, arguments);\n      }\n    }\n  };\n}"]}]}