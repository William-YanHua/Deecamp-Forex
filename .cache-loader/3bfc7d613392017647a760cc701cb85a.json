{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\stacked-area\\layer.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\stacked-area\\layer.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __assign, __extends } from \"tslib\";\r\nimport { deepMix, get, each } from '@antv/util';\r\nimport { registerPlotType } from '../../base/global';\r\nimport BaseArea from '../area/layer';\r\nimport { getPlotComponents } from './component';\r\nimport './component/label/area-point';\r\nimport './component/label/area-point-auto';\r\nimport './theme';\r\nvar StackedAreaLayer = (function (_super) {\r\n    __extends(StackedAreaLayer, _super);\r\n    function StackedAreaLayer() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.plotComponents = [];\r\n        _this.type = 'stackedArea';\r\n        return _this;\r\n    }\r\n    StackedAreaLayer.getDefaultOptions = function () {\r\n        return deepMix({}, _super.getDefaultOptions.call(this), {\r\n            label: {\r\n                visible: false,\r\n                type: 'area',\r\n            },\r\n        });\r\n    };\r\n    StackedAreaLayer.prototype.beforeInit = function () {\r\n        var visible = get(this.options, ['label', 'visible']);\r\n        var type = get(this.options, ['label', 'type']);\r\n        var options = this.options;\r\n        if (visible) {\r\n            if (type === 'line') {\r\n                options.lineLabel = this.options.label;\r\n            }\r\n            if (type === 'area') {\r\n                options.areaLabel = this.options.label;\r\n            }\r\n        }\r\n        _super.prototype.beforeInit.call(this);\r\n    };\r\n    StackedAreaLayer.prototype.getColorScale = function () {\r\n        var stackField = this.options.stackField;\r\n        return this.view.getScaleByField(stackField);\r\n    };\r\n    StackedAreaLayer.prototype.label = function () {\r\n        var props = this.options;\r\n        var label = props.label;\r\n        if (label && label.visible === false) {\r\n            if (this.line) {\r\n                this.line.label = false;\r\n            }\r\n            if (this.point) {\r\n                this.point.label = false;\r\n            }\r\n            this.area.label = false;\r\n            return;\r\n        }\r\n    };\r\n    StackedAreaLayer.prototype.adjustArea = function (ele) {\r\n        ele.adjust = [\r\n            {\r\n                type: 'stack',\r\n            },\r\n        ];\r\n    };\r\n    StackedAreaLayer.prototype.adjustLine = function (ele) {\r\n        ele.adjust = [\r\n            {\r\n                type: 'stack',\r\n            },\r\n        ];\r\n    };\r\n    StackedAreaLayer.prototype.adjustPoint = function (ele) {\r\n        ele.adjust = [\r\n            {\r\n                type: 'stack',\r\n            },\r\n        ];\r\n    };\r\n    StackedAreaLayer.prototype.afterRender = function () {\r\n        this.renderPlotComponents();\r\n        this.options.responsive = false;\r\n        _super.prototype.afterRender.call(this);\r\n    };\r\n    StackedAreaLayer.prototype.geometryTooltip = function () {\r\n        this.area.tooltip = {};\r\n        var tooltipOptions = this.options.tooltip;\r\n        if (tooltipOptions.fields) {\r\n            this.area.tooltip.fields = tooltipOptions.fields;\r\n        }\r\n        if (tooltipOptions.formatter) {\r\n            this.area.tooltip.callback = tooltipOptions.formatter;\r\n            if (!tooltipOptions.fields) {\r\n                this.area.tooltip.fields = [this.options.xField, this.options.yField, this.options.stackField];\r\n            }\r\n        }\r\n    };\r\n    StackedAreaLayer.prototype.renderPlotComponents = function () {\r\n        var _this = this;\r\n        var componentsType = ['areaLabel', 'lineLabel'];\r\n        each(componentsType, function (t) {\r\n            var cfg = __assign({ view: _this.view, plot: _this }, _this.options[t]);\r\n            var component = getPlotComponents(_this, t, cfg);\r\n            if (component) {\r\n                component.render();\r\n                _this.plotComponents.push(component);\r\n            }\r\n        });\r\n    };\r\n    return StackedAreaLayer;\r\n}(BaseArea));\r\nexport default StackedAreaLayer;\r\nregisterPlotType('stackedArea', StackedAreaLayer);\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\stacked-area\\layer.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\stacked-area\\layer.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAC5C,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,YAAY,CAAC;AAChD,OAAO,EAAE,gBAAgB,EAAE,MAAM,mBAAmB,CAAC;AACrD,OAAO,QAAQ,MAAM,eAAe,CAAC;AACrC,OAAO,EAAE,iBAAiB,EAAE,MAAM,aAAa,CAAC;AAChD,OAAO,8BAA8B,CAAC;AACtC,OAAO,mCAAmC,CAAC;AAC3C,OAAO,SAAS,CAAC;AACjB,IAAI,gBAAgB,GAAiB,CAAC,UAAU,MAAM;IAClD,SAAS,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;IACpC,SAAS,gBAAgB;QACrB,IAAI,KAAK,GAAG,MAAM,KAAK,IAAI,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,IAAI,CAAC;QACrE,KAAK,CAAC,cAAc,GAAG,EAAE,CAAC;QAC1B,KAAK,CAAC,IAAI,GAAG,aAAa,CAAC;QAC3B,OAAO,KAAK,CAAC;IACjB,CAAC;IACD,gBAAgB,CAAC,iBAAiB,GAAG;QACjC,OAAO,OAAO,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YACpD,KAAK,EAAE;gBACH,OAAO,EAAE,KAAK;gBACd,IAAI,EAAE,MAAM;aACf;SACJ,CAAC,CAAC;IACP,CAAC,CAAC;IACF,gBAAgB,CAAC,SAAS,CAAC,UAAU,GAAG;QACpC,IAAI,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC,CAAC;QACtD,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;QAChD,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC3B,IAAI,OAAO,EAAE;YACT,IAAI,IAAI,KAAK,MAAM,EAAE;gBACjB,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;aAC1C;YACD,IAAI,IAAI,KAAK,MAAM,EAAE;gBACjB,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;aAC1C;SACJ;QACD,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3C,CAAC,CAAC;IACF,gBAAgB,CAAC,SAAS,CAAC,aAAa,GAAG;QACvC,IAAI,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;IACjD,CAAC,CAAC;IACF,gBAAgB,CAAC,SAAS,CAAC,KAAK,GAAG;QAC/B,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC;QACzB,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QACxB,IAAI,KAAK,IAAI,KAAK,CAAC,OAAO,KAAK,KAAK,EAAE;YAClC,IAAI,IAAI,CAAC,IAAI,EAAE;gBACX,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;aAC3B;YACD,IAAI,IAAI,CAAC,KAAK,EAAE;gBACZ,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;aAC5B;YACD,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACxB,OAAO;SACV;IACL,CAAC,CAAC;IACF,gBAAgB,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,GAAG;QACjD,GAAG,CAAC,MAAM,GAAG;YACT;gBACI,IAAI,EAAE,OAAO;aAChB;SACJ,CAAC;IACN,CAAC,CAAC;IACF,gBAAgB,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,GAAG;QACjD,GAAG,CAAC,MAAM,GAAG;YACT;gBACI,IAAI,EAAE,OAAO;aAChB;SACJ,CAAC;IACN,CAAC,CAAC;IACF,gBAAgB,CAAC,SAAS,CAAC,WAAW,GAAG,UAAU,GAAG;QAClD,GAAG,CAAC,MAAM,GAAG;YACT;gBACI,IAAI,EAAE,OAAO;aAChB;SACJ,CAAC;IACN,CAAC,CAAC;IACF,gBAAgB,CAAC,SAAS,CAAC,WAAW,GAAG;QACrC,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,KAAK,CAAC;QAChC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5C,CAAC,CAAC;IACF,gBAAgB,CAAC,SAAS,CAAC,eAAe,GAAG;QACzC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QACvB,IAAI,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QAC1C,IAAI,cAAc,CAAC,MAAM,EAAE;YACvB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,cAAc,CAAC,MAAM,CAAC;SACpD;QACD,IAAI,cAAc,CAAC,SAAS,EAAE;YAC1B,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,cAAc,CAAC,SAAS,CAAC;YACtD,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;gBACxB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;aAClG;SACJ;IACL,CAAC,CAAC;IACF,gBAAgB,CAAC,SAAS,CAAC,oBAAoB,GAAG;QAC9C,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,cAAc,GAAG,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;QAChD,IAAI,CAAC,cAAc,EAAE,UAAU,CAAC;YAC5B,IAAI,GAAG,GAAG,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;YACxE,IAAI,SAAS,GAAG,iBAAiB,CAAC,KAAK,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;YACjD,IAAI,SAAS,EAAE;gBACX,SAAS,CAAC,MAAM,EAAE,CAAC;gBACnB,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aACxC;QACL,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;IACF,OAAO,gBAAgB,CAAC;AAC5B,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;AACb,eAAe,gBAAgB,CAAC;AAChC,gBAAgB,CAAC,aAAa,EAAE,gBAAgB,CAAC,CAAC","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { deepMix, get, each } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport BaseArea from '../area/layer';\nimport { getPlotComponents } from './component';\nimport './component/label/area-point';\nimport './component/label/area-point-auto';\nimport './theme';\nvar StackedAreaLayer = /** @class */ (function (_super) {\n    __extends(StackedAreaLayer, _super);\n    function StackedAreaLayer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.plotComponents = [];\n        _this.type = 'stackedArea';\n        return _this;\n    }\n    StackedAreaLayer.getDefaultOptions = function () {\n        return deepMix({}, _super.getDefaultOptions.call(this), {\n            label: {\n                visible: false,\n                type: 'area',\n            },\n        });\n    };\n    StackedAreaLayer.prototype.beforeInit = function () {\n        var visible = get(this.options, ['label', 'visible']);\n        var type = get(this.options, ['label', 'type']);\n        var options = this.options;\n        if (visible) {\n            if (type === 'line') {\n                options.lineLabel = this.options.label;\n            }\n            if (type === 'area') {\n                options.areaLabel = this.options.label;\n            }\n        }\n        _super.prototype.beforeInit.call(this);\n    };\n    StackedAreaLayer.prototype.getColorScale = function () {\n        var stackField = this.options.stackField;\n        return this.view.getScaleByField(stackField);\n    };\n    StackedAreaLayer.prototype.label = function () {\n        var props = this.options;\n        var label = props.label;\n        if (label && label.visible === false) {\n            if (this.line) {\n                this.line.label = false;\n            }\n            if (this.point) {\n                this.point.label = false;\n            }\n            this.area.label = false;\n            return;\n        }\n    };\n    StackedAreaLayer.prototype.adjustArea = function (ele) {\n        ele.adjust = [\n            {\n                type: 'stack',\n            },\n        ];\n    };\n    StackedAreaLayer.prototype.adjustLine = function (ele) {\n        ele.adjust = [\n            {\n                type: 'stack',\n            },\n        ];\n    };\n    StackedAreaLayer.prototype.adjustPoint = function (ele) {\n        ele.adjust = [\n            {\n                type: 'stack',\n            },\n        ];\n    };\n    StackedAreaLayer.prototype.afterRender = function () {\n        this.renderPlotComponents();\n        this.options.responsive = false;\n        _super.prototype.afterRender.call(this);\n    };\n    StackedAreaLayer.prototype.geometryTooltip = function () {\n        this.area.tooltip = {};\n        var tooltipOptions = this.options.tooltip;\n        if (tooltipOptions.fields) {\n            this.area.tooltip.fields = tooltipOptions.fields;\n        }\n        if (tooltipOptions.formatter) {\n            this.area.tooltip.callback = tooltipOptions.formatter;\n            if (!tooltipOptions.fields) {\n                this.area.tooltip.fields = [this.options.xField, this.options.yField, this.options.stackField];\n            }\n        }\n    };\n    StackedAreaLayer.prototype.renderPlotComponents = function () {\n        var _this = this;\n        var componentsType = ['areaLabel', 'lineLabel'];\n        each(componentsType, function (t) {\n            var cfg = __assign({ view: _this.view, plot: _this }, _this.options[t]);\n            var component = getPlotComponents(_this, t, cfg);\n            if (component) {\n                component.render();\n                _this.plotComponents.push(component);\n            }\n        });\n    };\n    return StackedAreaLayer;\n}(BaseArea));\nexport default StackedAreaLayer;\nregisterPlotType('stackedArea', StackedAreaLayer);\n//# sourceMappingURL=layer.js.map"]}]}