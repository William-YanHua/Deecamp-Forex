{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-canvas\\esm\\shape\\text.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-canvas\\esm\\shape\\text.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __assign, __extends } from \"tslib\";\r\nimport ShapeBase from './base';\r\nimport { isNil, isString, each } from '../util/util';\r\nimport { getTextHeight, assembleFont } from '@antv/g-base/lib/util/text';\r\nvar Text = (function (_super) {\r\n    __extends(Text, _super);\r\n    function Text() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Text.prototype.getDefaultAttrs = function () {\r\n        var attrs = _super.prototype.getDefaultAttrs.call(this);\r\n        return __assign(__assign({}, attrs), { x: 0, y: 0, text: null, fontSize: 12, fontFamily: 'sans-serif', fontStyle: 'normal', fontWeight: 'normal', fontVariant: 'normal', textAlign: 'start', textBaseline: 'bottom' });\r\n    };\r\n    Text.prototype.isOnlyHitBox = function () {\r\n        return true;\r\n    };\r\n    Text.prototype.initAttrs = function (attrs) {\r\n        this._assembleFont();\r\n        if (attrs.text) {\r\n            this._setText(attrs.text);\r\n        }\r\n    };\r\n    Text.prototype._assembleFont = function () {\r\n        var attrs = this.attrs;\r\n        attrs.font = assembleFont(attrs);\r\n    };\r\n    Text.prototype._setText = function (text) {\r\n        var textArr = null;\r\n        if (isString(text) && text.indexOf('\\n') !== -1) {\r\n            textArr = text.split('\\n');\r\n        }\r\n        this.set('textArr', textArr);\r\n    };\r\n    Text.prototype.onAttrChange = function (name, value, originValue) {\r\n        _super.prototype.onAttrChange.call(this, name, value, originValue);\r\n        if (name.startsWith('font')) {\r\n            this._assembleFont();\r\n        }\r\n        if (name === 'text') {\r\n            this._setText(value);\r\n        }\r\n    };\r\n    Text.prototype._getSpaceingY = function () {\r\n        var attrs = this.attrs;\r\n        var lineHeight = attrs.lineHeight;\r\n        var fontSize = attrs.fontSize * 1;\r\n        return lineHeight ? lineHeight - fontSize : fontSize * 0.14;\r\n    };\r\n    Text.prototype._drawTextArr = function (context, textArr, isFill) {\r\n        var attrs = this.attrs;\r\n        var textBaseline = attrs.textBaseline;\r\n        var x = attrs.x;\r\n        var y = attrs.y;\r\n        var fontSize = attrs.fontSize * 1;\r\n        var spaceingY = this._getSpaceingY();\r\n        var height = getTextHeight(attrs.text, attrs.fontSize, attrs.lineHeight);\r\n        var subY;\r\n        each(textArr, function (subText, index) {\r\n            subY = y + index * (spaceingY + fontSize) - height + fontSize;\r\n            if (textBaseline === 'middle')\r\n                subY += height - fontSize - (height - fontSize) / 2;\r\n            if (textBaseline === 'top')\r\n                subY += height - fontSize;\r\n            if (isFill) {\r\n                context.fillText(subText, x, subY);\r\n            }\r\n            else {\r\n                context.strokeText(subText, x, subY);\r\n            }\r\n        });\r\n    };\r\n    Text.prototype._drawText = function (context, isFill) {\r\n        var attrs = this.attr();\r\n        var x = attrs.x;\r\n        var y = attrs.y;\r\n        var textArr = this.get('textArr');\r\n        if (textArr) {\r\n            this._drawTextArr(context, textArr, isFill);\r\n        }\r\n        else {\r\n            var text = attrs.text;\r\n            if (isFill) {\r\n                context.fillText(text, x, y);\r\n            }\r\n            else {\r\n                context.strokeText(text, x, y);\r\n            }\r\n        }\r\n    };\r\n    Text.prototype.strokeAndFill = function (context) {\r\n        var _a = this.attrs, lineWidth = _a.lineWidth, opacity = _a.opacity, strokeOpacity = _a.strokeOpacity, fillOpacity = _a.fillOpacity;\r\n        if (this.isStroke()) {\r\n            if (lineWidth > 0) {\r\n                if (!isNil(strokeOpacity) && strokeOpacity !== 1) {\r\n                    context.globalAlpha = opacity;\r\n                }\r\n                this.stroke(context);\r\n            }\r\n        }\r\n        if (this.isFill()) {\r\n            if (!isNil(fillOpacity) && fillOpacity !== 1) {\r\n                context.globalAlpha = fillOpacity;\r\n                this.fill(context);\r\n                context.globalAlpha = opacity;\r\n            }\r\n            else {\r\n                this.fill(context);\r\n            }\r\n        }\r\n        this.afterDrawPath(context);\r\n    };\r\n    Text.prototype.fill = function (context) {\r\n        this._drawText(context, true);\r\n    };\r\n    Text.prototype.stroke = function (context) {\r\n        this._drawText(context, false);\r\n    };\r\n    return Text;\r\n}(ShapeBase));\r\nexport default Text;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-canvas\\esm\\shape\\text.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-canvas\\esm\\shape\\text.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * @fileoverview 文本\n * @author dxq613@gmail.com\n */\nimport { __assign, __extends } from \"tslib\";\nimport ShapeBase from './base';\nimport { isNil, isString, each } from '../util/util';\nimport { getTextHeight, assembleFont } from '@antv/g-base/lib/util/text';\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // 默认文本属性\n    Text.prototype.getDefaultAttrs = function () {\n        var attrs = _super.prototype.getDefaultAttrs.call(this);\n        return __assign(__assign({}, attrs), { x: 0, y: 0, text: null, fontSize: 12, fontFamily: 'sans-serif', fontStyle: 'normal', fontWeight: 'normal', fontVariant: 'normal', textAlign: 'start', textBaseline: 'bottom' });\n    };\n    // 仅仅使用包围盒检测来进行拾取\n    Text.prototype.isOnlyHitBox = function () {\n        return true;\n    };\n    // 初始化时组合 font，同时判断 text 是否换行\n    Text.prototype.initAttrs = function (attrs) {\n        this._assembleFont();\n        if (attrs.text) {\n            this._setText(attrs.text);\n        }\n    };\n    // 组装字体\n    Text.prototype._assembleFont = function () {\n        var attrs = this.attrs;\n        attrs.font = assembleFont(attrs);\n    };\n    // 如果文本换行，则缓存数组\n    Text.prototype._setText = function (text) {\n        var textArr = null;\n        if (isString(text) && text.indexOf('\\n') !== -1) {\n            textArr = text.split('\\n');\n        }\n        this.set('textArr', textArr);\n    };\n    // 更新属性时，检测是否更改了 font、text\n    Text.prototype.onAttrChange = function (name, value, originValue) {\n        _super.prototype.onAttrChange.call(this, name, value, originValue);\n        if (name.startsWith('font')) {\n            this._assembleFont();\n        }\n        if (name === 'text') {\n            this._setText(value);\n        }\n    };\n    // 这个方法在 text 时没有可以做的事情，如果要支持文字背景时可以考虑\n    // createPath(context) {\n    // }\n    // 如果文本多行，需要获取文本间距\n    Text.prototype._getSpaceingY = function () {\n        var attrs = this.attrs;\n        var lineHeight = attrs.lineHeight;\n        var fontSize = attrs.fontSize * 1;\n        return lineHeight ? lineHeight - fontSize : fontSize * 0.14;\n    };\n    // 绘制文本，考虑多行的场景\n    Text.prototype._drawTextArr = function (context, textArr, isFill) {\n        var attrs = this.attrs;\n        var textBaseline = attrs.textBaseline;\n        var x = attrs.x;\n        var y = attrs.y;\n        var fontSize = attrs.fontSize * 1;\n        var spaceingY = this._getSpaceingY();\n        var height = getTextHeight(attrs.text, attrs.fontSize, attrs.lineHeight);\n        var subY;\n        each(textArr, function (subText, index) {\n            subY = y + index * (spaceingY + fontSize) - height + fontSize; // bottom;\n            if (textBaseline === 'middle')\n                subY += height - fontSize - (height - fontSize) / 2;\n            if (textBaseline === 'top')\n                subY += height - fontSize;\n            if (isFill) {\n                context.fillText(subText, x, subY);\n            }\n            else {\n                context.strokeText(subText, x, subY);\n            }\n        });\n    };\n    // 绘制文本，同时考虑填充和绘制边框\n    Text.prototype._drawText = function (context, isFill) {\n        var attrs = this.attr();\n        var x = attrs.x;\n        var y = attrs.y;\n        var textArr = this.get('textArr');\n        if (textArr) {\n            this._drawTextArr(context, textArr, isFill);\n        }\n        else {\n            var text = attrs.text;\n            if (isFill) {\n                context.fillText(text, x, y);\n            }\n            else {\n                context.strokeText(text, x, y);\n            }\n        }\n    };\n    // 复写绘制和填充的逻辑：对于文本，应该先绘制边框，再进行填充\n    Text.prototype.strokeAndFill = function (context) {\n        var _a = this.attrs, lineWidth = _a.lineWidth, opacity = _a.opacity, strokeOpacity = _a.strokeOpacity, fillOpacity = _a.fillOpacity;\n        if (this.isStroke()) {\n            if (lineWidth > 0) {\n                if (!isNil(strokeOpacity) && strokeOpacity !== 1) {\n                    context.globalAlpha = opacity;\n                }\n                this.stroke(context);\n            }\n        }\n        if (this.isFill()) {\n            if (!isNil(fillOpacity) && fillOpacity !== 1) {\n                context.globalAlpha = fillOpacity;\n                this.fill(context);\n                context.globalAlpha = opacity;\n            }\n            else {\n                this.fill(context);\n            }\n        }\n        this.afterDrawPath(context);\n    };\n    // 复写填充逻辑\n    Text.prototype.fill = function (context) {\n        this._drawText(context, true);\n    };\n    // 复写绘制边框的逻辑\n    Text.prototype.stroke = function (context) {\n        this._drawText(context, false);\n    };\n    return Text;\n}(ShapeBase));\nexport default Text;\n//# sourceMappingURL=text.js.map"]}]}