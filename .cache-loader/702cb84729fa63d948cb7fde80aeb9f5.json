{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/word-cloud/layer.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/word-cloud/layer.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\nimport { get, deepMix } from '@antv/util';\nimport Layer from '../../base/layer';\nimport WordCloudTooltips from './word-cloud-tooltips';\nimport WordCloud from './wordcloud2';\nvar WordCloudLayer = (function (_super) {\n    __extends(WordCloudLayer, _super);\n    function WordCloudLayer(props) {\n        var _this = _super.call(this, props) || this;\n        _this._toolTipsAction = function (item, dimension, evt, start) {\n            if (dimension) {\n                _this._toolTips.update({\n                    items: [\n                        {\n                            color: item.color || 'red',\n                            name: item.word,\n                            value: item.weight,\n                        },\n                    ],\n                    x: evt.offsetX,\n                    y: evt.offsetY,\n                });\n                _this._toolTips.show();\n            }\n            else {\n                _this._toolTips.hide();\n            }\n            _this._toolTips.render();\n            _this._configHoverAction && _this._configHoverAction(item, dimension, evt, start);\n        };\n        _this._configHoverAction = props.onWordCloudHover;\n        _this._enableToolTips = get(props, 'tooltip.visible', true);\n        _this.options = deepMix({}, {\n            width: 400,\n            height: 400,\n            enableToolTips: true,\n        }, props, {\n            onWordCloudHover: _this._enableToolTips ? _this._toolTipsAction : _this._configHoverAction,\n        });\n        return _this;\n    }\n    WordCloudLayer.prototype.init = function () {\n        _super.prototype.init.call(this);\n        this._initToolTips();\n    };\n    WordCloudLayer.prototype.render = function () {\n        _super.prototype.render.call(this);\n        this._render();\n    };\n    WordCloudLayer.prototype._initToolTips = function () {\n        this._toolTips = new WordCloudTooltips({\n            showTitle: false,\n            visible: false,\n            parent: this.options.container,\n            follow: true,\n            inPanel: false,\n            items: [],\n        });\n        this._toolTips.init();\n    };\n    WordCloudLayer.prototype._render = function () {\n        this._targetCanvas = this.canvas.get('el');\n        if (this.options.maskImage) {\n            this._handleMaskImage();\n        }\n        else {\n            this._start();\n        }\n    };\n    WordCloudLayer.prototype._handleMaskImage = function () {\n        var _this = this;\n        var image = new Image();\n        image.src = this.options.maskImage + '?' + new Date().getTime();\n        image.crossOrigin = 'Anonymous';\n        image.onload = function () {\n            if (image.naturalHeight + image.naturalWidth === 0 || image.width + image.height === 0) {\n                _this._start();\n            }\n            else {\n                _this._startWithMaskImage(image);\n            }\n        };\n        image.onerror = function () {\n            console.error('image %s load failed !!!', _this.options.maskImage);\n            _this._start();\n        };\n    };\n    WordCloudLayer.prototype._start = function () {\n        this._handleG2PlotConfig();\n        var targetCtx = this._targetCanvas.getContext('2d');\n        var pixelRatio = this.canvas.get('width') / this.canvas.get('el').width;\n        targetCtx.scale(pixelRatio, pixelRatio);\n        WordCloud(this._targetCanvas, this.options);\n    };\n    WordCloudLayer.prototype._handleG2PlotConfig = function () {\n        var fontSize = this.options.wordStyle.fontSize || [10, 60];\n        var rotation = this.options.wordStyle.rotation || [-Math.PI / 2, Math.PI / 2];\n        var active, shadowColor, shadowBlur;\n        if (this.options.wordStyle.active) {\n            active = true;\n            shadowColor = this.options.wordStyle.active.shadowColor || '#333';\n            shadowBlur = this.options.wordStyle.active.shadowBlur || 10;\n        }\n        else {\n            active = false;\n        }\n        this.options = deepMix({}, this.options, {\n            minFontSize: fontSize[0],\n            maxFontSize: fontSize[1],\n            minRotation: rotation[0],\n            maxRotation: rotation[1],\n            active: active,\n            shadowColor: shadowColor,\n            shadowBlur: shadowBlur,\n        });\n    };\n    WordCloudLayer.prototype._startWithMaskImage = function (image) {\n        var _a = this._scaleMaskImageCanvas(this._transformWhite2BlackPixels(image)), maskImageCanvas = _a.maskImageCanvas, maskImageContext = _a.maskImageContext;\n        var bctx = document.createElement('canvas').getContext('2d');\n        bctx.fillStyle = this.options.backgroundColor || '#fff';\n        bctx.fillRect(0, 0, 1, 1);\n        var bgPixel = bctx.getImageData(0, 0, 1, 1).data;\n        var imageData = maskImageContext.getImageData(0, 0, maskImageCanvas.width, maskImageCanvas.height);\n        var newImageData = maskImageContext.createImageData(imageData);\n        for (var i = 0; i < imageData.data.length; i += 4) {\n            if (imageData.data[i + 3] > 128) {\n                newImageData.data[i] = bgPixel[0];\n                newImageData.data[i + 1] = bgPixel[1];\n                newImageData.data[i + 2] = bgPixel[2];\n                newImageData.data[i + 3] = bgPixel[3];\n            }\n            else {\n                newImageData.data[i] = bgPixel[0];\n                newImageData.data[i + 1] = bgPixel[1];\n                newImageData.data[i + 2] = bgPixel[2];\n                newImageData.data[i + 3] = 254;\n            }\n        }\n        maskImageContext.putImageData(newImageData, 0, 0);\n        var targetCtx = this._targetCanvas.getContext('2d');\n        targetCtx.drawImage(maskImageCanvas, 0, 0);\n        this.options = deepMix({}, this.options, { clearCanvas: false });\n        this._start();\n    };\n    WordCloudLayer.prototype._scaleMaskImageCanvas = function (maskImageCanvas) {\n        var maskCanvasScaled = document.createElement('canvas');\n        maskCanvasScaled.width = this.canvas.get('width');\n        maskCanvasScaled.height = this.canvas.get('height');\n        var ctx = maskCanvasScaled.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n        ctx.drawImage(maskImageCanvas, 0, 0, maskImageCanvas.width, maskImageCanvas.height, 0, 0, maskCanvasScaled.width, maskCanvasScaled.height);\n        return {\n            maskImageCanvas: maskCanvasScaled,\n            maskImageContext: ctx,\n        };\n    };\n    WordCloudLayer.prototype._transformWhite2BlackPixels = function (image) {\n        var maskImageCanvas = document.createElement('canvas');\n        maskImageCanvas.width = image.width;\n        maskImageCanvas.height = image.height;\n        var ctx = maskImageCanvas.getContext('2d');\n        ctx.drawImage(image, 0, 0, image.width, image.height);\n        var imageData = ctx.getImageData(0, 0, maskImageCanvas.width, maskImageCanvas.height);\n        var SINGLE_COMPONENT_SIZE = 4;\n        var BLACK_PIXEL = 0;\n        var FULL_PIXEL = 255;\n        for (var i = 0; i < imageData.data.length; i += SINGLE_COMPONENT_SIZE) {\n            var rgb = imageData.data[i] + imageData.data[i + 1] + imageData.data[i + 2];\n            var alpha = imageData.data[i + 3];\n            if (alpha < 128 || rgb > 250 * 3) {\n                imageData.data[i] = FULL_PIXEL;\n                imageData.data[i + 1] = FULL_PIXEL;\n                imageData.data[i + 2] = FULL_PIXEL;\n                imageData.data[i + 3] = BLACK_PIXEL;\n            }\n            else {\n                imageData.data[i] = BLACK_PIXEL;\n                imageData.data[i + 1] = BLACK_PIXEL;\n                imageData.data[i + 2] = BLACK_PIXEL;\n                imageData.data[i + 3] = FULL_PIXEL;\n            }\n        }\n        ctx.putImageData(imageData, 0, 0);\n        return maskImageCanvas;\n    };\n    return WordCloudLayer;\n}(Layer));\nexport default WordCloudLayer;\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/word-cloud/layer.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/word-cloud/layer.js"],"names":[],"mappings":"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","sourcesContent":["import { __extends } from \"tslib\";\nimport { get, deepMix } from '@antv/util';\nimport Layer from '../../base/layer';\nimport WordCloudTooltips from './word-cloud-tooltips';\nimport WordCloud from './wordcloud2';\nvar WordCloudLayer = /** @class */ (function (_super) {\n    __extends(WordCloudLayer, _super);\n    function WordCloudLayer(props) {\n        var _this = _super.call(this, props) || this;\n        _this._toolTipsAction = function (item, dimension, evt, start) {\n            if (dimension) {\n                _this._toolTips.update({\n                    items: [\n                        {\n                            color: item.color || 'red',\n                            name: item.word,\n                            value: item.weight,\n                        },\n                    ],\n                    x: evt.offsetX,\n                    y: evt.offsetY,\n                });\n                _this._toolTips.show();\n            }\n            else {\n                _this._toolTips.hide();\n            }\n            _this._toolTips.render();\n            _this._configHoverAction && _this._configHoverAction(item, dimension, evt, start);\n        };\n        _this._configHoverAction = props.onWordCloudHover;\n        _this._enableToolTips = get(props, 'tooltip.visible', true);\n        _this.options = deepMix({}, {\n            width: 400,\n            height: 400,\n            enableToolTips: true,\n        }, props, \n        // replace use config's hover action if needed, and trigger later\n        {\n            onWordCloudHover: _this._enableToolTips ? _this._toolTipsAction : _this._configHoverAction,\n        });\n        return _this;\n    }\n    WordCloudLayer.prototype.init = function () {\n        _super.prototype.init.call(this);\n        this._initToolTips();\n    };\n    WordCloudLayer.prototype.render = function () {\n        _super.prototype.render.call(this);\n        this._render();\n    };\n    WordCloudLayer.prototype._initToolTips = function () {\n        this._toolTips = new WordCloudTooltips({\n            showTitle: false,\n            visible: false,\n            parent: this.options.container,\n            follow: true,\n            inPanel: false,\n            items: [],\n        });\n        this._toolTips.init();\n    };\n    WordCloudLayer.prototype._render = function () {\n        this._targetCanvas = this.canvas.get('el');\n        if (this.options.maskImage) {\n            this._handleMaskImage();\n        }\n        else {\n            // mask image not exist\n            this._start();\n        }\n    };\n    WordCloudLayer.prototype._handleMaskImage = function () {\n        var _this = this;\n        var image = new Image();\n        image.src = this.options.maskImage + '?' + new Date().getTime();\n        image.crossOrigin = 'Anonymous';\n        image.onload = function () {\n            if (image.naturalHeight + image.naturalWidth === 0 || image.width + image.height === 0) {\n                _this._start();\n            }\n            else {\n                // handle no-zero image silhouette\n                _this._startWithMaskImage(image);\n            }\n        };\n        image.onerror = function () {\n            console.error('image %s load failed !!!', _this.options.maskImage);\n            // load image error, ignore this mask\n            _this._start();\n        };\n    };\n    WordCloudLayer.prototype._start = function () {\n        this._handleG2PlotConfig();\n        var targetCtx = this._targetCanvas.getContext('2d');\n        // it's a trick, because 「g」 use context to scale canvas by pixelRatio,\n        // but here i need scale it back\n        var pixelRatio = this.canvas.get('width') / this.canvas.get('el').width;\n        targetCtx.scale(pixelRatio, pixelRatio);\n        WordCloud(this._targetCanvas, this.options);\n    };\n    WordCloudLayer.prototype._handleG2PlotConfig = function () {\n        var fontSize = this.options.wordStyle.fontSize || [10, 60];\n        var rotation = this.options.wordStyle.rotation || [-Math.PI / 2, Math.PI / 2];\n        var active, shadowColor, shadowBlur;\n        if (this.options.wordStyle.active) {\n            active = true;\n            shadowColor = this.options.wordStyle.active.shadowColor || '#333';\n            shadowBlur = this.options.wordStyle.active.shadowBlur || 10;\n        }\n        else {\n            active = false;\n        }\n        this.options = deepMix({}, this.options, {\n            minFontSize: fontSize[0],\n            maxFontSize: fontSize[1],\n            minRotation: rotation[0],\n            maxRotation: rotation[1],\n            active: active,\n            shadowColor: shadowColor,\n            shadowBlur: shadowBlur,\n        });\n    };\n    WordCloudLayer.prototype._startWithMaskImage = function (image) {\n        var _a = this._scaleMaskImageCanvas(this._transformWhite2BlackPixels(image)), maskImageCanvas = _a.maskImageCanvas, maskImageContext = _a.maskImageContext;\n        /* Determine bgPixel by creating\n         another canvas and fill the specified background color. */\n        var bctx = document.createElement('canvas').getContext('2d');\n        bctx.fillStyle = this.options.backgroundColor || '#fff';\n        bctx.fillRect(0, 0, 1, 1);\n        var bgPixel = bctx.getImageData(0, 0, 1, 1).data;\n        var imageData = maskImageContext.getImageData(0, 0, maskImageCanvas.width, maskImageCanvas.height);\n        var newImageData = maskImageContext.createImageData(imageData);\n        for (var i = 0; i < imageData.data.length; i += 4) {\n            if (imageData.data[i + 3] > 128) {\n                // keep this area's data the same as pixel color\n                newImageData.data[i] = bgPixel[0];\n                newImageData.data[i + 1] = bgPixel[1];\n                newImageData.data[i + 2] = bgPixel[2];\n                newImageData.data[i + 3] = bgPixel[3];\n            }\n            else {\n                // This color must not be the same as the bgPixel.\n                // check wordcloud2.js#1192 's condition\n                newImageData.data[i] = bgPixel[0];\n                newImageData.data[i + 1] = bgPixel[1];\n                newImageData.data[i + 2] = bgPixel[2];\n                newImageData.data[i + 3] = 254; // just for not same as the bg color\n            }\n        }\n        maskImageContext.putImageData(newImageData, 0, 0);\n        var targetCtx = this._targetCanvas.getContext('2d');\n        targetCtx.drawImage(maskImageCanvas, 0, 0);\n        this.options = deepMix({}, this.options, { clearCanvas: false });\n        this._start();\n    };\n    WordCloudLayer.prototype._scaleMaskImageCanvas = function (maskImageCanvas) {\n        var maskCanvasScaled = document.createElement('canvas');\n        // get real canvas determined by pixelRatio\n        maskCanvasScaled.width = this.canvas.get('width');\n        maskCanvasScaled.height = this.canvas.get('height');\n        var ctx = maskCanvasScaled.getContext('2d');\n        // keep scale smooth\n        ctx.imageSmoothingEnabled = true;\n        // ctx.mozImageSmoothingEnabled = true;\n        // ctx.webkitImageSmoothingEnabled = true;\n        // ctx.msImageSmoothingEnabled = true;\n        ctx.drawImage(maskImageCanvas, 0, 0, maskImageCanvas.width, maskImageCanvas.height, 0, 0, maskCanvasScaled.width, maskCanvasScaled.height);\n        return {\n            maskImageCanvas: maskCanvasScaled,\n            maskImageContext: ctx,\n        };\n    };\n    WordCloudLayer.prototype._transformWhite2BlackPixels = function (image) {\n        var maskImageCanvas = document.createElement('canvas');\n        maskImageCanvas.width = image.width;\n        maskImageCanvas.height = image.height;\n        var ctx = maskImageCanvas.getContext('2d');\n        ctx.drawImage(image, 0, 0, image.width, image.height);\n        var imageData = ctx.getImageData(0, 0, maskImageCanvas.width, maskImageCanvas.height);\n        var SINGLE_COMPONENT_SIZE = 4;\n        var BLACK_PIXEL = 0;\n        var FULL_PIXEL = 255;\n        // R - G - B - A\n        for (var i = 0; i < imageData.data.length; i += SINGLE_COMPONENT_SIZE) {\n            var rgb = imageData.data[i] + imageData.data[i + 1] + imageData.data[i + 2];\n            var alpha = imageData.data[i + 3];\n            if (alpha < 128 || rgb > 250 * 3) {\n                // white area(not to draw)\n                imageData.data[i] = FULL_PIXEL;\n                imageData.data[i + 1] = FULL_PIXEL;\n                imageData.data[i + 2] = FULL_PIXEL;\n                imageData.data[i + 3] = BLACK_PIXEL;\n            }\n            else {\n                // black area wait to draw(image black silhouette)\n                imageData.data[i] = BLACK_PIXEL;\n                imageData.data[i + 1] = BLACK_PIXEL;\n                imageData.data[i + 2] = BLACK_PIXEL;\n                imageData.data[i + 3] = FULL_PIXEL;\n            }\n        }\n        ctx.putImageData(imageData, 0, 0);\n        return maskImageCanvas;\n    };\n    return WordCloudLayer;\n}(Layer));\nexport default WordCloudLayer;\n//# sourceMappingURL=layer.js.map"]}]}