{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/g2/lib/interaction/zoom.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/g2/lib/interaction/zoom.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _assertThisInitialized(self) { if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n} return self; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\nvar Util = require('../util');\nvar Interaction = require('./base');\nvar getColDef = require('./helper/get-col-def');\nvar getLimitRange = require('./helper/get-limit-range');\nvar ZOOMING_TYPES = ['X', 'Y', 'XY'];\nvar DEFAULT_TYPE = 'X';\nvar Zoom = function (_Interaction) {\n    _inheritsLoose(Zoom, _Interaction);\n    var _proto = Zoom.prototype;\n    _proto.getDefaultCfg = function getDefaultCfg() {\n        var cfg = _Interaction.prototype.getDefaultCfg.call(this);\n        return Util.mix({}, cfg, {\n            processEvent: 'mousewheel',\n            type: DEFAULT_TYPE,\n            stepRatio: 0.05,\n            stepByField: {},\n            minScale: 1,\n            maxScale: 4,\n            catStep: 2,\n            limitRange: {},\n            originScaleDefsByField: {}\n        });\n    };\n    function Zoom(cfg, chart) {\n        var _this;\n        _this = _Interaction.call(this, cfg, chart) || this;\n        var me = _assertThisInitialized(_this);\n        me.chart = chart;\n        me.type = me.type.toUpperCase();\n        var data = me.data = chart.get('data');\n        var scales = chart.getYScales();\n        var xScale = chart.getXScale();\n        scales.push(xScale);\n        var scaleController = chart.get('scaleController');\n        scales.forEach(function (scale) {\n            var field = scale.field;\n            var def = scaleController.defs[field] || {};\n            me.limitRange[field] = getLimitRange(data, scale);\n            me.originScaleDefsByField[field] = Util.mix(def, {\n                nice: !!def.nice\n            });\n            if (scale.isLinear) {\n                me.stepByField[field] = (scale.max - scale.min) * me.stepRatio;\n            }\n            else {\n                me.stepByField[field] = me.catStep;\n            }\n        });\n        if (!ZOOMING_TYPES.includes(me.type)) {\n            me.type = DEFAULT_TYPE;\n        }\n        return _this;\n    }\n    _proto._applyScale = function _applyScale(scale, delta, minOffset, center) {\n        if (minOffset === void 0) {\n            minOffset = 0;\n        }\n        var me = this;\n        var chart = me.chart, stepByField = me.stepByField;\n        if (scale.isLinear) {\n            var min = scale.min, max = scale.max, field = scale.field;\n            var maxOffset = 1 - minOffset;\n            var step = stepByField[field] * delta;\n            var newMin = min + step * minOffset;\n            var newMax = max - step * maxOffset;\n            if (newMax > newMin) {\n                var colDef = getColDef(chart, field);\n                chart.scale(field, Util.mix({}, colDef, {\n                    nice: false,\n                    min: newMin,\n                    max: newMax\n                }));\n            }\n        }\n        else {\n            var _field = scale.field, values = scale.values;\n            var _chart = me.chart;\n            var coord = _chart.get('coord');\n            var _colDef = getColDef(_chart, _field);\n            var originValues = me.limitRange[_field];\n            var originValuesLen = originValues.length;\n            var maxScale = me.maxScale;\n            var minScale = me.minScale;\n            var minCount = originValuesLen / maxScale;\n            var maxCount = originValuesLen / minScale;\n            var valuesLength = values.length;\n            var offsetPoint = coord.invertPoint(center);\n            var percent = offsetPoint.x;\n            var deltaCount = valuesLength - delta * this.catStep;\n            var minDelta = parseInt(deltaCount * percent);\n            var maxDelta = deltaCount + minDelta;\n            if (delta > 0 && valuesLength >= minCount) {\n                var _min = minDelta;\n                var _max = maxDelta;\n                if (maxDelta > valuesLength) {\n                    _max = valuesLength - 1;\n                    _min = valuesLength - deltaCount;\n                }\n                var newValues = values.slice(_min, _max);\n                _chart.scale(_field, Util.mix({}, _colDef, {\n                    values: newValues\n                }));\n            }\n            else if (delta < 0 && valuesLength <= maxCount) {\n                var firstIndex = originValues.indexOf(values[0]);\n                var lastIndex = originValues.indexOf(values[valuesLength - 1]);\n                var minIndex = Math.max(0, firstIndex - minDelta);\n                var maxIndex = Math.min(lastIndex + maxDelta, originValuesLen);\n                var _newValues = originValues.slice(minIndex, maxIndex);\n                _chart.scale(_field, Util.mix({}, _colDef, {\n                    values: _newValues\n                }));\n            }\n        }\n    };\n    _proto.process = function process(ev) {\n        var me = this;\n        var chart = me.chart, type = me.type;\n        var coord = chart.get('coord');\n        var deltaY = ev.deltaY;\n        var offsetPoint = coord.invertPoint(ev);\n        if (deltaY) {\n            me.onZoom && me.onZoom(deltaY, offsetPoint, me);\n            if (deltaY > 0) {\n                me.onZoomin && me.onZoomin(deltaY, offsetPoint, me);\n            }\n            else {\n                me.onZoomout && me.onZoomout(deltaY, offsetPoint, me);\n            }\n            var delta = deltaY / Math.abs(deltaY);\n            if (type.indexOf('X') > -1) {\n                me._applyScale(chart.getXScale(), delta, offsetPoint.x, ev);\n            }\n            if (type.indexOf('Y') > -1) {\n                var yScales = chart.getYScales();\n                yScales.forEach(function (yScale) {\n                    me._applyScale(yScale, delta, offsetPoint.y, ev);\n                });\n            }\n        }\n        chart.repaint();\n    };\n    _proto.reset = function reset() {\n        var me = this;\n        var view = me.view, originScaleDefsByField = me.originScaleDefsByField;\n        var scales = view.getYScales();\n        var xScale = view.getXScale();\n        scales.push(xScale);\n        scales.forEach(function (scale) {\n            if (scale.isLinear) {\n                var field = scale.field;\n                view.scale(field, originScaleDefsByField[field]);\n            }\n        });\n        view.repaint();\n    };\n    return Zoom;\n}(Interaction);\nmodule.exports = Zoom;\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/g2/lib/interaction/zoom.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/g2/lib/interaction/zoom.js"],"names":[],"mappings":"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","sourcesContent":["function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar Util = require('../util');\n\nvar Interaction = require('./base');\n\nvar getColDef = require('./helper/get-col-def');\n\nvar getLimitRange = require('./helper/get-limit-range');\n\nvar ZOOMING_TYPES = ['X', 'Y', 'XY'];\nvar DEFAULT_TYPE = 'X';\n\nvar Zoom = /*#__PURE__*/function (_Interaction) {\n  _inheritsLoose(Zoom, _Interaction);\n\n  var _proto = Zoom.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Interaction.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      processEvent: 'mousewheel',\n      type: DEFAULT_TYPE,\n      stepRatio: 0.05,\n      stepByField: {},\n      minScale: 1,\n      maxScale: 4,\n      catStep: 2,\n      limitRange: {},\n      originScaleDefsByField: {}\n    });\n  };\n\n  function Zoom(cfg, chart) {\n    var _this;\n\n    _this = _Interaction.call(this, cfg, chart) || this;\n\n    var me = _assertThisInitialized(_this);\n\n    me.chart = chart;\n    me.type = me.type.toUpperCase();\n    var data = me.data = chart.get('data');\n    var scales = chart.getYScales();\n    var xScale = chart.getXScale();\n    scales.push(xScale);\n    var scaleController = chart.get('scaleController');\n    scales.forEach(function (scale) {\n      var field = scale.field;\n      var def = scaleController.defs[field] || {};\n      me.limitRange[field] = getLimitRange(data, scale);\n      me.originScaleDefsByField[field] = Util.mix(def, {\n        nice: !!def.nice\n      });\n\n      if (scale.isLinear) {\n        me.stepByField[field] = (scale.max - scale.min) * me.stepRatio;\n      } else {\n        me.stepByField[field] = me.catStep;\n      }\n    });\n\n    if (!ZOOMING_TYPES.includes(me.type)) {\n      me.type = DEFAULT_TYPE;\n    }\n\n    return _this;\n  } // onZoom() { }\n  // onZoomin() { }\n  // onZoomout() { }\n\n\n  _proto._applyScale = function _applyScale(scale, delta, minOffset, center) {\n    if (minOffset === void 0) {\n      minOffset = 0;\n    }\n\n    var me = this;\n    var chart = me.chart,\n        stepByField = me.stepByField;\n\n    if (scale.isLinear) {\n      var min = scale.min,\n          max = scale.max,\n          field = scale.field;\n      var maxOffset = 1 - minOffset;\n      var step = stepByField[field] * delta;\n      var newMin = min + step * minOffset;\n      var newMax = max - step * maxOffset;\n\n      if (newMax > newMin) {\n        var colDef = getColDef(chart, field); // @2019-02-28 by blue.lb 这里需要将原始scale的配置整合新算出的最大及最小值\n\n        chart.scale(field, Util.mix({}, colDef, {\n          nice: false,\n          min: newMin,\n          max: newMax\n        }));\n      }\n    } else {\n      var _field = scale.field,\n          values = scale.values;\n      var _chart = me.chart;\n\n      var coord = _chart.get('coord');\n\n      var _colDef = getColDef(_chart, _field);\n\n      var originValues = me.limitRange[_field];\n      var originValuesLen = originValues.length;\n      var maxScale = me.maxScale;\n      var minScale = me.minScale;\n      var minCount = originValuesLen / maxScale;\n      var maxCount = originValuesLen / minScale;\n      var valuesLength = values.length;\n      var offsetPoint = coord.invertPoint(center);\n      var percent = offsetPoint.x;\n      var deltaCount = valuesLength - delta * this.catStep;\n      var minDelta = parseInt(deltaCount * percent);\n      var maxDelta = deltaCount + minDelta;\n\n      if (delta > 0 && valuesLength >= minCount) {\n        // zoom out\n        var _min = minDelta;\n        var _max = maxDelta;\n\n        if (maxDelta > valuesLength) {\n          _max = valuesLength - 1;\n          _min = valuesLength - deltaCount;\n        }\n\n        var newValues = values.slice(_min, _max);\n\n        _chart.scale(_field, Util.mix({}, _colDef, {\n          values: newValues\n        }));\n      } else if (delta < 0 && valuesLength <= maxCount) {\n        // zoom in\n        var firstIndex = originValues.indexOf(values[0]);\n        var lastIndex = originValues.indexOf(values[valuesLength - 1]);\n        var minIndex = Math.max(0, firstIndex - minDelta);\n        var maxIndex = Math.min(lastIndex + maxDelta, originValuesLen);\n\n        var _newValues = originValues.slice(minIndex, maxIndex);\n\n        _chart.scale(_field, Util.mix({}, _colDef, {\n          values: _newValues\n        }));\n      }\n    }\n  };\n\n  _proto.process = function process(ev) {\n    var me = this;\n    var chart = me.chart,\n        type = me.type;\n    var coord = chart.get('coord');\n    var deltaY = ev.deltaY;\n    var offsetPoint = coord.invertPoint(ev);\n\n    if (deltaY) {\n      me.onZoom && me.onZoom(deltaY, offsetPoint, me);\n\n      if (deltaY > 0) {\n        me.onZoomin && me.onZoomin(deltaY, offsetPoint, me);\n      } else {\n        me.onZoomout && me.onZoomout(deltaY, offsetPoint, me);\n      }\n\n      var delta = deltaY / Math.abs(deltaY);\n\n      if (type.indexOf('X') > -1) {\n        me._applyScale(chart.getXScale(), delta, offsetPoint.x, ev);\n      }\n\n      if (type.indexOf('Y') > -1) {\n        var yScales = chart.getYScales();\n        yScales.forEach(function (yScale) {\n          me._applyScale(yScale, delta, offsetPoint.y, ev);\n        });\n      }\n    }\n\n    chart.repaint();\n  };\n\n  _proto.reset = function reset() {\n    var me = this;\n    var view = me.view,\n        originScaleDefsByField = me.originScaleDefsByField;\n    var scales = view.getYScales();\n    var xScale = view.getXScale();\n    scales.push(xScale);\n    scales.forEach(function (scale) {\n      if (scale.isLinear) {\n        var field = scale.field;\n        view.scale(field, originScaleDefsByField[field]);\n      }\n    });\n    view.repaint();\n  };\n\n  return Zoom;\n}(Interaction); // G2.registerInteraction('zoom', Zoom);\n// G2.registerInteraction('Zoom', Zoom);\n\n\nmodule.exports = Zoom;"]}]}