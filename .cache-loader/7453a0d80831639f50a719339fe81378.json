{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\geom\\label\\geom-labels.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\geom\\label\\geom-labels.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\r\nvar _require = require('../../renderer'), Group = _require.Group;\r\nvar _require2 = require('@antv/component/lib'), Label = _require2.Label;\r\nvar Global = require('../../global');\r\nvar Util = require('../../util');\r\nvar IGNORE_ARR = ['line', 'point', 'path'];\r\nvar ORIGIN = '_origin';\r\nfunction avg(arr) {\r\n    var sum = 0;\r\n    Util.each(arr, function (value) {\r\n        sum += value;\r\n    });\r\n    return sum / arr.length;\r\n}\r\nfunction getCentroid(xs, ys) {\r\n    var i = -1, x = 0, y = 0;\r\n    var former, current = xs.length - 1;\r\n    var diff, k = 0;\r\n    while (++i < xs.length) {\r\n        former = current;\r\n        current = i;\r\n        k += diff = xs[former] * ys[current] - xs[current] * ys[former];\r\n        x += (xs[former] + xs[current]) * diff;\r\n        y += (ys[former] + ys[current]) * diff;\r\n    }\r\n    k *= 3;\r\n    return [x / k, y / k];\r\n}\r\nvar GeomLabels = function (_Group) {\r\n    _inheritsLoose(GeomLabels, _Group);\r\n    function GeomLabels() {\r\n        return _Group.apply(this, arguments) || this;\r\n    }\r\n    var _proto = GeomLabels.prototype;\r\n    _proto.getDefaultCfg = function getDefaultCfg() {\r\n        return {\r\n            label: Global.label,\r\n            labelCfg: null,\r\n            coord: null,\r\n            geomType: null,\r\n            zIndex: 6\r\n        };\r\n    };\r\n    _proto._renderUI = function _renderUI() {\r\n        _Group.prototype._renderUI.call(this);\r\n        this.initLabelsCfg();\r\n        var labelsGroup = this.addGroup();\r\n        var lineGroup = this.addGroup({\r\n            elCls: 'x-line-group'\r\n        });\r\n        var labelRenderer = this.get('labelRenderer');\r\n        this.set('labelsGroup', labelsGroup);\r\n        this.set('lineGroup', lineGroup);\r\n        this.get('labelRenderer').set('group', labelsGroup);\r\n        labelRenderer.set('group', labelsGroup);\r\n        labelRenderer.set('lineGroup', lineGroup);\r\n    };\r\n    _proto.initLabelsCfg = function initLabelsCfg() {\r\n        var self = this;\r\n        var labelRenderer = new Label();\r\n        var labels = self.getDefaultLabelCfg();\r\n        var labelCfg = self.get('labelCfg');\r\n        Util.deepMix(labels, labelCfg.globalCfg || labelCfg.cfg);\r\n        labelRenderer.set('labelCfg', labels);\r\n        if (labels.labelLine) {\r\n            labelRenderer.set('labelLine', labels.labelLine);\r\n        }\r\n        labelRenderer.set('coord', self.get('coord'));\r\n        this.set('labelRenderer', labelRenderer);\r\n        self.set('label', labels);\r\n    };\r\n    _proto.getDefaultLabelCfg = function getDefaultLabelCfg() {\r\n        var self = this;\r\n        var labelCfg = self.get('labelCfg').cfg;\r\n        var geomType = self.get('geomType');\r\n        var viewTheme = self.get('viewTheme') || Global;\r\n        if (geomType === 'polygon' || labelCfg && labelCfg.offset < 0 && Util.indexOf(IGNORE_ARR, geomType) === -1) {\r\n            return Util.deepMix({}, self.get('label'), viewTheme.innerLabels);\r\n        }\r\n        return Util.deepMix({}, viewTheme.label, self.get('label'));\r\n    };\r\n    _proto.getLabelsItems = function getLabelsItems(points, shapes) {\r\n        var self = this;\r\n        var items = [];\r\n        var geom = self.get('geom');\r\n        var coord = self.get('coord');\r\n        self._getLabelCfgs(points, shapes);\r\n        var labelCfg = self.get('labelItemCfgs');\r\n        Util.each(points, function (point, i) {\r\n            var origin = point[ORIGIN];\r\n            var label = labelCfg[i];\r\n            if (!label) {\r\n                items.push(null);\r\n                return;\r\n            }\r\n            if (!Util.isArray(label.text)) {\r\n                label.text = [label.text];\r\n            }\r\n            var total = label.length;\r\n            Util.each(label.text, function (sub, subIndex) {\r\n                if (Util.isNil(sub) || sub === '') {\r\n                    items.push(null);\r\n                    return;\r\n                }\r\n                var obj = self.getLabelPoint(label, point, subIndex);\r\n                obj = Util.mix({}, label, obj);\r\n                if (!obj.textAlign) {\r\n                    obj.textAlign = self.getLabelAlign(obj, subIndex, total);\r\n                }\r\n                if (geom) {\r\n                    obj._id = geom._getShapeId(origin) + '-glabel-' + subIndex + '-' + obj.text;\r\n                }\r\n                obj.coord = coord;\r\n                items.push(obj);\r\n            });\r\n        });\r\n        return items;\r\n    };\r\n    _proto.adjustItems = function adjustItems(items) {\r\n        return items;\r\n    };\r\n    _proto.drawLines = function drawLines(items) {\r\n        var self = this;\r\n        Util.each(items, function (point) {\r\n            if (!point) {\r\n                return;\r\n            }\r\n            if (point._offset[0] > 0 || point._offset[1] > 0) {\r\n                self.lineToLabel(point);\r\n            }\r\n        });\r\n    };\r\n    _proto.lineToLabel = function lineToLabel() { };\r\n    _proto.getLabelPoint = function getLabelPoint(labelCfg, point, index) {\r\n        var self = this;\r\n        var coord = self.get('coord');\r\n        var total = labelCfg.text.length;\r\n        function getDimValue(value, idx) {\r\n            if (Util.isArray(value)) {\r\n                if (labelCfg.text.length === 1) {\r\n                    if (value.length <= 2) {\r\n                        value = value[value.length - 1];\r\n                    }\r\n                    else {\r\n                        value = avg(value);\r\n                    }\r\n                }\r\n                else {\r\n                    value = value[idx];\r\n                }\r\n            }\r\n            return value;\r\n        }\r\n        var label = {\r\n            text: labelCfg.text[index]\r\n        };\r\n        if (point && this.get('geomType') === 'polygon') {\r\n            var centroid = getCentroid(point.x, point.y);\r\n            label.x = centroid[0];\r\n            label.y = centroid[1];\r\n        }\r\n        else {\r\n            label.x = getDimValue(point.x, index);\r\n            label.y = getDimValue(point.y, index);\r\n        }\r\n        if (point && point.nextPoints && (point.shape === 'funnel' || point.shape === 'pyramid')) {\r\n            var maxX = -Infinity;\r\n            point.nextPoints.forEach(function (p) {\r\n                p = coord.convert(p);\r\n                if (p.x > maxX) {\r\n                    maxX = p.x;\r\n                }\r\n            });\r\n            label.x = (label.x + maxX) / 2;\r\n        }\r\n        if (point.shape === 'pyramid' && !point.nextPoints && point.points) {\r\n            point.points.forEach(function (p) {\r\n                p = coord.convert(p);\r\n                if (Util.isArray(p.x) && point.x.indexOf(p.x) === -1 || Util.isNumber(p.x) && point.x !== p.x) {\r\n                    label.x = (label.x + p.x) / 2;\r\n                }\r\n            });\r\n        }\r\n        if (labelCfg.position) {\r\n            self.setLabelPosition(label, point, index, labelCfg.position);\r\n        }\r\n        var offsetPoint = self.getLabelOffset(labelCfg, index, total);\r\n        self.transLabelPoint(label);\r\n        label.x += offsetPoint[0];\r\n        label.y += offsetPoint[1];\r\n        label.color = point.color;\r\n        label._offset = {\r\n            x: offsetPoint[0],\r\n            y: offsetPoint[1]\r\n        };\r\n        return label;\r\n    };\r\n    _proto.setLabelPosition = function setLabelPosition() { };\r\n    _proto.transLabelPoint = function transLabelPoint(point) {\r\n        var self = this;\r\n        var coord = self.get('coord');\r\n        var tmpPoint = coord.applyMatrix(point.x, point.y, 1);\r\n        point.x = tmpPoint[0];\r\n        point.y = tmpPoint[1];\r\n    };\r\n    _proto.getDefaultOffset = function getDefaultOffset(point) {\r\n        var offset = point.offset || [0, 0];\r\n        var coord = this.get('coord');\r\n        var vector;\r\n        if (coord.isTransposed) {\r\n            vector = coord.applyMatrix(offset[1], offset[0]);\r\n        }\r\n        else {\r\n            vector = coord.applyMatrix(offset[0], offset[1]);\r\n        }\r\n        return [vector[0], vector[1]];\r\n    };\r\n    _proto.getLabelOffset = function getLabelOffset(point, index, total) {\r\n        var self = this;\r\n        var offset = self.getDefaultOffset(point);\r\n        var coord = self.get('coord');\r\n        var transposed = coord.isTransposed;\r\n        var factor = transposed ? 1 : -1;\r\n        var offsetPoint = {\r\n            x: 0,\r\n            y: 0\r\n        };\r\n        if (index <= 0 && total !== 1) {\r\n            factor *= -1;\r\n        }\r\n        offsetPoint.x = offset[0] * factor;\r\n        offsetPoint.y = offset[1] * factor;\r\n        return [offsetPoint.x, offsetPoint.y];\r\n    };\r\n    _proto.getLabelAlign = function getLabelAlign(point, index, total) {\r\n        var self = this;\r\n        var align = 'center';\r\n        var coord = self.get('coord');\r\n        if (coord.isTransposed) {\r\n            var offset = point._offset;\r\n            if (offset[0] < 0) {\r\n                align = 'right';\r\n            }\r\n            else if (offset[0] === 0) {\r\n                align = 'center';\r\n            }\r\n            else {\r\n                align = 'left';\r\n            }\r\n            if (total > 1 && index === 0) {\r\n                if (align === 'right') {\r\n                    align = 'left';\r\n                }\r\n                else if (align === 'left') {\r\n                    align = 'right';\r\n                }\r\n            }\r\n        }\r\n        return align;\r\n    };\r\n    _proto._getLabelValue = function _getLabelValue(origin, scales) {\r\n        if (!Util.isArray(scales)) {\r\n            scales = [scales];\r\n        }\r\n        var text = [];\r\n        Util.each(scales, function (scale) {\r\n            var value = origin[scale.field];\r\n            if (Util.isArray(value)) {\r\n                var tmp = [];\r\n                Util.each(value, function (subVal) {\r\n                    tmp.push(scale.getText(subVal));\r\n                });\r\n                value = tmp;\r\n            }\r\n            else {\r\n                value = scale.getText(value);\r\n            }\r\n            if (Util.isNil(value) || value === '') {\r\n                text.push(null);\r\n            }\r\n            text.push(value);\r\n        });\r\n        return text;\r\n    };\r\n    _proto._getLabelCfgs = function _getLabelCfgs(points) {\r\n        var self = this;\r\n        var labelCfg = this.get('labelCfg');\r\n        var scales = labelCfg.scales;\r\n        var defaultCfg = this.get('label');\r\n        var cfgs = [];\r\n        if (labelCfg.globalCfg && labelCfg.globalCfg.type) {\r\n            self.set('type', labelCfg.globalCfg.type);\r\n        }\r\n        Util.each(points, function (point, i) {\r\n            var cfg = {};\r\n            var origin = point[ORIGIN];\r\n            var originText = self._getLabelValue(origin, scales);\r\n            if (labelCfg.callback) {\r\n                var originValues = scales.map(function (scale) {\r\n                    return origin[scale.field];\r\n                });\r\n                cfg = labelCfg.callback.apply(null, originValues);\r\n            }\r\n            if (!cfg && cfg !== 0) {\r\n                cfgs.push(null);\r\n                return;\r\n            }\r\n            if (Util.isString(cfg) || Util.isNumber(cfg)) {\r\n                cfg = {\r\n                    text: cfg\r\n                };\r\n            }\r\n            else {\r\n                cfg.text = originText[0];\r\n            }\r\n            cfg = Util.mix({}, defaultCfg, labelCfg.globalCfg || {}, cfg);\r\n            point.point = origin;\r\n            if (cfg.htmlTemplate) {\r\n                cfg.text = cfg.htmlTemplate.call(null, cfg.text, point, i);\r\n                delete cfg.htmlTemplate;\r\n            }\r\n            if (cfg.formatter) {\r\n                cfg.text = cfg.formatter.call(null, cfg.text, point, i);\r\n                delete cfg.formatter;\r\n            }\r\n            if (cfg.label) {\r\n                var label = cfg.label;\r\n                delete cfg.label;\r\n                cfg = Util.mix(cfg, label);\r\n            }\r\n            if (cfg.textStyle) {\r\n                delete cfg.textStyle.offset;\r\n                var textStyle = cfg.textStyle;\r\n                if (Util.isFunction(textStyle)) {\r\n                    cfg.textStyle = textStyle.call(null, originText, origin, i);\r\n                }\r\n            }\r\n            var offset = cfg.offset || [0, 0];\r\n            if (!Util.isArray(offset)) {\r\n                offset = [0, offset];\r\n            }\r\n            if (cfg.labelLine) {\r\n                cfg.labelLine = Util.mix({}, defaultCfg.labelLine, cfg.labelLine);\r\n            }\r\n            cfg.textStyle = Util.mix({}, defaultCfg.textStyle, cfg.textStyle);\r\n            cfg.offset = offset;\r\n            delete cfg.items;\r\n            cfgs.push(cfg);\r\n        });\r\n        this.set('labelItemCfgs', cfgs);\r\n    };\r\n    _proto.showLabels = function showLabels(points, shapes) {\r\n        var self = this;\r\n        var labelRenderer = self.get('labelRenderer');\r\n        var items = self.getLabelsItems(points, shapes);\r\n        shapes = [].concat(shapes);\r\n        var type = self.get('type');\r\n        items = self.adjustItems(items, shapes);\r\n        self.drawLines(items);\r\n        labelRenderer.set('items', items.filter(function (item, i) {\r\n            if (!item) {\r\n                shapes.splice(i, 1);\r\n                return false;\r\n            }\r\n            return true;\r\n        }));\r\n        if (type) {\r\n            labelRenderer.set('shapes', shapes);\r\n            labelRenderer.set('type', type);\r\n            labelRenderer.set('points', points);\r\n        }\r\n        labelRenderer.set('canvas', this.get('canvas'));\r\n        labelRenderer.draw();\r\n    };\r\n    _proto.destroy = function destroy() {\r\n        this.get('labelRenderer').destroy();\r\n        _Group.prototype.destroy.call(this);\r\n    };\r\n    return GeomLabels;\r\n}(Group);\r\nmodule.exports = GeomLabels;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\geom\\label\\geom-labels.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\geom\\label\\geom-labels.js"],"names":[],"mappings":"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","sourcesContent":["function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar _require = require('../../renderer'),\n    Group = _require.Group;\n\nvar _require2 = require('@antv/component/lib'),\n    Label = _require2.Label; // const visualCenter = require('@antv/component/lib/label/utils/visual-center');\n\n\nvar Global = require('../../global');\n\nvar Util = require('../../util');\n\nvar IGNORE_ARR = ['line', 'point', 'path'];\nvar ORIGIN = '_origin';\n\nfunction avg(arr) {\n  var sum = 0;\n  Util.each(arr, function (value) {\n    sum += value;\n  });\n  return sum / arr.length;\n} // 计算多边形重心: https://en.wikipedia.org/wiki/Centroid#Of_a_polygon\n\n\nfunction getCentroid(xs, ys) {\n  var i = -1,\n      x = 0,\n      y = 0;\n  var former,\n      current = xs.length - 1;\n  var diff,\n      k = 0;\n\n  while (++i < xs.length) {\n    former = current;\n    current = i;\n    k += diff = xs[former] * ys[current] - xs[current] * ys[former];\n    x += (xs[former] + xs[current]) * diff;\n    y += (ys[former] + ys[current]) * diff;\n  }\n\n  k *= 3;\n  return [x / k, y / k];\n}\n\nvar GeomLabels =\n/*#__PURE__*/\nfunction (_Group) {\n  _inheritsLoose(GeomLabels, _Group);\n\n  function GeomLabels() {\n    return _Group.apply(this, arguments) || this;\n  }\n\n  var _proto = GeomLabels.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    return {\n      label: Global.label,\n\n      /**\n       * 用户传入的文本配置信息\n       * @type {Object}\n       */\n      labelCfg: null,\n\n      /**\n       * 所在的坐标系\n       * @type {Object}\n       */\n      coord: null,\n\n      /**\n       * 图表的类型\n       * @type {String}\n       */\n      geomType: null,\n      zIndex: 6\n    };\n  };\n\n  _proto._renderUI = function _renderUI() {\n    _Group.prototype._renderUI.call(this);\n\n    this.initLabelsCfg();\n    var labelsGroup = this.addGroup();\n    var lineGroup = this.addGroup({\n      elCls: 'x-line-group'\n    });\n    var labelRenderer = this.get('labelRenderer');\n    this.set('labelsGroup', labelsGroup);\n    this.set('lineGroup', lineGroup);\n    this.get('labelRenderer').set('group', labelsGroup);\n    labelRenderer.set('group', labelsGroup);\n    labelRenderer.set('lineGroup', lineGroup);\n  }; // 初始化labels的配置项\n\n\n  _proto.initLabelsCfg = function initLabelsCfg() {\n    var self = this;\n    var labelRenderer = new Label();\n    var labels = self.getDefaultLabelCfg();\n    var labelCfg = self.get('labelCfg'); // Util.merge(labels, labelCfg.cfg);\n\n    Util.deepMix(labels, labelCfg.globalCfg || labelCfg.cfg);\n    labelRenderer.set('labelCfg', labels);\n\n    if (labels.labelLine) {\n      labelRenderer.set('labelLine', labels.labelLine);\n    }\n\n    labelRenderer.set('coord', self.get('coord'));\n    this.set('labelRenderer', labelRenderer);\n    self.set('label', labels);\n  };\n  /**\n   * @protected\n   * 默认的文本样式\n   * @return {Object} default label config\n   */\n\n\n  _proto.getDefaultLabelCfg = function getDefaultLabelCfg() {\n    var self = this;\n    var labelCfg = self.get('labelCfg').cfg;\n    var geomType = self.get('geomType');\n    var viewTheme = self.get('viewTheme') || Global;\n\n    if (geomType === 'polygon' || labelCfg && labelCfg.offset < 0 && Util.indexOf(IGNORE_ARR, geomType) === -1) {\n      return Util.deepMix({}, self.get('label'), viewTheme.innerLabels);\n    }\n\n    return Util.deepMix({}, viewTheme.label, self.get('label'));\n  };\n  /**\n   * @protected\n   * 获取labels\n   * @param {Array} points points\n   * @param {Array} shapes shapes\n   * @return {Array} label items\n   */\n\n\n  _proto.getLabelsItems = function getLabelsItems(points, shapes) {\n    var self = this;\n    var items = [];\n    var geom = self.get('geom');\n    var coord = self.get('coord');\n\n    self._getLabelCfgs(points, shapes);\n\n    var labelCfg = self.get('labelItemCfgs'); // 获取label相关的x，y的值，获取具体的x,y,防止存在数组\n\n    Util.each(points, function (point, i) {\n      var origin = point[ORIGIN];\n      var label = labelCfg[i];\n\n      if (!label) {\n        items.push(null);\n        return;\n      }\n\n      if (!Util.isArray(label.text)) {\n        label.text = [label.text];\n      }\n\n      var total = label.length;\n      Util.each(label.text, function (sub, subIndex) {\n        if (Util.isNil(sub) || sub === '') {\n          items.push(null);\n          return;\n        }\n\n        var obj = self.getLabelPoint(label, point, subIndex);\n        obj = Util.mix({}, label, obj);\n\n        if (!obj.textAlign) {\n          obj.textAlign = self.getLabelAlign(obj, subIndex, total);\n        }\n\n        if (geom) {\n          obj._id = geom._getShapeId(origin) + '-glabel-' + subIndex + '-' + obj.text;\n        }\n\n        obj.coord = coord;\n        items.push(obj);\n      });\n    });\n    return items;\n  };\n  /* /!*\n   * @protected\n   * 如果发生冲突则会调整文本的位置\n   * @param {Array} items 文本的集合\n   * @param {Array} shapes 关联形状\n   * @return {Array} adjusted items\n   *!/\n  adjustItems(items, shapes) {\n    // 多边形shape的label位于其可视中心\n    if (this.get('geomType') === 'polygon') {\n      let index,\n        shape,\n        path,\n        center,\n        points;\n      Util.each(items, (item, i) => {\n        if (!item) return;\n        shape = shapes[ i ];\n        path = shape.attr('path');\n        points = [[]];\n        index = 0;\n        path.forEach((segment, i) => {\n          if (segment[ 0 ] === 'z' || segment[ 0 ] === 'Z' && i !== path.length - 1) {\n            points.push([]);\n            index += 1;\n          }\n          if (segment.length === 3) {\n            points[ index ].push([ segment[ 1 ], segment[ 2 ] ]);\n          }\n        });\n        center = visualCenter(points);\n        item.x = center.x;\n        item.y = center.y;\n      });\n    }\n    return items;\n  }\n  */\n\n\n  _proto.adjustItems = function adjustItems(items) {\n    return items;\n  };\n  /**\n   * drawing lines to labels\n   * @param  {Array} items labels\n   * @param  {Object} labelLine configuration for label lines\n   */\n\n\n  _proto.drawLines = function drawLines(items) {\n    var self = this;\n    Util.each(items, function (point) {\n      if (!point) {\n        return;\n      }\n\n      if (point._offset[0] > 0 || point._offset[1] > 0) {\n        self.lineToLabel(point);\n      }\n    });\n  }; // 定义连接线\n\n\n  _proto.lineToLabel = function lineToLabel() {};\n  /**\n   * @protected\n   * 获取文本的位置信息\n   * @param {Array} labelCfg labels\n   * @param {Object} point point\n   * @param {Number} index index\n   * @return {Object} point\n   */\n\n\n  _proto.getLabelPoint = function getLabelPoint(labelCfg, point, index) {\n    var self = this;\n    var coord = self.get('coord');\n    var total = labelCfg.text.length;\n\n    function getDimValue(value, idx) {\n      if (Util.isArray(value)) {\n        if (labelCfg.text.length === 1) {\n          // 如果仅一个label,多个y,取最后一个y\n          if (value.length <= 2) {\n            value = value[value.length - 1]; // value = value[0];\n          } else {\n            value = avg(value);\n          }\n        } else {\n          value = value[idx];\n        }\n      }\n\n      return value;\n    }\n\n    var label = {\n      text: labelCfg.text[index]\n    }; // 多边形场景,多用于地图\n\n    if (point && this.get('geomType') === 'polygon') {\n      var centroid = getCentroid(point.x, point.y);\n      label.x = centroid[0];\n      label.y = centroid[1];\n    } else {\n      label.x = getDimValue(point.x, index);\n      label.y = getDimValue(point.y, index);\n    } // get nearest point of the shape as the label line start point\n\n\n    if (point && point.nextPoints && (point.shape === 'funnel' || point.shape === 'pyramid')) {\n      var maxX = -Infinity;\n      point.nextPoints.forEach(function (p) {\n        p = coord.convert(p);\n\n        if (p.x > maxX) {\n          maxX = p.x;\n        }\n      });\n      label.x = (label.x + maxX) / 2;\n    } // sharp edge of the pyramid\n\n\n    if (point.shape === 'pyramid' && !point.nextPoints && point.points) {\n      point.points.forEach(function (p) {\n        p = coord.convert(p);\n\n        if (Util.isArray(p.x) && point.x.indexOf(p.x) === -1 || Util.isNumber(p.x) && point.x !== p.x) {\n          label.x = (label.x + p.x) / 2;\n        }\n      });\n    }\n\n    if (labelCfg.position) {\n      self.setLabelPosition(label, point, index, labelCfg.position);\n    }\n\n    var offsetPoint = self.getLabelOffset(labelCfg, index, total);\n    self.transLabelPoint(label);\n    label.x += offsetPoint[0];\n    label.y += offsetPoint[1];\n    label.color = point.color;\n    label._offset = {\n      x: offsetPoint[0],\n      y: offsetPoint[1]\n    };\n    return label;\n  };\n\n  _proto.setLabelPosition = function setLabelPosition() {};\n\n  _proto.transLabelPoint = function transLabelPoint(point) {\n    var self = this;\n    var coord = self.get('coord');\n    var tmpPoint = coord.applyMatrix(point.x, point.y, 1);\n    point.x = tmpPoint[0];\n    point.y = tmpPoint[1];\n  }; // 获取默认的偏移量\n\n\n  _proto.getDefaultOffset = function getDefaultOffset(point) {\n    var offset = point.offset || [0, 0];\n    var coord = this.get('coord');\n    var vector;\n\n    if (coord.isTransposed) {\n      vector = coord.applyMatrix(offset[1], offset[0]);\n    } else {\n      vector = coord.applyMatrix(offset[0], offset[1]);\n    }\n\n    return [vector[0], vector[1]];\n  }; // 获取文本的偏移位置，x,y\n\n\n  _proto.getLabelOffset = function getLabelOffset(point, index, total) {\n    var self = this;\n    var offset = self.getDefaultOffset(point);\n    var coord = self.get('coord');\n    var transposed = coord.isTransposed;\n    var factor = transposed ? 1 : -1; // y 方向上越大，像素的坐标越小\n\n    var offsetPoint = {\n      x: 0,\n      y: 0\n    }; // 一个shape对应多个label时，第二个label的offset与第一个相反\n\n    if (index <= 0 && total !== 1) {\n      factor *= -1;\n    }\n\n    offsetPoint.x = offset[0] * factor;\n    offsetPoint.y = offset[1] * factor;\n    return [offsetPoint.x, offsetPoint.y];\n  };\n\n  _proto.getLabelAlign = function getLabelAlign(point, index, total) {\n    var self = this;\n    var align = 'center';\n    var coord = self.get('coord');\n\n    if (coord.isTransposed) {\n      var offset = point._offset; // var vector = coord.applyMatrix(offset,0);\n\n      if (offset[0] < 0) {\n        align = 'right';\n      } else if (offset[0] === 0) {\n        align = 'center';\n      } else {\n        align = 'left';\n      }\n\n      if (total > 1 && index === 0) {\n        if (align === 'right') {\n          align = 'left';\n        } else if (align === 'left') {\n          align = 'right';\n        }\n      }\n    }\n\n    return align;\n  };\n\n  _proto._getLabelValue = function _getLabelValue(origin, scales) {\n    if (!Util.isArray(scales)) {\n      scales = [scales];\n    }\n\n    var text = [];\n    Util.each(scales, function (scale) {\n      var value = origin[scale.field];\n\n      if (Util.isArray(value)) {\n        var tmp = [];\n        Util.each(value, function (subVal) {\n          tmp.push(scale.getText(subVal));\n        });\n        value = tmp;\n      } else {\n        value = scale.getText(value);\n      }\n\n      if (Util.isNil(value) || value === '') {\n        text.push(null);\n      }\n\n      text.push(value);\n    });\n    return text;\n  }; // 获取每个label的配置\n\n\n  _proto._getLabelCfgs = function _getLabelCfgs(points) {\n    var self = this;\n    var labelCfg = this.get('labelCfg');\n    var scales = labelCfg.scales;\n    var defaultCfg = this.get('label');\n    var cfgs = [];\n\n    if (labelCfg.globalCfg && labelCfg.globalCfg.type) {\n      self.set('type', labelCfg.globalCfg.type);\n    }\n\n    Util.each(points, function (point, i) {\n      var cfg = {};\n      var origin = point[ORIGIN];\n\n      var originText = self._getLabelValue(origin, scales);\n\n      if (labelCfg.callback) {\n        // callback中应使用原始数据，而不是数据字符串\n        var originValues = scales.map(function (scale) {\n          return origin[scale.field];\n        });\n        cfg = labelCfg.callback.apply(null, originValues);\n      }\n\n      if (!cfg && cfg !== 0) {\n        cfgs.push(null);\n        return;\n      }\n\n      if (Util.isString(cfg) || Util.isNumber(cfg)) {\n        cfg = {\n          text: cfg\n        };\n      } else {\n        cfg.text = originText[0];\n      }\n\n      cfg = Util.mix({}, defaultCfg, labelCfg.globalCfg || {}, cfg); // 兼容旧的源数据写在item.point中\n\n      point.point = origin;\n\n      if (cfg.htmlTemplate) {\n        cfg.text = cfg.htmlTemplate.call(null, cfg.text, point, i);\n        delete cfg.htmlTemplate;\n      }\n\n      if (cfg.formatter) {\n        cfg.text = cfg.formatter.call(null, cfg.text, point, i);\n        delete cfg.formatter;\n      }\n\n      if (cfg.label) {\n        // 兼容有些直接写在labelCfg.label的配置\n        var label = cfg.label;\n        delete cfg.label;\n        cfg = Util.mix(cfg, label);\n      }\n\n      if (cfg.textStyle) {\n        // 兼容旧写法，globalCfg的offset优先级高\n        delete cfg.textStyle.offset;\n        var textStyle = cfg.textStyle;\n\n        if (Util.isFunction(textStyle)) {\n          cfg.textStyle = textStyle.call(null, originText, origin, i);\n        }\n      }\n\n      var offset = cfg.offset || [0, 0];\n\n      if (!Util.isArray(offset)) {\n        offset = [0, offset];\n      }\n\n      if (cfg.labelLine) {\n        cfg.labelLine = Util.mix({}, defaultCfg.labelLine, cfg.labelLine);\n      }\n\n      cfg.textStyle = Util.mix({}, defaultCfg.textStyle, cfg.textStyle);\n      cfg.offset = offset;\n      delete cfg.items;\n      cfgs.push(cfg);\n    });\n    this.set('labelItemCfgs', cfgs);\n  };\n\n  _proto.showLabels = function showLabels(points, shapes) {\n    var self = this;\n    var labelRenderer = self.get('labelRenderer');\n    var items = self.getLabelsItems(points, shapes);\n    shapes = [].concat(shapes);\n    var type = self.get('type');\n    items = self.adjustItems(items, shapes);\n    self.drawLines(items);\n    labelRenderer.set('items', items.filter(function (item, i) {\n      if (!item) {\n        shapes.splice(i, 1);\n        return false;\n      }\n\n      return true;\n    }));\n\n    if (type) {\n      labelRenderer.set('shapes', shapes);\n      labelRenderer.set('type', type);\n      labelRenderer.set('points', points);\n    }\n\n    labelRenderer.set('canvas', this.get('canvas'));\n    labelRenderer.draw();\n  };\n\n  _proto.destroy = function destroy() {\n    this.get('labelRenderer').destroy(); // 清理文本\n\n    _Group.prototype.destroy.call(this);\n  };\n\n  return GeomLabels;\n}(Group); // Util.assign(GeomLabels.prototype, Labels.LabelslabelRenderer);\n\n\nmodule.exports = GeomLabels;"]}]}