{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\geometry\\shape\\edge\\vhv.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\geometry\\shape\\edge\\vhv.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __assign } from \"tslib\";\r\nimport { each } from '@antv/util';\r\nimport { registerShape } from '../base';\r\nimport { getStyle } from '../util/get-style';\r\nvar CORNER_PERCENT = 1 / 3;\r\nfunction getVHVPath(from, to) {\r\n    var points = [];\r\n    points.push({\r\n        x: from.x,\r\n        y: from.y * (1 - CORNER_PERCENT) + to.y * CORNER_PERCENT,\r\n    });\r\n    points.push({\r\n        x: to.x,\r\n        y: from.y * (1 - CORNER_PERCENT) + to.y * CORNER_PERCENT,\r\n    });\r\n    points.push(to);\r\n    var path = [['M', from.x, from.y]];\r\n    each(points, function (point) {\r\n        path.push(['L', point.x, point.y]);\r\n    });\r\n    return path;\r\n}\r\nregisterShape('edge', 'vhv', {\r\n    draw: function (cfg, container) {\r\n        var style = getStyle(cfg, true, false, 'lineWidth');\r\n        var points = cfg.points;\r\n        var path = this.parsePath(getVHVPath(points[0], points[1]));\r\n        return container.addShape('path', {\r\n            attrs: __assign(__assign({}, style), { path: path }),\r\n        });\r\n    },\r\n    getMarker: function (markerCfg) {\r\n        return {\r\n            symbol: 'circle',\r\n            style: {\r\n                r: 4.5,\r\n                fill: markerCfg.color,\r\n            },\r\n        };\r\n    },\r\n});\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\geometry\\shape\\edge\\vhv.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\geometry\\shape\\edge\\vhv.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACjC,OAAO,EAAE,IAAI,EAAE,MAAM,YAAY,CAAC;AAClC,OAAO,EAAE,aAAa,EAAE,MAAM,SAAS,CAAC;AACxC,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC7C,IAAI,cAAc,GAAG,CAAC,GAAG,CAAC,CAAC;AAC3B,SAAS,UAAU,CAAC,IAAI,EAAE,EAAE;IACxB,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,MAAM,CAAC,IAAI,CAAC;QACR,CAAC,EAAE,IAAI,CAAC,CAAC;QACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,cAAc,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,cAAc;KAC3D,CAAC,CAAC;IACH,MAAM,CAAC,IAAI,CAAC;QACR,CAAC,EAAE,EAAE,CAAC,CAAC;QACP,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,cAAc,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,cAAc;KAC3D,CAAC,CAAC;IACH,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAChB,IAAI,IAAI,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACnC,IAAI,CAAC,MAAM,EAAE,UAAU,KAAK;QACxB,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IACH,OAAO,IAAI,CAAC;AAChB,CAAC;AACD,aAAa,CAAC,MAAM,EAAE,KAAK,EAAE;IACzB,IAAI,EAAE,UAAU,GAAG,EAAE,SAAS;QAC1B,IAAI,KAAK,GAAG,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;QACpD,IAAI,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;QACxB,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5D,OAAO,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE;YAC9B,KAAK,EAAE,QAAQ,CAAC,QAAQ,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;SACvD,CAAC,CAAC;IACP,CAAC;IACD,SAAS,EAAE,UAAU,SAAS;QAC1B,OAAO;YACH,MAAM,EAAE,QAAQ;YAChB,KAAK,EAAE;gBACH,CAAC,EAAE,GAAG;gBACN,IAAI,EAAE,SAAS,CAAC,KAAK;aACxB;SACJ,CAAC;IACN,CAAC;CACJ,CAAC,CAAC","sourcesContent":["import { __assign } from \"tslib\";\nimport { each } from '@antv/util';\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\nvar CORNER_PERCENT = 1 / 3;\nfunction getVHVPath(from, to) {\n    var points = [];\n    points.push({\n        x: from.x,\n        y: from.y * (1 - CORNER_PERCENT) + to.y * CORNER_PERCENT,\n    });\n    points.push({\n        x: to.x,\n        y: from.y * (1 - CORNER_PERCENT) + to.y * CORNER_PERCENT,\n    });\n    points.push(to);\n    var path = [['M', from.x, from.y]];\n    each(points, function (point) {\n        path.push(['L', point.x, point.y]);\n    });\n    return path;\n}\nregisterShape('edge', 'vhv', {\n    draw: function (cfg, container) {\n        var style = getStyle(cfg, true, false, 'lineWidth');\n        var points = cfg.points;\n        var path = this.parsePath(getVHVPath(points[0], points[1]));\n        return container.addShape('path', {\n            attrs: __assign(__assign({}, style), { path: path }),\n        });\n    },\n    getMarker: function (markerCfg) {\n        return {\n            symbol: 'circle',\n            style: {\n                r: 4.5,\n                fill: markerCfg.color,\n            },\n        };\n    },\n});\n//# sourceMappingURL=vhv.js.map"]}]}