{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\sparkline\\tiny-column\\layer.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\sparkline\\tiny-column\\layer.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\r\nimport { mix, each } from '@antv/util';\r\nimport { registerPlotType } from '../../base/global';\r\nimport { getGeom } from '../../geoms/factory';\r\nimport TinyLayer from '../tiny-layer';\r\nimport * as EventParser from './event';\r\nvar WIDTH_RATIO = 0.6;\r\nvar G2_GEOM_MAP = {\r\n    column: 'interval',\r\n};\r\nvar PLOT_GEOM_MAP = {\r\n    interval: 'column',\r\n};\r\nvar TinyColumnLayer = (function (_super) {\r\n    __extends(TinyColumnLayer, _super);\r\n    function TinyColumnLayer() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.type = 'tinyColumn';\r\n        return _this;\r\n    }\r\n    TinyColumnLayer.prototype.init = function () {\r\n        this.processProps();\r\n        _super.prototype.init.call(this);\r\n    };\r\n    TinyColumnLayer.prototype.geometryParser = function (dim, type) {\r\n        if (dim === 'g2') {\r\n            return G2_GEOM_MAP[type];\r\n        }\r\n        return PLOT_GEOM_MAP[type];\r\n    };\r\n    TinyColumnLayer.prototype.scale = function () {\r\n        var options = this.options;\r\n        var scales = {};\r\n        scales[options.xField] = { type: 'cat' };\r\n        this.setConfig('scales', scales);\r\n    };\r\n    TinyColumnLayer.prototype.addGeometry = function () {\r\n        var props = this.options;\r\n        var column = getGeom('interval', 'main', {\r\n            positionFields: [props.xField, props.yField],\r\n            plot: this,\r\n        });\r\n        this.setConfig('geometry', column);\r\n    };\r\n    TinyColumnLayer.prototype.parseEvents = function () {\r\n        _super.prototype.parseEvents.call(this, EventParser);\r\n    };\r\n    TinyColumnLayer.prototype.processProps = function () {\r\n        var cfg = {\r\n            padding: [0, 0, 0, 0],\r\n            columnSize: this.getSize(),\r\n        };\r\n        this.options = mix(this.options, cfg);\r\n    };\r\n    TinyColumnLayer.prototype.getSize = function () {\r\n        var props = this.options;\r\n        var columnNumber = this.getColumnNum(props.data, props.xField);\r\n        var width = this.width;\r\n        return (width / columnNumber) * WIDTH_RATIO;\r\n    };\r\n    TinyColumnLayer.prototype.getColumnNum = function (data, field) {\r\n        var values = [];\r\n        each(data, function (d) {\r\n            var v = d[field];\r\n            if (values.indexOf(v) < 0) {\r\n                values.push(v);\r\n            }\r\n        });\r\n        return values.length;\r\n    };\r\n    return TinyColumnLayer;\r\n}(TinyLayer));\r\nexport default TinyColumnLayer;\r\nregisterPlotType('tinyColumn', TinyColumnLayer);\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\sparkline\\tiny-column\\layer.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\sparkline\\tiny-column\\layer.js"],"names":[],"mappings":"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","sourcesContent":["import { __extends } from \"tslib\";\nimport { mix, each } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport { getGeom } from '../../geoms/factory';\nimport TinyLayer from '../tiny-layer';\nimport * as EventParser from './event';\nvar WIDTH_RATIO = 0.6;\nvar G2_GEOM_MAP = {\n    column: 'interval',\n};\nvar PLOT_GEOM_MAP = {\n    interval: 'column',\n};\nvar TinyColumnLayer = /** @class */ (function (_super) {\n    __extends(TinyColumnLayer, _super);\n    function TinyColumnLayer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'tinyColumn';\n        return _this;\n    }\n    TinyColumnLayer.prototype.init = function () {\n        this.processProps();\n        _super.prototype.init.call(this);\n    };\n    TinyColumnLayer.prototype.geometryParser = function (dim, type) {\n        if (dim === 'g2') {\n            return G2_GEOM_MAP[type];\n        }\n        return PLOT_GEOM_MAP[type];\n    };\n    TinyColumnLayer.prototype.scale = function () {\n        var options = this.options;\n        var scales = {};\n        /** 配置x-scale */\n        scales[options.xField] = { type: 'cat' };\n        this.setConfig('scales', scales);\n    };\n    TinyColumnLayer.prototype.addGeometry = function () {\n        var props = this.options;\n        var column = getGeom('interval', 'main', {\n            positionFields: [props.xField, props.yField],\n            plot: this,\n        });\n        this.setConfig('geometry', column);\n    };\n    TinyColumnLayer.prototype.parseEvents = function () {\n        _super.prototype.parseEvents.call(this, EventParser);\n    };\n    TinyColumnLayer.prototype.processProps = function () {\n        var cfg = {\n            padding: [0, 0, 0, 0],\n            columnSize: this.getSize(),\n        };\n        this.options = mix(this.options, cfg);\n    };\n    TinyColumnLayer.prototype.getSize = function () {\n        var props = this.options;\n        var columnNumber = this.getColumnNum(props.data, props.xField);\n        var width = this.width;\n        return (width / columnNumber) * WIDTH_RATIO;\n    };\n    TinyColumnLayer.prototype.getColumnNum = function (data, field) {\n        var values = [];\n        each(data, function (d) {\n            var v = d[field];\n            if (values.indexOf(v) < 0) {\n                values.push(v);\n            }\n        });\n        return values.length;\n    };\n    return TinyColumnLayer;\n}(TinyLayer));\nexport default TinyColumnLayer;\nregisterPlotType('tinyColumn', TinyColumnLayer);\n//# sourceMappingURL=layer.js.map"]}]}