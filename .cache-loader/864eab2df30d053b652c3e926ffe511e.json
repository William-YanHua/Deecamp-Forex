{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\geom\\shape\\polygon.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\geom\\shape\\polygon.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["var Util = require('../../util');\r\nvar Shape = require('./shape');\r\nvar Global = require('../../global');\r\nfunction getAttrs(cfg) {\r\n    var defaultCfg = Global.shape.polygon;\r\n    var shapeCfg = Util.mix({}, defaultCfg, {\r\n        stroke: cfg.color,\r\n        fill: cfg.color,\r\n        fillOpacity: cfg.opacity\r\n    }, cfg.style);\r\n    return shapeCfg;\r\n}\r\nfunction getHollowAttrs(cfg) {\r\n    var defaultCfg = Global.shape.hollowPolygon;\r\n    var shapeCfg = Util.mix({}, defaultCfg, {\r\n        stroke: cfg.color,\r\n        strokeOpacity: cfg.opacity\r\n    }, cfg.style);\r\n    return shapeCfg;\r\n}\r\nfunction getPath(points) {\r\n    var flag = points[0];\r\n    var i = 1;\r\n    var path = [['M', flag.x, flag.y]];\r\n    while (i < points.length) {\r\n        var c = points[i];\r\n        if (c.x !== points[i - 1].x || c.y !== points[i - 1].y) {\r\n            path.push(['L', c.x, c.y]);\r\n            if (c.x === flag.x && c.y === flag.y && i < points.length - 1) {\r\n                flag = points[i + 1];\r\n                path.push(['Z']);\r\n                path.push(['M', flag.x, flag.y]);\r\n                i++;\r\n            }\r\n        }\r\n        i++;\r\n    }\r\n    if (!Util.isEqual(path[path.length - 1], flag)) {\r\n        path.push(['L', flag.x, flag.y]);\r\n    }\r\n    path.push(['Z']);\r\n    return path;\r\n}\r\nvar Polygon = Shape.registerFactory('polygon', {\r\n    defaultShapeType: 'polygon',\r\n    getDefaultPoints: function getDefaultPoints(pointInfo) {\r\n        var points = [];\r\n        Util.each(pointInfo.x, function (subX, index) {\r\n            var subY = pointInfo.y[index];\r\n            points.push({\r\n                x: subX,\r\n                y: subY\r\n            });\r\n        });\r\n        return points;\r\n    },\r\n    getActiveCfg: function getActiveCfg(type, cfg) {\r\n        var lineWidth = cfg.lineWidth || 1;\r\n        if (type === 'hollow') {\r\n            return {\r\n                lineWidth: lineWidth + 1\r\n            };\r\n        }\r\n        var opacity = cfg.fillOpacity || cfg.opacity || 1;\r\n        return {\r\n            fillOpacity: opacity - 0.08\r\n        };\r\n    },\r\n    getSelectedCfg: function getSelectedCfg(type, cfg) {\r\n        if (cfg && cfg.style) {\r\n            return cfg.style;\r\n        }\r\n        return this.getActiveCfg(type, cfg);\r\n    }\r\n});\r\nShape.registerShape('polygon', 'polygon', {\r\n    draw: function draw(cfg, container) {\r\n        if (!Util.isEmpty(cfg.points)) {\r\n            var attrs = getAttrs(cfg);\r\n            var path = getPath(cfg.points);\r\n            path = this.parsePath(path);\r\n            return container.addShape('path', {\r\n                attrs: Util.mix(attrs, {\r\n                    path: path\r\n                })\r\n            });\r\n        }\r\n    },\r\n    getMarkerCfg: function getMarkerCfg(cfg) {\r\n        return Util.mix({\r\n            symbol: 'square',\r\n            radius: 4\r\n        }, getAttrs(cfg));\r\n    }\r\n});\r\nShape.registerShape('polygon', 'hollow', {\r\n    draw: function draw(cfg, container) {\r\n        if (!Util.isEmpty(cfg.points)) {\r\n            var attrs = getHollowAttrs(cfg);\r\n            var path = getPath(cfg.points);\r\n            path = this.parsePath(path);\r\n            return container.addShape('path', {\r\n                attrs: Util.mix(attrs, {\r\n                    path: path\r\n                })\r\n            });\r\n        }\r\n    },\r\n    getMarkerCfg: function getMarkerCfg(cfg) {\r\n        return Util.mix({\r\n            symbol: 'square',\r\n            radius: 4\r\n        }, getAttrs(cfg));\r\n    }\r\n});\r\nmodule.exports = Polygon;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\geom\\shape\\polygon.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\geom\\shape\\polygon.js"],"names":[],"mappings":"AAOA,IAAI,IAAI,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AAEjC,IAAI,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAE/B,IAAI,MAAM,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AAErC,SAAS,QAAQ,CAAC,GAAG;IACnB,IAAI,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC;IACtC,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,UAAU,EAAE;QACtC,MAAM,EAAE,GAAG,CAAC,KAAK;QACjB,IAAI,EAAE,GAAG,CAAC,KAAK;QACf,WAAW,EAAE,GAAG,CAAC,OAAO;KACzB,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;IACd,OAAO,QAAQ,CAAC;AAClB,CAAC;AAED,SAAS,cAAc,CAAC,GAAG;IACzB,IAAI,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC;IAC5C,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,UAAU,EAAE;QACtC,MAAM,EAAE,GAAG,CAAC,KAAK;QACjB,aAAa,EAAE,GAAG,CAAC,OAAO;KAC3B,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;IACd,OAAO,QAAQ,CAAC;AAClB,CAAC;AAED,SAAS,OAAO,CAAC,MAAM;IACrB,IAAI,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IACrB,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,IAAI,IAAI,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAEnC,OAAO,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE;QACxB,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAElB,IAAI,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;YACtD,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAE3B,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC7D,IAAI,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACrB,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjC,CAAC,EAAE,CAAC;aACL;SACF;QAED,CAAC,EAAE,CAAC;KACL;IAED,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE;QAC9C,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;KAClC;IAED,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACjB,OAAO,IAAI,CAAC;AACd,CAAC;AAGD,IAAI,OAAO,GAAG,KAAK,CAAC,eAAe,CAAC,SAAS,EAAE;IAC7C,gBAAgB,EAAE,SAAS;IAC3B,gBAAgB,EAAE,SAAS,gBAAgB,CAAC,SAAS;QACnD,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,UAAU,IAAI,EAAE,KAAK;YAC1C,IAAI,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAC9B,MAAM,CAAC,IAAI,CAAC;gBACV,CAAC,EAAE,IAAI;gBACP,CAAC,EAAE,IAAI;aACR,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAChB,CAAC;IACD,YAAY,EAAE,SAAS,YAAY,CAAC,IAAI,EAAE,GAAG;QAC3C,IAAI,SAAS,GAAG,GAAG,CAAC,SAAS,IAAI,CAAC,CAAC;QAEnC,IAAI,IAAI,KAAK,QAAQ,EAAE;YACrB,OAAO;gBACL,SAAS,EAAE,SAAS,GAAG,CAAC;aACzB,CAAC;SACH;QAED,IAAI,OAAO,GAAG,GAAG,CAAC,WAAW,IAAI,GAAG,CAAC,OAAO,IAAI,CAAC,CAAC;QAClD,OAAO;YAEL,WAAW,EAAE,OAAO,GAAG,IAAI;SAC5B,CAAC;IACJ,CAAC;IACD,cAAc,EAAE,SAAS,cAAc,CAAC,IAAI,EAAE,GAAG;QAC/C,IAAI,GAAG,IAAI,GAAG,CAAC,KAAK,EAAE;YACpB,OAAO,GAAG,CAAC,KAAK,CAAC;SAClB;QAED,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IACtC,CAAC;CACF,CAAC,CAAC;AACH,KAAK,CAAC,aAAa,CAAC,SAAS,EAAE,SAAS,EAAE;IACxC,IAAI,EAAE,SAAS,IAAI,CAAC,GAAG,EAAE,SAAS;QAChC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;YAC7B,IAAI,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;YAC1B,IAAI,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAC/B,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAC5B,OAAO,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE;gBAChC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE;oBACrB,IAAI,EAAE,IAAI;iBACX,CAAC;aACH,CAAC,CAAC;SACJ;IACH,CAAC;IACD,YAAY,EAAE,SAAS,YAAY,CAAC,GAAG;QACrC,OAAO,IAAI,CAAC,GAAG,CAAC;YACd,MAAM,EAAE,QAAQ;YAChB,MAAM,EAAE,CAAC;SACV,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IACpB,CAAC;CACF,CAAC,CAAC;AACH,KAAK,CAAC,aAAa,CAAC,SAAS,EAAE,QAAQ,EAAE;IACvC,IAAI,EAAE,SAAS,IAAI,CAAC,GAAG,EAAE,SAAS;QAChC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;YAC7B,IAAI,KAAK,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC;YAChC,IAAI,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAC/B,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAC5B,OAAO,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE;gBAChC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE;oBACrB,IAAI,EAAE,IAAI;iBACX,CAAC;aACH,CAAC,CAAC;SACJ;IACH,CAAC;IACD,YAAY,EAAE,SAAS,YAAY,CAAC,GAAG;QACrC,OAAO,IAAI,CAAC,GAAG,CAAC;YACd,MAAM,EAAE,QAAQ;YAChB,MAAM,EAAE,CAAC;SACV,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IACpB,CAAC;CACF,CAAC,CAAC;AACH,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC","sourcesContent":["/**\n * @fileOverview line shapes\n * @author dxq613@gmail.com\n * @author sima.zhang1990@gmail.com\n * @author huangtonger@aliyun.com\n # @author liuye10@yahoo.com\n */\nvar Util = require('../../util');\n\nvar Shape = require('./shape');\n\nvar Global = require('../../global');\n\nfunction getAttrs(cfg) {\n  var defaultCfg = Global.shape.polygon;\n  var shapeCfg = Util.mix({}, defaultCfg, {\n    stroke: cfg.color,\n    fill: cfg.color,\n    fillOpacity: cfg.opacity\n  }, cfg.style);\n  return shapeCfg;\n}\n\nfunction getHollowAttrs(cfg) {\n  var defaultCfg = Global.shape.hollowPolygon;\n  var shapeCfg = Util.mix({}, defaultCfg, {\n    stroke: cfg.color,\n    strokeOpacity: cfg.opacity\n  }, cfg.style);\n  return shapeCfg;\n}\n\nfunction getPath(points) {\n  var flag = points[0];\n  var i = 1;\n  var path = [['M', flag.x, flag.y]];\n\n  while (i < points.length) {\n    var c = points[i];\n\n    if (c.x !== points[i - 1].x || c.y !== points[i - 1].y) {\n      path.push(['L', c.x, c.y]);\n\n      if (c.x === flag.x && c.y === flag.y && i < points.length - 1) {\n        flag = points[i + 1];\n        path.push(['Z']);\n        path.push(['M', flag.x, flag.y]);\n        i++;\n      }\n    }\n\n    i++;\n  }\n\n  if (!Util.isEqual(path[path.length - 1], flag)) {\n    path.push(['L', flag.x, flag.y]);\n  }\n\n  path.push(['Z']);\n  return path;\n} // regist line geom\n\n\nvar Polygon = Shape.registerFactory('polygon', {\n  defaultShapeType: 'polygon',\n  getDefaultPoints: function getDefaultPoints(pointInfo) {\n    var points = [];\n    Util.each(pointInfo.x, function (subX, index) {\n      var subY = pointInfo.y[index];\n      points.push({\n        x: subX,\n        y: subY\n      });\n    });\n    return points;\n  },\n  getActiveCfg: function getActiveCfg(type, cfg) {\n    var lineWidth = cfg.lineWidth || 1;\n\n    if (type === 'hollow') {\n      return {\n        lineWidth: lineWidth + 1\n      };\n    }\n\n    var opacity = cfg.fillOpacity || cfg.opacity || 1;\n    return {\n      // lineWidth,\n      fillOpacity: opacity - 0.08\n    };\n  },\n  getSelectedCfg: function getSelectedCfg(type, cfg) {\n    if (cfg && cfg.style) {\n      return cfg.style;\n    }\n\n    return this.getActiveCfg(type, cfg);\n  }\n});\nShape.registerShape('polygon', 'polygon', {\n  draw: function draw(cfg, container) {\n    if (!Util.isEmpty(cfg.points)) {\n      var attrs = getAttrs(cfg);\n      var path = getPath(cfg.points);\n      path = this.parsePath(path);\n      return container.addShape('path', {\n        attrs: Util.mix(attrs, {\n          path: path\n        })\n      });\n    }\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    return Util.mix({\n      symbol: 'square',\n      radius: 4\n    }, getAttrs(cfg));\n  }\n});\nShape.registerShape('polygon', 'hollow', {\n  draw: function draw(cfg, container) {\n    if (!Util.isEmpty(cfg.points)) {\n      var attrs = getHollowAttrs(cfg);\n      var path = getPath(cfg.points);\n      path = this.parsePath(path);\n      return container.addShape('path', {\n        attrs: Util.mix(attrs, {\n          path: path\n        })\n      });\n    }\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    return Util.mix({\n      symbol: 'square',\n      radius: 4\n    }, getAttrs(cfg));\n  }\n});\nmodule.exports = Polygon;"]}]}