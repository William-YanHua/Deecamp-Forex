{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/radar/layer.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/radar/layer.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { __assign, __extends } from \"tslib\";\nimport { deepMix, has } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport ViewLayer from '../../base/view-layer';\nimport { getComponent } from '../../components/factory';\nimport { getGeom } from '../../geoms/factory';\nimport { extractScale } from '../../util/scale';\nimport * as EventParser from './event';\nimport './theme';\nvar GEOM_MAP = {\n    area: 'area',\n    line: 'line',\n    point: 'point',\n};\nvar RadarLayer = (function (_super) {\n    __extends(RadarLayer, _super);\n    function RadarLayer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'radar';\n        return _this;\n    }\n    RadarLayer.getDefaultOptions = function () {\n        return deepMix({}, _super.getDefaultOptions.call(this), {\n            width: 400,\n            height: 400,\n            title: {\n                visible: false,\n            },\n            description: {\n                visible: false,\n            },\n            forceFit: true,\n            padding: 'auto',\n            radius: 0.8,\n            smooth: false,\n            line: {\n                visible: true,\n                size: 2,\n                style: {\n                    opacity: 1,\n                },\n            },\n            area: {\n                visible: true,\n                style: {\n                    opacity: 0.25,\n                },\n            },\n            point: {\n                visible: false,\n                size: 4,\n                shape: 'point',\n                style: {\n                    opacity: 1,\n                },\n            },\n            angleAxis: {\n                visible: true,\n                autoRotateTitle: true,\n                line: {\n                    visible: false,\n                },\n                tickLine: {\n                    visible: false,\n                },\n                grid: {\n                    visible: true,\n                    line: {\n                        style: {\n                            lineDash: [0, 0],\n                        },\n                    },\n                },\n                label: {\n                    visible: true,\n                    offset: 16,\n                    autoRotate: true,\n                    autoHide: true,\n                },\n                title: {\n                    visible: false,\n                },\n            },\n            radiusAxis: {\n                min: 0,\n                visible: true,\n                nice: true,\n                autoRotateTitle: true,\n                line: {\n                    visible: true,\n                },\n                tickLine: {\n                    visible: true,\n                },\n                gridType: 'line',\n                grid: {\n                    visible: true,\n                    line: {\n                        style: {\n                            lineDash: [0, 0],\n                        },\n                    },\n                },\n                label: {\n                    visible: true,\n                    autoHide: true,\n                    autoRotate: true,\n                },\n                title: {\n                    visible: false,\n                },\n            },\n            label: {\n                visible: false,\n                type: 'point',\n            },\n            legend: {\n                visible: true,\n                position: 'left-top',\n            },\n            tooltip: {\n                visible: true,\n                shared: true,\n                showCrosshairs: false,\n            },\n        });\n    };\n    RadarLayer.prototype.init = function () {\n        var props = this.options;\n        props.xField = props.angleField;\n        props.yField = props.radiusField;\n        _super.prototype.init.call(this);\n    };\n    RadarLayer.prototype.getAngleScale = function () {\n        var angleField = this.options.angleField;\n        return this.view.getScaleByField(angleField);\n    };\n    RadarLayer.prototype.getRadiusScale = function () {\n        var radiusField = this.options.radiusField;\n        return this.view.getScaleByField(radiusField);\n    };\n    RadarLayer.prototype.getColorScale = function () {\n        var seriesField = this.options.seriesField;\n        return this.view.getScaleByField(seriesField);\n    };\n    RadarLayer.prototype.geometryParser = function (dim, type) {\n        return GEOM_MAP[type];\n    };\n    RadarLayer.prototype.scale = function () {\n        var props = this.options;\n        var scales = {};\n        scales[props.angleField] = {};\n        if (has(props, 'angleAxis')) {\n            extractScale(scales[props.angleField], props.angleAxis);\n        }\n        scales[props.radiusField] = {};\n        if (has(props, 'radiusAxis')) {\n            extractScale(scales[props.radiusField], props.radiusAxis);\n        }\n        this.setConfig('scales', scales);\n        _super.prototype.scale.call(this);\n    };\n    RadarLayer.prototype.coord = function () {\n        var props = this.options;\n        var coordConfig = {\n            type: 'polar',\n            cfg: {\n                radius: props.radius,\n            },\n        };\n        this.setConfig('coordinate', coordConfig);\n    };\n    RadarLayer.prototype.axis = function () {\n        var props = this.options;\n        var xAxis_parser = getComponent('axis', {\n            plot: this,\n            dim: 'angle',\n        });\n        var yAxis_parser = getComponent('axis', {\n            plot: this,\n            dim: 'radius',\n        });\n        var axesConfig = {};\n        axesConfig[props.angleField] = xAxis_parser;\n        axesConfig[props.radiusField] = yAxis_parser;\n        this.setConfig('axes', axesConfig);\n    };\n    RadarLayer.prototype.addGeometry = function () {\n        var props = this.options;\n        if (props.area.visible) {\n            var area = getGeom('area', 'main', {\n                plot: this,\n            });\n            this.setConfig('geometry', area);\n            this.area = area;\n        }\n        if (props.line && props.line.visible) {\n            var line = getGeom('line', 'main', {\n                plot: this,\n            });\n            this.setConfig('geometry', line);\n            this.line = line;\n        }\n        if (props.point && props.point.visible) {\n            var point = getGeom('point', 'guide', {\n                plot: this,\n            });\n            this.setConfig('geometry', point);\n            this.point = point;\n        }\n        if (props.label) {\n            this.label();\n        }\n        if (props.tooltip && (props.tooltip.fields || props.tooltip.formatter)) {\n            this.geometryTooltip();\n        }\n    };\n    RadarLayer.prototype.geometryTooltip = function () {\n        var geomConfig = this.line ? this.line : this.area;\n        geomConfig.tooltip = {};\n        var tooltipOptions = this.options.tooltip;\n        if (tooltipOptions.fields) {\n            geomConfig.tooltip.fields = tooltipOptions.fields;\n        }\n        if (tooltipOptions.formatter) {\n            geomConfig.tooltip.callback = tooltipOptions.formatter;\n            if (!tooltipOptions.fields) {\n                geomConfig.tooltip.fields = [this.options.angleField, this.options.radiusField];\n            }\n            if (this.options.seriesField) {\n                geomConfig.tooltip.fields.push(this.options.seriesField);\n            }\n        }\n    };\n    RadarLayer.prototype.label = function () {\n        var props = this.options;\n        if (props.label.visible === false) {\n            if (this.point) {\n                this.point.label = false;\n            }\n            if (this.line) {\n                this.line.label = false;\n            }\n            if (this.area) {\n                this.area.label = false;\n            }\n            return;\n        }\n        var label = getComponent('label', __assign({ fields: [props.radiusField], cfg: {\n                type: 'polar',\n                autoRotate: false,\n            }, plot: this }, props.label));\n        if (this.point) {\n            this.point.label = label;\n        }\n        else if (this.line) {\n            this.line.label = label;\n        }\n        else if (this.area) {\n            this.area.label = label;\n        }\n    };\n    RadarLayer.prototype.annotation = function () {\n        return;\n    };\n    RadarLayer.prototype.animation = function () {\n        _super.prototype.animation.call(this);\n        var props = this.options;\n        if (props.animation === false) {\n            if (this.area)\n                this.area.animate = false;\n            if (this.line)\n                this.line.animate = false;\n            if (this.point)\n                this.point.animate = false;\n        }\n    };\n    RadarLayer.prototype.parseEvents = function () {\n        _super.prototype.parseEvents.call(this, EventParser);\n    };\n    return RadarLayer;\n}(ViewLayer));\nexport default RadarLayer;\nregisterPlotType('radar', RadarLayer);\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/radar/layer.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/radar/layer.js"],"names":[],"mappings":"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","sourcesContent":["import { __assign, __extends } from \"tslib\";\n/**\n * Create By Bruce Too\n * On 2020-02-14\n */\nimport { deepMix, has } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport ViewLayer from '../../base/view-layer';\nimport { getComponent } from '../../components/factory';\nimport { getGeom } from '../../geoms/factory';\nimport { extractScale } from '../../util/scale';\nimport * as EventParser from './event';\nimport './theme';\nvar GEOM_MAP = {\n    area: 'area',\n    line: 'line',\n    point: 'point',\n};\nvar RadarLayer = /** @class */ (function (_super) {\n    __extends(RadarLayer, _super);\n    function RadarLayer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'radar';\n        return _this;\n    }\n    RadarLayer.getDefaultOptions = function () {\n        return deepMix({}, _super.getDefaultOptions.call(this), {\n            width: 400,\n            height: 400,\n            title: {\n                visible: false,\n            },\n            description: {\n                visible: false,\n            },\n            forceFit: true,\n            padding: 'auto',\n            radius: 0.8,\n            smooth: false,\n            line: {\n                visible: true,\n                size: 2,\n                style: {\n                    opacity: 1,\n                },\n            },\n            area: {\n                visible: true,\n                style: {\n                    opacity: 0.25,\n                },\n            },\n            point: {\n                visible: false,\n                size: 4,\n                shape: 'point',\n                style: {\n                    opacity: 1,\n                },\n            },\n            angleAxis: {\n                visible: true,\n                autoRotateTitle: true,\n                line: {\n                    visible: false,\n                },\n                tickLine: {\n                    visible: false,\n                },\n                grid: {\n                    visible: true,\n                    line: {\n                        style: {\n                            lineDash: [0, 0],\n                        },\n                    },\n                },\n                label: {\n                    visible: true,\n                    offset: 16,\n                    autoRotate: true,\n                    autoHide: true,\n                },\n                title: {\n                    visible: false,\n                },\n            },\n            radiusAxis: {\n                min: 0,\n                visible: true,\n                /** G2 4.0 默认 nice 不生效，需要手动添加 */\n                nice: true,\n                autoRotateTitle: true,\n                line: {\n                    visible: true,\n                },\n                tickLine: {\n                    visible: true,\n                },\n                gridType: 'line',\n                grid: {\n                    visible: true,\n                    line: {\n                        style: {\n                            lineDash: [0, 0],\n                        },\n                    },\n                },\n                label: {\n                    visible: true,\n                    autoHide: true,\n                    autoRotate: true,\n                },\n                title: {\n                    visible: false,\n                },\n            },\n            label: {\n                visible: false,\n                type: 'point',\n            },\n            legend: {\n                visible: true,\n                position: 'left-top',\n            },\n            tooltip: {\n                visible: true,\n                shared: true,\n                showCrosshairs: false,\n            },\n        });\n    };\n    RadarLayer.prototype.init = function () {\n        var props = this.options;\n        props.xField = props.angleField;\n        props.yField = props.radiusField;\n        _super.prototype.init.call(this);\n    };\n    RadarLayer.prototype.getAngleScale = function () {\n        var angleField = this.options.angleField;\n        return this.view.getScaleByField(angleField);\n    };\n    RadarLayer.prototype.getRadiusScale = function () {\n        var radiusField = this.options.radiusField;\n        return this.view.getScaleByField(radiusField);\n    };\n    RadarLayer.prototype.getColorScale = function () {\n        var seriesField = this.options.seriesField;\n        return this.view.getScaleByField(seriesField);\n    };\n    RadarLayer.prototype.geometryParser = function (dim, type) {\n        return GEOM_MAP[type];\n    };\n    RadarLayer.prototype.scale = function () {\n        var props = this.options;\n        var scales = {};\n        /** 配置x-scale */\n        scales[props.angleField] = {};\n        if (has(props, 'angleAxis')) {\n            extractScale(scales[props.angleField], props.angleAxis);\n        }\n        /** 配置y-scale */\n        scales[props.radiusField] = {};\n        if (has(props, 'radiusAxis')) {\n            extractScale(scales[props.radiusField], props.radiusAxis);\n        }\n        this.setConfig('scales', scales);\n        _super.prototype.scale.call(this);\n    };\n    RadarLayer.prototype.coord = function () {\n        var props = this.options;\n        var coordConfig = {\n            type: 'polar',\n            cfg: {\n                radius: props.radius,\n            },\n        };\n        this.setConfig('coordinate', coordConfig);\n    };\n    RadarLayer.prototype.axis = function () {\n        var props = this.options;\n        var xAxis_parser = getComponent('axis', {\n            plot: this,\n            dim: 'angle',\n        });\n        var yAxis_parser = getComponent('axis', {\n            plot: this,\n            dim: 'radius',\n        });\n        var axesConfig = {};\n        axesConfig[props.angleField] = xAxis_parser;\n        axesConfig[props.radiusField] = yAxis_parser;\n        /** 存储坐标轴配置项到config */\n        this.setConfig('axes', axesConfig);\n    };\n    RadarLayer.prototype.addGeometry = function () {\n        var props = this.options;\n        /** 配置面积 */\n        if (props.area.visible) {\n            var area = getGeom('area', 'main', {\n                plot: this,\n            });\n            this.setConfig('geometry', area);\n            this.area = area;\n        }\n        /** 配置线 */\n        if (props.line && props.line.visible) {\n            var line = getGeom('line', 'main', {\n                plot: this,\n            });\n            this.setConfig('geometry', line);\n            this.line = line;\n        }\n        /** 配置点 */\n        if (props.point && props.point.visible) {\n            var point = getGeom('point', 'guide', {\n                plot: this,\n            });\n            this.setConfig('geometry', point);\n            this.point = point;\n        }\n        if (props.label) {\n            this.label();\n        }\n        if (props.tooltip && (props.tooltip.fields || props.tooltip.formatter)) {\n            this.geometryTooltip();\n        }\n    };\n    RadarLayer.prototype.geometryTooltip = function () {\n        var geomConfig = this.line ? this.line : this.area;\n        geomConfig.tooltip = {};\n        var tooltipOptions = this.options.tooltip;\n        if (tooltipOptions.fields) {\n            geomConfig.tooltip.fields = tooltipOptions.fields;\n        }\n        if (tooltipOptions.formatter) {\n            geomConfig.tooltip.callback = tooltipOptions.formatter;\n            if (!tooltipOptions.fields) {\n                geomConfig.tooltip.fields = [this.options.angleField, this.options.radiusField];\n            }\n            if (this.options.seriesField) {\n                geomConfig.tooltip.fields.push(this.options.seriesField);\n            }\n        }\n    };\n    RadarLayer.prototype.label = function () {\n        var props = this.options;\n        if (props.label.visible === false) {\n            if (this.point) {\n                this.point.label = false;\n            }\n            if (this.line) {\n                this.line.label = false;\n            }\n            if (this.area) {\n                this.area.label = false;\n            }\n            return;\n        }\n        // @Todo 雷达图标签布局算法后续补充\n        var label = getComponent('label', __assign({ fields: [props.radiusField], cfg: {\n                type: 'polar',\n                autoRotate: false,\n            }, plot: this }, props.label));\n        if (this.point) {\n            this.point.label = label;\n        }\n        else if (this.line) {\n            this.line.label = label;\n        }\n        else if (this.area) {\n            this.area.label = label;\n        }\n    };\n    RadarLayer.prototype.annotation = function () {\n        return;\n    };\n    RadarLayer.prototype.animation = function () {\n        _super.prototype.animation.call(this);\n        var props = this.options;\n        if (props.animation === false) {\n            // 关闭动画\n            if (this.area)\n                this.area.animate = false;\n            if (this.line)\n                this.line.animate = false;\n            if (this.point)\n                this.point.animate = false;\n        }\n    };\n    RadarLayer.prototype.parseEvents = function () {\n        _super.prototype.parseEvents.call(this, EventParser);\n    };\n    return RadarLayer;\n}(ViewLayer));\nexport default RadarLayer;\nregisterPlotType('radar', RadarLayer);\n//# sourceMappingURL=layer.js.map"]}]}