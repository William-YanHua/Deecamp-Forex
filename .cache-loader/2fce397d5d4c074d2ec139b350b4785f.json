{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/density-heatmap/layer.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/density-heatmap/layer.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { __assign, __extends } from \"tslib\";\nimport { deepMix, each, has } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport ViewLayer from '../../base/view-layer';\nimport { getComponent } from '../../components/factory';\nimport { getGeom } from '../../geoms/factory';\nimport { extractScale } from '../../util/scale';\nimport '../../geoms/heatmap/linear';\nimport { getPlotComponents } from './components';\nimport * as EventParser from './event';\nvar DensityHeatmapLayer = (function (_super) {\n    __extends(DensityHeatmapLayer, _super);\n    function DensityHeatmapLayer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'densityHeatmap';\n        _this.plotComponents = [];\n        return _this;\n    }\n    DensityHeatmapLayer.getDefaultOptions = function () {\n        return deepMix({}, _super.getDefaultOptions.call(this), {\n            xAxis: {\n                visible: true,\n                autoRotateTitle: false,\n                grid: {\n                    visible: false,\n                },\n                line: {\n                    visible: true,\n                },\n                tickLine: {\n                    visible: true,\n                },\n                label: {\n                    visible: true,\n                    autoHide: true,\n                    autoRotate: true,\n                },\n                title: {\n                    visible: false,\n                    spacing: 12,\n                },\n            },\n            yAxis: {\n                visible: true,\n                autoRotateTitle: true,\n                grid: {\n                    visible: false,\n                },\n                line: {\n                    visible: true,\n                },\n                tickLine: {\n                    visible: true,\n                },\n                label: {\n                    visible: true,\n                    autoHide: true,\n                    autoRotate: false,\n                },\n                title: {\n                    visible: false,\n                    spacing: 12,\n                },\n            },\n            tooltip: {\n                visible: true,\n                showCrosshairs: true,\n                crosshairs: {\n                    type: 'xy',\n                    line: {\n                        style: {\n                            stroke: '#000000',\n                            lineWidth: 1,\n                            opacity: 0.5,\n                        },\n                    },\n                },\n                showMarkers: false,\n            },\n            legend: {\n                visible: true,\n                position: 'bottom-center',\n            },\n            color: [\n                'rgba(33,102,172,0)',\n                'rgb(103,169,207)',\n                'rgb(209,229,240)',\n                'rgb(253,219,199)',\n                'rgb(239,138,98)',\n                'rgb(178,24,43)',\n            ],\n            interactions: [{ type: 'tooltip' }],\n        });\n    };\n    DensityHeatmapLayer.prototype.afterRender = function () {\n        this.renderPlotComponents();\n        _super.prototype.afterRender.call(this);\n    };\n    DensityHeatmapLayer.prototype.destroy = function () {\n        each(this.plotComponents, function (component) {\n            component.destroy();\n        });\n        _super.prototype.destroy.call(this);\n    };\n    DensityHeatmapLayer.prototype.scale = function () {\n        var props = this.options;\n        var scales = {};\n        scales[props.xField] = {};\n        if (has(props, 'xAxis')) {\n            extractScale(scales[props.xField], props.xAxis);\n        }\n        scales[props.yField] = {};\n        if (has(props, 'yAxis')) {\n            extractScale(scales[props.yField], props.yAxis);\n        }\n        this.setConfig('scales', scales);\n        _super.prototype.scale.call(this);\n    };\n    DensityHeatmapLayer.prototype.coord = function () {\n        return;\n    };\n    DensityHeatmapLayer.prototype.geometryParser = function () {\n        return 'heatmap';\n    };\n    DensityHeatmapLayer.prototype.addGeometry = function () {\n        if (this.options.data.length > 1) {\n            var config = {\n                type: 'linearheatmap',\n                position: {\n                    fields: [this.options.xField, this.options.yField],\n                },\n                color: {\n                    fields: [this.options.colorField],\n                    values: this.options.color,\n                },\n                cfg: {\n                    intensity: this.options.intensity,\n                    radius: this.options.radius,\n                },\n            };\n            if (this.options.radius) {\n                config.radius = this.options.radius;\n            }\n            if (this.options.intensity) {\n                config.intensity = this.options.intensity;\n            }\n            if (this.options.tooltip && (this.options.tooltip.fields || this.options.tooltip.formatter)) {\n                this.geometryTooltip(config);\n            }\n            this.setConfig('geometry', config);\n            this.addPoint();\n        }\n    };\n    DensityHeatmapLayer.prototype.addPoint = function () {\n        var props = this.options;\n        var defaultConfig = { visible: false, size: 0 };\n        if (props.point && props.point.visible) {\n            props.point = deepMix(defaultConfig, props.point);\n        }\n        else {\n            props.point = defaultConfig;\n        }\n        var point = getGeom('point', 'guide', {\n            plot: this,\n        });\n        point.active = false;\n        this.setConfig('geometry', point);\n    };\n    DensityHeatmapLayer.prototype.extractLabel = function () {\n        var props = this.options;\n        var label = props.label;\n        if (label && label.visible === false) {\n            return false;\n        }\n        var labelConfig = getComponent('label', __assign({ plot: this, labelType: 'scatterLabel', fields: [props.xField, props.yField], position: 'middle', offset: 0 }, label));\n        return labelConfig;\n    };\n    DensityHeatmapLayer.prototype.legend = function () {\n        this.setConfig('legends', false);\n    };\n    DensityHeatmapLayer.prototype.geometryTooltip = function (config) {\n        config.tooltip = {};\n        var tooltipOptions = this.options.tooltip;\n        if (tooltipOptions.fields) {\n            config.tooltip.fields = tooltipOptions.fields;\n        }\n        if (tooltipOptions.formatter) {\n            config.tooltip.callback = tooltipOptions.formatter;\n            if (!tooltipOptions.fields) {\n                config.tooltip.fields = [this.options.xField, this.options.yField];\n                if (this.options.colorField) {\n                    config.tooltip.fields.push(this.options.colorField);\n                }\n            }\n        }\n    };\n    DensityHeatmapLayer.prototype.parseEvents = function () {\n        _super.prototype.parseEvents.call(this, EventParser);\n    };\n    DensityHeatmapLayer.prototype.renderPlotComponents = function () {\n        var _this = this;\n        each(this.plotComponents, function (component) {\n            component.destroy();\n        });\n        var componentsType = ['legend', 'background'];\n        each(componentsType, function (t) {\n            var cfg = __assign({ view: _this.view, plot: _this }, _this.options[t]);\n            var component = getPlotComponents(_this, t, cfg);\n            if (component) {\n                component.render();\n                _this.plotComponents.push(component);\n            }\n        });\n    };\n    return DensityHeatmapLayer;\n}(ViewLayer));\nexport default DensityHeatmapLayer;\nregisterPlotType('densityHeatmap', DensityHeatmapLayer);\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/density-heatmap/layer.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/density-heatmap/layer.js"],"names":[],"mappings":"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","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { deepMix, each, has } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport ViewLayer from '../../base/view-layer';\nimport { getComponent } from '../../components/factory';\nimport { getGeom } from '../../geoms/factory';\nimport { extractScale } from '../../util/scale';\nimport '../../geoms/heatmap/linear';\nimport { getPlotComponents } from './components';\nimport * as EventParser from './event';\nvar DensityHeatmapLayer = /** @class */ (function (_super) {\n    __extends(DensityHeatmapLayer, _super);\n    function DensityHeatmapLayer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'densityHeatmap';\n        _this.plotComponents = [];\n        return _this;\n    }\n    DensityHeatmapLayer.getDefaultOptions = function () {\n        return deepMix({}, _super.getDefaultOptions.call(this), {\n            xAxis: {\n                visible: true,\n                autoRotateTitle: false,\n                grid: {\n                    visible: false,\n                },\n                line: {\n                    visible: true,\n                },\n                tickLine: {\n                    visible: true,\n                },\n                label: {\n                    visible: true,\n                    autoHide: true,\n                    autoRotate: true,\n                },\n                title: {\n                    visible: false,\n                    spacing: 12,\n                },\n            },\n            yAxis: {\n                visible: true,\n                autoRotateTitle: true,\n                grid: {\n                    visible: false,\n                },\n                line: {\n                    visible: true,\n                },\n                tickLine: {\n                    visible: true,\n                },\n                label: {\n                    visible: true,\n                    autoHide: true,\n                    autoRotate: false,\n                },\n                title: {\n                    visible: false,\n                    spacing: 12,\n                },\n            },\n            tooltip: {\n                visible: true,\n                showCrosshairs: true,\n                crosshairs: {\n                    type: 'xy',\n                    line: {\n                        style: {\n                            stroke: '#000000',\n                            lineWidth: 1,\n                            opacity: 0.5,\n                        },\n                    },\n                },\n                showMarkers: false,\n            },\n            legend: {\n                visible: true,\n                position: 'bottom-center',\n            },\n            color: [\n                'rgba(33,102,172,0)',\n                'rgb(103,169,207)',\n                'rgb(209,229,240)',\n                'rgb(253,219,199)',\n                'rgb(239,138,98)',\n                'rgb(178,24,43)',\n            ],\n            interactions: [{ type: 'tooltip' }],\n        });\n    };\n    DensityHeatmapLayer.prototype.afterRender = function () {\n        this.renderPlotComponents();\n        _super.prototype.afterRender.call(this);\n    };\n    DensityHeatmapLayer.prototype.destroy = function () {\n        each(this.plotComponents, function (component) {\n            component.destroy();\n        });\n        _super.prototype.destroy.call(this);\n    };\n    DensityHeatmapLayer.prototype.scale = function () {\n        var props = this.options;\n        var scales = {};\n        /** 配置x-scale */\n        scales[props.xField] = {};\n        if (has(props, 'xAxis')) {\n            extractScale(scales[props.xField], props.xAxis);\n        }\n        /** 配置y-scale */\n        scales[props.yField] = {};\n        if (has(props, 'yAxis')) {\n            extractScale(scales[props.yField], props.yAxis);\n        }\n        this.setConfig('scales', scales);\n        _super.prototype.scale.call(this);\n    };\n    DensityHeatmapLayer.prototype.coord = function () {\n        return;\n    };\n    DensityHeatmapLayer.prototype.geometryParser = function () {\n        return 'heatmap';\n    };\n    DensityHeatmapLayer.prototype.addGeometry = function () {\n        if (this.options.data.length > 1) {\n            var config = {\n                type: 'linearheatmap',\n                position: {\n                    fields: [this.options.xField, this.options.yField],\n                },\n                color: {\n                    fields: [this.options.colorField],\n                    values: this.options.color,\n                },\n                cfg: {\n                    intensity: this.options.intensity,\n                    radius: this.options.radius,\n                },\n            };\n            if (this.options.radius) {\n                config.radius = this.options.radius;\n            }\n            if (this.options.intensity) {\n                config.intensity = this.options.intensity;\n            }\n            if (this.options.tooltip && (this.options.tooltip.fields || this.options.tooltip.formatter)) {\n                this.geometryTooltip(config);\n            }\n            this.setConfig('geometry', config);\n            this.addPoint();\n        }\n    };\n    DensityHeatmapLayer.prototype.addPoint = function () {\n        var props = this.options;\n        var defaultConfig = { visible: false, size: 0 };\n        if (props.point && props.point.visible) {\n            props.point = deepMix(defaultConfig, props.point);\n        }\n        else {\n            props.point = defaultConfig;\n        }\n        var point = getGeom('point', 'guide', {\n            plot: this,\n        });\n        point.active = false;\n        // point.label = this.extractLabel();\n        this.setConfig('geometry', point);\n    };\n    DensityHeatmapLayer.prototype.extractLabel = function () {\n        var props = this.options;\n        var label = props.label;\n        if (label && label.visible === false) {\n            return false;\n        }\n        var labelConfig = getComponent('label', __assign({ plot: this, labelType: 'scatterLabel', fields: [props.xField, props.yField], position: 'middle', offset: 0 }, label));\n        return labelConfig;\n    };\n    DensityHeatmapLayer.prototype.legend = function () {\n        this.setConfig('legends', false);\n    };\n    DensityHeatmapLayer.prototype.geometryTooltip = function (config) {\n        config.tooltip = {};\n        var tooltipOptions = this.options.tooltip;\n        if (tooltipOptions.fields) {\n            config.tooltip.fields = tooltipOptions.fields;\n        }\n        if (tooltipOptions.formatter) {\n            config.tooltip.callback = tooltipOptions.formatter;\n            if (!tooltipOptions.fields) {\n                config.tooltip.fields = [this.options.xField, this.options.yField];\n                if (this.options.colorField) {\n                    config.tooltip.fields.push(this.options.colorField);\n                }\n            }\n        }\n    };\n    DensityHeatmapLayer.prototype.parseEvents = function () {\n        _super.prototype.parseEvents.call(this, EventParser);\n    };\n    DensityHeatmapLayer.prototype.renderPlotComponents = function () {\n        var _this = this;\n        each(this.plotComponents, function (component) {\n            component.destroy();\n        });\n        var componentsType = ['legend', 'background'];\n        each(componentsType, function (t) {\n            var cfg = __assign({ view: _this.view, plot: _this }, _this.options[t]);\n            var component = getPlotComponents(_this, t, cfg);\n            if (component) {\n                component.render();\n                _this.plotComponents.push(component);\n            }\n        });\n    };\n    return DensityHeatmapLayer;\n}(ViewLayer));\nexport default DensityHeatmapLayer;\nregisterPlotType('densityHeatmap', DensityHeatmapLayer);\n//# sourceMappingURL=layer.js.map"]}]}