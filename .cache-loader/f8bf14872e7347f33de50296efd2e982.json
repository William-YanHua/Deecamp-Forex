{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\regression\\dist\\regression.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\regression\\dist\\regression.js","mtime":1512902735000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["(function (global, factory) {\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(['module'], factory);\r\n    }\r\n    else if (typeof exports !== \"undefined\") {\r\n        factory(module);\r\n    }\r\n    else {\r\n        var mod = {\r\n            exports: {}\r\n        };\r\n        factory(mod);\r\n        global.regression = mod.exports;\r\n    }\r\n})(this, function (module) {\r\n    'use strict';\r\n    function _defineProperty(obj, key, value) {\r\n        if (key in obj) {\r\n            Object.defineProperty(obj, key, {\r\n                value: value,\r\n                enumerable: true,\r\n                configurable: true,\r\n                writable: true\r\n            });\r\n        }\r\n        else {\r\n            obj[key] = value;\r\n        }\r\n        return obj;\r\n    }\r\n    var _extends = Object.assign || function (target) {\r\n        for (var i = 1; i < arguments.length; i++) {\r\n            var source = arguments[i];\r\n            for (var key in source) {\r\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n                    target[key] = source[key];\r\n                }\r\n            }\r\n        }\r\n        return target;\r\n    };\r\n    function _toConsumableArray(arr) {\r\n        if (Array.isArray(arr)) {\r\n            for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\r\n                arr2[i] = arr[i];\r\n            }\r\n            return arr2;\r\n        }\r\n        else {\r\n            return Array.from(arr);\r\n        }\r\n    }\r\n    var DEFAULT_OPTIONS = { order: 2, precision: 2, period: null };\r\n    function determinationCoefficient(data, results) {\r\n        var predictions = [];\r\n        var observations = [];\r\n        data.forEach(function (d, i) {\r\n            if (d[1] !== null) {\r\n                observations.push(d);\r\n                predictions.push(results[i]);\r\n            }\r\n        });\r\n        var sum = observations.reduce(function (a, observation) {\r\n            return a + observation[1];\r\n        }, 0);\r\n        var mean = sum / observations.length;\r\n        var ssyy = observations.reduce(function (a, observation) {\r\n            var difference = observation[1] - mean;\r\n            return a + difference * difference;\r\n        }, 0);\r\n        var sse = observations.reduce(function (accum, observation, index) {\r\n            var prediction = predictions[index];\r\n            var residual = observation[1] - prediction[1];\r\n            return accum + residual * residual;\r\n        }, 0);\r\n        return 1 - sse / ssyy;\r\n    }\r\n    function gaussianElimination(input, order) {\r\n        var matrix = input;\r\n        var n = input.length - 1;\r\n        var coefficients = [order];\r\n        for (var i = 0; i < n; i++) {\r\n            var maxrow = i;\r\n            for (var j = i + 1; j < n; j++) {\r\n                if (Math.abs(matrix[i][j]) > Math.abs(matrix[i][maxrow])) {\r\n                    maxrow = j;\r\n                }\r\n            }\r\n            for (var k = i; k < n + 1; k++) {\r\n                var tmp = matrix[k][i];\r\n                matrix[k][i] = matrix[k][maxrow];\r\n                matrix[k][maxrow] = tmp;\r\n            }\r\n            for (var _j = i + 1; _j < n; _j++) {\r\n                for (var _k = n; _k >= i; _k--) {\r\n                    matrix[_k][_j] -= matrix[_k][i] * matrix[i][_j] / matrix[i][i];\r\n                }\r\n            }\r\n        }\r\n        for (var _j2 = n - 1; _j2 >= 0; _j2--) {\r\n            var total = 0;\r\n            for (var _k2 = _j2 + 1; _k2 < n; _k2++) {\r\n                total += matrix[_k2][_j2] * coefficients[_k2];\r\n            }\r\n            coefficients[_j2] = (matrix[n][_j2] - total) / matrix[_j2][_j2];\r\n        }\r\n        return coefficients;\r\n    }\r\n    function round(number, precision) {\r\n        var factor = Math.pow(10, precision);\r\n        return Math.round(number * factor) / factor;\r\n    }\r\n    var methods = {\r\n        linear: function linear(data, options) {\r\n            var sum = [0, 0, 0, 0, 0];\r\n            var len = 0;\r\n            for (var n = 0; n < data.length; n++) {\r\n                if (data[n][1] !== null) {\r\n                    len++;\r\n                    sum[0] += data[n][0];\r\n                    sum[1] += data[n][1];\r\n                    sum[2] += data[n][0] * data[n][0];\r\n                    sum[3] += data[n][0] * data[n][1];\r\n                    sum[4] += data[n][1] * data[n][1];\r\n                }\r\n            }\r\n            var run = len * sum[2] - sum[0] * sum[0];\r\n            var rise = len * sum[3] - sum[0] * sum[1];\r\n            var gradient = run === 0 ? 0 : round(rise / run, options.precision);\r\n            var intercept = round(sum[1] / len - gradient * sum[0] / len, options.precision);\r\n            var predict = function predict(x) {\r\n                return [round(x, options.precision), round(gradient * x + intercept, options.precision)];\r\n            };\r\n            var points = data.map(function (point) {\r\n                return predict(point[0]);\r\n            });\r\n            return {\r\n                points: points,\r\n                predict: predict,\r\n                equation: [gradient, intercept],\r\n                r2: round(determinationCoefficient(data, points), options.precision),\r\n                string: intercept === 0 ? 'y = ' + gradient + 'x' : 'y = ' + gradient + 'x + ' + intercept\r\n            };\r\n        },\r\n        exponential: function exponential(data, options) {\r\n            var sum = [0, 0, 0, 0, 0, 0];\r\n            for (var n = 0; n < data.length; n++) {\r\n                if (data[n][1] !== null) {\r\n                    sum[0] += data[n][0];\r\n                    sum[1] += data[n][1];\r\n                    sum[2] += data[n][0] * data[n][0] * data[n][1];\r\n                    sum[3] += data[n][1] * Math.log(data[n][1]);\r\n                    sum[4] += data[n][0] * data[n][1] * Math.log(data[n][1]);\r\n                    sum[5] += data[n][0] * data[n][1];\r\n                }\r\n            }\r\n            var denominator = sum[1] * sum[2] - sum[5] * sum[5];\r\n            var a = Math.exp((sum[2] * sum[3] - sum[5] * sum[4]) / denominator);\r\n            var b = (sum[1] * sum[4] - sum[5] * sum[3]) / denominator;\r\n            var coeffA = round(a, options.precision);\r\n            var coeffB = round(b, options.precision);\r\n            var predict = function predict(x) {\r\n                return [round(x, options.precision), round(coeffA * Math.exp(coeffB * x), options.precision)];\r\n            };\r\n            var points = data.map(function (point) {\r\n                return predict(point[0]);\r\n            });\r\n            return {\r\n                points: points,\r\n                predict: predict,\r\n                equation: [coeffA, coeffB],\r\n                string: 'y = ' + coeffA + 'e^(' + coeffB + 'x)',\r\n                r2: round(determinationCoefficient(data, points), options.precision)\r\n            };\r\n        },\r\n        logarithmic: function logarithmic(data, options) {\r\n            var sum = [0, 0, 0, 0];\r\n            var len = data.length;\r\n            for (var n = 0; n < len; n++) {\r\n                if (data[n][1] !== null) {\r\n                    sum[0] += Math.log(data[n][0]);\r\n                    sum[1] += data[n][1] * Math.log(data[n][0]);\r\n                    sum[2] += data[n][1];\r\n                    sum[3] += Math.pow(Math.log(data[n][0]), 2);\r\n                }\r\n            }\r\n            var a = (len * sum[1] - sum[2] * sum[0]) / (len * sum[3] - sum[0] * sum[0]);\r\n            var coeffB = round(a, options.precision);\r\n            var coeffA = round((sum[2] - coeffB * sum[0]) / len, options.precision);\r\n            var predict = function predict(x) {\r\n                return [round(x, options.precision), round(round(coeffA + coeffB * Math.log(x), options.precision), options.precision)];\r\n            };\r\n            var points = data.map(function (point) {\r\n                return predict(point[0]);\r\n            });\r\n            return {\r\n                points: points,\r\n                predict: predict,\r\n                equation: [coeffA, coeffB],\r\n                string: 'y = ' + coeffA + ' + ' + coeffB + ' ln(x)',\r\n                r2: round(determinationCoefficient(data, points), options.precision)\r\n            };\r\n        },\r\n        power: function power(data, options) {\r\n            var sum = [0, 0, 0, 0, 0];\r\n            var len = data.length;\r\n            for (var n = 0; n < len; n++) {\r\n                if (data[n][1] !== null) {\r\n                    sum[0] += Math.log(data[n][0]);\r\n                    sum[1] += Math.log(data[n][1]) * Math.log(data[n][0]);\r\n                    sum[2] += Math.log(data[n][1]);\r\n                    sum[3] += Math.pow(Math.log(data[n][0]), 2);\r\n                }\r\n            }\r\n            var b = (len * sum[1] - sum[0] * sum[2]) / (len * sum[3] - Math.pow(sum[0], 2));\r\n            var a = (sum[2] - b * sum[0]) / len;\r\n            var coeffA = round(Math.exp(a), options.precision);\r\n            var coeffB = round(b, options.precision);\r\n            var predict = function predict(x) {\r\n                return [round(x, options.precision), round(round(coeffA * Math.pow(x, coeffB), options.precision), options.precision)];\r\n            };\r\n            var points = data.map(function (point) {\r\n                return predict(point[0]);\r\n            });\r\n            return {\r\n                points: points,\r\n                predict: predict,\r\n                equation: [coeffA, coeffB],\r\n                string: 'y = ' + coeffA + 'x^' + coeffB,\r\n                r2: round(determinationCoefficient(data, points), options.precision)\r\n            };\r\n        },\r\n        polynomial: function polynomial(data, options) {\r\n            var lhs = [];\r\n            var rhs = [];\r\n            var a = 0;\r\n            var b = 0;\r\n            var len = data.length;\r\n            var k = options.order + 1;\r\n            for (var i = 0; i < k; i++) {\r\n                for (var l = 0; l < len; l++) {\r\n                    if (data[l][1] !== null) {\r\n                        a += Math.pow(data[l][0], i) * data[l][1];\r\n                    }\r\n                }\r\n                lhs.push(a);\r\n                a = 0;\r\n                var c = [];\r\n                for (var j = 0; j < k; j++) {\r\n                    for (var _l = 0; _l < len; _l++) {\r\n                        if (data[_l][1] !== null) {\r\n                            b += Math.pow(data[_l][0], i + j);\r\n                        }\r\n                    }\r\n                    c.push(b);\r\n                    b = 0;\r\n                }\r\n                rhs.push(c);\r\n            }\r\n            rhs.push(lhs);\r\n            var coefficients = gaussianElimination(rhs, k).map(function (v) {\r\n                return round(v, options.precision);\r\n            });\r\n            var predict = function predict(x) {\r\n                return [round(x, options.precision), round(coefficients.reduce(function (sum, coeff, power) {\r\n                        return sum + coeff * Math.pow(x, power);\r\n                    }, 0), options.precision)];\r\n            };\r\n            var points = data.map(function (point) {\r\n                return predict(point[0]);\r\n            });\r\n            var string = 'y = ';\r\n            for (var _i = coefficients.length - 1; _i >= 0; _i--) {\r\n                if (_i > 1) {\r\n                    string += coefficients[_i] + 'x^' + _i + ' + ';\r\n                }\r\n                else if (_i === 1) {\r\n                    string += coefficients[_i] + 'x + ';\r\n                }\r\n                else {\r\n                    string += coefficients[_i];\r\n                }\r\n            }\r\n            return {\r\n                string: string,\r\n                points: points,\r\n                predict: predict,\r\n                equation: [].concat(_toConsumableArray(coefficients)).reverse(),\r\n                r2: round(determinationCoefficient(data, points), options.precision)\r\n            };\r\n        }\r\n    };\r\n    function createWrapper() {\r\n        var reduce = function reduce(accumulator, name) {\r\n            return _extends({\r\n                _round: round\r\n            }, accumulator, _defineProperty({}, name, function (data, supplied) {\r\n                return methods[name](data, _extends({}, DEFAULT_OPTIONS, supplied));\r\n            }));\r\n        };\r\n        return Object.keys(methods).reduce(reduce, {});\r\n    }\r\n    module.exports = createWrapper();\r\n});\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\regression\\dist\\regression.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\regression\\dist\\regression.js"],"names":[],"mappings":"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","sourcesContent":["(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['module'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(module);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod);\n    global.regression = mod.exports;\n  }\n})(this, function (module) {\n  'use strict';\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  function _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n        arr2[i] = arr[i];\n      }\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  }\n\n  var DEFAULT_OPTIONS = { order: 2, precision: 2, period: null };\n\n  /**\n  * Determine the coefficient of determination (r^2) of a fit from the observations\n  * and predictions.\n  *\n  * @param {Array<Array<number>>} data - Pairs of observed x-y values\n  * @param {Array<Array<number>>} results - Pairs of observed predicted x-y values\n  *\n  * @return {number} - The r^2 value, or NaN if one cannot be calculated.\n  */\n  function determinationCoefficient(data, results) {\n    var predictions = [];\n    var observations = [];\n\n    data.forEach(function (d, i) {\n      if (d[1] !== null) {\n        observations.push(d);\n        predictions.push(results[i]);\n      }\n    });\n\n    var sum = observations.reduce(function (a, observation) {\n      return a + observation[1];\n    }, 0);\n    var mean = sum / observations.length;\n\n    var ssyy = observations.reduce(function (a, observation) {\n      var difference = observation[1] - mean;\n      return a + difference * difference;\n    }, 0);\n\n    var sse = observations.reduce(function (accum, observation, index) {\n      var prediction = predictions[index];\n      var residual = observation[1] - prediction[1];\n      return accum + residual * residual;\n    }, 0);\n\n    return 1 - sse / ssyy;\n  }\n\n  /**\n  * Determine the solution of a system of linear equations A * x = b using\n  * Gaussian elimination.\n  *\n  * @param {Array<Array<number>>} input - A 2-d matrix of data in row-major form [ A | b ]\n  * @param {number} order - How many degrees to solve for\n  *\n  * @return {Array<number>} - Vector of normalized solution coefficients matrix (x)\n  */\n  function gaussianElimination(input, order) {\n    var matrix = input;\n    var n = input.length - 1;\n    var coefficients = [order];\n\n    for (var i = 0; i < n; i++) {\n      var maxrow = i;\n      for (var j = i + 1; j < n; j++) {\n        if (Math.abs(matrix[i][j]) > Math.abs(matrix[i][maxrow])) {\n          maxrow = j;\n        }\n      }\n\n      for (var k = i; k < n + 1; k++) {\n        var tmp = matrix[k][i];\n        matrix[k][i] = matrix[k][maxrow];\n        matrix[k][maxrow] = tmp;\n      }\n\n      for (var _j = i + 1; _j < n; _j++) {\n        for (var _k = n; _k >= i; _k--) {\n          matrix[_k][_j] -= matrix[_k][i] * matrix[i][_j] / matrix[i][i];\n        }\n      }\n    }\n\n    for (var _j2 = n - 1; _j2 >= 0; _j2--) {\n      var total = 0;\n      for (var _k2 = _j2 + 1; _k2 < n; _k2++) {\n        total += matrix[_k2][_j2] * coefficients[_k2];\n      }\n\n      coefficients[_j2] = (matrix[n][_j2] - total) / matrix[_j2][_j2];\n    }\n\n    return coefficients;\n  }\n\n  /**\n  * Round a number to a precision, specificed in number of decimal places\n  *\n  * @param {number} number - The number to round\n  * @param {number} precision - The number of decimal places to round to:\n  *                             > 0 means decimals, < 0 means powers of 10\n  *\n  *\n  * @return {numbr} - The number, rounded\n  */\n  function round(number, precision) {\n    var factor = Math.pow(10, precision);\n    return Math.round(number * factor) / factor;\n  }\n\n  /**\n  * The set of all fitting methods\n  *\n  * @namespace\n  */\n  var methods = {\n    linear: function linear(data, options) {\n      var sum = [0, 0, 0, 0, 0];\n      var len = 0;\n\n      for (var n = 0; n < data.length; n++) {\n        if (data[n][1] !== null) {\n          len++;\n          sum[0] += data[n][0];\n          sum[1] += data[n][1];\n          sum[2] += data[n][0] * data[n][0];\n          sum[3] += data[n][0] * data[n][1];\n          sum[4] += data[n][1] * data[n][1];\n        }\n      }\n\n      var run = len * sum[2] - sum[0] * sum[0];\n      var rise = len * sum[3] - sum[0] * sum[1];\n      var gradient = run === 0 ? 0 : round(rise / run, options.precision);\n      var intercept = round(sum[1] / len - gradient * sum[0] / len, options.precision);\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(gradient * x + intercept, options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      return {\n        points: points,\n        predict: predict,\n        equation: [gradient, intercept],\n        r2: round(determinationCoefficient(data, points), options.precision),\n        string: intercept === 0 ? 'y = ' + gradient + 'x' : 'y = ' + gradient + 'x + ' + intercept\n      };\n    },\n    exponential: function exponential(data, options) {\n      var sum = [0, 0, 0, 0, 0, 0];\n\n      for (var n = 0; n < data.length; n++) {\n        if (data[n][1] !== null) {\n          sum[0] += data[n][0];\n          sum[1] += data[n][1];\n          sum[2] += data[n][0] * data[n][0] * data[n][1];\n          sum[3] += data[n][1] * Math.log(data[n][1]);\n          sum[4] += data[n][0] * data[n][1] * Math.log(data[n][1]);\n          sum[5] += data[n][0] * data[n][1];\n        }\n      }\n\n      var denominator = sum[1] * sum[2] - sum[5] * sum[5];\n      var a = Math.exp((sum[2] * sum[3] - sum[5] * sum[4]) / denominator);\n      var b = (sum[1] * sum[4] - sum[5] * sum[3]) / denominator;\n      var coeffA = round(a, options.precision);\n      var coeffB = round(b, options.precision);\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(coeffA * Math.exp(coeffB * x), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      return {\n        points: points,\n        predict: predict,\n        equation: [coeffA, coeffB],\n        string: 'y = ' + coeffA + 'e^(' + coeffB + 'x)',\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    },\n    logarithmic: function logarithmic(data, options) {\n      var sum = [0, 0, 0, 0];\n      var len = data.length;\n\n      for (var n = 0; n < len; n++) {\n        if (data[n][1] !== null) {\n          sum[0] += Math.log(data[n][0]);\n          sum[1] += data[n][1] * Math.log(data[n][0]);\n          sum[2] += data[n][1];\n          sum[3] += Math.pow(Math.log(data[n][0]), 2);\n        }\n      }\n\n      var a = (len * sum[1] - sum[2] * sum[0]) / (len * sum[3] - sum[0] * sum[0]);\n      var coeffB = round(a, options.precision);\n      var coeffA = round((sum[2] - coeffB * sum[0]) / len, options.precision);\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(round(coeffA + coeffB * Math.log(x), options.precision), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      return {\n        points: points,\n        predict: predict,\n        equation: [coeffA, coeffB],\n        string: 'y = ' + coeffA + ' + ' + coeffB + ' ln(x)',\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    },\n    power: function power(data, options) {\n      var sum = [0, 0, 0, 0, 0];\n      var len = data.length;\n\n      for (var n = 0; n < len; n++) {\n        if (data[n][1] !== null) {\n          sum[0] += Math.log(data[n][0]);\n          sum[1] += Math.log(data[n][1]) * Math.log(data[n][0]);\n          sum[2] += Math.log(data[n][1]);\n          sum[3] += Math.pow(Math.log(data[n][0]), 2);\n        }\n      }\n\n      var b = (len * sum[1] - sum[0] * sum[2]) / (len * sum[3] - Math.pow(sum[0], 2));\n      var a = (sum[2] - b * sum[0]) / len;\n      var coeffA = round(Math.exp(a), options.precision);\n      var coeffB = round(b, options.precision);\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(round(coeffA * Math.pow(x, coeffB), options.precision), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      return {\n        points: points,\n        predict: predict,\n        equation: [coeffA, coeffB],\n        string: 'y = ' + coeffA + 'x^' + coeffB,\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    },\n    polynomial: function polynomial(data, options) {\n      var lhs = [];\n      var rhs = [];\n      var a = 0;\n      var b = 0;\n      var len = data.length;\n      var k = options.order + 1;\n\n      for (var i = 0; i < k; i++) {\n        for (var l = 0; l < len; l++) {\n          if (data[l][1] !== null) {\n            a += Math.pow(data[l][0], i) * data[l][1];\n          }\n        }\n\n        lhs.push(a);\n        a = 0;\n\n        var c = [];\n        for (var j = 0; j < k; j++) {\n          for (var _l = 0; _l < len; _l++) {\n            if (data[_l][1] !== null) {\n              b += Math.pow(data[_l][0], i + j);\n            }\n          }\n          c.push(b);\n          b = 0;\n        }\n        rhs.push(c);\n      }\n      rhs.push(lhs);\n\n      var coefficients = gaussianElimination(rhs, k).map(function (v) {\n        return round(v, options.precision);\n      });\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(coefficients.reduce(function (sum, coeff, power) {\n          return sum + coeff * Math.pow(x, power);\n        }, 0), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      var string = 'y = ';\n      for (var _i = coefficients.length - 1; _i >= 0; _i--) {\n        if (_i > 1) {\n          string += coefficients[_i] + 'x^' + _i + ' + ';\n        } else if (_i === 1) {\n          string += coefficients[_i] + 'x + ';\n        } else {\n          string += coefficients[_i];\n        }\n      }\n\n      return {\n        string: string,\n        points: points,\n        predict: predict,\n        equation: [].concat(_toConsumableArray(coefficients)).reverse(),\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    }\n  };\n\n  function createWrapper() {\n    var reduce = function reduce(accumulator, name) {\n      return _extends({\n        _round: round\n      }, accumulator, _defineProperty({}, name, function (data, supplied) {\n        return methods[name](data, _extends({}, DEFAULT_OPTIONS, supplied));\n      }));\n    };\n\n    return Object.keys(methods).reduce(reduce, {});\n  }\n\n  module.exports = createWrapper();\n});\n"]}]}