{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/util/text.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/util/text.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { __spreadArrays } from \"tslib\";\nimport { memoize, isString, values, toString } from '@antv/util';\nvar canvas = document.createElement('canvas');\nvar ctx = canvas.getContext('2d');\nexport var measureTextWidth = memoize(function (text, font) {\n    if (font === void 0) {\n        font = {};\n    }\n    var fontSize = font.fontSize, fontFamily = font.fontFamily, fontWeight = font.fontWeight, fontStyle = font.fontStyle, fontVariant = font.fontVariant;\n    ctx.font = [fontStyle, fontVariant, fontWeight, fontSize + \"px\", fontFamily].join(' ');\n    return ctx.measureText(isString(text) ? text : '').width;\n}, function (text, font) { return (font ? __spreadArrays([text], values(font)).join('') : text); });\nexport var getEllipsisText = function (text, maxWidth, font) {\n    var STEP = 16;\n    var DOT_WIDTH = measureTextWidth('...', font);\n    var leftText;\n    if (!isString(text)) {\n        leftText = toString(text);\n    }\n    else {\n        leftText = text;\n    }\n    var leftWidth = maxWidth;\n    var r = [];\n    var currentText;\n    var currentWidth;\n    if (measureTextWidth(text, font) <= maxWidth) {\n        return text;\n    }\n    while (true) {\n        currentText = leftText.substr(0, STEP);\n        currentWidth = measureTextWidth(currentText, font);\n        if (currentWidth + DOT_WIDTH > leftWidth) {\n            if (currentWidth > leftWidth) {\n                break;\n            }\n        }\n        r.push(currentText);\n        leftWidth -= currentWidth;\n        leftText = leftText.substr(STEP);\n        if (!leftText) {\n            return r.join('');\n        }\n    }\n    while (true) {\n        currentText = leftText.substr(0, 1);\n        currentWidth = measureTextWidth(currentText, font);\n        if (currentWidth + DOT_WIDTH > leftWidth) {\n            break;\n        }\n        r.push(currentText);\n        leftWidth -= currentWidth;\n        leftText = leftText.substr(1);\n        if (!leftText) {\n            return r.join('');\n        }\n    }\n    return r.join('') + \"...\";\n};\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/util/text.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/util/text.js"],"names":[],"mappings":"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","sourcesContent":["import { __spreadArrays } from \"tslib\";\nimport { memoize, isString, values, toString } from '@antv/util';\nvar canvas = document.createElement('canvas');\nvar ctx = canvas.getContext('2d');\n/**\n * 计算文本在画布中的宽度\n */\nexport var measureTextWidth = memoize(function (text, font) {\n    if (font === void 0) { font = {}; }\n    var fontSize = font.fontSize, fontFamily = font.fontFamily, fontWeight = font.fontWeight, fontStyle = font.fontStyle, fontVariant = font.fontVariant;\n    ctx.font = [fontStyle, fontVariant, fontWeight, fontSize + \"px\", fontFamily].join(' ');\n    return ctx.measureText(isString(text) ? text : '').width;\n}, function (text, font) { return (font ? __spreadArrays([text], values(font)).join('') : text); });\n/**\n * 获取文本的 ... 文本。\n * 算法（减少每次 measureText 的长度，measureText 的性能跟字符串时间相关）：\n * 1. 先通过 STEP 逐步计算，找到最后一个小于 maxWidth 的字符串\n * 2. 然后对最后这个字符串二分计算\n * @param text 需要计算的文本, 由于历史原因 除了支持string，还支持空值,number和数组等\n * @param maxWidth\n * @param font\n * TODO 后续更新省略算法\n */\nexport var getEllipsisText = function (text, maxWidth, font) {\n    var STEP = 16; // 每次 16，调参工程师\n    var DOT_WIDTH = measureTextWidth('...', font);\n    var leftText;\n    if (!isString(text)) {\n        leftText = toString(text);\n    }\n    else {\n        leftText = text;\n    }\n    var leftWidth = maxWidth;\n    var r = []; // 最终的分段字符串\n    var currentText;\n    var currentWidth;\n    if (measureTextWidth(text, font) <= maxWidth) {\n        return text;\n    }\n    // 首先通过 step 计算，找出最大的未超出长度的\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        // 更新字符串\n        currentText = leftText.substr(0, STEP);\n        // 计算宽度\n        currentWidth = measureTextWidth(currentText, font);\n        // 超出剩余宽度，则停止\n        if (currentWidth + DOT_WIDTH > leftWidth) {\n            if (currentWidth > leftWidth) {\n                break;\n            }\n        }\n        r.push(currentText);\n        // 没有超出，则计算剩余宽度\n        leftWidth -= currentWidth;\n        leftText = leftText.substr(STEP);\n        // 字符串整体没有超出\n        if (!leftText) {\n            return r.join('');\n        }\n    }\n    // 最下的最后一个 STEP，使用 1 递增（用二分效果更高）\n    //eslint-disable-next-line no-constant-condition\n    while (true) {\n        // 更新字符串\n        currentText = leftText.substr(0, 1);\n        // 计算宽度\n        currentWidth = measureTextWidth(currentText, font);\n        // 超出剩余宽度，则停止\n        if (currentWidth + DOT_WIDTH > leftWidth) {\n            break;\n        }\n        r.push(currentText);\n        // 没有超出，则计算剩余宽度\n        leftWidth -= currentWidth;\n        leftText = leftText.substr(1);\n        if (!leftText) {\n            return r.join('');\n        }\n    }\n    return r.join('') + \"...\";\n};\n//# sourceMappingURL=text.js.map"]}]}