{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\base\\controller\\padding.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\base\\controller\\padding.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { filter, each, isArray, clone } from '@antv/util';\r\nimport BBox from '../../util/bbox';\r\nimport { getLegendComponents, getAxisComponents } from '../../util/common';\r\nvar PaddingController = (function () {\r\n    function PaddingController(cfg) {\r\n        this.innerPaddingComponents = [];\r\n        this.outerPaddingComponents = [];\r\n        this.plot = cfg.plot;\r\n    }\r\n    PaddingController.prototype.registerPadding = function (component, type, checkIfExist) {\r\n        if (type === void 0) {\r\n            type = 'outer';\r\n        }\r\n        if (checkIfExist === void 0) {\r\n            checkIfExist = false;\r\n        }\r\n        if (type === 'inner') {\r\n            if (checkIfExist) {\r\n                if (!this.innerPaddingComponents.find(function (c) { return c == component; })) {\r\n                    this.innerPaddingComponents.push(component);\r\n                }\r\n            }\r\n            else {\r\n                this.innerPaddingComponents.push(component);\r\n            }\r\n        }\r\n        else {\r\n            if (checkIfExist) {\r\n                if (!this.outerPaddingComponents.find(function (c) { return c == component; })) {\r\n                    this.outerPaddingComponents.push(component);\r\n                }\r\n            }\r\n            else {\r\n                this.outerPaddingComponents.push(component);\r\n            }\r\n        }\r\n    };\r\n    PaddingController.prototype.getPaddingComponents = function (type) {\r\n        if (type === void 0) {\r\n            type = 'outer';\r\n        }\r\n        return (type === 'outer' ? this.outerPaddingComponents : this.innerPaddingComponents) || [];\r\n    };\r\n    PaddingController.prototype.clear = function () {\r\n        this.innerPaddingComponents = [];\r\n        this.outerPaddingComponents = filter(this.outerPaddingComponents, function (component) { return component.afterRender; });\r\n    };\r\n    PaddingController.prototype.clearOuterComponents = function () {\r\n        each(this.outerPaddingComponents, function (component) {\r\n            if (component.afterRender) {\r\n                component.destroy();\r\n            }\r\n        });\r\n        this.outerPaddingComponents = [];\r\n    };\r\n    PaddingController.prototype.getPadding = function () {\r\n        var props = this.plot.options;\r\n        var padding = props.padding ? props.padding : this.plot.config.theme.padding;\r\n        if (padding === 'auto') {\r\n            return [0, 0, 0, 1];\r\n        }\r\n        return padding;\r\n    };\r\n    PaddingController.prototype.processAutoPadding = function () {\r\n        var padding = this._getInnerAutoPadding();\r\n        this.plot.updateConfig({\r\n            padding: padding,\r\n        });\r\n        this.plot.render();\r\n    };\r\n    PaddingController.prototype.processOuterPadding = function () {\r\n        if (!this.plot.layerBBox) {\r\n            this.plot.layerBBox = new BBox(this.plot.x, this.plot.y, this.plot.width, this.plot.height);\r\n        }\r\n        var viewMinX = this.plot.layerBBox.minX;\r\n        var viewMaxX = this.plot.layerBBox.maxX;\r\n        var viewMinY = this.plot.layerBBox.minY;\r\n        var viewMaxY = this.plot.layerBBox.maxY;\r\n        each(this.outerPaddingComponents, function (component) {\r\n            var position = component.position;\r\n            if (component.destroyed) {\r\n                return;\r\n            }\r\n            var _a = component.getBBox(), minX = _a.minX, maxX = _a.maxX, minY = _a.minY, maxY = _a.maxY;\r\n            if (maxY >= viewMinY && maxY <= viewMaxY && position === 'top') {\r\n                viewMinY = maxY;\r\n            }\r\n            if (minY >= viewMinY && minY <= viewMaxY && position === 'bottom') {\r\n                viewMaxY = minY;\r\n            }\r\n            if (maxX > viewMinX && maxX <= viewMaxX && position === 'left') {\r\n                viewMinX = maxX;\r\n            }\r\n            if (minX >= viewMinX && maxX <= viewMaxX && position === 'right') {\r\n                viewMaxX = minX;\r\n            }\r\n        });\r\n        return new BBox(viewMinX, viewMinY, viewMaxX - viewMinX, viewMaxY - viewMinY);\r\n    };\r\n    PaddingController.prototype._getInnerAutoPadding = function () {\r\n        var _a;\r\n        var props = this.plot.options;\r\n        var view = this.plot.view;\r\n        var viewRange = view.coordinateBBox;\r\n        var maxX = viewRange.maxX, maxY = viewRange.maxY, minY = viewRange.minY, minX = viewRange.minX;\r\n        var bleeding = this.plot.config.theme.bleeding;\r\n        if (isArray(bleeding)) {\r\n            each(bleeding, function (it, index) {\r\n                if (typeof bleeding[index] === 'function') {\r\n                    bleeding[index] = bleeding[index](props);\r\n                }\r\n            });\r\n        }\r\n        this.bleeding = clone(bleeding);\r\n        var components_bbox = [new BBox(viewRange.minX, viewRange.minY, viewRange.width, viewRange.height)];\r\n        if (((_a = this.plot.config.coordinate) === null || _a === void 0 ? void 0 : _a.type) === 'cartesian') {\r\n            this._getCartesianAxis(view, components_bbox[0], components_bbox);\r\n        }\r\n        var box = this._mergeBBox(components_bbox);\r\n        this._getLegend(view, box, components_bbox);\r\n        box = this._mergeBBox(components_bbox);\r\n        var components = this.innerPaddingComponents;\r\n        each(components, function (obj) {\r\n            var component = obj;\r\n            var bbox = component.getBBox();\r\n            components_bbox.push(bbox);\r\n        });\r\n        box = this._mergeBBox(components_bbox);\r\n        var padding = [\r\n            minY - box.minY + this.bleeding[0],\r\n            box.maxX - maxX + this.bleeding[1],\r\n            box.maxY - maxY + this.bleeding[2],\r\n            minX - box.minX + this.bleeding[3],\r\n        ];\r\n        var panelPadding = this._getPanel(view);\r\n        padding[0] += panelPadding[0];\r\n        padding[1] += panelPadding[1];\r\n        padding[2] += panelPadding[2];\r\n        padding[3] += panelPadding[3];\r\n        return padding;\r\n    };\r\n    PaddingController.prototype._getCartesianAxis = function (view, globalBBox, bboxes) {\r\n        var axes = getAxisComponents(view);\r\n        var isTransposed = view.getCoordinate().isTransposed;\r\n        each(axes, function (axis) {\r\n            if (axis.get('group').get('children').length === 0) {\r\n                return;\r\n            }\r\n            var position = axis.get('position');\r\n            var _a = axis.getLayoutBBox(), minX = _a.minX, minY = _a.minY, width = _a.width, height = _a.height;\r\n            if (!isTransposed) {\r\n                if (position === 'left') {\r\n                    bboxes.push(new BBox(globalBBox.minX - width, minY, width, height));\r\n                }\r\n                else if (position === 'bottom') {\r\n                    bboxes.push(new BBox(minX, globalBBox.maxY, width, height));\r\n                }\r\n                else if (position === 'right') {\r\n                    bboxes.push(new BBox(globalBBox.maxX, minY, width, height));\r\n                }\r\n            }\r\n            else {\r\n                if (position === 'bottom') {\r\n                    bboxes.push(new BBox(globalBBox.minX - width, minY, width, height));\r\n                }\r\n                else if (position === 'left') {\r\n                    bboxes.push(new BBox(minX, globalBBox.maxY, width, height));\r\n                }\r\n                else if (position === 'top') {\r\n                    bboxes.push(new BBox(globalBBox.maxX, minY, width, height));\r\n                }\r\n            }\r\n        });\r\n    };\r\n    PaddingController.prototype._getLegend = function (view, globalBBox, bboxes) {\r\n        var legends = getLegendComponents(view);\r\n        each(legends, function (legend) {\r\n            var position = legend.get('position').split('-')[0];\r\n            var _a = legend.getLayoutBBox(), minX = _a.minX, minY = _a.minY, width = _a.width, height = _a.height;\r\n            if (position === 'top') {\r\n                bboxes.push(new BBox(minX, globalBBox.minY - height, width, height));\r\n            }\r\n            else if (position === 'bottom') {\r\n                bboxes.push(new BBox(minX, globalBBox.maxY, width, height));\r\n            }\r\n            else if (position === 'left') {\r\n                bboxes.push(new BBox(globalBBox.minX - width, minY, width, height));\r\n            }\r\n            else {\r\n                bboxes.push(new BBox(globalBBox.maxX, minY, width, height));\r\n            }\r\n        });\r\n    };\r\n    PaddingController.prototype._getPanel = function (view) {\r\n        var groups = [];\r\n        var geoms = view.geometries;\r\n        each(geoms, function (geom) {\r\n            if (geom.labelsContainer) {\r\n                groups.push(geom.labelsContainer);\r\n            }\r\n        });\r\n        var minX = Infinity;\r\n        var maxX = -Infinity;\r\n        var minY = Infinity;\r\n        var maxY = -Infinity;\r\n        each(groups, function (group) {\r\n            var children = group.get('children');\r\n            children.forEach(function (child) {\r\n                if (child.type === 'group' && child.get('children').length === 0) {\r\n                    return;\r\n                }\r\n                var bbox = child.getBBox();\r\n                if (bbox.minX < minX) {\r\n                    minX = bbox.minX;\r\n                }\r\n                if (bbox.maxX > maxX) {\r\n                    maxX = bbox.maxX;\r\n                }\r\n                if (bbox.minY < minY) {\r\n                    minY = bbox.minY;\r\n                }\r\n                if (bbox.maxY > maxY) {\r\n                    maxY = bbox.maxY;\r\n                }\r\n            });\r\n        });\r\n        var panelRange = view.coordinateBBox;\r\n        var rightDist = Math.max(maxX - parseFloat(panelRange.maxX), 0);\r\n        if (rightDist > 0) {\r\n            var ratio = panelRange.width / (panelRange.width + rightDist);\r\n            rightDist *= ratio;\r\n        }\r\n        var leftDist = Math.max(parseFloat(panelRange.minX) - minX, 0);\r\n        if (leftDist > 0) {\r\n            var ratio = panelRange.width / (panelRange.width + leftDist);\r\n            leftDist *= ratio;\r\n        }\r\n        var topDist = Math.max(parseFloat(panelRange.minY) - minY, 0);\r\n        if (topDist > 0) {\r\n            var ratio = panelRange.height / (panelRange.height + topDist);\r\n            topDist *= ratio;\r\n        }\r\n        var bottomDist = Math.max(maxY - parseFloat(panelRange.maxY), 0);\r\n        if (bottomDist > 0) {\r\n            var ratio = panelRange.height / (panelRange.height + bottomDist);\r\n            bottomDist *= ratio;\r\n        }\r\n        return [topDist, rightDist, bottomDist, leftDist];\r\n    };\r\n    PaddingController.prototype._mergeBBox = function (bboxes) {\r\n        var minX = Infinity;\r\n        var maxX = -Infinity;\r\n        var minY = Infinity;\r\n        var maxY = -Infinity;\r\n        each(bboxes, function (bbox) {\r\n            var box = bbox;\r\n            minX = Math.min(box.minX, minX);\r\n            maxX = Math.max(box.maxX, maxX);\r\n            minY = Math.min(box.minY, minY);\r\n            maxY = Math.max(box.maxY, maxY);\r\n        });\r\n        return { minX: minX, maxX: maxX, minY: minY, maxY: maxY };\r\n    };\r\n    return PaddingController;\r\n}());\r\nexport default PaddingController;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\base\\controller\\padding.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\base\\controller\\padding.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,YAAY,CAAC;AAC1D,OAAO,IAAI,MAAM,iBAAiB,CAAC;AACnC,OAAO,EAAE,mBAAmB,EAAE,iBAAiB,EAAE,MAAM,mBAAmB,CAAC;AAK3E,IAAI,iBAAiB,GAAiB,CAAC;IACnC,SAAS,iBAAiB,CAAC,GAAG;QAC1B,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;IACzB,CAAC;IACD,iBAAiB,CAAC,SAAS,CAAC,eAAe,GAAG,UAAU,SAAS,EAAE,IAAI,EAAE,YAAY;QACjF,IAAI,IAAI,KAAK,KAAK,CAAC,EAAE;YAAE,IAAI,GAAG,OAAO,CAAC;SAAE;QACxC,IAAI,YAAY,KAAK,KAAK,CAAC,EAAE;YAAE,YAAY,GAAG,KAAK,CAAC;SAAE;QACtD,IAAI,IAAI,KAAK,OAAO,EAAE;YAClB,IAAI,YAAY,EAAE;gBACd,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,OAAO,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;oBAC5E,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;iBAC/C;aACJ;iBACI;gBACD,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aAC/C;SACJ;aACI;YACD,IAAI,YAAY,EAAE;gBACd,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,OAAO,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;oBAC5E,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;iBAC/C;aACJ;iBACI;gBACD,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aAC/C;SACJ;IACL,CAAC,CAAC;IACF,iBAAiB,CAAC,SAAS,CAAC,oBAAoB,GAAG,UAAU,IAAI;QAC7D,IAAI,IAAI,KAAK,KAAK,CAAC,EAAE;YAAE,IAAI,GAAG,OAAO,CAAC;SAAE;QACxC,OAAO,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,CAAC;IAChG,CAAC,CAAC;IAIF,iBAAiB,CAAC,SAAS,CAAC,KAAK,GAAG;QAChC,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;QAGjC,IAAI,CAAC,sBAAsB,GAAG,MAAM,CAAC,IAAI,CAAC,sBAAsB,EAAE,UAAU,SAAS,IAAI,OAAO,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9H,CAAC,CAAC;IACF,iBAAiB,CAAC,SAAS,CAAC,oBAAoB,GAAG;QAC/C,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,UAAU,SAAS;YACjD,IAAI,SAAS,CAAC,WAAW,EAAE;gBACvB,SAAS,CAAC,OAAO,EAAE,CAAC;aACvB;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;IACrC,CAAC,CAAC;IACF,iBAAiB,CAAC,SAAS,CAAC,UAAU,GAAG;QACrC,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;QAC9B,IAAI,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC;QAC7E,IAAI,OAAO,KAAK,MAAM,EAAE;YACpB,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACvB;QACD,OAAO,OAAO,CAAC;IACnB,CAAC,CAAC;IAEF,iBAAiB,CAAC,SAAS,CAAC,kBAAkB,GAAG;QAC7C,IAAI,OAAO,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC1C,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;YACnB,OAAO,EAAE,OAAO;SACnB,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;IACvB,CAAC,CAAC;IACF,iBAAiB,CAAC,SAAS,CAAC,mBAAmB,GAAG;QAC9C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACtB,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC/F;QACD,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;QACxC,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;QACxC,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;QACxC,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,UAAU,SAAS;YACjD,IAAI,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;YAClC,IAAI,SAAS,CAAC,SAAS,EAAE;gBACrB,OAAO;aACV;YACD,IAAI,EAAE,GAAG,SAAS,CAAC,OAAO,EAAE,EAAE,IAAI,GAAG,EAAE,CAAC,IAAI,EAAE,IAAI,GAAG,EAAE,CAAC,IAAI,EAAE,IAAI,GAAG,EAAE,CAAC,IAAI,EAAE,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC;YAC7F,IAAI,IAAI,IAAI,QAAQ,IAAI,IAAI,IAAI,QAAQ,IAAI,QAAQ,KAAK,KAAK,EAAE;gBAC5D,QAAQ,GAAG,IAAI,CAAC;aACnB;YACD,IAAI,IAAI,IAAI,QAAQ,IAAI,IAAI,IAAI,QAAQ,IAAI,QAAQ,KAAK,QAAQ,EAAE;gBAC/D,QAAQ,GAAG,IAAI,CAAC;aACnB;YACD,IAAI,IAAI,GAAG,QAAQ,IAAI,IAAI,IAAI,QAAQ,IAAI,QAAQ,KAAK,MAAM,EAAE;gBAC5D,QAAQ,GAAG,IAAI,CAAC;aACnB;YACD,IAAI,IAAI,IAAI,QAAQ,IAAI,IAAI,IAAI,QAAQ,IAAI,QAAQ,KAAK,OAAO,EAAE;gBAC9D,QAAQ,GAAG,IAAI,CAAC;aACnB;QACL,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,GAAG,QAAQ,EAAE,QAAQ,GAAG,QAAQ,CAAC,CAAC;IAClF,CAAC,CAAC;IACF,iBAAiB,CAAC,SAAS,CAAC,oBAAoB,GAAG;QAC/C,IAAI,EAAE,CAAC;QACP,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;QAC9B,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QAC1B,IAAI,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC;QACpC,IAAI,IAAI,GAAG,SAAS,CAAC,IAAI,EAAE,IAAI,GAAG,SAAS,CAAC,IAAI,EAAE,IAAI,GAAG,SAAS,CAAC,IAAI,EAAE,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QAC/F,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC;QAC/C,IAAI,OAAO,CAAC,QAAQ,CAAC,EAAE;YACnB,IAAI,CAAC,QAAQ,EAAE,UAAU,EAAE,EAAE,KAAK;gBAC9B,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,KAAK,UAAU,EAAE;oBACvC,QAAQ,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;iBAC5C;YACL,CAAC,CAAC,CAAC;SACN;QACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;QAEhC,IAAI,eAAe,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;QACpG,IAAI,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,WAAW,EAAE;YACnG,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;SACrE;QACD,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,EAAE,eAAe,CAAC,CAAC;QAC5C,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;QAEvC,IAAI,UAAU,GAAG,IAAI,CAAC,sBAAsB,CAAC;QAC7C,IAAI,CAAC,UAAU,EAAE,UAAU,GAAG;YAC1B,IAAI,SAAS,GAAG,GAAG,CAAC;YACpB,IAAI,IAAI,GAAG,SAAS,CAAC,OAAO,EAAE,CAAC;YAC/B,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;QACH,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;QACvC,IAAI,OAAO,GAAG;YACV,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClC,GAAG,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClC,GAAG,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;SACrC,CAAC;QAEF,IAAI,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACxC,OAAO,CAAC,CAAC,CAAC,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;QAC9B,OAAO,CAAC,CAAC,CAAC,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;QAC9B,OAAO,CAAC,CAAC,CAAC,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;QAC9B,OAAO,CAAC,CAAC,CAAC,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;QAC9B,OAAO,OAAO,CAAC;IACnB,CAAC,CAAC;IACF,iBAAiB,CAAC,SAAS,CAAC,iBAAiB,GAAG,UAAU,IAAI,EAAE,UAAU,EAAE,MAAM;QAC9E,IAAI,IAAI,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACnC,IAAI,YAAY,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,YAAY,CAAC;QACrD,IAAI,CAAC,IAAI,EAAE,UAAU,IAAI;YACrB,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;gBAChD,OAAO;aACV;YACD,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACpC,IAAI,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,EAAE,IAAI,GAAG,EAAE,CAAC,IAAI,EAAE,IAAI,GAAG,EAAE,CAAC,IAAI,EAAE,KAAK,GAAG,EAAE,CAAC,KAAK,EAAE,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC;YACpG,IAAI,CAAC,YAAY,EAAE;gBACf,IAAI,QAAQ,KAAK,MAAM,EAAE;oBACrB,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;iBACvE;qBACI,IAAI,QAAQ,KAAK,QAAQ,EAAE;oBAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;iBAC/D;qBACI,IAAI,QAAQ,KAAK,OAAO,EAAE;oBAC3B,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;iBAC/D;aACJ;iBACI;gBACD,IAAI,QAAQ,KAAK,QAAQ,EAAE;oBACvB,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;iBACvE;qBACI,IAAI,QAAQ,KAAK,MAAM,EAAE;oBAC1B,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;iBAC/D;qBACI,IAAI,QAAQ,KAAK,KAAK,EAAE;oBACzB,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;iBAC/D;aACJ;QACL,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;IACF,iBAAiB,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,IAAI,EAAE,UAAU,EAAE,MAAM;QACvE,IAAI,OAAO,GAAG,mBAAmB,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,CAAC,OAAO,EAAE,UAAU,MAAM;YAC1B,IAAI,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACpD,IAAI,EAAE,GAAG,MAAM,CAAC,aAAa,EAAE,EAAE,IAAI,GAAG,EAAE,CAAC,IAAI,EAAE,IAAI,GAAG,EAAE,CAAC,IAAI,EAAE,KAAK,GAAG,EAAE,CAAC,KAAK,EAAE,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC;YACtG,IAAI,QAAQ,KAAK,KAAK,EAAE;gBACpB,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,IAAI,GAAG,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;aACxE;iBACI,IAAI,QAAQ,KAAK,QAAQ,EAAE;gBAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;aAC/D;iBACI,IAAI,QAAQ,KAAK,MAAM,EAAE;gBAC1B,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;aACvE;iBACI;gBACD,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;aAC/D;QACL,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;IACF,iBAAiB,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,IAAI;QAClD,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;QAC5B,IAAI,CAAC,KAAK,EAAE,UAAU,IAAI;YACtB,IAAI,IAAI,CAAC,eAAe,EAAE;gBACtB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;aACrC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,IAAI,GAAG,QAAQ,CAAC;QACpB,IAAI,IAAI,GAAG,CAAC,QAAQ,CAAC;QACrB,IAAI,IAAI,GAAG,QAAQ,CAAC;QACpB,IAAI,IAAI,GAAG,CAAC,QAAQ,CAAC;QACrB,IAAI,CAAC,MAAM,EAAE,UAAU,KAAK;YACxB,IAAI,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACrC,QAAQ,CAAC,OAAO,CAAC,UAAU,KAAK;gBAC5B,IAAI,KAAK,CAAC,IAAI,KAAK,OAAO,IAAI,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC9D,OAAO;iBACV;gBACD,IAAI,IAAI,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;gBAC3B,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,EAAE;oBAClB,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;iBACpB;gBACD,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,EAAE;oBAClB,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;iBACpB;gBACD,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,EAAE;oBAClB,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;iBACpB;gBACD,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,EAAE;oBAClB,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;iBACpB;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,IAAI,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC;QAErC,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QAChE,IAAI,SAAS,GAAG,CAAC,EAAE;YACf,IAAI,KAAK,GAAG,UAAU,CAAC,KAAK,GAAG,CAAC,UAAU,CAAC,KAAK,GAAG,SAAS,CAAC,CAAC;YAC9D,SAAS,IAAI,KAAK,CAAC;SACtB;QAED,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC;QAC/D,IAAI,QAAQ,GAAG,CAAC,EAAE;YACd,IAAI,KAAK,GAAG,UAAU,CAAC,KAAK,GAAG,CAAC,UAAU,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC;YAC7D,QAAQ,IAAI,KAAK,CAAC;SACrB;QAED,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC;QAC9D,IAAI,OAAO,GAAG,CAAC,EAAE;YACb,IAAI,KAAK,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,UAAU,CAAC,MAAM,GAAG,OAAO,CAAC,CAAC;YAC9D,OAAO,IAAI,KAAK,CAAC;SACpB;QAED,IAAI,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QACjE,IAAI,UAAU,GAAG,CAAC,EAAE;YAChB,IAAI,KAAK,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,UAAU,CAAC,MAAM,GAAG,UAAU,CAAC,CAAC;YACjE,UAAU,IAAI,KAAK,CAAC;SACvB;QACD,OAAO,CAAC,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;IACtD,CAAC,CAAC;IACF,iBAAiB,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,MAAM;QACrD,IAAI,IAAI,GAAG,QAAQ,CAAC;QACpB,IAAI,IAAI,GAAG,CAAC,QAAQ,CAAC;QACrB,IAAI,IAAI,GAAG,QAAQ,CAAC;QACpB,IAAI,IAAI,GAAG,CAAC,QAAQ,CAAC;QACrB,IAAI,CAAC,MAAM,EAAE,UAAU,IAAI;YACvB,IAAI,GAAG,GAAG,IAAI,CAAC;YACf,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAChC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAChC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAChC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;QACH,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;IAC9D,CAAC,CAAC;IACF,OAAO,iBAAiB,CAAC;AAC7B,CAAC,EAAE,CAAC,CAAC;AACL,eAAe,iBAAiB,CAAC","sourcesContent":["import { filter, each, isArray, clone } from '@antv/util';\nimport BBox from '../../util/bbox';\nimport { getLegendComponents, getAxisComponents } from '../../util/common';\n/**\n * 处理图表padding的逻辑：\n * 注册参与padding的自定义组件\n */\nvar PaddingController = /** @class */ (function () {\n    function PaddingController(cfg) {\n        this.innerPaddingComponents = [];\n        this.outerPaddingComponents = [];\n        this.plot = cfg.plot;\n    }\n    PaddingController.prototype.registerPadding = function (component, type, checkIfExist) {\n        if (type === void 0) { type = 'outer'; }\n        if (checkIfExist === void 0) { checkIfExist = false; }\n        if (type === 'inner') {\n            if (checkIfExist) {\n                if (!this.innerPaddingComponents.find(function (c) { return c == component; })) {\n                    this.innerPaddingComponents.push(component);\n                }\n            }\n            else {\n                this.innerPaddingComponents.push(component);\n            }\n        }\n        else {\n            if (checkIfExist) {\n                if (!this.outerPaddingComponents.find(function (c) { return c == component; })) {\n                    this.outerPaddingComponents.push(component);\n                }\n            }\n            else {\n                this.outerPaddingComponents.push(component);\n            }\n        }\n    };\n    PaddingController.prototype.getPaddingComponents = function (type) {\n        if (type === void 0) { type = 'outer'; }\n        return (type === 'outer' ? this.outerPaddingComponents : this.innerPaddingComponents) || [];\n    };\n    /**\n     * 清除已经注册的元素\n     */\n    PaddingController.prototype.clear = function () {\n        this.innerPaddingComponents = [];\n        // 一些组件是在view渲染完成之后渲染初始化的\n        // TODO: afterRender的什么时候清除\n        this.outerPaddingComponents = filter(this.outerPaddingComponents, function (component) { return component.afterRender; });\n    };\n    PaddingController.prototype.clearOuterComponents = function () {\n        each(this.outerPaddingComponents, function (component) {\n            if (component.afterRender) {\n                component.destroy();\n            }\n        });\n        this.outerPaddingComponents = [];\n    };\n    PaddingController.prototype.getPadding = function () {\n        var props = this.plot.options;\n        var padding = props.padding ? props.padding : this.plot.config.theme.padding;\n        if (padding === 'auto') {\n            return [0, 0, 0, 1];\n        }\n        return padding;\n    };\n    /** view层的padding计算 */\n    PaddingController.prototype.processAutoPadding = function () {\n        var padding = this._getInnerAutoPadding();\n        this.plot.updateConfig({\n            padding: padding,\n        });\n        this.plot.render();\n    };\n    PaddingController.prototype.processOuterPadding = function () {\n        if (!this.plot.layerBBox) {\n            this.plot.layerBBox = new BBox(this.plot.x, this.plot.y, this.plot.width, this.plot.height);\n        }\n        var viewMinX = this.plot.layerBBox.minX;\n        var viewMaxX = this.plot.layerBBox.maxX;\n        var viewMinY = this.plot.layerBBox.minY;\n        var viewMaxY = this.plot.layerBBox.maxY;\n        each(this.outerPaddingComponents, function (component) {\n            var position = component.position;\n            if (component.destroyed) {\n                return;\n            }\n            var _a = component.getBBox(), minX = _a.minX, maxX = _a.maxX, minY = _a.minY, maxY = _a.maxY;\n            if (maxY >= viewMinY && maxY <= viewMaxY && position === 'top') {\n                viewMinY = maxY;\n            }\n            if (minY >= viewMinY && minY <= viewMaxY && position === 'bottom') {\n                viewMaxY = minY;\n            }\n            if (maxX > viewMinX && maxX <= viewMaxX && position === 'left') {\n                viewMinX = maxX;\n            }\n            if (minX >= viewMinX && maxX <= viewMaxX && position === 'right') {\n                viewMaxX = minX;\n            }\n        });\n        return new BBox(viewMinX, viewMinY, viewMaxX - viewMinX, viewMaxY - viewMinY);\n    };\n    PaddingController.prototype._getInnerAutoPadding = function () {\n        var _a;\n        var props = this.plot.options;\n        var view = this.plot.view;\n        var viewRange = view.coordinateBBox;\n        var maxX = viewRange.maxX, maxY = viewRange.maxY, minY = viewRange.minY, minX = viewRange.minX;\n        var bleeding = this.plot.config.theme.bleeding;\n        if (isArray(bleeding)) {\n            each(bleeding, function (it, index) {\n                if (typeof bleeding[index] === 'function') {\n                    bleeding[index] = bleeding[index](props);\n                }\n            });\n        }\n        this.bleeding = clone(bleeding);\n        // 参与auto padding的components: axis legend label annotation\n        var components_bbox = [new BBox(viewRange.minX, viewRange.minY, viewRange.width, viewRange.height)];\n        if (((_a = this.plot.config.coordinate) === null || _a === void 0 ? void 0 : _a.type) === 'cartesian') {\n            this._getCartesianAxis(view, components_bbox[0], components_bbox);\n        }\n        var box = this._mergeBBox(components_bbox);\n        this._getLegend(view, box, components_bbox);\n        box = this._mergeBBox(components_bbox);\n        // 参与auto padding的自定义组件\n        var components = this.innerPaddingComponents;\n        each(components, function (obj) {\n            var component = obj;\n            var bbox = component.getBBox();\n            components_bbox.push(bbox);\n        });\n        box = this._mergeBBox(components_bbox);\n        var padding = [\n            minY - box.minY + this.bleeding[0],\n            box.maxX - maxX + this.bleeding[1],\n            box.maxY - maxY + this.bleeding[2],\n            minX - box.minX + this.bleeding[3],\n        ];\n        // label、annotation等\n        var panelPadding = this._getPanel(view);\n        padding[0] += panelPadding[0];\n        padding[1] += panelPadding[1];\n        padding[2] += panelPadding[2];\n        padding[3] += panelPadding[3];\n        return padding;\n    };\n    PaddingController.prototype._getCartesianAxis = function (view, globalBBox, bboxes) {\n        var axes = getAxisComponents(view);\n        var isTransposed = view.getCoordinate().isTransposed;\n        each(axes, function (axis) {\n            if (axis.get('group').get('children').length === 0) {\n                return;\n            }\n            var position = axis.get('position');\n            var _a = axis.getLayoutBBox(), minX = _a.minX, minY = _a.minY, width = _a.width, height = _a.height;\n            if (!isTransposed) {\n                if (position === 'left') {\n                    bboxes.push(new BBox(globalBBox.minX - width, minY, width, height));\n                }\n                else if (position === 'bottom') {\n                    bboxes.push(new BBox(minX, globalBBox.maxY, width, height));\n                }\n                else if (position === 'right') {\n                    bboxes.push(new BBox(globalBBox.maxX, minY, width, height));\n                }\n            }\n            else {\n                if (position === 'bottom') {\n                    bboxes.push(new BBox(globalBBox.minX - width, minY, width, height));\n                }\n                else if (position === 'left') {\n                    bboxes.push(new BBox(minX, globalBBox.maxY, width, height));\n                }\n                else if (position === 'top') {\n                    bboxes.push(new BBox(globalBBox.maxX, minY, width, height));\n                }\n            }\n        });\n    };\n    PaddingController.prototype._getLegend = function (view, globalBBox, bboxes) {\n        var legends = getLegendComponents(view);\n        each(legends, function (legend) {\n            var position = legend.get('position').split('-')[0];\n            var _a = legend.getLayoutBBox(), minX = _a.minX, minY = _a.minY, width = _a.width, height = _a.height;\n            if (position === 'top') {\n                bboxes.push(new BBox(minX, globalBBox.minY - height, width, height));\n            }\n            else if (position === 'bottom') {\n                bboxes.push(new BBox(minX, globalBBox.maxY, width, height));\n            }\n            else if (position === 'left') {\n                bboxes.push(new BBox(globalBBox.minX - width, minY, width, height));\n            }\n            else {\n                bboxes.push(new BBox(globalBBox.maxX, minY, width, height));\n            }\n        });\n    };\n    PaddingController.prototype._getPanel = function (view) {\n        var groups = [];\n        var geoms = view.geometries;\n        each(geoms, function (geom) {\n            if (geom.labelsContainer) {\n                groups.push(geom.labelsContainer);\n            }\n        });\n        var minX = Infinity;\n        var maxX = -Infinity;\n        var minY = Infinity;\n        var maxY = -Infinity;\n        each(groups, function (group) {\n            var children = group.get('children');\n            children.forEach(function (child) {\n                if (child.type === 'group' && child.get('children').length === 0) {\n                    return;\n                }\n                var bbox = child.getBBox();\n                if (bbox.minX < minX) {\n                    minX = bbox.minX;\n                }\n                if (bbox.maxX > maxX) {\n                    maxX = bbox.maxX;\n                }\n                if (bbox.minY < minY) {\n                    minY = bbox.minY;\n                }\n                if (bbox.maxY > maxY) {\n                    maxY = bbox.maxY;\n                }\n            });\n        });\n        var panelRange = view.coordinateBBox;\n        //right\n        var rightDist = Math.max(maxX - parseFloat(panelRange.maxX), 0);\n        if (rightDist > 0) {\n            var ratio = panelRange.width / (panelRange.width + rightDist);\n            rightDist *= ratio;\n        }\n        //left\n        var leftDist = Math.max(parseFloat(panelRange.minX) - minX, 0);\n        if (leftDist > 0) {\n            var ratio = panelRange.width / (panelRange.width + leftDist);\n            leftDist *= ratio;\n        }\n        //top\n        var topDist = Math.max(parseFloat(panelRange.minY) - minY, 0);\n        if (topDist > 0) {\n            var ratio = panelRange.height / (panelRange.height + topDist);\n            topDist *= ratio;\n        }\n        //bottom\n        var bottomDist = Math.max(maxY - parseFloat(panelRange.maxY), 0);\n        if (bottomDist > 0) {\n            var ratio = panelRange.height / (panelRange.height + bottomDist);\n            bottomDist *= ratio;\n        }\n        return [topDist, rightDist, bottomDist, leftDist];\n    };\n    PaddingController.prototype._mergeBBox = function (bboxes) {\n        var minX = Infinity;\n        var maxX = -Infinity;\n        var minY = Infinity;\n        var maxY = -Infinity;\n        each(bboxes, function (bbox) {\n            var box = bbox;\n            minX = Math.min(box.minX, minX);\n            maxX = Math.max(box.maxX, maxX);\n            minY = Math.min(box.minY, minY);\n            maxY = Math.max(box.maxY, maxY);\n        });\n        return { minX: minX, maxX: maxX, minY: minY, maxY: maxY };\n    };\n    return PaddingController;\n}());\nexport default PaddingController;\n//# sourceMappingURL=padding.js.map"]}]}