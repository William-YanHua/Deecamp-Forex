{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\liquid\\animation\\liquid-move-in.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\liquid\\animation\\liquid-move-in.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { registerAnimation } from '../../../dependents';\r\nimport { get, clone } from '@antv/util';\r\nimport { transform } from '../../../util/g-util';\r\nfunction liquidMoveIn(shape, animateCfg) {\r\n    var container = shape.get('parent');\r\n    var box = container.getBBox();\r\n    var factor = Math.min(Math.max(0, get(animateCfg, 'factor', 0.5)), 1);\r\n    var delay = get(animateCfg, 'delay', 0);\r\n    var duration = get(animateCfg, 'duration', 800);\r\n    var callback = animateCfg.callback;\r\n    var originX = (box.minX + box.maxX) / 2;\r\n    var originY = box.maxY;\r\n    var wrap = container.find(function (shape) { return shape.get('name') == 'wrap'; });\r\n    var wrapTargetOpacity = wrap.attr('opacity');\r\n    wrap.attr('opacity', 0);\r\n    wrap.animate({ opacity: wrapTargetOpacity }, duration * factor, 'easeLinear', null, delay);\r\n    var waves = container.find(function (shape) { return shape.get('name') == 'waves'; });\r\n    var wavesTargetMatrix = clone(waves.attr('matrix')) || [1, 0, 0, 0, 1, 0, 0, 0, 1];\r\n    var transformMatrix = transform(wavesTargetMatrix, [\r\n        ['t', -originX, -originY],\r\n        ['s', 1, 0],\r\n        ['t', originX, originY],\r\n    ]);\r\n    waves.setMatrix(transformMatrix);\r\n    waves.animate({ matrix: wavesTargetMatrix }, duration, animateCfg.easing, function () { return callback && callback(container, wrap, waves); }, delay);\r\n}\r\nliquidMoveIn.animationName = 'liquidMoveIn';\r\nregisterAnimation('liquidMoveIn', liquidMoveIn);\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\liquid\\animation\\liquid-move-in.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\liquid\\animation\\liquid-move-in.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AACxD,OAAO,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,YAAY,CAAC;AACxC,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AACjD,SAAS,YAAY,CAAC,KAAK,EAAE,UAAU;IACnC,IAAI,SAAS,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACpC,IAAI,GAAG,GAAG,SAAS,CAAC,OAAO,EAAE,CAAC;IAC9B,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,UAAU,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACtE,IAAI,KAAK,GAAG,GAAG,CAAC,UAAU,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;IACxC,IAAI,QAAQ,GAAG,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,GAAG,CAAC,CAAC;IAChD,IAAI,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC;IACnC,IAAI,OAAO,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACxC,IAAI,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC;IACvB,IAAI,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,UAAU,KAAK,IAAI,OAAO,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACpF,IAAI,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC7C,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IACxB,IAAI,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,iBAAiB,EAAE,EAAE,QAAQ,GAAG,MAAM,EAAE,YAAY,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;IAC3F,IAAI,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,UAAU,KAAK,IAAI,OAAO,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IACtF,IAAI,iBAAiB,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACnF,IAAI,eAAe,GAAG,SAAS,CAAC,iBAAiB,EAAE;QAC/C,CAAC,GAAG,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC;QACzB,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;QACX,CAAC,GAAG,EAAE,OAAO,EAAE,OAAO,CAAC;KAC1B,CAAC,CAAC;IACH,KAAK,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;IACjC,KAAK,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,iBAAiB,EAAE,EAAE,QAAQ,EAAE,UAAU,CAAC,MAAM,EAAE,cAAc,OAAO,QAAQ,IAAI,QAAQ,CAAC,SAAS,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AAC3J,CAAC;AACD,YAAY,CAAC,aAAa,GAAG,cAAc,CAAC;AAC5C,iBAAiB,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC","sourcesContent":["import { registerAnimation } from '../../../dependents';\nimport { get, clone } from '@antv/util';\nimport { transform } from '../../../util/g-util';\nfunction liquidMoveIn(shape, animateCfg) {\n    var container = shape.get('parent');\n    var box = container.getBBox();\n    var factor = Math.min(Math.max(0, get(animateCfg, 'factor', 0.5)), 1);\n    var delay = get(animateCfg, 'delay', 0);\n    var duration = get(animateCfg, 'duration', 800);\n    var callback = animateCfg.callback;\n    var originX = (box.minX + box.maxX) / 2;\n    var originY = box.maxY;\n    var wrap = container.find(function (shape) { return shape.get('name') == 'wrap'; });\n    var wrapTargetOpacity = wrap.attr('opacity');\n    wrap.attr('opacity', 0);\n    wrap.animate({ opacity: wrapTargetOpacity }, duration * factor, 'easeLinear', null, delay);\n    var waves = container.find(function (shape) { return shape.get('name') == 'waves'; });\n    var wavesTargetMatrix = clone(waves.attr('matrix')) || [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    var transformMatrix = transform(wavesTargetMatrix, [\n        ['t', -originX, -originY],\n        ['s', 1, 0],\n        ['t', originX, originY],\n    ]);\n    waves.setMatrix(transformMatrix);\n    waves.animate({ matrix: wavesTargetMatrix }, duration, animateCfg.easing, function () { return callback && callback(container, wrap, waves); }, delay);\n}\nliquidMoveIn.animationName = 'liquidMoveIn';\nregisterAnimation('liquidMoveIn', liquidMoveIn);\n//# sourceMappingURL=liquid-move-in.js.map"]}]}