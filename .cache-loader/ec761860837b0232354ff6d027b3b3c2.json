{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/util/lib/format/parse-path.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/util/lib/format/parse-path.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var isArray = require('../type/is-array');\nvar isString = require('../type/is-string');\nvar each = require('../each');\nvar regexTags = /[MLHVQTCSAZ]([^MLHVQTCSAZ]*)/ig;\nvar regexDot = /[^\\s\\,]+/ig;\nmodule.exports = function parsePath(path) {\n    path = path || [];\n    if (isArray(path)) {\n        return path;\n    }\n    if (isString(path)) {\n        path = path.match(regexTags);\n        each(path, function (item, index) {\n            item = item.match(regexDot);\n            if (item[0].length > 1) {\n                var tag = item[0].charAt(0);\n                item.splice(1, 0, item[0].substr(1));\n                item[0] = tag;\n            }\n            each(item, function (sub, i) {\n                if (!isNaN(sub)) {\n                    item[i] = +sub;\n                }\n            });\n            path[index] = item;\n        });\n        return path;\n    }\n};\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/util/lib/format/parse-path.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/util/lib/format/parse-path.js"],"names":[],"mappings":"AAAA,IAAI,OAAO,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAC1C,IAAI,QAAQ,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;AAC5C,IAAI,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAE9B,IAAI,SAAS,GAAG,gCAAgC,CAAC;AACjD,IAAI,QAAQ,GAAG,YAAY,CAAC;AAE5B,MAAM,CAAC,OAAO,GAAG,SAAS,SAAS,CAAC,IAAI;IACtC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;IAClB,IAAI,OAAO,CAAC,IAAI,CAAC,EAAE;QACjB,OAAO,IAAI,CAAC;KACb;IAED,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE;QAClB,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAC7B,IAAI,CAAC,IAAI,EAAE,UAAU,IAAI,EAAE,KAAK;YAC9B,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC5B,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;gBACtB,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAC5B,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;aACf;YACD,IAAI,CAAC,IAAI,EAAE,UAAU,GAAG,EAAE,CAAC;gBACzB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;oBACf,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;iBAChB;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;QACrB,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;KACb;AACH,CAAC,CAAC","sourcesContent":["var isArray = require('../type/is-array');\nvar isString = require('../type/is-string');\nvar each = require('../each');\n\nvar regexTags = /[MLHVQTCSAZ]([^MLHVQTCSAZ]*)/ig;\nvar regexDot = /[^\\s\\,]+/ig;\n\nmodule.exports = function parsePath(path) {\n  path = path || [];\n  if (isArray(path)) {\n    return path;\n  }\n\n  if (isString(path)) {\n    path = path.match(regexTags);\n    each(path, function (item, index) {\n      item = item.match(regexDot);\n      if (item[0].length > 1) {\n        var tag = item[0].charAt(0);\n        item.splice(1, 0, item[0].substr(1));\n        item[0] = tag;\n      }\n      each(item, function (sub, i) {\n        if (!isNaN(sub)) {\n          item[i] = +sub;\n        }\n      });\n      path[index] = item;\n    });\n    return path;\n  }\n};"]}]}