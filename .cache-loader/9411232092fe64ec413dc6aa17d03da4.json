{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-geo\\src\\contains.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-geo\\src\\contains.js","mtime":1488304497000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { default as polygonContains } from \"./polygonContains\";\r\nimport { default as distance } from \"./distance\";\r\nimport { epsilon, radians } from \"./math\";\r\nvar containsObjectType = {\r\n    Feature: function (object, point) {\r\n        return containsGeometry(object.geometry, point);\r\n    },\r\n    FeatureCollection: function (object, point) {\r\n        var features = object.features, i = -1, n = features.length;\r\n        while (++i < n)\r\n            if (containsGeometry(features[i].geometry, point))\r\n                return true;\r\n        return false;\r\n    }\r\n};\r\nvar containsGeometryType = {\r\n    Sphere: function () {\r\n        return true;\r\n    },\r\n    Point: function (object, point) {\r\n        return containsPoint(object.coordinates, point);\r\n    },\r\n    MultiPoint: function (object, point) {\r\n        var coordinates = object.coordinates, i = -1, n = coordinates.length;\r\n        while (++i < n)\r\n            if (containsPoint(coordinates[i], point))\r\n                return true;\r\n        return false;\r\n    },\r\n    LineString: function (object, point) {\r\n        return containsLine(object.coordinates, point);\r\n    },\r\n    MultiLineString: function (object, point) {\r\n        var coordinates = object.coordinates, i = -1, n = coordinates.length;\r\n        while (++i < n)\r\n            if (containsLine(coordinates[i], point))\r\n                return true;\r\n        return false;\r\n    },\r\n    Polygon: function (object, point) {\r\n        return containsPolygon(object.coordinates, point);\r\n    },\r\n    MultiPolygon: function (object, point) {\r\n        var coordinates = object.coordinates, i = -1, n = coordinates.length;\r\n        while (++i < n)\r\n            if (containsPolygon(coordinates[i], point))\r\n                return true;\r\n        return false;\r\n    },\r\n    GeometryCollection: function (object, point) {\r\n        var geometries = object.geometries, i = -1, n = geometries.length;\r\n        while (++i < n)\r\n            if (containsGeometry(geometries[i], point))\r\n                return true;\r\n        return false;\r\n    }\r\n};\r\nfunction containsGeometry(geometry, point) {\r\n    return geometry && containsGeometryType.hasOwnProperty(geometry.type)\r\n        ? containsGeometryType[geometry.type](geometry, point)\r\n        : false;\r\n}\r\nfunction containsPoint(coordinates, point) {\r\n    return distance(coordinates, point) === 0;\r\n}\r\nfunction containsLine(coordinates, point) {\r\n    var ab = distance(coordinates[0], coordinates[1]), ao = distance(coordinates[0], point), ob = distance(point, coordinates[1]);\r\n    return ao + ob <= ab + epsilon;\r\n}\r\nfunction containsPolygon(coordinates, point) {\r\n    return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\r\n}\r\nfunction ringRadians(ring) {\r\n    return ring = ring.map(pointRadians), ring.pop(), ring;\r\n}\r\nfunction pointRadians(point) {\r\n    return [point[0] * radians, point[1] * radians];\r\n}\r\nexport default function (object, point) {\r\n    return (object && containsObjectType.hasOwnProperty(object.type)\r\n        ? containsObjectType[object.type]\r\n        : containsGeometry)(object, point);\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-geo\\src\\contains.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-geo\\src\\contains.js"],"names":[],"mappings":"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","sourcesContent":["import {default as polygonContains} from \"./polygonContains\";\nimport {default as distance} from \"./distance\";\nimport {epsilon, radians} from \"./math\";\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n"]}]}