{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/topojson-client/src/merge.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/topojson-client/src/merge.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { object } from \"./feature\";\nimport stitch from \"./stitch\";\nfunction planarRingArea(ring) {\n    var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n    while (++i < n)\n        a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n    return Math.abs(area);\n}\nexport default function (topology) {\n    return object(topology, mergeArcs.apply(this, arguments));\n}\nexport function mergeArcs(topology, objects) {\n    var polygonsByArc = {}, polygons = [], groups = [];\n    objects.forEach(geometry);\n    function geometry(o) {\n        switch (o.type) {\n            case \"GeometryCollection\":\n                o.geometries.forEach(geometry);\n                break;\n            case \"Polygon\":\n                extract(o.arcs);\n                break;\n            case \"MultiPolygon\":\n                o.arcs.forEach(extract);\n                break;\n        }\n    }\n    function extract(polygon) {\n        polygon.forEach(function (ring) {\n            ring.forEach(function (arc) {\n                (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n            });\n        });\n        polygons.push(polygon);\n    }\n    function area(ring) {\n        return planarRingArea(object(topology, { type: \"Polygon\", arcs: [ring] }).coordinates[0]);\n    }\n    polygons.forEach(function (polygon) {\n        if (!polygon._) {\n            var group = [], neighbors = [polygon];\n            polygon._ = 1;\n            groups.push(group);\n            while (polygon = neighbors.pop()) {\n                group.push(polygon);\n                polygon.forEach(function (ring) {\n                    ring.forEach(function (arc) {\n                        polygonsByArc[arc < 0 ? ~arc : arc].forEach(function (polygon) {\n                            if (!polygon._) {\n                                polygon._ = 1;\n                                neighbors.push(polygon);\n                            }\n                        });\n                    });\n                });\n            }\n        }\n    });\n    polygons.forEach(function (polygon) {\n        delete polygon._;\n    });\n    return {\n        type: \"MultiPolygon\",\n        arcs: groups.map(function (polygons) {\n            var arcs = [], n;\n            polygons.forEach(function (polygon) {\n                polygon.forEach(function (ring) {\n                    ring.forEach(function (arc) {\n                        if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n                            arcs.push(arc);\n                        }\n                    });\n                });\n            });\n            arcs = stitch(topology, arcs);\n            if ((n = arcs.length) > 1) {\n                for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n                    if ((ki = area(arcs[i])) > k) {\n                        t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n                    }\n                }\n            }\n            return arcs;\n        }).filter(function (arcs) {\n            return arcs.length > 0;\n        })\n    };\n}\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/topojson-client/src/merge.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/topojson-client/src/merge.js"],"names":[],"mappings":"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","sourcesContent":["import {object} from \"./feature\";\nimport stitch from \"./stitch\";\n\nfunction planarRingArea(ring) {\n  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  return Math.abs(area); // Note: doubled area!\n}\n\nexport default function(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\n\nexport function mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      groups = [];\n\n  objects.forEach(geometry);\n\n  function geometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"Polygon\": extract(o.arcs); break;\n      case \"MultiPolygon\": o.arcs.forEach(extract); break;\n    }\n  }\n\n  function extract(polygon) {\n    polygon.forEach(function(ring) {\n      ring.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring) {\n    return planarRingArea(object(topology, {type: \"Polygon\", arcs: [ring]}).coordinates[0]);\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var group = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      groups.push(group);\n      while (polygon = neighbors.pop()) {\n        group.push(polygon);\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: groups.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitch(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    }).filter(function(arcs) {\n      return arcs.length > 0;\n    })\n  };\n}\n"]}]}