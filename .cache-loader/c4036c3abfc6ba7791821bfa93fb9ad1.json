{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\transform\\fold.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\transform\\fold.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["var assign = require('@antv/util/lib/mix');\r\nvar difference = require('@antv/util/lib/array/difference');\r\nvar pick = require('@antv/util/lib/pick');\r\nvar registerTransform = require('../data-set').registerTransform;\r\nvar getFields = require('../util/option-parser').getFields;\r\nvar DEFAULT_OPTIONS = {\r\n    fields: [],\r\n    key: 'key',\r\n    retains: [],\r\n    value: 'value'\r\n};\r\nregisterTransform('fold', function (dataView, options) {\r\n    var columns = dataView.getColumnNames();\r\n    options = assign({}, DEFAULT_OPTIONS, options);\r\n    var fields = getFields(options);\r\n    if (fields.length === 0) {\r\n        console.warn('warning: option fields is not specified, will fold all columns.');\r\n        fields = columns;\r\n    }\r\n    var key = options.key;\r\n    var value = options.value;\r\n    var retains = options.retains;\r\n    if (retains.length === 0) {\r\n        retains = difference(columns, fields);\r\n    }\r\n    var resultRows = [];\r\n    dataView.rows.forEach(function (row) {\r\n        fields.forEach(function (field) {\r\n            var resultRow = pick(row, retains);\r\n            resultRow[key] = field;\r\n            resultRow[value] = row[field];\r\n            resultRows.push(resultRow);\r\n        });\r\n    });\r\n    dataView.rows = resultRows;\r\n});\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\transform\\fold.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\transform\\fold.js"],"names":[],"mappings":"AAAA,IAAM,MAAM,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;AAC7C,IAAM,UAAU,GAAG,OAAO,CAAC,iCAAiC,CAAC,CAAC;AAC9D,IAAM,IAAI,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;AAE1C,IAAA,4DAAiB,CACQ;AAEzB,IAAA,sDAAS,CAC0B;AAErC,IAAM,eAAe,GAAG;IACtB,MAAM,EAAE,EAAE;IACV,GAAG,EAAE,KAAK;IACV,OAAO,EAAE,EAAE;IACX,KAAK,EAAE,OAAO;CACf,CAAC;AAEF,iBAAiB,CAAC,MAAM,EAAE,UAAC,QAAQ,EAAE,OAAO;IAC1C,IAAM,OAAO,GAAG,QAAQ,CAAC,cAAc,EAAE,CAAC;IAC1C,OAAO,GAAG,MAAM,CAAC,EAAE,EAAE,eAAe,EAAE,OAAO,CAAC,CAAC;IAC/C,IAAI,MAAM,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC;IAChC,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;QACvB,OAAO,CAAC,IAAI,CAAC,iEAAiE,CAAC,CAAC;QAChF,MAAM,GAAG,OAAO,CAAC;KAClB;IACD,IAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;IACxB,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;IAC5B,IAAI,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;IAC9B,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;QACxB,OAAO,GAAG,UAAU,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;KACvC;IACD,IAAM,UAAU,GAAG,EAAE,CAAC;IACtB,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,UAAA,GAAG;QACvB,MAAM,CAAC,OAAO,CAAC,UAAA,KAAK;YAClB,IAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;YACrC,SAAS,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;YACvB,SAAS,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC;YAC9B,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,IAAI,GAAG,UAAU,CAAC;AAC7B,CAAC,CAAC,CAAC","sourcesContent":["const assign = require('@antv/util/lib/mix');\nconst difference = require('@antv/util/lib/array/difference');\nconst pick = require('@antv/util/lib/pick');\nconst {\n  registerTransform\n} = require('../data-set');\nconst {\n  getFields\n} = require('../util/option-parser');\n\nconst DEFAULT_OPTIONS = {\n  fields: [],\n  key: 'key',\n  retains: [],\n  value: 'value'\n};\n\nregisterTransform('fold', (dataView, options) => {\n  const columns = dataView.getColumnNames();\n  options = assign({}, DEFAULT_OPTIONS, options);\n  let fields = getFields(options);\n  if (fields.length === 0) {\n    console.warn('warning: option fields is not specified, will fold all columns.');\n    fields = columns;\n  }\n  const key = options.key;\n  const value = options.value;\n  let retains = options.retains;\n  if (retains.length === 0) {\n    retains = difference(columns, fields);\n  }\n  const resultRows = [];\n  dataView.rows.forEach(row => {\n    fields.forEach(field => {\n      const resultRow = pick(row, retains);\n      resultRow[key] = field;\n      resultRow[value] = row[field];\n      resultRows.push(resultRow);\n    });\n  });\n  dataView.rows = resultRows;\n});\n"]}]}