{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\interaction\\action\\util.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\interaction\\action\\util.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { each, isArray } from '@antv/util';\r\nimport { catmullRom2bezier, getLinePath } from '../../geometry/shape/util/path';\r\nimport { toPoints } from '../../util/bbox';\r\nimport isPolygonsIntersect from '@antv/path-util/lib/is-polygons-intersect';\r\nfunction getMaskBBox(context, tolerance) {\r\n    var event = context.event;\r\n    var maskShape = event.target;\r\n    var maskBBox = maskShape.getCanvasBBox();\r\n    if (!(maskBBox.width >= tolerance || maskBBox.height >= tolerance)) {\r\n        return null;\r\n    }\r\n    return maskBBox;\r\n}\r\nfunction getMaskPath(context, tolerance) {\r\n    var event = context.event;\r\n    var maskShape = event.target;\r\n    var maskBBox = maskShape.getCanvasBBox();\r\n    if (!(maskBBox.width >= tolerance || maskBBox.height >= tolerance)) {\r\n        return null;\r\n    }\r\n    return maskShape.attr('path');\r\n}\r\nexport function getCurrentElement(context) {\r\n    var event = context.event;\r\n    var element;\r\n    var target = event.target;\r\n    if (target) {\r\n        element = target.get('element');\r\n    }\r\n    return element;\r\n}\r\nexport function getDelegationObject(context) {\r\n    var event = context.event;\r\n    var target = event.target;\r\n    var delegateObject;\r\n    if (target) {\r\n        delegateObject = target.get('delegateObject');\r\n    }\r\n    return delegateObject;\r\n}\r\nexport function isElementChange(context) {\r\n    var event = context.event.gEvent;\r\n    if (event && event.fromShape && event.toShape && event.fromShape.get('element') === event.toShape.get('element')) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nexport function isList(delegateObject) {\r\n    return delegateObject && delegateObject.component && delegateObject.component.isList();\r\n}\r\nexport function isSlider(delegateObject) {\r\n    return delegateObject && delegateObject.component && delegateObject.component.isSlider();\r\n}\r\nexport function isMask(context) {\r\n    var event = context.event;\r\n    var target = event.target;\r\n    return target && target.get('name') === 'mask';\r\n}\r\nexport function getMaskedElements(context, tolerance) {\r\n    var target = context.event.target;\r\n    if (target.get('type') === 'path') {\r\n        var maskPath = getMaskPath(context, tolerance);\r\n        if (!maskPath) {\r\n            return;\r\n        }\r\n        return getElementsByPath(context.view, maskPath);\r\n    }\r\n    var maskBBox = getMaskBBox(context, tolerance);\r\n    if (!maskBBox) {\r\n        return null;\r\n    }\r\n    return getIntersectElements(context.view, maskBBox);\r\n}\r\nexport function getSiblingMaskElements(context, sibling, tolerance) {\r\n    var maskBBox = getMaskBBox(context, tolerance);\r\n    if (!maskBBox) {\r\n        return null;\r\n    }\r\n    var view = context.view;\r\n    var start = getSiblingPoint(view, sibling, { x: maskBBox.x, y: maskBBox.y });\r\n    var end = getSiblingPoint(view, sibling, { x: maskBBox.maxX, y: maskBBox.maxY });\r\n    var box = {\r\n        minX: start.x,\r\n        minY: start.y,\r\n        maxX: end.x,\r\n        maxY: end.y,\r\n    };\r\n    return getIntersectElements(sibling, box);\r\n}\r\nexport function getElements(view) {\r\n    var geometries = view.geometries;\r\n    var rst = [];\r\n    each(geometries, function (geom) {\r\n        var elements = geom.elements;\r\n        rst = rst.concat(elements);\r\n    });\r\n    if (view.views && view.views.length) {\r\n        each(view.views, function (subView) {\r\n            rst = rst.concat(getElements(subView));\r\n        });\r\n    }\r\n    return rst;\r\n}\r\nexport function getElementsByField(view, field, value) {\r\n    var elements = getElements(view);\r\n    return elements.filter(function (el) {\r\n        return getElementValue(el, field) === value;\r\n    });\r\n}\r\nexport function getElementsByState(view, stateName) {\r\n    var geometries = view.geometries;\r\n    var rst = [];\r\n    each(geometries, function (geom) {\r\n        var elements = geom.getElementsBy(function (el) { return el.hasState(stateName); });\r\n        rst = rst.concat(elements);\r\n    });\r\n    return rst;\r\n}\r\nexport function getElementValue(element, field) {\r\n    var model = element.getModel();\r\n    var record = model.data;\r\n    var value;\r\n    if (isArray(record)) {\r\n        value = record[0][field];\r\n    }\r\n    else {\r\n        value = record[field];\r\n    }\r\n    return value;\r\n}\r\nexport function intersectRect(box1, box2) {\r\n    return !(box2.minX > box1.maxX || box2.maxX < box1.minX || box2.minY > box1.maxY || box2.maxY < box1.minY);\r\n}\r\nexport function getIntersectElements(view, box) {\r\n    var elements = getElements(view);\r\n    var rst = [];\r\n    each(elements, function (el) {\r\n        var shape = el.shape;\r\n        var shapeBBox = shape.getCanvasBBox();\r\n        if (intersectRect(box, shapeBBox)) {\r\n            rst.push(el);\r\n        }\r\n    });\r\n    return rst;\r\n}\r\nfunction pathToPoints(path) {\r\n    var points = [];\r\n    each(path, function (seg) {\r\n        var command = seg[0];\r\n        if (command !== 'A') {\r\n            for (var i = 1; i < seg.length; i = i + 2) {\r\n                points.push([seg[i], seg[i + 1]]);\r\n            }\r\n        }\r\n        else {\r\n            var length_1 = seg.length;\r\n            points.push([seg[length_1 - 2], seg[length_1 - 1]]);\r\n        }\r\n    });\r\n    return points;\r\n}\r\nexport function getElementsByPath(view, path) {\r\n    var elements = getElements(view);\r\n    var points = pathToPoints(path);\r\n    var rst = elements.filter(function (el) {\r\n        var shape = el.shape;\r\n        var shapePoints;\r\n        if (shape.get('type') === 'path') {\r\n            shapePoints = pathToPoints(shape.attr('path'));\r\n        }\r\n        else {\r\n            var shapeBBox = shape.getCanvasBBox();\r\n            shapePoints = toPoints(shapeBBox);\r\n        }\r\n        return isPolygonsIntersect(points, shapePoints);\r\n    });\r\n    return rst;\r\n}\r\nexport function getComponents(view) {\r\n    return view.getComponents().map(function (co) { return co.component; });\r\n}\r\nexport function distance(p1, p2) {\r\n    var dx = p2.x - p1.x;\r\n    var dy = p2.y - p1.y;\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n}\r\nexport function getSpline(points, z) {\r\n    if (points.length <= 2) {\r\n        return getLinePath(points, false);\r\n    }\r\n    var first = points[0];\r\n    var arr = [];\r\n    each(points, function (point) {\r\n        arr.push(point.x);\r\n        arr.push(point.y);\r\n    });\r\n    var path = catmullRom2bezier(arr, z, null);\r\n    path.unshift(['M', first.x, first.y]);\r\n    return path;\r\n}\r\nexport function isInBox(box, point) {\r\n    return box.x <= point.x && box.maxX >= point.x && box.y <= point.y && box.maxY > point.y;\r\n}\r\nexport function getSilbings(view) {\r\n    var parent = view.parent;\r\n    var siblings = null;\r\n    if (parent) {\r\n        siblings = parent.views.filter(function (sub) { return sub !== view; });\r\n    }\r\n    return siblings;\r\n}\r\nfunction point2Normalize(view, point) {\r\n    var coord = view.getCoordinate();\r\n    return coord.invert(point);\r\n}\r\nexport function getSiblingPoint(view, sibling, point) {\r\n    var normalPoint = point2Normalize(view, point);\r\n    return sibling.getCoordinate().convert(normalPoint);\r\n}\r\nexport function isInRecords(records, record, xFiled, yField) {\r\n    var isIn = false;\r\n    each(records, function (r) {\r\n        if (r[xFiled] === record[xFiled] && r[yField] === record[yField]) {\r\n            isIn = true;\r\n            return false;\r\n        }\r\n    });\r\n    return isIn;\r\n}\r\nexport function getScaleByField(view, field) {\r\n    var scale = view.getScaleByField(field);\r\n    if (!scale && view.views) {\r\n        each(view.views, function (subView) {\r\n            scale = getScaleByField(subView, field);\r\n            if (scale) {\r\n                return false;\r\n            }\r\n        });\r\n    }\r\n    return scale;\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\interaction\\action\\util.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\interaction\\action\\util.js"],"names":[],"mappings":"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","sourcesContent":["import { each, isArray } from '@antv/util';\nimport { catmullRom2bezier, getLinePath } from '../../geometry/shape/util/path';\nimport { toPoints } from '../../util/bbox';\nimport isPolygonsIntersect from '@antv/path-util/lib/is-polygons-intersect';\nfunction getMaskBBox(context, tolerance) {\n    var event = context.event;\n    var maskShape = event.target;\n    var maskBBox = maskShape.getCanvasBBox();\n    // 如果 bbox 过小则不返回\n    if (!(maskBBox.width >= tolerance || maskBBox.height >= tolerance)) {\n        return null;\n    }\n    return maskBBox;\n}\nfunction getMaskPath(context, tolerance) {\n    var event = context.event;\n    var maskShape = event.target;\n    var maskBBox = maskShape.getCanvasBBox();\n    // 如果 bbox 过小则不返回\n    if (!(maskBBox.width >= tolerance || maskBBox.height >= tolerance)) {\n        return null;\n    }\n    return maskShape.attr('path');\n}\n/**\n * 获取当前事件相关的图表元素\n * @param context 交互的上下文\n * @ignore\n */\nexport function getCurrentElement(context) {\n    var event = context.event;\n    var element;\n    var target = event.target;\n    if (target) {\n        element = target.get('element');\n    }\n    return element;\n}\n/**\n * 获取委托对象\n * @param context 上下文\n * @ignore\n */\nexport function getDelegationObject(context) {\n    var event = context.event;\n    var target = event.target;\n    var delegateObject;\n    if (target) {\n        delegateObject = target.get('delegateObject');\n    }\n    return delegateObject;\n}\nexport function isElementChange(context) {\n    var event = context.event.gEvent;\n    // 在同一个 element 内部移动，label 和 shape 之间\n    if (event && event.fromShape && event.toShape && event.fromShape.get('element') === event.toShape.get('element')) {\n        return false;\n    }\n    return true;\n}\n/**\n * 是否是列表组件\n * @param delegateObject 委托对象\n * @ignore\n */\nexport function isList(delegateObject) {\n    return delegateObject && delegateObject.component && delegateObject.component.isList();\n}\n/**\n * 是否是滑块组件\n * @param delegateObject 委托对象\n * @ignore\n */\nexport function isSlider(delegateObject) {\n    return delegateObject && delegateObject.component && delegateObject.component.isSlider();\n}\n/**\n * 是否由 mask 触发\n * @param context 上下文\n * @ignore\n */\nexport function isMask(context) {\n    var event = context.event;\n    var target = event.target;\n    return target && target.get('name') === 'mask';\n}\n/**\n * 获取被遮挡的 elements\n * @param context 上下文\n * @ignore\n */\nexport function getMaskedElements(context, tolerance) {\n    var target = context.event.target;\n    if (target.get('type') === 'path') {\n        var maskPath = getMaskPath(context, tolerance);\n        if (!maskPath) {\n            return;\n        }\n        return getElementsByPath(context.view, maskPath);\n    }\n    var maskBBox = getMaskBBox(context, tolerance);\n    // 如果 bbox 过小则不返回\n    if (!maskBBox) {\n        return null;\n    }\n    return getIntersectElements(context.view, maskBBox);\n}\n/**\n * @ignore\n */\nexport function getSiblingMaskElements(context, sibling, tolerance) {\n    var maskBBox = getMaskBBox(context, tolerance);\n    // 如果 bbox 过小则不返回\n    if (!maskBBox) {\n        return null;\n    }\n    var view = context.view;\n    var start = getSiblingPoint(view, sibling, { x: maskBBox.x, y: maskBBox.y });\n    var end = getSiblingPoint(view, sibling, { x: maskBBox.maxX, y: maskBBox.maxY });\n    var box = {\n        minX: start.x,\n        minY: start.y,\n        maxX: end.x,\n        maxY: end.y,\n    };\n    return getIntersectElements(sibling, box);\n}\n/**\n * 获取所有的图表元素\n * @param view View/Chart\n * @ignore\n */\nexport function getElements(view) {\n    var geometries = view.geometries;\n    var rst = [];\n    each(geometries, function (geom) {\n        var elements = geom.elements;\n        rst = rst.concat(elements);\n    });\n    if (view.views && view.views.length) {\n        each(view.views, function (subView) {\n            rst = rst.concat(getElements(subView));\n        });\n    }\n    return rst;\n}\n/**\n * 获取所有的图表元素\n * @param view View/Chart\n * @param field 字段名\n * @param value 字段值\n * @ignore\n */\nexport function getElementsByField(view, field, value) {\n    var elements = getElements(view);\n    return elements.filter(function (el) {\n        return getElementValue(el, field) === value;\n    });\n}\n/**\n * 根据状态名获取图表元素\n * @param view View/Chart\n * @param stateName 状态名\n * @ignore\n */\nexport function getElementsByState(view, stateName) {\n    var geometries = view.geometries;\n    var rst = [];\n    each(geometries, function (geom) {\n        var elements = geom.getElementsBy(function (el) { return el.hasState(stateName); });\n        rst = rst.concat(elements);\n    });\n    return rst;\n}\n/**\n * 获取图表元素对应字段的值\n * @param element 图表元素\n * @param field 字段名\n * @ignore\n */\nexport function getElementValue(element, field) {\n    var model = element.getModel();\n    var record = model.data;\n    var value;\n    if (isArray(record)) {\n        value = record[0][field];\n    }\n    else {\n        value = record[field];\n    }\n    return value;\n}\n/**\n * 两个包围盒是否相交\n * @param box1 包围盒1\n * @param box2 包围盒2\n * @ignore\n */\nexport function intersectRect(box1, box2) {\n    return !(box2.minX > box1.maxX || box2.maxX < box1.minX || box2.minY > box1.maxY || box2.maxY < box1.minY);\n}\n/**\n * 获取包围盒内的图表元素\n * @param view View/Chart\n * @param box 包围盒\n * @ignore\n */\nexport function getIntersectElements(view, box) {\n    var elements = getElements(view);\n    var rst = [];\n    each(elements, function (el) {\n        var shape = el.shape;\n        var shapeBBox = shape.getCanvasBBox();\n        if (intersectRect(box, shapeBBox)) {\n            rst.push(el);\n        }\n    });\n    return rst;\n}\nfunction pathToPoints(path) {\n    var points = [];\n    each(path, function (seg) {\n        var command = seg[0];\n        if (command !== 'A') {\n            for (var i = 1; i < seg.length; i = i + 2) {\n                points.push([seg[i], seg[i + 1]]);\n            }\n        }\n        else {\n            var length_1 = seg.length;\n            points.push([seg[length_1 - 2], seg[length_1 - 1]]);\n        }\n    });\n    return points;\n}\n/**\n * 获取包围盒内的图表元素\n * @param view View/Chart\n * @param path 路径\n * @ignore\n */\nexport function getElementsByPath(view, path) {\n    var elements = getElements(view);\n    var points = pathToPoints(path);\n    var rst = elements.filter(function (el) {\n        var shape = el.shape;\n        var shapePoints;\n        if (shape.get('type') === 'path') {\n            shapePoints = pathToPoints(shape.attr('path'));\n        }\n        else {\n            var shapeBBox = shape.getCanvasBBox();\n            shapePoints = toPoints(shapeBBox);\n        }\n        return isPolygonsIntersect(points, shapePoints);\n    });\n    return rst;\n}\n/**\n * 获取当前 View 的所有组件\n * @param view View/Chart\n * @ignore\n */\nexport function getComponents(view) {\n    return view.getComponents().map(function (co) { return co.component; });\n}\n/** @ignore */\nexport function distance(p1, p2) {\n    var dx = p2.x - p1.x;\n    var dy = p2.y - p1.y;\n    return Math.sqrt(dx * dx + dy * dy);\n}\n/** @ignore */\nexport function getSpline(points, z) {\n    if (points.length <= 2) {\n        return getLinePath(points, false);\n    }\n    var first = points[0];\n    var arr = [];\n    each(points, function (point) {\n        arr.push(point.x);\n        arr.push(point.y);\n    });\n    var path = catmullRom2bezier(arr, z, null);\n    path.unshift(['M', first.x, first.y]);\n    return path;\n}\n/**\n * 检测点是否在包围盒内\n * @param box 包围盒\n * @param point 点\n * @ignore\n */\nexport function isInBox(box, point) {\n    return box.x <= point.x && box.maxX >= point.x && box.y <= point.y && box.maxY > point.y;\n}\n/**\n * 获取同 view 同一级的 views\n * @param view 当前 view\n * @returns 同一级的 views\n * @ignore\n */\nexport function getSilbings(view) {\n    var parent = view.parent;\n    var siblings = null;\n    if (parent) {\n        siblings = parent.views.filter(function (sub) { return sub !== view; });\n    }\n    return siblings;\n}\nfunction point2Normalize(view, point) {\n    var coord = view.getCoordinate();\n    return coord.invert(point);\n}\n/**\n * 将 view 上的一点转换成另一个 view 的点\n * @param view 当前的 view\n * @param sibling 同一层级的 view\n * @param point 指定点\n * @ignore\n */\nexport function getSiblingPoint(view, sibling, point) {\n    var normalPoint = point2Normalize(view, point);\n    return sibling.getCoordinate().convert(normalPoint);\n}\n/**\n * 是否在记录中，临时因为所有的 view 中的数据不是引用，而使用的方法\n * 不同 view 上对数据的引用不相等，导致无法直接用 includes\n * 假设 x, y 值相等时是同一条数据，这个假设不完全正确，而改成 isEqual 则成本太高\n * 后面改成同一个引用时可以修改回来\n * @param records\n * @param record\n * @param xFiled\n * @param yField\n * @returns\n * @ignore\n */\nexport function isInRecords(records, record, xFiled, yField) {\n    var isIn = false;\n    each(records, function (r) {\n        if (r[xFiled] === record[xFiled] && r[yField] === record[yField]) {\n            isIn = true;\n            return false;\n        }\n    });\n    return isIn;\n}\n// 级联获取 field 对应的 scale，如果 view 上没有，遍历子 view\nexport function getScaleByField(view, field) {\n    var scale = view.getScaleByField(field);\n    if (!scale && view.views) {\n        each(view.views, function (subView) {\n            scale = getScaleByField(subView, field);\n            if (scale) {\n                return false; // 终止循环\n            }\n        });\n    }\n    return scale;\n}\n//# sourceMappingURL=util.js.map"]}]}