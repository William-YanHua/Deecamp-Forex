{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/dagre/lib/layout.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/dagre/lib/layout.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\nvar _ = require(\"./lodash\");\nvar acyclic = require(\"./acyclic\");\nvar normalize = require(\"./normalize\");\nvar rank = require(\"./rank\");\nvar normalizeRanks = require(\"./util\").normalizeRanks;\nvar parentDummyChains = require(\"./parent-dummy-chains\");\nvar removeEmptyRanks = require(\"./util\").removeEmptyRanks;\nvar nestingGraph = require(\"./nesting-graph\");\nvar addBorderSegments = require(\"./add-border-segments\");\nvar coordinateSystem = require(\"./coordinate-system\");\nvar order = require(\"./order\");\nvar position = require(\"./position\");\nvar util = require(\"./util\");\nvar Graph = require(\"./graphlib\").Graph;\nmodule.exports = layout;\nfunction layout(g, opts) {\n    var time = opts && opts.debugTiming ? util.time : util.notime;\n    time(\"layout\", function () {\n        var layoutGraph = time(\"  buildLayoutGraph\", function () { return buildLayoutGraph(g); });\n        time(\"  runLayout\", function () { runLayout(layoutGraph, time); });\n        time(\"  updateInputGraph\", function () { updateInputGraph(g, layoutGraph); });\n    });\n}\nfunction runLayout(g, time) {\n    time(\"    makeSpaceForEdgeLabels\", function () { makeSpaceForEdgeLabels(g); });\n    time(\"    removeSelfEdges\", function () { removeSelfEdges(g); });\n    time(\"    acyclic\", function () { acyclic.run(g); });\n    time(\"    nestingGraph.run\", function () { nestingGraph.run(g); });\n    time(\"    rank\", function () { rank(util.asNonCompoundGraph(g)); });\n    time(\"    injectEdgeLabelProxies\", function () { injectEdgeLabelProxies(g); });\n    time(\"    removeEmptyRanks\", function () { removeEmptyRanks(g); });\n    time(\"    nestingGraph.cleanup\", function () { nestingGraph.cleanup(g); });\n    time(\"    normalizeRanks\", function () { normalizeRanks(g); });\n    time(\"    assignRankMinMax\", function () { assignRankMinMax(g); });\n    time(\"    removeEdgeLabelProxies\", function () { removeEdgeLabelProxies(g); });\n    time(\"    normalize.run\", function () { normalize.run(g); });\n    time(\"    parentDummyChains\", function () { parentDummyChains(g); });\n    time(\"    addBorderSegments\", function () { addBorderSegments(g); });\n    time(\"    order\", function () { order(g); });\n    time(\"    insertSelfEdges\", function () { insertSelfEdges(g); });\n    time(\"    adjustCoordinateSystem\", function () { coordinateSystem.adjust(g); });\n    time(\"    position\", function () { position(g); });\n    time(\"    positionSelfEdges\", function () { positionSelfEdges(g); });\n    time(\"    removeBorderNodes\", function () { removeBorderNodes(g); });\n    time(\"    normalize.undo\", function () { normalize.undo(g); });\n    time(\"    fixupEdgeLabelCoords\", function () { fixupEdgeLabelCoords(g); });\n    time(\"    undoCoordinateSystem\", function () { coordinateSystem.undo(g); });\n    time(\"    translateGraph\", function () { translateGraph(g); });\n    time(\"    assignNodeIntersects\", function () { assignNodeIntersects(g); });\n    time(\"    reversePoints\", function () { reversePointsForReversedEdges(g); });\n    time(\"    acyclic.undo\", function () { acyclic.undo(g); });\n}\nfunction updateInputGraph(inputGraph, layoutGraph) {\n    _.forEach(inputGraph.nodes(), function (v) {\n        var inputLabel = inputGraph.node(v);\n        var layoutLabel = layoutGraph.node(v);\n        if (inputLabel) {\n            inputLabel.x = layoutLabel.x;\n            inputLabel.y = layoutLabel.y;\n            if (layoutGraph.children(v).length) {\n                inputLabel.width = layoutLabel.width;\n                inputLabel.height = layoutLabel.height;\n            }\n        }\n    });\n    _.forEach(inputGraph.edges(), function (e) {\n        var inputLabel = inputGraph.edge(e);\n        var layoutLabel = layoutGraph.edge(e);\n        inputLabel.points = layoutLabel.points;\n        if (_.has(layoutLabel, \"x\")) {\n            inputLabel.x = layoutLabel.x;\n            inputLabel.y = layoutLabel.y;\n        }\n    });\n    inputGraph.graph().width = layoutGraph.graph().width;\n    inputGraph.graph().height = layoutGraph.graph().height;\n}\nvar graphNumAttrs = [\"nodesep\", \"edgesep\", \"ranksep\", \"marginx\", \"marginy\"];\nvar graphDefaults = { ranksep: 50, edgesep: 20, nodesep: 50, rankdir: \"tb\" };\nvar graphAttrs = [\"acyclicer\", \"ranker\", \"rankdir\", \"align\"];\nvar nodeNumAttrs = [\"width\", \"height\"];\nvar nodeDefaults = { width: 0, height: 0 };\nvar edgeNumAttrs = [\"minlen\", \"weight\", \"width\", \"height\", \"labeloffset\"];\nvar edgeDefaults = {\n    minlen: 1, weight: 1, width: 0, height: 0,\n    labeloffset: 10, labelpos: \"r\"\n};\nvar edgeAttrs = [\"labelpos\"];\nfunction buildLayoutGraph(inputGraph) {\n    var g = new Graph({ multigraph: true, compound: true });\n    var graph = canonicalize(inputGraph.graph());\n    g.setGraph(_.merge({}, graphDefaults, selectNumberAttrs(graph, graphNumAttrs), _.pick(graph, graphAttrs)));\n    _.forEach(inputGraph.nodes(), function (v) {\n        var node = canonicalize(inputGraph.node(v));\n        g.setNode(v, _.defaults(selectNumberAttrs(node, nodeNumAttrs), nodeDefaults));\n        g.setParent(v, inputGraph.parent(v));\n    });\n    _.forEach(inputGraph.edges(), function (e) {\n        var edge = canonicalize(inputGraph.edge(e));\n        g.setEdge(e, _.merge({}, edgeDefaults, selectNumberAttrs(edge, edgeNumAttrs), _.pick(edge, edgeAttrs)));\n    });\n    return g;\n}\nfunction makeSpaceForEdgeLabels(g) {\n    var graph = g.graph();\n    graph.ranksep /= 2;\n    _.forEach(g.edges(), function (e) {\n        var edge = g.edge(e);\n        edge.minlen *= 2;\n        if (edge.labelpos.toLowerCase() !== \"c\") {\n            if (graph.rankdir === \"TB\" || graph.rankdir === \"BT\") {\n                edge.width += edge.labeloffset;\n            }\n            else {\n                edge.height += edge.labeloffset;\n            }\n        }\n    });\n}\nfunction injectEdgeLabelProxies(g) {\n    _.forEach(g.edges(), function (e) {\n        var edge = g.edge(e);\n        if (edge.width && edge.height) {\n            var v = g.node(e.v);\n            var w = g.node(e.w);\n            var label = { rank: (w.rank - v.rank) / 2 + v.rank, e: e };\n            util.addDummyNode(g, \"edge-proxy\", label, \"_ep\");\n        }\n    });\n}\nfunction assignRankMinMax(g) {\n    var maxRank = 0;\n    _.forEach(g.nodes(), function (v) {\n        var node = g.node(v);\n        if (node.borderTop) {\n            node.minRank = g.node(node.borderTop).rank;\n            node.maxRank = g.node(node.borderBottom).rank;\n            maxRank = _.max(maxRank, node.maxRank);\n        }\n    });\n    g.graph().maxRank = maxRank;\n}\nfunction removeEdgeLabelProxies(g) {\n    _.forEach(g.nodes(), function (v) {\n        var node = g.node(v);\n        if (node.dummy === \"edge-proxy\") {\n            g.edge(node.e).labelRank = node.rank;\n            g.removeNode(v);\n        }\n    });\n}\nfunction translateGraph(g) {\n    var minX = Number.POSITIVE_INFINITY;\n    var maxX = 0;\n    var minY = Number.POSITIVE_INFINITY;\n    var maxY = 0;\n    var graphLabel = g.graph();\n    var marginX = graphLabel.marginx || 0;\n    var marginY = graphLabel.marginy || 0;\n    function getExtremes(attrs) {\n        var x = attrs.x;\n        var y = attrs.y;\n        var w = attrs.width;\n        var h = attrs.height;\n        minX = Math.min(minX, x - w / 2);\n        maxX = Math.max(maxX, x + w / 2);\n        minY = Math.min(minY, y - h / 2);\n        maxY = Math.max(maxY, y + h / 2);\n    }\n    _.forEach(g.nodes(), function (v) { getExtremes(g.node(v)); });\n    _.forEach(g.edges(), function (e) {\n        var edge = g.edge(e);\n        if (_.has(edge, \"x\")) {\n            getExtremes(edge);\n        }\n    });\n    minX -= marginX;\n    minY -= marginY;\n    _.forEach(g.nodes(), function (v) {\n        var node = g.node(v);\n        node.x -= minX;\n        node.y -= minY;\n    });\n    _.forEach(g.edges(), function (e) {\n        var edge = g.edge(e);\n        _.forEach(edge.points, function (p) {\n            p.x -= minX;\n            p.y -= minY;\n        });\n        if (_.has(edge, \"x\")) {\n            edge.x -= minX;\n        }\n        if (_.has(edge, \"y\")) {\n            edge.y -= minY;\n        }\n    });\n    graphLabel.width = maxX - minX + marginX;\n    graphLabel.height = maxY - minY + marginY;\n}\nfunction assignNodeIntersects(g) {\n    _.forEach(g.edges(), function (e) {\n        var edge = g.edge(e);\n        var nodeV = g.node(e.v);\n        var nodeW = g.node(e.w);\n        var p1, p2;\n        if (!edge.points) {\n            edge.points = [];\n            p1 = nodeW;\n            p2 = nodeV;\n        }\n        else {\n            p1 = edge.points[0];\n            p2 = edge.points[edge.points.length - 1];\n        }\n        edge.points.unshift(util.intersectRect(nodeV, p1));\n        edge.points.push(util.intersectRect(nodeW, p2));\n    });\n}\nfunction fixupEdgeLabelCoords(g) {\n    _.forEach(g.edges(), function (e) {\n        var edge = g.edge(e);\n        if (_.has(edge, \"x\")) {\n            if (edge.labelpos === \"l\" || edge.labelpos === \"r\") {\n                edge.width -= edge.labeloffset;\n            }\n            switch (edge.labelpos) {\n                case \"l\":\n                    edge.x -= edge.width / 2 + edge.labeloffset;\n                    break;\n                case \"r\":\n                    edge.x += edge.width / 2 + edge.labeloffset;\n                    break;\n            }\n        }\n    });\n}\nfunction reversePointsForReversedEdges(g) {\n    _.forEach(g.edges(), function (e) {\n        var edge = g.edge(e);\n        if (edge.reversed) {\n            edge.points.reverse();\n        }\n    });\n}\nfunction removeBorderNodes(g) {\n    _.forEach(g.nodes(), function (v) {\n        if (g.children(v).length) {\n            var node = g.node(v);\n            var t = g.node(node.borderTop);\n            var b = g.node(node.borderBottom);\n            var l = g.node(_.last(node.borderLeft));\n            var r = g.node(_.last(node.borderRight));\n            node.width = Math.abs(r.x - l.x);\n            node.height = Math.abs(b.y - t.y);\n            node.x = l.x + node.width / 2;\n            node.y = t.y + node.height / 2;\n        }\n    });\n    _.forEach(g.nodes(), function (v) {\n        if (g.node(v).dummy === \"border\") {\n            g.removeNode(v);\n        }\n    });\n}\nfunction removeSelfEdges(g) {\n    _.forEach(g.edges(), function (e) {\n        if (e.v === e.w) {\n            var node = g.node(e.v);\n            if (!node.selfEdges) {\n                node.selfEdges = [];\n            }\n            node.selfEdges.push({ e: e, label: g.edge(e) });\n            g.removeEdge(e);\n        }\n    });\n}\nfunction insertSelfEdges(g) {\n    var layers = util.buildLayerMatrix(g);\n    _.forEach(layers, function (layer) {\n        var orderShift = 0;\n        _.forEach(layer, function (v, i) {\n            var node = g.node(v);\n            node.order = i + orderShift;\n            _.forEach(node.selfEdges, function (selfEdge) {\n                util.addDummyNode(g, \"selfedge\", {\n                    width: selfEdge.label.width,\n                    height: selfEdge.label.height,\n                    rank: node.rank,\n                    order: i + (++orderShift),\n                    e: selfEdge.e,\n                    label: selfEdge.label\n                }, \"_se\");\n            });\n            delete node.selfEdges;\n        });\n    });\n}\nfunction positionSelfEdges(g) {\n    _.forEach(g.nodes(), function (v) {\n        var node = g.node(v);\n        if (node.dummy === \"selfedge\") {\n            var selfNode = g.node(node.e.v);\n            var x = selfNode.x + selfNode.width / 2;\n            var y = selfNode.y;\n            var dx = node.x - x;\n            var dy = selfNode.height / 2;\n            g.setEdge(node.e, node.label);\n            g.removeNode(v);\n            node.label.points = [\n                { x: x + 2 * dx / 3, y: y - dy },\n                { x: x + 5 * dx / 6, y: y - dy },\n                { x: x + dx, y: y },\n                { x: x + 5 * dx / 6, y: y + dy },\n                { x: x + 2 * dx / 3, y: y + dy }\n            ];\n            node.label.x = node.x;\n            node.label.y = node.y;\n        }\n    });\n}\nfunction selectNumberAttrs(obj, attrs) {\n    return _.mapValues(_.pick(obj, attrs), Number);\n}\nfunction canonicalize(attrs) {\n    var newAttrs = {};\n    _.forEach(attrs, function (v, k) {\n        newAttrs[k.toLowerCase()] = v;\n    });\n    return newAttrs;\n}\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/dagre/lib/layout.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/dagre/lib/layout.js"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _ = require(\"./lodash\");\nvar acyclic = require(\"./acyclic\");\nvar normalize = require(\"./normalize\");\nvar rank = require(\"./rank\");\nvar normalizeRanks = require(\"./util\").normalizeRanks;\nvar parentDummyChains = require(\"./parent-dummy-chains\");\nvar removeEmptyRanks = require(\"./util\").removeEmptyRanks;\nvar nestingGraph = require(\"./nesting-graph\");\nvar addBorderSegments = require(\"./add-border-segments\");\nvar coordinateSystem = require(\"./coordinate-system\");\nvar order = require(\"./order\");\nvar position = require(\"./position\");\nvar util = require(\"./util\");\nvar Graph = require(\"./graphlib\").Graph;\n\nmodule.exports = layout;\n\nfunction layout(g, opts) {\n  var time = opts && opts.debugTiming ? util.time : util.notime;\n  time(\"layout\", function() {\n    var layoutGraph = \n      time(\"  buildLayoutGraph\", function() { return buildLayoutGraph(g); });\n    time(\"  runLayout\",        function() { runLayout(layoutGraph, time); });\n    time(\"  updateInputGraph\", function() { updateInputGraph(g, layoutGraph); });\n  });\n}\n\nfunction runLayout(g, time) {\n  time(\"    makeSpaceForEdgeLabels\", function() { makeSpaceForEdgeLabels(g); });\n  time(\"    removeSelfEdges\",        function() { removeSelfEdges(g); });\n  time(\"    acyclic\",                function() { acyclic.run(g); });\n  time(\"    nestingGraph.run\",       function() { nestingGraph.run(g); });\n  time(\"    rank\",                   function() { rank(util.asNonCompoundGraph(g)); });\n  time(\"    injectEdgeLabelProxies\", function() { injectEdgeLabelProxies(g); });\n  time(\"    removeEmptyRanks\",       function() { removeEmptyRanks(g); });\n  time(\"    nestingGraph.cleanup\",   function() { nestingGraph.cleanup(g); });\n  time(\"    normalizeRanks\",         function() { normalizeRanks(g); });\n  time(\"    assignRankMinMax\",       function() { assignRankMinMax(g); });\n  time(\"    removeEdgeLabelProxies\", function() { removeEdgeLabelProxies(g); });\n  time(\"    normalize.run\",          function() { normalize.run(g); });\n  time(\"    parentDummyChains\",      function() { parentDummyChains(g); });\n  time(\"    addBorderSegments\",      function() { addBorderSegments(g); });\n  time(\"    order\",                  function() { order(g); });\n  time(\"    insertSelfEdges\",        function() { insertSelfEdges(g); });\n  time(\"    adjustCoordinateSystem\", function() { coordinateSystem.adjust(g); });\n  time(\"    position\",               function() { position(g); });\n  time(\"    positionSelfEdges\",      function() { positionSelfEdges(g); });\n  time(\"    removeBorderNodes\",      function() { removeBorderNodes(g); });\n  time(\"    normalize.undo\",         function() { normalize.undo(g); });\n  time(\"    fixupEdgeLabelCoords\",   function() { fixupEdgeLabelCoords(g); });\n  time(\"    undoCoordinateSystem\",   function() { coordinateSystem.undo(g); });\n  time(\"    translateGraph\",         function() { translateGraph(g); });\n  time(\"    assignNodeIntersects\",   function() { assignNodeIntersects(g); });\n  time(\"    reversePoints\",          function() { reversePointsForReversedEdges(g); });\n  time(\"    acyclic.undo\",           function() { acyclic.undo(g); });\n}\n\n/*\n * Copies final layout information from the layout graph back to the input\n * graph. This process only copies whitelisted attributes from the layout graph\n * to the input graph, so it serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction updateInputGraph(inputGraph, layoutGraph) {\n  _.forEach(inputGraph.nodes(), function(v) {\n    var inputLabel = inputGraph.node(v);\n    var layoutLabel = layoutGraph.node(v);\n\n    if (inputLabel) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n\n      if (layoutGraph.children(v).length) {\n        inputLabel.width = layoutLabel.width;\n        inputLabel.height = layoutLabel.height;\n      }\n    }\n  });\n\n  _.forEach(inputGraph.edges(), function(e) {\n    var inputLabel = inputGraph.edge(e);\n    var layoutLabel = layoutGraph.edge(e);\n\n    inputLabel.points = layoutLabel.points;\n    if (_.has(layoutLabel, \"x\")) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n    }\n  });\n\n  inputGraph.graph().width = layoutGraph.graph().width;\n  inputGraph.graph().height = layoutGraph.graph().height;\n}\n\nvar graphNumAttrs = [\"nodesep\", \"edgesep\", \"ranksep\", \"marginx\", \"marginy\"];\nvar graphDefaults = { ranksep: 50, edgesep: 20, nodesep: 50, rankdir: \"tb\" };\nvar graphAttrs = [\"acyclicer\", \"ranker\", \"rankdir\", \"align\"];\nvar nodeNumAttrs = [\"width\", \"height\"];\nvar nodeDefaults = { width: 0, height: 0 };\nvar edgeNumAttrs = [\"minlen\", \"weight\", \"width\", \"height\", \"labeloffset\"];\nvar edgeDefaults = {\n  minlen: 1, weight: 1, width: 0, height: 0,\n  labeloffset: 10, labelpos: \"r\"\n};\nvar edgeAttrs = [\"labelpos\"];\n\n/*\n * Constructs a new graph from the input graph, which can be used for layout.\n * This process copies only whitelisted attributes from the input graph to the\n * layout graph. Thus this function serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction buildLayoutGraph(inputGraph) {\n  var g = new Graph({ multigraph: true, compound: true });\n  var graph = canonicalize(inputGraph.graph());\n\n  g.setGraph(_.merge({},\n    graphDefaults,\n    selectNumberAttrs(graph, graphNumAttrs),\n    _.pick(graph, graphAttrs)));\n\n  _.forEach(inputGraph.nodes(), function(v) {\n    var node = canonicalize(inputGraph.node(v));\n    g.setNode(v, _.defaults(selectNumberAttrs(node, nodeNumAttrs), nodeDefaults));\n    g.setParent(v, inputGraph.parent(v));\n  });\n\n  _.forEach(inputGraph.edges(), function(e) {\n    var edge = canonicalize(inputGraph.edge(e));\n    g.setEdge(e, _.merge({},\n      edgeDefaults,\n      selectNumberAttrs(edge, edgeNumAttrs),\n      _.pick(edge, edgeAttrs)));\n  });\n\n  return g;\n}\n\n/*\n * This idea comes from the Gansner paper: to account for edge labels in our\n * layout we split each rank in half by doubling minlen and halving ranksep.\n * Then we can place labels at these mid-points between nodes.\n *\n * We also add some minimal padding to the width to push the label for the edge\n * away from the edge itself a bit.\n */\nfunction makeSpaceForEdgeLabels(g) {\n  var graph = g.graph();\n  graph.ranksep /= 2;\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    edge.minlen *= 2;\n    if (edge.labelpos.toLowerCase() !== \"c\") {\n      if (graph.rankdir === \"TB\" || graph.rankdir === \"BT\") {\n        edge.width += edge.labeloffset;\n      } else {\n        edge.height += edge.labeloffset;\n      }\n    }\n  });\n}\n\n/*\n * Creates temporary dummy nodes that capture the rank in which each edge's\n * label is going to, if it has one of non-zero width and height. We do this\n * so that we can safely remove empty ranks while preserving balance for the\n * label's position.\n */\nfunction injectEdgeLabelProxies(g) {\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (edge.width && edge.height) {\n      var v = g.node(e.v);\n      var w = g.node(e.w);\n      var label = { rank: (w.rank - v.rank) / 2 + v.rank, e: e };\n      util.addDummyNode(g, \"edge-proxy\", label, \"_ep\");\n    }\n  });\n}\n\nfunction assignRankMinMax(g) {\n  var maxRank = 0;\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v);\n    if (node.borderTop) {\n      node.minRank = g.node(node.borderTop).rank;\n      node.maxRank = g.node(node.borderBottom).rank;\n      maxRank = _.max(maxRank, node.maxRank);\n    }\n  });\n  g.graph().maxRank = maxRank;\n}\n\nfunction removeEdgeLabelProxies(g) {\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v);\n    if (node.dummy === \"edge-proxy\") {\n      g.edge(node.e).labelRank = node.rank;\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction translateGraph(g) {\n  var minX = Number.POSITIVE_INFINITY;\n  var maxX = 0;\n  var minY = Number.POSITIVE_INFINITY;\n  var maxY = 0;\n  var graphLabel = g.graph();\n  var marginX = graphLabel.marginx || 0;\n  var marginY = graphLabel.marginy || 0;\n\n  function getExtremes(attrs) {\n    var x = attrs.x;\n    var y = attrs.y;\n    var w = attrs.width;\n    var h = attrs.height;\n    minX = Math.min(minX, x - w / 2);\n    maxX = Math.max(maxX, x + w / 2);\n    minY = Math.min(minY, y - h / 2);\n    maxY = Math.max(maxY, y + h / 2);\n  }\n\n  _.forEach(g.nodes(), function(v) { getExtremes(g.node(v)); });\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (_.has(edge, \"x\")) {\n      getExtremes(edge);\n    }\n  });\n\n  minX -= marginX;\n  minY -= marginY;\n\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v);\n    node.x -= minX;\n    node.y -= minY;\n  });\n\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, function(p) {\n      p.x -= minX;\n      p.y -= minY;\n    });\n    if (_.has(edge, \"x\")) { edge.x -= minX; }\n    if (_.has(edge, \"y\")) { edge.y -= minY; }\n  });\n\n  graphLabel.width = maxX - minX + marginX;\n  graphLabel.height = maxY - minY + marginY;\n}\n\nfunction assignNodeIntersects(g) {\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    var nodeV = g.node(e.v);\n    var nodeW = g.node(e.w);\n    var p1, p2;\n    if (!edge.points) {\n      edge.points = [];\n      p1 = nodeW;\n      p2 = nodeV;\n    } else {\n      p1 = edge.points[0];\n      p2 = edge.points[edge.points.length - 1];\n    }\n    edge.points.unshift(util.intersectRect(nodeV, p1));\n    edge.points.push(util.intersectRect(nodeW, p2));\n  });\n}\n\nfunction fixupEdgeLabelCoords(g) {\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (_.has(edge, \"x\")) {\n      if (edge.labelpos === \"l\" || edge.labelpos === \"r\") {\n        edge.width -= edge.labeloffset;\n      }\n      switch (edge.labelpos) {\n      case \"l\": edge.x -= edge.width / 2 + edge.labeloffset; break;\n      case \"r\": edge.x += edge.width / 2 + edge.labeloffset; break;\n      }\n    }\n  });\n}\n\nfunction reversePointsForReversedEdges(g) {\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (edge.reversed) {\n      edge.points.reverse();\n    }\n  });\n}\n\nfunction removeBorderNodes(g) {\n  _.forEach(g.nodes(), function(v) {\n    if (g.children(v).length) {\n      var node = g.node(v);\n      var t = g.node(node.borderTop);\n      var b = g.node(node.borderBottom);\n      var l = g.node(_.last(node.borderLeft));\n      var r = g.node(_.last(node.borderRight));\n\n      node.width = Math.abs(r.x - l.x);\n      node.height = Math.abs(b.y - t.y);\n      node.x = l.x + node.width / 2;\n      node.y = t.y + node.height / 2;\n    }\n  });\n\n  _.forEach(g.nodes(), function(v) {\n    if (g.node(v).dummy === \"border\") {\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction removeSelfEdges(g) {\n  _.forEach(g.edges(), function(e) {\n    if (e.v === e.w) {\n      var node = g.node(e.v);\n      if (!node.selfEdges) {\n        node.selfEdges = [];\n      }\n      node.selfEdges.push({ e: e, label: g.edge(e) });\n      g.removeEdge(e);\n    }\n  });\n}\n\nfunction insertSelfEdges(g) {\n  var layers = util.buildLayerMatrix(g);\n  _.forEach(layers, function(layer) {\n    var orderShift = 0;\n    _.forEach(layer, function(v, i) {\n      var node = g.node(v);\n      node.order = i + orderShift;\n      _.forEach(node.selfEdges, function(selfEdge) {\n        util.addDummyNode(g, \"selfedge\", {\n          width: selfEdge.label.width,\n          height: selfEdge.label.height,\n          rank: node.rank,\n          order: i + (++orderShift),\n          e: selfEdge.e,\n          label: selfEdge.label\n        }, \"_se\");\n      });\n      delete node.selfEdges;\n    });\n  });\n}\n\nfunction positionSelfEdges(g) {\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v);\n    if (node.dummy === \"selfedge\") {\n      var selfNode = g.node(node.e.v);\n      var x = selfNode.x + selfNode.width / 2;\n      var y = selfNode.y;\n      var dx = node.x - x;\n      var dy = selfNode.height / 2;\n      g.setEdge(node.e, node.label);\n      g.removeNode(v);\n      node.label.points = [\n        { x: x + 2 * dx / 3, y: y - dy },\n        { x: x + 5 * dx / 6, y: y - dy },\n        { x: x +     dx    , y: y },\n        { x: x + 5 * dx / 6, y: y + dy },\n        { x: x + 2 * dx / 3, y: y + dy }\n      ];\n      node.label.x = node.x;\n      node.label.y = node.y;\n    }\n  });\n}\n\nfunction selectNumberAttrs(obj, attrs) {\n  return _.mapValues(_.pick(obj, attrs), Number);\n}\n\nfunction canonicalize(attrs) {\n  var newAttrs = {};\n  _.forEach(attrs, function(v, k) {\n    newAttrs[k.toLowerCase()] = v;\n  });\n  return newAttrs;\n}\n"]}]}