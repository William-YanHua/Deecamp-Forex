{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-geo-projection\\src\\ginzburg8.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-geo-projection\\src\\ginzburg8.js","mtime":1467599198000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { geoProjection as projection } from \"d3-geo\";\r\nimport { abs, epsilon } from \"./math\";\r\nexport function ginzburg8Raw(lambda, phi) {\r\n    var lambda2 = lambda * lambda, phi2 = phi * phi;\r\n    return [\r\n        lambda * (1 - 0.162388 * phi2) * (0.87 - 0.000952426 * lambda2 * lambda2),\r\n        phi * (1 + phi2 / 12)\r\n    ];\r\n}\r\nginzburg8Raw.invert = function (x, y) {\r\n    var lambda = x, phi = y, i = 50, delta;\r\n    do {\r\n        var phi2 = phi * phi;\r\n        phi -= delta = (phi * (1 + phi2 / 12) - y) / (1 + phi2 / 4);\r\n    } while (abs(delta) > epsilon && --i > 0);\r\n    i = 50;\r\n    x /= 1 - 0.162388 * phi2;\r\n    do {\r\n        var lambda4 = (lambda4 = lambda * lambda) * lambda4;\r\n        lambda -= delta = (lambda * (0.87 - 0.000952426 * lambda4) - x) / (0.87 - 0.00476213 * lambda4);\r\n    } while (abs(delta) > epsilon && --i > 0);\r\n    return [lambda, phi];\r\n};\r\nexport default function () {\r\n    return projection(ginzburg8Raw)\r\n        .scale(131.747);\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-geo-projection\\src\\ginzburg8.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-geo-projection\\src\\ginzburg8.js"],"names":[],"mappings":"AAAA,OAAO,EAAC,aAAa,IAAI,UAAU,EAAC,MAAM,QAAQ,CAAC;AACnD,OAAO,EAAC,GAAG,EAAE,OAAO,EAAC,MAAM,QAAQ,CAAC;AAEpC,MAAM,UAAU,YAAY,CAAC,MAAM,EAAE,GAAG;IACtC,IAAI,OAAO,GAAG,MAAM,GAAG,MAAM,EACzB,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC;IACrB,OAAO;QACL,MAAM,GAAG,CAAC,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,WAAW,GAAG,OAAO,GAAG,OAAO,CAAC;QACzE,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC;KACtB,CAAC;AACJ,CAAC;AAED,YAAY,CAAC,MAAM,GAAG,UAAS,CAAC,EAAE,CAAC;IACjC,IAAI,MAAM,GAAG,CAAC,EACV,GAAG,GAAG,CAAC,EACP,CAAC,GAAG,EAAE,EAAE,KAAK,CAAC;IAClB,GAAG;QACD,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC;QACrB,GAAG,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;KAC7D,QAAQ,GAAG,CAAC,KAAK,CAAC,GAAG,OAAO,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE;IAC1C,CAAC,GAAG,EAAE,CAAC;IACP,CAAC,IAAI,CAAC,GAAE,QAAQ,GAAG,IAAI,CAAC;IACxB,GAAG;QACD,IAAI,OAAO,GAAG,CAAC,OAAO,GAAG,MAAM,GAAG,MAAM,CAAC,GAAG,OAAO,CAAC;QACpD,MAAM,IAAI,KAAK,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,UAAU,GAAG,OAAO,CAAC,CAAC;KACjG,QAAQ,GAAG,CAAC,KAAK,CAAC,GAAG,OAAO,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE;IAC1C,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AACvB,CAAC,CAAC;AAEF,MAAM,CAAC,OAAO;IACZ,OAAO,UAAU,CAAC,YAAY,CAAC;SAC1B,KAAK,CAAC,OAAO,CAAC,CAAC;AACtB,CAAC","sourcesContent":["import {geoProjection as projection} from \"d3-geo\";\nimport {abs, epsilon} from \"./math\";\n\nexport function ginzburg8Raw(lambda, phi) {\n  var lambda2 = lambda * lambda,\n      phi2 = phi * phi;\n  return [\n    lambda * (1 - 0.162388 * phi2) * (0.87 - 0.000952426 * lambda2 * lambda2),\n    phi * (1 + phi2 / 12)\n  ];\n}\n\nginzburg8Raw.invert = function(x, y) {\n  var lambda = x,\n      phi = y,\n      i = 50, delta;\n  do {\n    var phi2 = phi * phi;\n    phi -= delta = (phi * (1 + phi2 / 12) - y) / (1 + phi2 / 4);\n  } while (abs(delta) > epsilon && --i > 0);\n  i = 50;\n  x /= 1 -0.162388 * phi2;\n  do {\n    var lambda4 = (lambda4 = lambda * lambda) * lambda4;\n    lambda -= delta = (lambda * (0.87 - 0.000952426 * lambda4) - x) / (0.87 - 0.00476213 * lambda4);\n  } while (abs(delta) > epsilon && --i > 0);\n  return [lambda, phi];\n};\n\nexport default function() {\n  return projection(ginzburg8Raw)\n      .scale(131.747);\n}\n"]}]}