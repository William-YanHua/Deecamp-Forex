{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\chart\\controller\\legend.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\chart\\controller\\legend.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\r\nimport { deepMix, each, find, get, head, isBoolean, last } from '@antv/util';\r\nimport { COMPONENT_MAX_VIEW_PERCENTAGE, COMPONENT_TYPE, DIRECTION, LAYER } from '../../constant';\r\nimport { CategoryLegend, ContinuousLegend } from '../../dependents';\r\nimport { DEFAULT_ANIMATE_CFG } from '../../animate';\r\nimport { BBox } from '../../util/bbox';\r\nimport { directionToPosition } from '../../util/direction';\r\nimport { omit } from '../../util/helper';\r\nimport { getCustomLegendItems, getLegendItems, getLegendLayout } from '../../util/legend';\r\nimport { getName } from '../../util/scale';\r\nimport { Controller } from './base';\r\nfunction getLegendOption(legends, field) {\r\n    if (isBoolean(legends)) {\r\n        return legends === false ? false : {};\r\n    }\r\n    return get(legends, [field], legends);\r\n}\r\nfunction getDirection(legendOption) {\r\n    return get(legendOption, 'position', DIRECTION.BOTTOM);\r\n}\r\nvar Legend = (function (_super) {\r\n    __extends(Legend, _super);\r\n    function Legend(view) {\r\n        var _this = _super.call(this, view) || this;\r\n        _this.container = _this.view.getLayer(LAYER.FORE).addGroup();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Legend.prototype, \"name\", {\r\n        get: function () {\r\n            return 'legend';\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Legend.prototype.init = function () { };\r\n    Legend.prototype.render = function () {\r\n        var _this = this;\r\n        this.option = this.view.getOptions().legends;\r\n        var doEachLegend = function (geometry, attr, scale) {\r\n            var legend = _this.createFieldLegend(geometry, attr, scale);\r\n            if (legend) {\r\n                legend.component.init();\r\n                _this.components.push(legend);\r\n            }\r\n        };\r\n        if (get(this.option, 'custom')) {\r\n            var component = this.createCustomLegend(undefined, undefined, undefined, this.option);\r\n            if (component) {\r\n                component.init();\r\n                var layer = LAYER.FORE;\r\n                var direction = getDirection(this.option);\r\n                this.components.push({\r\n                    id: 'global-custom',\r\n                    component: component,\r\n                    layer: layer,\r\n                    direction: direction,\r\n                    type: COMPONENT_TYPE.LEGEND,\r\n                    extra: undefined,\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.loopLegends(doEachLegend);\r\n        }\r\n    };\r\n    Legend.prototype.layout = function () {\r\n        var _this = this;\r\n        this.layoutBBox = this.view.viewBBox;\r\n        var margin = get(this.view.getTheme(), ['components', 'legend', 'margin'], [0, 0, 0, 0]);\r\n        each(this.components, function (co) {\r\n            var component = co.component, direction = co.direction;\r\n            var layout = getLegendLayout(direction);\r\n            var maxSize = _this.getCategoryLegendSizeCfg(layout);\r\n            var maxWidth = component.get('maxWidth');\r\n            var maxHeight = component.get('maxHeight');\r\n            component.update({\r\n                maxWidth: Math.min(maxSize.maxWidth, maxWidth || 0),\r\n                maxHeight: Math.min(maxSize.maxHeight, maxHeight || 0),\r\n            });\r\n            var bboxObject = component.getLayoutBBox();\r\n            var bbox = new BBox(bboxObject.x, bboxObject.y, bboxObject.width, bboxObject.height);\r\n            var _a = directionToPosition(_this.view.viewBBox, bbox, direction), x1 = _a[0], y1 = _a[1];\r\n            var _b = directionToPosition(_this.layoutBBox, bbox, direction), x2 = _b[0], y2 = _b[1];\r\n            var x = 0;\r\n            var y = 0;\r\n            if (direction.startsWith('top') || direction.startsWith('bottom')) {\r\n                x = x1;\r\n                y = y2;\r\n            }\r\n            else {\r\n                x = x2;\r\n                y = y1;\r\n            }\r\n            if (direction.indexOf('left') >= 0) {\r\n                x += margin[3];\r\n            }\r\n            if (direction.indexOf('right') >= 0) {\r\n                x -= margin[1];\r\n            }\r\n            if (direction.indexOf('top') >= 0) {\r\n                y += margin[0];\r\n            }\r\n            if (direction.indexOf('bottom') >= 0) {\r\n                y -= margin[2];\r\n            }\r\n            component.update({\r\n                x: x,\r\n                y: y,\r\n            });\r\n            _this.layoutBBox = _this.layoutBBox.cut(bbox, direction);\r\n        });\r\n    };\r\n    Legend.prototype.update = function () {\r\n        var _this = this;\r\n        this.option = this.view.getOptions().legends;\r\n        var updated = {};\r\n        var eachLegend = function (geometry, attr, scale) {\r\n            var id = _this.getId(scale.field);\r\n            var existCo = _this.getComponentById(id);\r\n            if (existCo) {\r\n                var cfg = void 0;\r\n                var legendOption = getLegendOption(_this.option, scale.field);\r\n                if (legendOption !== false) {\r\n                    if (get(legendOption, 'custom')) {\r\n                        cfg = _this.getCategoryCfg(geometry, attr, scale, legendOption, true);\r\n                    }\r\n                    else {\r\n                        if (scale.isLinear) {\r\n                            cfg = _this.getContinuousCfg(geometry, attr, scale, legendOption);\r\n                        }\r\n                        else if (scale.isCategory) {\r\n                            cfg = _this.getCategoryCfg(geometry, attr, scale, legendOption);\r\n                        }\r\n                    }\r\n                }\r\n                if (cfg) {\r\n                    omit(cfg, ['container']);\r\n                    existCo.direction = getDirection(legendOption);\r\n                    existCo.component.update(cfg);\r\n                    updated[id] = true;\r\n                }\r\n            }\r\n            else {\r\n                var legend = _this.createFieldLegend(geometry, attr, scale);\r\n                if (legend) {\r\n                    legend.component.init();\r\n                    _this.components.push(legend);\r\n                    updated[id] = true;\r\n                }\r\n            }\r\n        };\r\n        if (get(this.option, 'custom')) {\r\n            var id = 'global-custom';\r\n            var existCo = this.getComponentById(id);\r\n            if (existCo) {\r\n                var customCfg = this.getCategoryCfg(undefined, undefined, undefined, this.option, true);\r\n                omit(customCfg, ['container']);\r\n                existCo.component.update(customCfg);\r\n                updated[id] = true;\r\n            }\r\n            else {\r\n                var component = this.createCustomLegend(undefined, undefined, undefined, this.option);\r\n                if (component) {\r\n                    component.init();\r\n                    var layer = LAYER.FORE;\r\n                    var direction = getDirection(this.option);\r\n                    this.components.push({\r\n                        id: id,\r\n                        component: component,\r\n                        layer: layer,\r\n                        direction: direction,\r\n                        type: COMPONENT_TYPE.LEGEND,\r\n                        extra: undefined,\r\n                    });\r\n                    updated[id] = true;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.loopLegends(eachLegend);\r\n        }\r\n        var components = [];\r\n        each(this.getComponents(), function (co) {\r\n            if (updated[co.id]) {\r\n                components.push(co);\r\n            }\r\n            else {\r\n                co.component.destroy();\r\n            }\r\n        });\r\n        this.components = components;\r\n    };\r\n    Legend.prototype.clear = function () {\r\n        _super.prototype.clear.call(this);\r\n        this.container.clear();\r\n    };\r\n    Legend.prototype.destroy = function () {\r\n        _super.prototype.destroy.call(this);\r\n        this.container.remove(true);\r\n    };\r\n    Legend.prototype.getGeometries = function (view) {\r\n        var _this = this;\r\n        var geometries = view.geometries;\r\n        each(view.views, function (v) {\r\n            geometries = geometries.concat(_this.getGeometries(v));\r\n        });\r\n        return geometries;\r\n    };\r\n    Legend.prototype.loopLegends = function (doEach) {\r\n        var isRootView = this.view.getRootView() === this.view;\r\n        if (!isRootView) {\r\n            return;\r\n        }\r\n        var geometries = this.getGeometries(this.view);\r\n        var looped = {};\r\n        each(geometries, function (geometry) {\r\n            var attributes = geometry.getGroupAttributes();\r\n            each(attributes, function (attr) {\r\n                var scale = attr.getScale(attr.type);\r\n                if (!scale || scale.type === 'identity' || looped[scale.field]) {\r\n                    return;\r\n                }\r\n                doEach(geometry, attr, scale);\r\n                looped[scale.field] = true;\r\n            });\r\n        });\r\n    };\r\n    Legend.prototype.createFieldLegend = function (geometry, attr, scale) {\r\n        var component;\r\n        var legendOption = getLegendOption(this.option, scale.field);\r\n        var layer = LAYER.FORE;\r\n        var direction = getDirection(legendOption);\r\n        if (legendOption !== false) {\r\n            if (get(legendOption, 'custom')) {\r\n                component = this.createCustomLegend(geometry, attr, scale, legendOption);\r\n            }\r\n            else {\r\n                if (scale.isLinear) {\r\n                    component = this.createContinuousLegend(geometry, attr, scale, legendOption);\r\n                }\r\n                else if (scale.isCategory) {\r\n                    component = this.createCategoryLegend(geometry, attr, scale, legendOption);\r\n                }\r\n            }\r\n        }\r\n        if (component) {\r\n            component.set('field', scale.field);\r\n            return {\r\n                id: this.getId(scale.field),\r\n                component: component,\r\n                layer: layer,\r\n                direction: direction,\r\n                type: COMPONENT_TYPE.LEGEND,\r\n                extra: { scale: scale },\r\n            };\r\n        }\r\n    };\r\n    Legend.prototype.createCustomLegend = function (geometry, attr, scale, legendOption) {\r\n        var cfg = this.getCategoryCfg(geometry, attr, scale, legendOption, true);\r\n        return new CategoryLegend(cfg);\r\n    };\r\n    Legend.prototype.createContinuousLegend = function (geometry, attr, scale, legendOption) {\r\n        var cfg = this.getContinuousCfg(geometry, attr, scale, legendOption);\r\n        return new ContinuousLegend(cfg);\r\n    };\r\n    Legend.prototype.createCategoryLegend = function (geometry, attr, scale, legendOption) {\r\n        var cfg = this.getCategoryCfg(geometry, attr, scale, legendOption);\r\n        return new CategoryLegend(cfg);\r\n    };\r\n    Legend.prototype.getContinuousCfg = function (geometry, attr, scale, legendOption) {\r\n        var ticks = scale.getTicks();\r\n        var containMin = find(ticks, function (tick) { return tick.value === 0; });\r\n        var containMax = find(ticks, function (tick) { return tick.value === 1; });\r\n        var items = ticks.map(function (tick) {\r\n            var value = tick.value, tickValue = tick.tickValue;\r\n            var attrValue = attr.mapping(scale.invert(value)).join('');\r\n            return {\r\n                value: tickValue,\r\n                attrValue: attrValue,\r\n                color: attrValue,\r\n                scaleValue: value,\r\n            };\r\n        });\r\n        if (!containMin) {\r\n            items.push({\r\n                value: scale.min,\r\n                attrValue: attr.mapping(scale.invert(0)).join(''),\r\n                color: attr.mapping(scale.invert(0)).join(''),\r\n                scaleValue: 0,\r\n            });\r\n        }\r\n        if (!containMax) {\r\n            items.push({\r\n                value: scale.max,\r\n                attrValue: attr.mapping(scale.invert(1)).join(''),\r\n                color: attr.mapping(scale.invert(1)).join(''),\r\n                scaleValue: 1,\r\n            });\r\n        }\r\n        items.sort(function (a, b) { return a.value - b.value; });\r\n        var attrLegendCfg = {\r\n            min: head(items).value,\r\n            max: last(items).value,\r\n            colors: [],\r\n            rail: {\r\n                type: attr.type,\r\n            },\r\n            track: {},\r\n        };\r\n        if (attr.type === 'size') {\r\n            attrLegendCfg.track = {\r\n                style: {\r\n                    fill: attr.type === 'size' ? this.view.getTheme().defaultColor : undefined,\r\n                },\r\n            };\r\n        }\r\n        if (attr.type === 'color') {\r\n            attrLegendCfg.colors = items.map(function (item) { return item.attrValue; });\r\n        }\r\n        var container = this.container;\r\n        var direction = getDirection(legendOption);\r\n        var layout = getLegendLayout(direction);\r\n        var title = get(legendOption, 'title');\r\n        if (title) {\r\n            title = deepMix({\r\n                text: getName(scale),\r\n            }, title);\r\n        }\r\n        attrLegendCfg.container = container;\r\n        attrLegendCfg.layout = layout;\r\n        attrLegendCfg.title = title;\r\n        attrLegendCfg.animateOption = DEFAULT_ANIMATE_CFG;\r\n        return this.mergeLegendCfg(attrLegendCfg, legendOption, 'continuous');\r\n    };\r\n    Legend.prototype.getCategoryCfg = function (geometry, attr, scale, legendOption, custom) {\r\n        var container = this.container;\r\n        var direction = get(legendOption, 'position', DIRECTION.BOTTOM);\r\n        var themeMarker = get(this.view.getTheme(), ['components', 'legend', direction, 'marker']);\r\n        var userMarker = get(legendOption, 'marker');\r\n        var layout = getLegendLayout(direction);\r\n        var items = custom\r\n            ? getCustomLegendItems(themeMarker, userMarker, legendOption.items)\r\n            : getLegendItems(this.view, geometry, attr, themeMarker, userMarker);\r\n        var title = get(legendOption, 'title');\r\n        if (title) {\r\n            title = deepMix({\r\n                text: scale ? getName(scale) : '',\r\n            }, title);\r\n        }\r\n        var baseCfg = this.getCategoryLegendSizeCfg(layout);\r\n        baseCfg.container = container;\r\n        baseCfg.layout = layout;\r\n        baseCfg.items = items;\r\n        baseCfg.title = title;\r\n        baseCfg.animateOption = DEFAULT_ANIMATE_CFG;\r\n        var categoryCfg = this.mergeLegendCfg(baseCfg, legendOption, direction);\r\n        if (categoryCfg.reversed) {\r\n            categoryCfg.items.reverse();\r\n        }\r\n        return categoryCfg;\r\n    };\r\n    Legend.prototype.mergeLegendCfg = function (baseCfg, legendOption, direction) {\r\n        var themeObject = get(this.view.getTheme(), ['components', 'legend', direction], {});\r\n        return deepMix({}, themeObject, baseCfg, legendOption);\r\n    };\r\n    Legend.prototype.getId = function (key) {\r\n        return this.name + \"-\" + key;\r\n    };\r\n    Legend.prototype.getComponentById = function (id) {\r\n        return find(this.components, function (co) { return co.id === id; });\r\n    };\r\n    Legend.prototype.getCategoryLegendSizeCfg = function (layout) {\r\n        var _a = this.view.viewBBox, vw = _a.width, vh = _a.height;\r\n        return layout === 'vertical'\r\n            ? {\r\n                maxWidth: vw * COMPONENT_MAX_VIEW_PERCENTAGE,\r\n                maxHeight: vh,\r\n            }\r\n            : {\r\n                maxWidth: vw,\r\n                maxHeight: vh * COMPONENT_MAX_VIEW_PERCENTAGE,\r\n            };\r\n    };\r\n    return Legend;\r\n}(Controller));\r\nexport default Legend;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\chart\\controller\\legend.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\chart\\controller\\legend.js"],"names":[],"mappings":"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","sourcesContent":["import { __extends } from \"tslib\";\nimport { deepMix, each, find, get, head, isBoolean, last } from '@antv/util';\nimport { COMPONENT_MAX_VIEW_PERCENTAGE, COMPONENT_TYPE, DIRECTION, LAYER } from '../../constant';\nimport { CategoryLegend, ContinuousLegend } from '../../dependents';\nimport { DEFAULT_ANIMATE_CFG } from '../../animate';\nimport { BBox } from '../../util/bbox';\nimport { directionToPosition } from '../../util/direction';\nimport { omit } from '../../util/helper';\nimport { getCustomLegendItems, getLegendItems, getLegendLayout } from '../../util/legend';\nimport { getName } from '../../util/scale';\nimport { Controller } from './base';\n/**\n * 从配置中获取单个字段的 legend 配置\n * @param legends\n * @param field\n * @returns the option of one legend field\n */\nfunction getLegendOption(legends, field) {\n    if (isBoolean(legends)) {\n        return legends === false ? false : {};\n    }\n    return get(legends, [field], legends);\n}\nfunction getDirection(legendOption) {\n    return get(legendOption, 'position', DIRECTION.BOTTOM);\n}\n/**\n * @ignore\n * legend Controller\n */\nvar Legend = /** @class */ (function (_super) {\n    __extends(Legend, _super);\n    function Legend(view) {\n        var _this = _super.call(this, view) || this;\n        _this.container = _this.view.getLayer(LAYER.FORE).addGroup();\n        return _this;\n    }\n    Object.defineProperty(Legend.prototype, \"name\", {\n        get: function () {\n            return 'legend';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Legend.prototype.init = function () { };\n    /**\n     * render the legend component by legend options\n     */\n    Legend.prototype.render = function () {\n        var _this = this;\n        this.option = this.view.getOptions().legends;\n        var doEachLegend = function (geometry, attr, scale) {\n            var legend = _this.createFieldLegend(geometry, attr, scale);\n            if (legend) {\n                legend.component.init();\n                _this.components.push(legend);\n            }\n        };\n        // 全局自定义图例\n        if (get(this.option, 'custom')) {\n            var component = this.createCustomLegend(undefined, undefined, undefined, this.option);\n            if (component) {\n                component.init();\n                var layer = LAYER.FORE;\n                var direction = getDirection(this.option);\n                this.components.push({\n                    id: 'global-custom',\n                    component: component,\n                    layer: layer,\n                    direction: direction,\n                    type: COMPONENT_TYPE.LEGEND,\n                    extra: undefined,\n                });\n            }\n        }\n        else {\n            // 遍历处理每一个创建逻辑\n            this.loopLegends(doEachLegend);\n        }\n    };\n    /**\n     * layout legend\n     * 计算出 legend 的 direction 位置 x, y\n     */\n    Legend.prototype.layout = function () {\n        var _this = this;\n        this.layoutBBox = this.view.viewBBox;\n        var margin = get(this.view.getTheme(), ['components', 'legend', 'margin'], [0, 0, 0, 0]);\n        each(this.components, function (co) {\n            var component = co.component, direction = co.direction;\n            var layout = getLegendLayout(direction);\n            var maxSize = _this.getCategoryLegendSizeCfg(layout);\n            var maxWidth = component.get('maxWidth');\n            var maxHeight = component.get('maxHeight');\n            // 先更新 maxSize，更新 layoutBBox，以便计算正确的 x y\n            component.update({\n                maxWidth: Math.min(maxSize.maxWidth, maxWidth || 0),\n                maxHeight: Math.min(maxSize.maxHeight, maxHeight || 0),\n            });\n            var bboxObject = component.getLayoutBBox(); // 这里只需要他的 width、height 信息做位置调整\n            var bbox = new BBox(bboxObject.x, bboxObject.y, bboxObject.width, bboxObject.height);\n            var _a = directionToPosition(_this.view.viewBBox, bbox, direction), x1 = _a[0], y1 = _a[1];\n            var _b = directionToPosition(_this.layoutBBox, bbox, direction), x2 = _b[0], y2 = _b[1];\n            var x = 0;\n            var y = 0;\n            // 因为 legend x y 要和 coordinateBBox 对齐，所以要做一个简单的判断\n            if (direction.startsWith('top') || direction.startsWith('bottom')) {\n                x = x1;\n                y = y2;\n            }\n            else {\n                x = x2;\n                y = y1;\n            }\n            // 加上 margin\n            if (direction.indexOf('left') >= 0) {\n                x += margin[3];\n            }\n            if (direction.indexOf('right') >= 0) {\n                x -= margin[1];\n            }\n            if (direction.indexOf('top') >= 0) {\n                y += margin[0];\n            }\n            if (direction.indexOf('bottom') >= 0) {\n                y -= margin[2];\n            }\n            // 更新位置\n            component.update({\n                x: x,\n                y: y,\n            });\n            _this.layoutBBox = _this.layoutBBox.cut(bbox, direction);\n        });\n    };\n    /**\n     * legend 的更新逻辑\n     */\n    Legend.prototype.update = function () {\n        var _this = this;\n        this.option = this.view.getOptions().legends;\n        // 已经处理过的 legend\n        var updated = {};\n        var eachLegend = function (geometry, attr, scale) {\n            var id = _this.getId(scale.field);\n            var existCo = _this.getComponentById(id);\n            // 存在则 update\n            if (existCo) {\n                var cfg = void 0;\n                var legendOption = getLegendOption(_this.option, scale.field);\n                // if the legend option is not false, means legend should be created.\n                if (legendOption !== false) {\n                    if (get(legendOption, 'custom')) {\n                        cfg = _this.getCategoryCfg(geometry, attr, scale, legendOption, true);\n                    }\n                    else {\n                        if (scale.isLinear) {\n                            // linear field, create continuous legend\n                            cfg = _this.getContinuousCfg(geometry, attr, scale, legendOption);\n                        }\n                        else if (scale.isCategory) {\n                            // category field, create category legend\n                            cfg = _this.getCategoryCfg(geometry, attr, scale, legendOption);\n                        }\n                    }\n                }\n                // 如果 cfg 为空，则不在 updated 标记，那么会在后面逻辑中删除\n                if (cfg) {\n                    // omit 掉一些属性，比如 container 等\n                    omit(cfg, ['container']);\n                    existCo.direction = getDirection(legendOption);\n                    existCo.component.update(cfg);\n                    // 标记为新的\n                    updated[id] = true;\n                }\n            }\n            else {\n                // 不存在则 create\n                var legend = _this.createFieldLegend(geometry, attr, scale);\n                if (legend) {\n                    legend.component.init();\n                    _this.components.push(legend);\n                    // 标记为新的\n                    updated[id] = true;\n                }\n            }\n        };\n        // 全局自定义图例\n        if (get(this.option, 'custom')) {\n            var id = 'global-custom';\n            var existCo = this.getComponentById(id);\n            if (existCo) {\n                var customCfg = this.getCategoryCfg(undefined, undefined, undefined, this.option, true);\n                omit(customCfg, ['container']);\n                existCo.component.update(customCfg);\n                updated[id] = true;\n            }\n            else {\n                var component = this.createCustomLegend(undefined, undefined, undefined, this.option);\n                if (component) {\n                    component.init();\n                    var layer = LAYER.FORE;\n                    var direction = getDirection(this.option);\n                    this.components.push({\n                        id: id,\n                        component: component,\n                        layer: layer,\n                        direction: direction,\n                        type: COMPONENT_TYPE.LEGEND,\n                        extra: undefined,\n                    });\n                    // 标记为更新\n                    updated[id] = true;\n                }\n            }\n        }\n        else {\n            // 遍历处理每一个创建逻辑\n            this.loopLegends(eachLegend);\n        }\n        // 处理完成之后，销毁删除的\n        // 不在处理中的\n        var components = [];\n        each(this.getComponents(), function (co) {\n            if (updated[co.id]) {\n                components.push(co);\n            }\n            else {\n                co.component.destroy();\n            }\n        });\n        // 更新当前已有的 components\n        this.components = components;\n    };\n    Legend.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        this.container.clear();\n    };\n    Legend.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.container.remove(true);\n    };\n    /**\n     * 递归获取所有的 Geometry\n     */\n    Legend.prototype.getGeometries = function (view) {\n        var _this = this;\n        var geometries = view.geometries;\n        each(view.views, function (v) {\n            geometries = geometries.concat(_this.getGeometries(v));\n        });\n        return geometries;\n    };\n    /**\n     * 遍历 Geometry，处理 legend 逻辑\n     * @param doEach 每个 loop 中的处理方法\n     */\n    Legend.prototype.loopLegends = function (doEach) {\n        var isRootView = this.view.getRootView() === this.view;\n        // 非根 view，不处理 legend\n        if (!isRootView) {\n            return;\n        }\n        // 递归 view 中所有的 Geometry，进行创建 legend\n        var geometries = this.getGeometries(this.view);\n        var looped = {}; // 防止一个字段创建两个 legend\n        each(geometries, function (geometry) {\n            var attributes = geometry.getGroupAttributes();\n            each(attributes, function (attr) {\n                var scale = attr.getScale(attr.type);\n                // 如果在视觉通道上映射常量值，如 size(2) shape('circle') 不创建 legend\n                if (!scale || scale.type === 'identity' || looped[scale.field]) {\n                    return;\n                }\n                doEach(geometry, attr, scale);\n                looped[scale.field] = true;\n            });\n        });\n    };\n    /**\n     * 创建一个 legend\n     * @param geometry\n     * @param attr\n     * @param scale\n     */\n    Legend.prototype.createFieldLegend = function (geometry, attr, scale) {\n        var component;\n        var legendOption = getLegendOption(this.option, scale.field);\n        var layer = LAYER.FORE;\n        var direction = getDirection(legendOption);\n        // if the legend option is not false, means legend should be created.\n        if (legendOption !== false) {\n            if (get(legendOption, 'custom')) {\n                component = this.createCustomLegend(geometry, attr, scale, legendOption);\n            }\n            else {\n                if (scale.isLinear) {\n                    // linear field, create continuous legend\n                    component = this.createContinuousLegend(geometry, attr, scale, legendOption);\n                }\n                else if (scale.isCategory) {\n                    // category field, create category legend\n                    component = this.createCategoryLegend(geometry, attr, scale, legendOption);\n                }\n            }\n        }\n        if (component) {\n            component.set('field', scale.field);\n            return {\n                id: this.getId(scale.field),\n                component: component,\n                layer: layer,\n                direction: direction,\n                type: COMPONENT_TYPE.LEGEND,\n                extra: { scale: scale },\n            };\n        }\n    };\n    /**\n     * 自定义图例使用 category 图例去渲染\n     * @param geometry\n     * @param attr\n     * @param scale\n     * @param legendOption\n     */\n    Legend.prototype.createCustomLegend = function (geometry, attr, scale, legendOption) {\n        // 直接使用 分类图例渲染\n        var cfg = this.getCategoryCfg(geometry, attr, scale, legendOption, true);\n        return new CategoryLegend(cfg);\n    };\n    /**\n     * 创建连续图例\n     * @param geometry\n     * @param attr\n     * @param scale\n     * @param legendOption\n     */\n    Legend.prototype.createContinuousLegend = function (geometry, attr, scale, legendOption) {\n        var cfg = this.getContinuousCfg(geometry, attr, scale, legendOption);\n        return new ContinuousLegend(cfg);\n    };\n    /**\n     * 创建分类图例\n     * @param geometry\n     * @param attr\n     * @param scale\n     * @param legendOption\n     */\n    Legend.prototype.createCategoryLegend = function (geometry, attr, scale, legendOption) {\n        var cfg = this.getCategoryCfg(geometry, attr, scale, legendOption);\n        return new CategoryLegend(cfg);\n    };\n    /**\n     * 获得连续图例的配置\n     * @param geometry\n     * @param attr\n     * @param scale\n     * @param legendOption\n     */\n    Legend.prototype.getContinuousCfg = function (geometry, attr, scale, legendOption) {\n        var ticks = scale.getTicks();\n        var containMin = find(ticks, function (tick) { return tick.value === 0; });\n        var containMax = find(ticks, function (tick) { return tick.value === 1; });\n        var items = ticks.map(function (tick) {\n            var value = tick.value, tickValue = tick.tickValue;\n            var attrValue = attr.mapping(scale.invert(value)).join('');\n            return {\n                value: tickValue,\n                attrValue: attrValue,\n                color: attrValue,\n                scaleValue: value,\n            };\n        });\n        if (!containMin) {\n            items.push({\n                value: scale.min,\n                attrValue: attr.mapping(scale.invert(0)).join(''),\n                color: attr.mapping(scale.invert(0)).join(''),\n                scaleValue: 0,\n            });\n        }\n        if (!containMax) {\n            items.push({\n                value: scale.max,\n                attrValue: attr.mapping(scale.invert(1)).join(''),\n                color: attr.mapping(scale.invert(1)).join(''),\n                scaleValue: 1,\n            });\n        }\n        // 排序\n        items.sort(function (a, b) { return a.value - b.value; });\n        // 跟 attr 相关的配置\n        // size color 区别的配置\n        var attrLegendCfg = {\n            min: head(items).value,\n            max: last(items).value,\n            colors: [],\n            rail: {\n                type: attr.type,\n            },\n            track: {},\n        };\n        if (attr.type === 'size') {\n            attrLegendCfg.track = {\n                style: {\n                    // size 的选中前景色，对于 color，则直接使用 color 标识\n                    // @ts-ignore\n                    fill: attr.type === 'size' ? this.view.getTheme().defaultColor : undefined,\n                },\n            };\n        }\n        if (attr.type === 'color') {\n            attrLegendCfg.colors = items.map(function (item) { return item.attrValue; });\n        }\n        var container = this.container;\n        // if position is not set, use top as default\n        var direction = getDirection(legendOption);\n        var layout = getLegendLayout(direction);\n        var title = get(legendOption, 'title');\n        if (title) {\n            title = deepMix({\n                text: getName(scale),\n            }, title);\n        }\n        // 基础配置，从当前数据中读到的配置\n        attrLegendCfg.container = container;\n        attrLegendCfg.layout = layout;\n        attrLegendCfg.title = title;\n        attrLegendCfg.animateOption = DEFAULT_ANIMATE_CFG;\n        // @ts-ignore\n        return this.mergeLegendCfg(attrLegendCfg, legendOption, 'continuous');\n    };\n    /**\n     * 获取分类图例的配置项\n     * @param geometry\n     * @param attr\n     * @param scale\n     * @param custom\n     * @param legendOption\n     */\n    Legend.prototype.getCategoryCfg = function (geometry, attr, scale, legendOption, custom) {\n        var container = this.container;\n        // if position is not set, use top as default\n        var direction = get(legendOption, 'position', DIRECTION.BOTTOM);\n        // the default marker style\n        var themeMarker = get(this.view.getTheme(), ['components', 'legend', direction, 'marker']);\n        var userMarker = get(legendOption, 'marker');\n        var layout = getLegendLayout(direction);\n        var items = custom\n            ? getCustomLegendItems(themeMarker, userMarker, legendOption.items)\n            : getLegendItems(this.view, geometry, attr, themeMarker, userMarker);\n        var title = get(legendOption, 'title');\n        if (title) {\n            title = deepMix({\n                text: scale ? getName(scale) : '',\n            }, title);\n        }\n        var baseCfg = this.getCategoryLegendSizeCfg(layout);\n        baseCfg.container = container;\n        baseCfg.layout = layout;\n        baseCfg.items = items;\n        baseCfg.title = title;\n        baseCfg.animateOption = DEFAULT_ANIMATE_CFG;\n        var categoryCfg = this.mergeLegendCfg(baseCfg, legendOption, direction);\n        if (categoryCfg.reversed) {\n            // 图例项需要逆序\n            categoryCfg.items.reverse();\n        }\n        return categoryCfg;\n    };\n    /**\n     * get legend config, use option > suggestion > theme\n     * @param baseCfg\n     * @param legendOption\n     * @param direction\n     */\n    Legend.prototype.mergeLegendCfg = function (baseCfg, legendOption, direction) {\n        var themeObject = get(this.view.getTheme(), ['components', 'legend', direction], {});\n        return deepMix({}, themeObject, baseCfg, legendOption);\n    };\n    /**\n     * 生成 id\n     * @param key\n     */\n    Legend.prototype.getId = function (key) {\n        return this.name + \"-\" + key;\n    };\n    /**\n     * 根据 id 来获取组件\n     * @param id\n     */\n    Legend.prototype.getComponentById = function (id) {\n        return find(this.components, function (co) { return co.id === id; });\n    };\n    Legend.prototype.getCategoryLegendSizeCfg = function (layout) {\n        var _a = this.view.viewBBox, vw = _a.width, vh = _a.height;\n        // 目前 legend 的布局是以 viewBBox 为参照\n        // const { width: cw, height: ch } = this.view.coordinateBBox;\n        return layout === 'vertical'\n            ? {\n                maxWidth: vw * COMPONENT_MAX_VIEW_PERCENTAGE,\n                maxHeight: vh,\n            }\n            : {\n                maxWidth: vw,\n                maxHeight: vh * COMPONENT_MAX_VIEW_PERCENTAGE,\n            };\n    };\n    return Legend;\n}(Controller));\nexport default Legend;\n//# sourceMappingURL=legend.js.map"]}]}