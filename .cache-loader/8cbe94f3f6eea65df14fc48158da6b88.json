{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/geometry/shape/line/index.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/geometry/shape/line/index.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { each, isArray } from '@antv/util';\nimport { registerShape, registerShapeFactory } from '../base';\nimport { getPathPoints } from '../util/get-path-points';\nimport { getStyle } from '../util/get-style';\nimport { getLinePath, getSplinePath } from '../util/path';\nimport { splitPoints } from '../util/split-points';\nimport { getLineMarker } from './util';\nfunction getShapeAttrs(cfg, smooth, constraint) {\n    var isStack = cfg.isStack, connectNulls = cfg.connectNulls, isInCircle = cfg.isInCircle, showSinglePoint = cfg.showSinglePoint;\n    var shapeAttrs = getStyle(cfg, true, false, 'lineWidth');\n    var points = getPathPoints(cfg.points, connectNulls, showSinglePoint);\n    var path = [];\n    for (var i = 0, len = points.length; i < len; i++) {\n        var eachLinePoints = points[i];\n        path = path.concat(getPath(eachLinePoints, isInCircle, isStack, smooth, constraint, shapeAttrs));\n    }\n    shapeAttrs.path = path;\n    return shapeAttrs;\n}\nfunction getSinglePath(points, isInCircle, smooth, constraint, style) {\n    if (points.length === 1) {\n        return [\n            ['M', points[0].x, points[0].y - (style.lineWidth / 2)],\n            ['L', points[0].x, points[0].y],\n            ['L', points[0].x, points[0].y + (style.lineWidth / 2)],\n        ];\n    }\n    var path;\n    if (!smooth) {\n        path = getLinePath(points, false);\n        if (isInCircle) {\n            path.push(['Z']);\n        }\n    }\n    else {\n        if (isInCircle && points.length) {\n            points.push({ x: points[0].x, y: points[0].y });\n        }\n        path = getSplinePath(points, false, constraint);\n    }\n    return path;\n}\nfunction getRangePath(points, isInCircle, isStack, smooth, constraint, style) {\n    var topPoints = [];\n    var bottomPoints = [];\n    each(points, function (point) {\n        var result = splitPoints(point);\n        topPoints.push(result[1]);\n        bottomPoints.push(result[0]);\n    });\n    var topPath = getSinglePath(topPoints, isInCircle, smooth, constraint, style);\n    var bottomPath = getSinglePath(bottomPoints, isInCircle, smooth, constraint, style);\n    if (isStack) {\n        return topPath;\n    }\n    return topPath.concat(bottomPath);\n}\nfunction getPath(points, isInCircle, isStack, smooth, constraint, style) {\n    if (points.length) {\n        var first = points[0];\n        return isArray(first.y)\n            ? getRangePath(points, isInCircle, isStack, smooth, constraint, style)\n            : getSinglePath(points, isInCircle, smooth, constraint, style);\n    }\n    return [];\n}\nvar LineShapeFactory = registerShapeFactory('line', {\n    defaultShapeType: 'line',\n});\neach(['line', 'dot', 'dash', 'smooth'], function (shapeType) {\n    registerShape('line', shapeType, {\n        draw: function (cfg, container) {\n            var smooth = shapeType === 'smooth';\n            var constraint;\n            if (smooth) {\n                var _a = this.coordinate, start = _a.start, end = _a.end;\n                constraint = [\n                    [start.x, end.y],\n                    [end.x, start.y],\n                ];\n            }\n            var attrs = getShapeAttrs(cfg, smooth, constraint);\n            var shape = container.addShape({\n                type: 'path',\n                attrs: attrs,\n                name: 'line',\n            });\n            return shape;\n        },\n        getMarker: function (markerCfg) {\n            return getLineMarker(markerCfg, shapeType);\n        },\n    });\n});\nexport default LineShapeFactory;\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/geometry/shape/line/index.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/geometry/shape/line/index.js"],"names":[],"mappings":"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","sourcesContent":["import { each, isArray } from '@antv/util';\nimport { registerShape, registerShapeFactory } from '../base';\nimport { getPathPoints } from '../util/get-path-points';\nimport { getStyle } from '../util/get-style';\nimport { getLinePath, getSplinePath } from '../util/path';\nimport { splitPoints } from '../util/split-points';\nimport { getLineMarker } from './util';\nfunction getShapeAttrs(cfg, smooth, constraint) {\n    var isStack = cfg.isStack, connectNulls = cfg.connectNulls, isInCircle = cfg.isInCircle, showSinglePoint = cfg.showSinglePoint;\n    var shapeAttrs = getStyle(cfg, true, false, 'lineWidth');\n    var points = getPathPoints(cfg.points, connectNulls, showSinglePoint); // 根据 connectNulls 值处理 points\n    var path = [];\n    for (var i = 0, len = points.length; i < len; i++) {\n        var eachLinePoints = points[i];\n        path = path.concat(getPath(eachLinePoints, isInCircle, isStack, smooth, constraint, shapeAttrs));\n    }\n    shapeAttrs.path = path;\n    return shapeAttrs;\n}\n// 单条 path\nfunction getSinglePath(points, isInCircle, smooth, constraint, style) {\n    if (points.length === 1) {\n        // 只有一个点时\n        return [\n            ['M', points[0].x, points[0].y - (style.lineWidth / 2)],\n            ['L', points[0].x, points[0].y],\n            ['L', points[0].x, points[0].y + (style.lineWidth / 2)],\n        ];\n    }\n    var path;\n    if (!smooth) {\n        path = getLinePath(points, false);\n        if (isInCircle) {\n            path.push(['Z']);\n        }\n    }\n    else {\n        // 直角坐标系下绘制曲线时限制最大值、最小值\n        if (isInCircle && points.length) {\n            points.push({ x: points[0].x, y: points[0].y });\n        }\n        path = getSplinePath(points, false, constraint);\n    }\n    return path;\n}\nfunction getRangePath(points, isInCircle, isStack, smooth, constraint, style) {\n    var topPoints = [];\n    var bottomPoints = [];\n    each(points, function (point) {\n        var result = splitPoints(point);\n        topPoints.push(result[1]); // 上边\n        bottomPoints.push(result[0]); // 底边\n    });\n    var topPath = getSinglePath(topPoints, isInCircle, smooth, constraint, style);\n    var bottomPath = getSinglePath(bottomPoints, isInCircle, smooth, constraint, style);\n    if (isStack) {\n        return topPath;\n    }\n    return topPath.concat(bottomPath);\n}\nfunction getPath(points, isInCircle, isStack, smooth, constraint, style) {\n    if (points.length) {\n        var first = points[0];\n        return isArray(first.y)\n            ? getRangePath(points, isInCircle, isStack, smooth, constraint, style)\n            : getSinglePath(points, isInCircle, smooth, constraint, style);\n    }\n    return [];\n}\nvar LineShapeFactory = registerShapeFactory('line', {\n    defaultShapeType: 'line',\n});\n// 这里因为代码公用，所以直接全部注册\n// 'line' 默认折线；'dot' 点线 ···；'dash' 断线 - - -\neach(['line', 'dot', 'dash', 'smooth'], function (shapeType) {\n    registerShape('line', shapeType, {\n        draw: function (cfg, container) {\n            var smooth = shapeType === 'smooth';\n            var constraint;\n            if (smooth) {\n                var _a = this.coordinate, start = _a.start, end = _a.end;\n                constraint = [\n                    [start.x, end.y],\n                    [end.x, start.y],\n                ];\n            }\n            var attrs = getShapeAttrs(cfg, smooth, constraint);\n            var shape = container.addShape({\n                type: 'path',\n                attrs: attrs,\n                name: 'line',\n            });\n            return shape;\n        },\n        getMarker: function (markerCfg) {\n            return getLineMarker(markerCfg, shapeType);\n        },\n    });\n});\nexport default LineShapeFactory;\n//# sourceMappingURL=index.js.map"]}]}