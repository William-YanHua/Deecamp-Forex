{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\util\\partition.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\util\\partition.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["var isArray = require('@antv/util/lib/type/is-array');\r\nvar isFunction = require('@antv/util/lib/type/is-function');\r\nvar isString = require('@antv/util/lib/type/is-string');\r\nvar groupBy = require('@antv/util/lib/group-by');\r\nvar simpleSortBy = require('./simple-sort-by');\r\nmodule.exports = function (rows, group_by, order_by) {\r\n    if (order_by === void 0) { order_by = []; }\r\n    var newRows = rows;\r\n    if (order_by && order_by.length) {\r\n        newRows = simpleSortBy(rows, order_by);\r\n    }\r\n    var groupingFn;\r\n    if (isFunction(group_by)) {\r\n        groupingFn = group_by;\r\n    }\r\n    else if (isArray(group_by)) {\r\n        groupingFn = function (row) { return \"_\" + group_by.map(function (col) { return row[col]; }).join('-'); };\r\n    }\r\n    else if (isString(group_by)) {\r\n        groupingFn = function (row) { return \"_\" + row[group_by]; };\r\n    }\r\n    var groups = groupBy(newRows, groupingFn);\r\n    return groups;\r\n};\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\util\\partition.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\util\\partition.js"],"names":[],"mappings":"AAAA,IAAM,OAAO,GAAG,OAAO,CAAC,8BAA8B,CAAC,CAAC;AACxD,IAAM,UAAU,GAAG,OAAO,CAAC,iCAAiC,CAAC,CAAC;AAC9D,IAAM,QAAQ,GAAG,OAAO,CAAC,+BAA+B,CAAC,CAAC;AAC1D,IAAM,OAAO,GAAG,OAAO,CAAC,yBAAyB,CAAC,CAAC;AACnD,IAAM,YAAY,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAEjD,MAAM,CAAC,OAAO,GAAG,UAAC,IAAI,EAAE,QAAQ,EAAE,QAAa;IAAb,yBAAA,EAAA,aAAa;IAC7C,IAAI,OAAO,GAAG,IAAI,CAAC;IACnB,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,EAAE;QAC/B,OAAO,GAAG,YAAY,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;KACxC;IAED,IAAI,UAAU,CAAC;IACf,IAAI,UAAU,CAAC,QAAQ,CAAC,EAAE;QACxB,UAAU,GAAG,QAAQ,CAAC;KACvB;SAAM,IAAI,OAAO,CAAC,QAAQ,CAAC,EAAE;QAC5B,UAAU,GAAG,UAAA,GAAG,IAAI,OAAA,MAAI,QAAQ,CAAC,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,GAAG,CAAC,EAAR,CAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,CAAG,EAA7C,CAA6C,CAAC;KAGnE;SAAM,IAAI,QAAQ,CAAC,QAAQ,CAAC,EAAE;QAC7B,UAAU,GAAG,UAAA,GAAG,IAAI,OAAA,MAAI,GAAG,CAAC,QAAQ,CAAG,EAAnB,CAAmB,CAAC;KACzC;IACD,IAAM,MAAM,GAAG,OAAO,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;IAC5C,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC","sourcesContent":["const isArray = require('@antv/util/lib/type/is-array');\nconst isFunction = require('@antv/util/lib/type/is-function');\nconst isString = require('@antv/util/lib/type/is-string');\nconst groupBy = require('@antv/util/lib/group-by');\nconst simpleSortBy = require('./simple-sort-by');\n\nmodule.exports = (rows, group_by, order_by = []) => {\n  let newRows = rows;\n  if (order_by && order_by.length) {\n    newRows = simpleSortBy(rows, order_by);\n  }\n\n  let groupingFn;\n  if (isFunction(group_by)) {\n    groupingFn = group_by;\n  } else if (isArray(group_by)) {\n    groupingFn = row => `_${group_by.map(col => row[col]).join('-')}`;\n    // NOTE: Object.keys({'b': 'b', '2': '2', '1': '1', 'a': 'a'}) => [ '1', '2', 'b', 'a' ]\n    // that is why we have to add a prefix\n  } else if (isString(group_by)) {\n    groupingFn = row => `_${row[group_by]}`;\n  }\n  const groups = groupBy(newRows, groupingFn);\n  return groups;\n};\n"]}]}