{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\history\\es\\createHashHistory.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\history\\es\\createHashHistory.js","mtime":1503477301000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) {\r\n    var source = arguments[i];\r\n    for (var key in source) {\r\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n            target[key] = source[key];\r\n        }\r\n    }\r\n} return target; };\r\nimport warning from 'warning';\r\nimport invariant from 'invariant';\r\nimport { createLocation, locationsAreEqual } from './LocationUtils';\r\nimport { addLeadingSlash, stripLeadingSlash, stripTrailingSlash, hasBasename, stripBasename, createPath } from './PathUtils';\r\nimport createTransitionManager from './createTransitionManager';\r\nimport { canUseDOM, addEventListener, removeEventListener, getConfirmation, supportsGoWithoutReloadUsingHash } from './DOMUtils';\r\nvar HashChangeEvent = 'hashchange';\r\nvar HashPathCoders = {\r\n    hashbang: {\r\n        encodePath: function encodePath(path) {\r\n            return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);\r\n        },\r\n        decodePath: function decodePath(path) {\r\n            return path.charAt(0) === '!' ? path.substr(1) : path;\r\n        }\r\n    },\r\n    noslash: {\r\n        encodePath: stripLeadingSlash,\r\n        decodePath: addLeadingSlash\r\n    },\r\n    slash: {\r\n        encodePath: addLeadingSlash,\r\n        decodePath: addLeadingSlash\r\n    }\r\n};\r\nvar getHashPath = function getHashPath() {\r\n    var href = window.location.href;\r\n    var hashIndex = href.indexOf('#');\r\n    return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\r\n};\r\nvar pushHashPath = function pushHashPath(path) {\r\n    return window.location.hash = path;\r\n};\r\nvar replaceHashPath = function replaceHashPath(path) {\r\n    var hashIndex = window.location.href.indexOf('#');\r\n    window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);\r\n};\r\nvar createHashHistory = function createHashHistory() {\r\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n    invariant(canUseDOM, 'Hash history needs a DOM');\r\n    var globalHistory = window.history;\r\n    var canGoWithoutReload = supportsGoWithoutReloadUsingHash();\r\n    var _props$getUserConfirm = props.getUserConfirmation, getUserConfirmation = _props$getUserConfirm === undefined ? getConfirmation : _props$getUserConfirm, _props$hashType = props.hashType, hashType = _props$hashType === undefined ? 'slash' : _props$hashType;\r\n    var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\r\n    var _HashPathCoders$hashT = HashPathCoders[hashType], encodePath = _HashPathCoders$hashT.encodePath, decodePath = _HashPathCoders$hashT.decodePath;\r\n    var getDOMLocation = function getDOMLocation() {\r\n        var path = decodePath(getHashPath());\r\n        warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".');\r\n        if (basename)\r\n            path = stripBasename(path, basename);\r\n        return createLocation(path);\r\n    };\r\n    var transitionManager = createTransitionManager();\r\n    var setState = function setState(nextState) {\r\n        _extends(history, nextState);\r\n        history.length = globalHistory.length;\r\n        transitionManager.notifyListeners(history.location, history.action);\r\n    };\r\n    var forceNextPop = false;\r\n    var ignorePath = null;\r\n    var handleHashChange = function handleHashChange() {\r\n        var path = getHashPath();\r\n        var encodedPath = encodePath(path);\r\n        if (path !== encodedPath) {\r\n            replaceHashPath(encodedPath);\r\n        }\r\n        else {\r\n            var location = getDOMLocation();\r\n            var prevLocation = history.location;\r\n            if (!forceNextPop && locationsAreEqual(prevLocation, location))\r\n                return;\r\n            if (ignorePath === createPath(location))\r\n                return;\r\n            ignorePath = null;\r\n            handlePop(location);\r\n        }\r\n    };\r\n    var handlePop = function handlePop(location) {\r\n        if (forceNextPop) {\r\n            forceNextPop = false;\r\n            setState();\r\n        }\r\n        else {\r\n            var action = 'POP';\r\n            transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\r\n                if (ok) {\r\n                    setState({ action: action, location: location });\r\n                }\r\n                else {\r\n                    revertPop(location);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    var revertPop = function revertPop(fromLocation) {\r\n        var toLocation = history.location;\r\n        var toIndex = allPaths.lastIndexOf(createPath(toLocation));\r\n        if (toIndex === -1)\r\n            toIndex = 0;\r\n        var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));\r\n        if (fromIndex === -1)\r\n            fromIndex = 0;\r\n        var delta = toIndex - fromIndex;\r\n        if (delta) {\r\n            forceNextPop = true;\r\n            go(delta);\r\n        }\r\n    };\r\n    var path = getHashPath();\r\n    var encodedPath = encodePath(path);\r\n    if (path !== encodedPath)\r\n        replaceHashPath(encodedPath);\r\n    var initialLocation = getDOMLocation();\r\n    var allPaths = [createPath(initialLocation)];\r\n    var createHref = function createHref(location) {\r\n        return '#' + encodePath(basename + createPath(location));\r\n    };\r\n    var push = function push(path, state) {\r\n        warning(state === undefined, 'Hash history cannot push state; it is ignored');\r\n        var action = 'PUSH';\r\n        var location = createLocation(path, undefined, undefined, history.location);\r\n        transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\r\n            if (!ok)\r\n                return;\r\n            var path = createPath(location);\r\n            var encodedPath = encodePath(basename + path);\r\n            var hashChanged = getHashPath() !== encodedPath;\r\n            if (hashChanged) {\r\n                ignorePath = path;\r\n                pushHashPath(encodedPath);\r\n                var prevIndex = allPaths.lastIndexOf(createPath(history.location));\r\n                var nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\r\n                nextPaths.push(path);\r\n                allPaths = nextPaths;\r\n                setState({ action: action, location: location });\r\n            }\r\n            else {\r\n                warning(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack');\r\n                setState();\r\n            }\r\n        });\r\n    };\r\n    var replace = function replace(path, state) {\r\n        warning(state === undefined, 'Hash history cannot replace state; it is ignored');\r\n        var action = 'REPLACE';\r\n        var location = createLocation(path, undefined, undefined, history.location);\r\n        transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\r\n            if (!ok)\r\n                return;\r\n            var path = createPath(location);\r\n            var encodedPath = encodePath(basename + path);\r\n            var hashChanged = getHashPath() !== encodedPath;\r\n            if (hashChanged) {\r\n                ignorePath = path;\r\n                replaceHashPath(encodedPath);\r\n            }\r\n            var prevIndex = allPaths.indexOf(createPath(history.location));\r\n            if (prevIndex !== -1)\r\n                allPaths[prevIndex] = path;\r\n            setState({ action: action, location: location });\r\n        });\r\n    };\r\n    var go = function go(n) {\r\n        warning(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser');\r\n        globalHistory.go(n);\r\n    };\r\n    var goBack = function goBack() {\r\n        return go(-1);\r\n    };\r\n    var goForward = function goForward() {\r\n        return go(1);\r\n    };\r\n    var listenerCount = 0;\r\n    var checkDOMListeners = function checkDOMListeners(delta) {\r\n        listenerCount += delta;\r\n        if (listenerCount === 1) {\r\n            addEventListener(window, HashChangeEvent, handleHashChange);\r\n        }\r\n        else if (listenerCount === 0) {\r\n            removeEventListener(window, HashChangeEvent, handleHashChange);\r\n        }\r\n    };\r\n    var isBlocked = false;\r\n    var block = function block() {\r\n        var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\r\n        var unblock = transitionManager.setPrompt(prompt);\r\n        if (!isBlocked) {\r\n            checkDOMListeners(1);\r\n            isBlocked = true;\r\n        }\r\n        return function () {\r\n            if (isBlocked) {\r\n                isBlocked = false;\r\n                checkDOMListeners(-1);\r\n            }\r\n            return unblock();\r\n        };\r\n    };\r\n    var listen = function listen(listener) {\r\n        var unlisten = transitionManager.appendListener(listener);\r\n        checkDOMListeners(1);\r\n        return function () {\r\n            checkDOMListeners(-1);\r\n            unlisten();\r\n        };\r\n    };\r\n    var history = {\r\n        length: globalHistory.length,\r\n        action: 'POP',\r\n        location: initialLocation,\r\n        createHref: createHref,\r\n        push: push,\r\n        replace: replace,\r\n        go: go,\r\n        goBack: goBack,\r\n        goForward: goForward,\r\n        block: block,\r\n        listen: listen\r\n    };\r\n    return history;\r\n};\r\nexport default createHashHistory;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\history\\es\\createHashHistory.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\history\\es\\createHashHistory.js"],"names":[],"mappings":"AAAA,IAAI,QAAQ,GAAG,MAAM,CAAC,MAAM,IAAI,UAAU,MAAM,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAAE,IAAI,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;IAAC,KAAK,IAAI,GAAG,IAAI,MAAM,EAAE;QAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE;YAAE,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;SAAE;KAAE;CAAE,CAAC,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC;AAEjQ,OAAO,OAAO,MAAM,SAAS,CAAC;AAC9B,OAAO,SAAS,MAAM,WAAW,CAAC;AAClC,OAAO,EAAE,cAAc,EAAE,iBAAiB,EAAE,MAAM,iBAAiB,CAAC;AACpE,OAAO,EAAE,eAAe,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,WAAW,EAAE,aAAa,EAAE,UAAU,EAAE,MAAM,aAAa,CAAC;AAC7H,OAAO,uBAAuB,MAAM,2BAA2B,CAAC;AAChE,OAAO,EAAE,SAAS,EAAE,gBAAgB,EAAE,mBAAmB,EAAE,eAAe,EAAE,gCAAgC,EAAE,MAAM,YAAY,CAAC;AAEjI,IAAI,eAAe,GAAG,YAAY,CAAC;AAEnC,IAAI,cAAc,GAAG;IACnB,QAAQ,EAAE;QACR,UAAU,EAAE,SAAS,UAAU,CAAC,IAAI;YAClC,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACxE,CAAC;QACD,UAAU,EAAE,SAAS,UAAU,CAAC,IAAI;YAClC,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACxD,CAAC;KACF;IACD,OAAO,EAAE;QACP,UAAU,EAAE,iBAAiB;QAC7B,UAAU,EAAE,eAAe;KAC5B;IACD,KAAK,EAAE;QACL,UAAU,EAAE,eAAe;QAC3B,UAAU,EAAE,eAAe;KAC5B;CACF,CAAC;AAEF,IAAI,WAAW,GAAG,SAAS,WAAW;IAGpC,IAAI,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;IAChC,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAClC,OAAO,SAAS,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;AAC/D,CAAC,CAAC;AAEF,IAAI,YAAY,GAAG,SAAS,YAAY,CAAC,IAAI;IAC3C,OAAO,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;AACrC,CAAC,CAAC;AAEF,IAAI,eAAe,GAAG,SAAS,eAAe,CAAC,IAAI;IACjD,IAAI,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAElD,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;AACtG,CAAC,CAAC;AAEF,IAAI,iBAAiB,GAAG,SAAS,iBAAiB;IAChD,IAAI,KAAK,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAEnF,SAAS,CAAC,SAAS,EAAE,0BAA0B,CAAC,CAAC;IAEjD,IAAI,aAAa,GAAG,MAAM,CAAC,OAAO,CAAC;IACnC,IAAI,kBAAkB,GAAG,gCAAgC,EAAE,CAAC;IAE5D,IAAI,qBAAqB,GAAG,KAAK,CAAC,mBAAmB,EACjD,mBAAmB,GAAG,qBAAqB,KAAK,SAAS,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,qBAAqB,EACnG,eAAe,GAAG,KAAK,CAAC,QAAQ,EAChC,QAAQ,GAAG,eAAe,KAAK,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,eAAe,CAAC;IAEzE,IAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,kBAAkB,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAEzF,IAAI,qBAAqB,GAAG,cAAc,CAAC,QAAQ,CAAC,EAChD,UAAU,GAAG,qBAAqB,CAAC,UAAU,EAC7C,UAAU,GAAG,qBAAqB,CAAC,UAAU,CAAC;IAGlD,IAAI,cAAc,GAAG,SAAS,cAAc;QAC1C,IAAI,IAAI,GAAG,UAAU,CAAC,WAAW,EAAE,CAAC,CAAC;QAErC,OAAO,CAAC,CAAC,QAAQ,IAAI,WAAW,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE,+EAA+E,GAAG,oCAAoC,GAAG,IAAI,GAAG,mBAAmB,GAAG,QAAQ,GAAG,IAAI,CAAC,CAAC;QAEzN,IAAI,QAAQ;YAAE,IAAI,GAAG,aAAa,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QAEnD,OAAO,cAAc,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC;IAEF,IAAI,iBAAiB,GAAG,uBAAuB,EAAE,CAAC;IAElD,IAAI,QAAQ,GAAG,SAAS,QAAQ,CAAC,SAAS;QACxC,QAAQ,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QAE7B,OAAO,CAAC,MAAM,GAAG,aAAa,CAAC,MAAM,CAAC;QAEtC,iBAAiB,CAAC,eAAe,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;IACtE,CAAC,CAAC;IAEF,IAAI,YAAY,GAAG,KAAK,CAAC;IACzB,IAAI,UAAU,GAAG,IAAI,CAAC;IAEtB,IAAI,gBAAgB,GAAG,SAAS,gBAAgB;QAC9C,IAAI,IAAI,GAAG,WAAW,EAAE,CAAC;QACzB,IAAI,WAAW,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;QAEnC,IAAI,IAAI,KAAK,WAAW,EAAE;YAExB,eAAe,CAAC,WAAW,CAAC,CAAC;SAC9B;aAAM;YACL,IAAI,QAAQ,GAAG,cAAc,EAAE,CAAC;YAChC,IAAI,YAAY,GAAG,OAAO,CAAC,QAAQ,CAAC;YAEpC,IAAI,CAAC,YAAY,IAAI,iBAAiB,CAAC,YAAY,EAAE,QAAQ,CAAC;gBAAE,OAAO;YAEvE,IAAI,UAAU,KAAK,UAAU,CAAC,QAAQ,CAAC;gBAAE,OAAO;YAEhD,UAAU,GAAG,IAAI,CAAC;YAElB,SAAS,CAAC,QAAQ,CAAC,CAAC;SACrB;IACH,CAAC,CAAC;IAEF,IAAI,SAAS,GAAG,SAAS,SAAS,CAAC,QAAQ;QACzC,IAAI,YAAY,EAAE;YAChB,YAAY,GAAG,KAAK,CAAC;YACrB,QAAQ,EAAE,CAAC;SACZ;aAAM;YACL,IAAI,MAAM,GAAG,KAAK,CAAC;YAEnB,iBAAiB,CAAC,mBAAmB,CAAC,QAAQ,EAAE,MAAM,EAAE,mBAAmB,EAAE,UAAU,EAAE;gBACvF,IAAI,EAAE,EAAE;oBACN,QAAQ,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;iBAClD;qBAAM;oBACL,SAAS,CAAC,QAAQ,CAAC,CAAC;iBACrB;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC,CAAC;IAEF,IAAI,SAAS,GAAG,SAAS,SAAS,CAAC,YAAY;QAC7C,IAAI,UAAU,GAAG,OAAO,CAAC,QAAQ,CAAC;QAMlC,IAAI,OAAO,GAAG,QAAQ,CAAC,WAAW,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;QAE3D,IAAI,OAAO,KAAK,CAAC,CAAC;YAAE,OAAO,GAAG,CAAC,CAAC;QAEhC,IAAI,SAAS,GAAG,QAAQ,CAAC,WAAW,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC;QAE/D,IAAI,SAAS,KAAK,CAAC,CAAC;YAAE,SAAS,GAAG,CAAC,CAAC;QAEpC,IAAI,KAAK,GAAG,OAAO,GAAG,SAAS,CAAC;QAEhC,IAAI,KAAK,EAAE;YACT,YAAY,GAAG,IAAI,CAAC;YACpB,EAAE,CAAC,KAAK,CAAC,CAAC;SACX;IACH,CAAC,CAAC;IAGF,IAAI,IAAI,GAAG,WAAW,EAAE,CAAC;IACzB,IAAI,WAAW,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;IAEnC,IAAI,IAAI,KAAK,WAAW;QAAE,eAAe,CAAC,WAAW,CAAC,CAAC;IAEvD,IAAI,eAAe,GAAG,cAAc,EAAE,CAAC;IACvC,IAAI,QAAQ,GAAG,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC;IAI7C,IAAI,UAAU,GAAG,SAAS,UAAU,CAAC,QAAQ;QAC3C,OAAO,GAAG,GAAG,UAAU,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC3D,CAAC,CAAC;IAEF,IAAI,IAAI,GAAG,SAAS,IAAI,CAAC,IAAI,EAAE,KAAK;QAClC,OAAO,CAAC,KAAK,KAAK,SAAS,EAAE,+CAA+C,CAAC,CAAC;QAE9E,IAAI,MAAM,GAAG,MAAM,CAAC;QACpB,IAAI,QAAQ,GAAG,cAAc,CAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;QAE5E,iBAAiB,CAAC,mBAAmB,CAAC,QAAQ,EAAE,MAAM,EAAE,mBAAmB,EAAE,UAAU,EAAE;YACvF,IAAI,CAAC,EAAE;gBAAE,OAAO;YAEhB,IAAI,IAAI,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC;YAChC,IAAI,WAAW,GAAG,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;YAC9C,IAAI,WAAW,GAAG,WAAW,EAAE,KAAK,WAAW,CAAC;YAEhD,IAAI,WAAW,EAAE;gBAIf,UAAU,GAAG,IAAI,CAAC;gBAClB,YAAY,CAAC,WAAW,CAAC,CAAC;gBAE1B,IAAI,SAAS,GAAG,QAAQ,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACnE,IAAI,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;gBAExE,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACrB,QAAQ,GAAG,SAAS,CAAC;gBAErB,QAAQ,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;aAClD;iBAAM;gBACL,OAAO,CAAC,KAAK,EAAE,4FAA4F,CAAC,CAAC;gBAE7G,QAAQ,EAAE,CAAC;aACZ;QACH,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;IAEF,IAAI,OAAO,GAAG,SAAS,OAAO,CAAC,IAAI,EAAE,KAAK;QACxC,OAAO,CAAC,KAAK,KAAK,SAAS,EAAE,kDAAkD,CAAC,CAAC;QAEjF,IAAI,MAAM,GAAG,SAAS,CAAC;QACvB,IAAI,QAAQ,GAAG,cAAc,CAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;QAE5E,iBAAiB,CAAC,mBAAmB,CAAC,QAAQ,EAAE,MAAM,EAAE,mBAAmB,EAAE,UAAU,EAAE;YACvF,IAAI,CAAC,EAAE;gBAAE,OAAO;YAEhB,IAAI,IAAI,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC;YAChC,IAAI,WAAW,GAAG,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;YAC9C,IAAI,WAAW,GAAG,WAAW,EAAE,KAAK,WAAW,CAAC;YAEhD,IAAI,WAAW,EAAE;gBAIf,UAAU,GAAG,IAAI,CAAC;gBAClB,eAAe,CAAC,WAAW,CAAC,CAAC;aAC9B;YAED,IAAI,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;YAE/D,IAAI,SAAS,KAAK,CAAC,CAAC;gBAAE,QAAQ,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;YAEjD,QAAQ,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;IAEF,IAAI,EAAE,GAAG,SAAS,EAAE,CAAC,CAAC;QACpB,OAAO,CAAC,kBAAkB,EAAE,8DAA8D,CAAC,CAAC;QAE5F,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC;IAEF,IAAI,MAAM,GAAG,SAAS,MAAM;QAC1B,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC;IAEF,IAAI,SAAS,GAAG,SAAS,SAAS;QAChC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC;IAEF,IAAI,aAAa,GAAG,CAAC,CAAC;IAEtB,IAAI,iBAAiB,GAAG,SAAS,iBAAiB,CAAC,KAAK;QACtD,aAAa,IAAI,KAAK,CAAC;QAEvB,IAAI,aAAa,KAAK,CAAC,EAAE;YACvB,gBAAgB,CAAC,MAAM,EAAE,eAAe,EAAE,gBAAgB,CAAC,CAAC;SAC7D;aAAM,IAAI,aAAa,KAAK,CAAC,EAAE;YAC9B,mBAAmB,CAAC,MAAM,EAAE,eAAe,EAAE,gBAAgB,CAAC,CAAC;SAChE;IACH,CAAC,CAAC;IAEF,IAAI,SAAS,GAAG,KAAK,CAAC;IAEtB,IAAI,KAAK,GAAG,SAAS,KAAK;QACxB,IAAI,MAAM,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAEvF,IAAI,OAAO,GAAG,iBAAiB,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAElD,IAAI,CAAC,SAAS,EAAE;YACd,iBAAiB,CAAC,CAAC,CAAC,CAAC;YACrB,SAAS,GAAG,IAAI,CAAC;SAClB;QAED,OAAO;YACL,IAAI,SAAS,EAAE;gBACb,SAAS,GAAG,KAAK,CAAC;gBAClB,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;aACvB;YAED,OAAO,OAAO,EAAE,CAAC;QACnB,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,IAAI,MAAM,GAAG,SAAS,MAAM,CAAC,QAAQ;QACnC,IAAI,QAAQ,GAAG,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;QAC1D,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAErB,OAAO;YACL,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;YACtB,QAAQ,EAAE,CAAC;QACb,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,IAAI,OAAO,GAAG;QACZ,MAAM,EAAE,aAAa,CAAC,MAAM;QAC5B,MAAM,EAAE,KAAK;QACb,QAAQ,EAAE,eAAe;QACzB,UAAU,EAAE,UAAU;QACtB,IAAI,EAAE,IAAI;QACV,OAAO,EAAE,OAAO;QAChB,EAAE,EAAE,EAAE;QACN,MAAM,EAAE,MAAM;QACd,SAAS,EAAE,SAAS;QACpB,KAAK,EAAE,KAAK;QACZ,MAAM,EAAE,MAAM;KACf,CAAC;IAEF,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC;AAEF,eAAe,iBAAiB,CAAC","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport warning from 'warning';\nimport invariant from 'invariant';\nimport { createLocation, locationsAreEqual } from './LocationUtils';\nimport { addLeadingSlash, stripLeadingSlash, stripTrailingSlash, hasBasename, stripBasename, createPath } from './PathUtils';\nimport createTransitionManager from './createTransitionManager';\nimport { canUseDOM, addEventListener, removeEventListener, getConfirmation, supportsGoWithoutReloadUsingHash } from './DOMUtils';\n\nvar HashChangeEvent = 'hashchange';\n\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: stripLeadingSlash,\n    decodePath: addLeadingSlash\n  },\n  slash: {\n    encodePath: addLeadingSlash,\n    decodePath: addLeadingSlash\n  }\n};\n\nvar getHashPath = function getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n};\n\nvar pushHashPath = function pushHashPath(path) {\n  return window.location.hash = path;\n};\n\nvar replaceHashPath = function replaceHashPath(path) {\n  var hashIndex = window.location.href.indexOf('#');\n\n  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);\n};\n\nvar createHashHistory = function createHashHistory() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  invariant(canUseDOM, 'Hash history needs a DOM');\n\n  var globalHistory = window.history;\n  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();\n\n  var _props$getUserConfirm = props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === undefined ? getConfirmation : _props$getUserConfirm,\n      _props$hashType = props.hashType,\n      hashType = _props$hashType === undefined ? 'slash' : _props$hashType;\n\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n\n  var _HashPathCoders$hashT = HashPathCoders[hashType],\n      encodePath = _HashPathCoders$hashT.encodePath,\n      decodePath = _HashPathCoders$hashT.decodePath;\n\n\n  var getDOMLocation = function getDOMLocation() {\n    var path = decodePath(getHashPath());\n\n    warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".');\n\n    if (basename) path = stripBasename(path, basename);\n\n    return createLocation(path);\n  };\n\n  var transitionManager = createTransitionManager();\n\n  var setState = function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n\n    transitionManager.notifyListeners(history.location, history.action);\n  };\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  var handleHashChange = function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n\n      if (!forceNextPop && locationsAreEqual(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n\n      handlePop(location);\n    }\n  };\n\n  var handlePop = function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({ action: action, location: location });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  };\n\n  var revertPop = function revertPop(fromLocation) {\n    var toLocation = history.location;\n\n    // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf(createPath(toLocation));\n\n    if (toIndex === -1) toIndex = 0;\n\n    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));\n\n    if (fromIndex === -1) fromIndex = 0;\n\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  };\n\n  // Ensure the hash is encoded properly before doing anything else.\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n\n  var initialLocation = getDOMLocation();\n  var allPaths = [createPath(initialLocation)];\n\n  // Public interface\n\n  var createHref = function createHref(location) {\n    return '#' + encodePath(basename + createPath(location));\n  };\n\n  var push = function push(path, state) {\n    warning(state === undefined, 'Hash history cannot push state; it is ignored');\n\n    var action = 'PUSH';\n    var location = createLocation(path, undefined, undefined, history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n\n        var prevIndex = allPaths.lastIndexOf(createPath(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n\n        nextPaths.push(path);\n        allPaths = nextPaths;\n\n        setState({ action: action, location: location });\n      } else {\n        warning(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack');\n\n        setState();\n      }\n    });\n  };\n\n  var replace = function replace(path, state) {\n    warning(state === undefined, 'Hash history cannot replace state; it is ignored');\n\n    var action = 'REPLACE';\n    var location = createLocation(path, undefined, undefined, history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf(createPath(history.location));\n\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n\n      setState({ action: action, location: location });\n    });\n  };\n\n  var go = function go(n) {\n    warning(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser');\n\n    globalHistory.go(n);\n  };\n\n  var goBack = function goBack() {\n    return go(-1);\n  };\n\n  var goForward = function goForward() {\n    return go(1);\n  };\n\n  var listenerCount = 0;\n\n  var checkDOMListeners = function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1) {\n      addEventListener(window, HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      removeEventListener(window, HashChangeEvent, handleHashChange);\n    }\n  };\n\n  var isBlocked = false;\n\n  var block = function block() {\n    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  };\n\n  var listen = function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  };\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n\n  return history;\n};\n\nexport default createHashHistory;"]}]}