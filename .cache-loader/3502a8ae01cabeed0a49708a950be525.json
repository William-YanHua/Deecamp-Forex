{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\remark-parse\\lib\\tokenize\\html-block.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\remark-parse\\lib\\tokenize\\html-block.js","mtime":1516191690000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["'use strict';\r\nvar openCloseTag = require('../util/html').openCloseTag;\r\nmodule.exports = blockHTML;\r\nvar C_TAB = '\\t';\r\nvar C_SPACE = ' ';\r\nvar C_NEWLINE = '\\n';\r\nvar C_LT = '<';\r\nfunction blockHTML(eat, value, silent) {\r\n    var self = this;\r\n    var blocks = self.options.blocks;\r\n    var length = value.length;\r\n    var index = 0;\r\n    var next;\r\n    var line;\r\n    var offset;\r\n    var character;\r\n    var count;\r\n    var sequence;\r\n    var subvalue;\r\n    var sequences = [\r\n        [/^<(script|pre|style)(?=(\\s|>|$))/i, /<\\/(script|pre|style)>/i, true],\r\n        [/^<!--/, /-->/, true],\r\n        [/^<\\?/, /\\?>/, true],\r\n        [/^<![A-Za-z]/, />/, true],\r\n        [/^<!\\[CDATA\\[/, /\\]\\]>/, true],\r\n        [new RegExp('^</?(' + blocks.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true],\r\n        [new RegExp(openCloseTag.source + '\\\\s*$'), /^$/, false]\r\n    ];\r\n    while (index < length) {\r\n        character = value.charAt(index);\r\n        if (character !== C_TAB && character !== C_SPACE) {\r\n            break;\r\n        }\r\n        index++;\r\n    }\r\n    if (value.charAt(index) !== C_LT) {\r\n        return;\r\n    }\r\n    next = value.indexOf(C_NEWLINE, index + 1);\r\n    next = next === -1 ? length : next;\r\n    line = value.slice(index, next);\r\n    offset = -1;\r\n    count = sequences.length;\r\n    while (++offset < count) {\r\n        if (sequences[offset][0].test(line)) {\r\n            sequence = sequences[offset];\r\n            break;\r\n        }\r\n    }\r\n    if (!sequence) {\r\n        return;\r\n    }\r\n    if (silent) {\r\n        return sequence[2];\r\n    }\r\n    index = next;\r\n    if (!sequence[1].test(line)) {\r\n        while (index < length) {\r\n            next = value.indexOf(C_NEWLINE, index + 1);\r\n            next = next === -1 ? length : next;\r\n            line = value.slice(index + 1, next);\r\n            if (sequence[1].test(line)) {\r\n                if (line) {\r\n                    index = next;\r\n                }\r\n                break;\r\n            }\r\n            index = next;\r\n        }\r\n    }\r\n    subvalue = value.slice(0, index);\r\n    return eat(subvalue)({ type: 'html', value: subvalue });\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\remark-parse\\lib\\tokenize\\html-block.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\remark-parse\\lib\\tokenize\\html-block.js"],"names":[],"mappings":"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","sourcesContent":["'use strict';\n\nvar openCloseTag = require('../util/html').openCloseTag;\n\nmodule.exports = blockHTML;\n\nvar C_TAB = '\\t';\nvar C_SPACE = ' ';\nvar C_NEWLINE = '\\n';\nvar C_LT = '<';\n\nfunction blockHTML(eat, value, silent) {\n  var self = this;\n  var blocks = self.options.blocks;\n  var length = value.length;\n  var index = 0;\n  var next;\n  var line;\n  var offset;\n  var character;\n  var count;\n  var sequence;\n  var subvalue;\n\n  var sequences = [\n    [/^<(script|pre|style)(?=(\\s|>|$))/i, /<\\/(script|pre|style)>/i, true],\n    [/^<!--/, /-->/, true],\n    [/^<\\?/, /\\?>/, true],\n    [/^<![A-Za-z]/, />/, true],\n    [/^<!\\[CDATA\\[/, /\\]\\]>/, true],\n    [new RegExp('^</?(' + blocks.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true],\n    [new RegExp(openCloseTag.source + '\\\\s*$'), /^$/, false]\n  ];\n\n  /* Eat initial spacing. */\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character !== C_TAB && character !== C_SPACE) {\n      break;\n    }\n\n    index++;\n  }\n\n  if (value.charAt(index) !== C_LT) {\n    return;\n  }\n\n  next = value.indexOf(C_NEWLINE, index + 1);\n  next = next === -1 ? length : next;\n  line = value.slice(index, next);\n  offset = -1;\n  count = sequences.length;\n\n  while (++offset < count) {\n    if (sequences[offset][0].test(line)) {\n      sequence = sequences[offset];\n      break;\n    }\n  }\n\n  if (!sequence) {\n    return;\n  }\n\n  if (silent) {\n    return sequence[2];\n  }\n\n  index = next;\n\n  if (!sequence[1].test(line)) {\n    while (index < length) {\n      next = value.indexOf(C_NEWLINE, index + 1);\n      next = next === -1 ? length : next;\n      line = value.slice(index + 1, next);\n\n      if (sequence[1].test(line)) {\n        if (line) {\n          index = next;\n        }\n\n        break;\n      }\n\n      index = next;\n    }\n  }\n\n  subvalue = value.slice(0, index);\n\n  return eat(subvalue)({type: 'html', value: subvalue});\n}\n"]}]}