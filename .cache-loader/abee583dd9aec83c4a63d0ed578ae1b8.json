{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/geometry/shape/interval/util.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/geometry/shape/interval/util.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { isArray, isNil } from '@antv/util';\nexport function getRectPoints(pointInfo, isPyramid) {\n    if (isPyramid === void 0) {\n        isPyramid = false;\n    }\n    var x = pointInfo.x, y = pointInfo.y, y0 = pointInfo.y0, size = pointInfo.size;\n    var yMin;\n    var yMax;\n    if (isArray(y)) {\n        yMin = y[0], yMax = y[1];\n    }\n    else {\n        yMin = y0;\n        yMax = y;\n    }\n    var xMin;\n    var xMax;\n    if (isArray(x)) {\n        xMin = x[0], xMax = x[1];\n    }\n    else {\n        xMin = x - size / 2;\n        xMax = x + size / 2;\n    }\n    var points = [\n        { x: xMin, y: yMin },\n        { x: xMin, y: yMax },\n    ];\n    if (isPyramid) {\n        points.push({\n            x: xMax,\n            y: (yMax + yMin) / 2,\n        });\n    }\n    else {\n        points.push({ x: xMax, y: yMax }, { x: xMax, y: yMin });\n    }\n    return points;\n}\nexport function getRectPath(points, isClosed) {\n    if (isClosed === void 0) {\n        isClosed = true;\n    }\n    var path = [];\n    var firstPoint = points[0];\n    path.push(['M', firstPoint.x, firstPoint.y]);\n    for (var i = 1, len = points.length; i < len; i++) {\n        path.push(['L', points[i].x, points[i].y]);\n    }\n    if (isClosed) {\n        path.push(['L', firstPoint.x, firstPoint.y]);\n        path.push(['z']);\n    }\n    return path;\n}\nexport function getFunnelPath(points, nextPoints, isPyramid) {\n    var path = [];\n    if (!isNil(nextPoints)) {\n        path.push(['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], ['L', nextPoints[1].x, nextPoints[1].y], ['L', nextPoints[0].x, nextPoints[0].y], ['Z']);\n    }\n    else if (isPyramid) {\n        path.push(['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], ['L', points[2].x, points[2].y], ['L', points[2].x, points[2].y], ['Z']);\n    }\n    else {\n        path.push(['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], ['L', points[2].x, points[2].y], ['L', points[3].x, points[3].y], ['Z']);\n    }\n    return path;\n}\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/geometry/shape/interval/util.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/geometry/shape/interval/util.js"],"names":[],"mappings":"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","sourcesContent":["import { isArray, isNil } from '@antv/util';\n/**\n * @ignore\n * 根据数据点生成矩形的四个关键点\n * @param pointInfo 数据点信息\n * @param [isPyramid] 是否为尖底漏斗图\n * @returns rect points 返回矩形四个顶点信息\n */\nexport function getRectPoints(pointInfo, isPyramid) {\n    if (isPyramid === void 0) { isPyramid = false; }\n    var x = pointInfo.x, y = pointInfo.y, y0 = pointInfo.y0, size = pointInfo.size;\n    // 有 4 种情况，\n    // 1. x, y 都不是数组\n    // 2. y是数组，x不是\n    // 3. x是数组，y不是\n    // 4. x, y 都是数组\n    var yMin;\n    var yMax;\n    if (isArray(y)) {\n        yMin = y[0], yMax = y[1];\n    }\n    else {\n        yMin = y0;\n        yMax = y;\n    }\n    var xMin;\n    var xMax;\n    if (isArray(x)) {\n        xMin = x[0], xMax = x[1];\n    }\n    else {\n        xMin = x - size / 2;\n        xMax = x + size / 2;\n    }\n    var points = [\n        { x: xMin, y: yMin },\n        { x: xMin, y: yMax },\n    ];\n    if (isPyramid) {\n        // 绘制尖底漏斗图\n        // 金字塔漏斗图的关键点\n        // 1\n        // |   2\n        // 0\n        points.push({\n            x: xMax,\n            y: (yMax + yMin) / 2,\n        });\n    }\n    else {\n        // 矩形的四个关键点，结构如下（左下角顺时针连接）\n        // 1 ---- 2\n        // |      |\n        // 0 ---- 3\n        points.push({ x: xMax, y: yMax }, { x: xMax, y: yMin });\n    }\n    return points;\n}\n/**\n * @ignore\n * 根据矩形关键点绘制 path\n * @param points 关键点数组\n * @param isClosed path 是否需要闭合\n * @returns 返回矩形的 path\n */\nexport function getRectPath(points, isClosed) {\n    if (isClosed === void 0) { isClosed = true; }\n    var path = [];\n    var firstPoint = points[0];\n    path.push(['M', firstPoint.x, firstPoint.y]);\n    for (var i = 1, len = points.length; i < len; i++) {\n        path.push(['L', points[i].x, points[i].y]);\n    }\n    // 对于 shape=\"line\" path 不应该闭合，否则会造成 lineCap 绘图属性失效\n    if (isClosed) {\n        path.push(['L', firstPoint.x, firstPoint.y]); // 需要闭合\n        path.push(['z']);\n    }\n    return path;\n}\n/**\n * @ignore\n * 根据 funnel 关键点绘制漏斗图的 path\n * @param points 图形关键点信息\n * @param nextPoints 下一个数据的图形关键点信息\n * @param isPyramid 是否为尖底漏斗图\n * @returns 返回漏斗图的图形 path\n */\nexport function getFunnelPath(points, nextPoints, isPyramid) {\n    var path = [];\n    if (!isNil(nextPoints)) {\n        path.push(['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], ['L', nextPoints[1].x, nextPoints[1].y], ['L', nextPoints[0].x, nextPoints[0].y], ['Z']);\n    }\n    else if (isPyramid) {\n        // 金字塔最底部\n        path.push(['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], ['L', points[2].x, points[2].y], ['L', points[2].x, points[2].y], ['Z']);\n    }\n    else {\n        // 漏斗图最底部\n        path.push(['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], ['L', points[2].x, points[2].y], ['L', points[3].x, points[3].y], ['Z']);\n    }\n    return path;\n}\n//# sourceMappingURL=util.js.map"]}]}