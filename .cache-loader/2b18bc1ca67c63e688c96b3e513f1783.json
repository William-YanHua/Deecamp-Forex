{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/async-validator/es/index.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/async-validator/es/index.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n        }\n    }\n} return target; };\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\nvar _util = require('./util');\nvar _validator = require('./validator/');\nvar _validator2 = _interopRequireDefault(_validator);\nvar _messages2 = require('./messages');\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\nfunction Schema(descriptor) {\n    this.rules = null;\n    this._messages = _messages2.messages;\n    this.define(descriptor);\n}\nSchema.prototype = {\n    messages: function messages(_messages) {\n        if (_messages) {\n            this._messages = (0, _util.deepMerge)((0, _messages2.newMessages)(), _messages);\n        }\n        return this._messages;\n    },\n    define: function define(rules) {\n        if (!rules) {\n            throw new Error('Cannot configure a schema with no rules');\n        }\n        if ((typeof rules === 'undefined' ? 'undefined' : _typeof(rules)) !== 'object' || Array.isArray(rules)) {\n            throw new Error('Rules must be an object');\n        }\n        this.rules = {};\n        var z = void 0;\n        var item = void 0;\n        for (z in rules) {\n            if (rules.hasOwnProperty(z)) {\n                item = rules[z];\n                this.rules[z] = Array.isArray(item) ? item : [item];\n            }\n        }\n    },\n    validate: function validate(source_) {\n        var _this = this;\n        var o = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var oc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () { };\n        var source = source_;\n        var options = o;\n        var callback = oc;\n        if (typeof options === 'function') {\n            callback = options;\n            options = {};\n        }\n        if (!this.rules || Object.keys(this.rules).length === 0) {\n            if (callback) {\n                callback();\n            }\n            return Promise.resolve();\n        }\n        function complete(results) {\n            var i = void 0;\n            var errors = [];\n            var fields = {};\n            function add(e) {\n                if (Array.isArray(e)) {\n                    var _errors;\n                    errors = (_errors = errors).concat.apply(_errors, e);\n                }\n                else {\n                    errors.push(e);\n                }\n            }\n            for (i = 0; i < results.length; i++) {\n                add(results[i]);\n            }\n            if (!errors.length) {\n                errors = null;\n                fields = null;\n            }\n            else {\n                fields = (0, _util.convertFieldsError)(errors);\n            }\n            callback(errors, fields);\n        }\n        if (options.messages) {\n            var messages = this.messages();\n            if (messages === _messages2.messages) {\n                messages = (0, _messages2.newMessages)();\n            }\n            (0, _util.deepMerge)(messages, options.messages);\n            options.messages = messages;\n        }\n        else {\n            options.messages = this.messages();\n        }\n        var arr = void 0;\n        var value = void 0;\n        var series = {};\n        var keys = options.keys || Object.keys(this.rules);\n        keys.forEach(function (z) {\n            arr = _this.rules[z];\n            value = source[z];\n            arr.forEach(function (r) {\n                var rule = r;\n                if (typeof rule.transform === 'function') {\n                    if (source === source_) {\n                        source = _extends({}, source);\n                    }\n                    value = source[z] = rule.transform(value);\n                }\n                if (typeof rule === 'function') {\n                    rule = {\n                        validator: rule\n                    };\n                }\n                else {\n                    rule = _extends({}, rule);\n                }\n                rule.validator = _this.getValidationMethod(rule);\n                rule.field = z;\n                rule.fullField = rule.fullField || z;\n                rule.type = _this.getType(rule);\n                if (!rule.validator) {\n                    return;\n                }\n                series[z] = series[z] || [];\n                series[z].push({\n                    rule: rule,\n                    value: value,\n                    source: source,\n                    field: z\n                });\n            });\n        });\n        var errorFields = {};\n        return (0, _util.asyncMap)(series, options, function (data, doIt) {\n            var rule = data.rule;\n            var deep = (rule.type === 'object' || rule.type === 'array') && (_typeof(rule.fields) === 'object' || _typeof(rule.defaultField) === 'object');\n            deep = deep && (rule.required || !rule.required && data.value);\n            rule.field = data.field;\n            function addFullfield(key, schema) {\n                return _extends({}, schema, {\n                    fullField: rule.fullField + '.' + key\n                });\n            }\n            function cb() {\n                var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n                var errors = e;\n                if (!Array.isArray(errors)) {\n                    errors = [errors];\n                }\n                if (!options.suppressWarning && errors.length) {\n                    Schema.warning('async-validator:', errors);\n                }\n                if (errors.length && rule.message) {\n                    errors = [].concat(rule.message);\n                }\n                errors = errors.map((0, _util.complementError)(rule));\n                if (options.first && errors.length) {\n                    errorFields[rule.field] = 1;\n                    return doIt(errors);\n                }\n                if (!deep) {\n                    doIt(errors);\n                }\n                else {\n                    if (rule.required && !data.value) {\n                        if (rule.message) {\n                            errors = [].concat(rule.message).map((0, _util.complementError)(rule));\n                        }\n                        else if (options.error) {\n                            errors = [options.error(rule, (0, _util.format)(options.messages.required, rule.field))];\n                        }\n                        else {\n                            errors = [];\n                        }\n                        return doIt(errors);\n                    }\n                    var fieldsSchema = {};\n                    if (rule.defaultField) {\n                        for (var k in data.value) {\n                            if (data.value.hasOwnProperty(k)) {\n                                fieldsSchema[k] = rule.defaultField;\n                            }\n                        }\n                    }\n                    fieldsSchema = _extends({}, fieldsSchema, data.rule.fields);\n                    for (var f in fieldsSchema) {\n                        if (fieldsSchema.hasOwnProperty(f)) {\n                            var fieldSchema = Array.isArray(fieldsSchema[f]) ? fieldsSchema[f] : [fieldsSchema[f]];\n                            fieldsSchema[f] = fieldSchema.map(addFullfield.bind(null, f));\n                        }\n                    }\n                    var schema = new Schema(fieldsSchema);\n                    schema.messages(options.messages);\n                    if (data.rule.options) {\n                        data.rule.options.messages = options.messages;\n                        data.rule.options.error = options.error;\n                    }\n                    schema.validate(data.value, data.rule.options || options, function (errs) {\n                        var finalErrors = [];\n                        if (errors && errors.length) {\n                            finalErrors.push.apply(finalErrors, errors);\n                        }\n                        if (errs && errs.length) {\n                            finalErrors.push.apply(finalErrors, errs);\n                        }\n                        doIt(finalErrors.length ? finalErrors : null);\n                    });\n                }\n            }\n            var res = void 0;\n            if (rule.asyncValidator) {\n                res = rule.asyncValidator(rule, data.value, cb, data.source, options);\n            }\n            else if (rule.validator) {\n                res = rule.validator(rule, data.value, cb, data.source, options);\n                if (res === true) {\n                    cb();\n                }\n                else if (res === false) {\n                    cb(rule.message || rule.field + ' fails');\n                }\n                else if (res instanceof Array) {\n                    cb(res);\n                }\n                else if (res instanceof Error) {\n                    cb(res.message);\n                }\n            }\n            if (res && res.then) {\n                res.then(function () {\n                    return cb();\n                }, function (e) {\n                    return cb(e);\n                });\n            }\n        }, function (results) {\n            complete(results);\n        });\n    },\n    getType: function getType(rule) {\n        if (rule.type === undefined && rule.pattern instanceof RegExp) {\n            rule.type = 'pattern';\n        }\n        if (typeof rule.validator !== 'function' && rule.type && !_validator2['default'].hasOwnProperty(rule.type)) {\n            throw new Error((0, _util.format)('Unknown rule type %s', rule.type));\n        }\n        return rule.type || 'string';\n    },\n    getValidationMethod: function getValidationMethod(rule) {\n        if (typeof rule.validator === 'function') {\n            return rule.validator;\n        }\n        var keys = Object.keys(rule);\n        var messageIndex = keys.indexOf('message');\n        if (messageIndex !== -1) {\n            keys.splice(messageIndex, 1);\n        }\n        if (keys.length === 1 && keys[0] === 'required') {\n            return _validator2['default'].required;\n        }\n        return _validator2['default'][this.getType(rule)] || false;\n    }\n};\nSchema.register = function register(type, validator) {\n    if (typeof validator !== 'function') {\n        throw new Error('Cannot register a validator by type, validator is not a function');\n    }\n    _validator2['default'][type] = validator;\n};\nSchema.warning = _util.warning;\nSchema.messages = _messages2.messages;\nexports['default'] = Schema;\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/async-validator/es/index.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/async-validator/es/index.js"],"names":[],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = require('./util');\n\nvar _validator = require('./validator/');\n\nvar _validator2 = _interopRequireDefault(_validator);\n\nvar _messages2 = require('./messages');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n *  Encapsulates a validation schema.\n *\n *  @param descriptor An object declaring validation rules\n *  for this schema.\n */\nfunction Schema(descriptor) {\n  this.rules = null;\n  this._messages = _messages2.messages;\n  this.define(descriptor);\n}\n\nSchema.prototype = {\n  messages: function messages(_messages) {\n    if (_messages) {\n      this._messages = (0, _util.deepMerge)((0, _messages2.newMessages)(), _messages);\n    }\n    return this._messages;\n  },\n  define: function define(rules) {\n    if (!rules) {\n      throw new Error('Cannot configure a schema with no rules');\n    }\n    if ((typeof rules === 'undefined' ? 'undefined' : _typeof(rules)) !== 'object' || Array.isArray(rules)) {\n      throw new Error('Rules must be an object');\n    }\n    this.rules = {};\n    var z = void 0;\n    var item = void 0;\n    for (z in rules) {\n      if (rules.hasOwnProperty(z)) {\n        item = rules[z];\n        this.rules[z] = Array.isArray(item) ? item : [item];\n      }\n    }\n  },\n  validate: function validate(source_) {\n    var _this = this;\n\n    var o = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var oc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};\n\n    var source = source_;\n    var options = o;\n    var callback = oc;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (!this.rules || Object.keys(this.rules).length === 0) {\n      if (callback) {\n        callback();\n      }\n      return Promise.resolve();\n    }\n\n    function complete(results) {\n      var i = void 0;\n      var errors = [];\n      var fields = {};\n\n      function add(e) {\n        if (Array.isArray(e)) {\n          var _errors;\n\n          errors = (_errors = errors).concat.apply(_errors, e);\n        } else {\n          errors.push(e);\n        }\n      }\n\n      for (i = 0; i < results.length; i++) {\n        add(results[i]);\n      }\n      if (!errors.length) {\n        errors = null;\n        fields = null;\n      } else {\n        fields = (0, _util.convertFieldsError)(errors);\n      }\n      callback(errors, fields);\n    }\n\n    if (options.messages) {\n      var messages = this.messages();\n      if (messages === _messages2.messages) {\n        messages = (0, _messages2.newMessages)();\n      }\n      (0, _util.deepMerge)(messages, options.messages);\n      options.messages = messages;\n    } else {\n      options.messages = this.messages();\n    }\n    var arr = void 0;\n    var value = void 0;\n    var series = {};\n    var keys = options.keys || Object.keys(this.rules);\n    keys.forEach(function (z) {\n      arr = _this.rules[z];\n      value = source[z];\n      arr.forEach(function (r) {\n        var rule = r;\n        if (typeof rule.transform === 'function') {\n          if (source === source_) {\n            source = _extends({}, source);\n          }\n          value = source[z] = rule.transform(value);\n        }\n        if (typeof rule === 'function') {\n          rule = {\n            validator: rule\n          };\n        } else {\n          rule = _extends({}, rule);\n        }\n        rule.validator = _this.getValidationMethod(rule);\n        rule.field = z;\n        rule.fullField = rule.fullField || z;\n        rule.type = _this.getType(rule);\n        if (!rule.validator) {\n          return;\n        }\n        series[z] = series[z] || [];\n        series[z].push({\n          rule: rule,\n          value: value,\n          source: source,\n          field: z\n        });\n      });\n    });\n    var errorFields = {};\n    return (0, _util.asyncMap)(series, options, function (data, doIt) {\n      var rule = data.rule;\n      var deep = (rule.type === 'object' || rule.type === 'array') && (_typeof(rule.fields) === 'object' || _typeof(rule.defaultField) === 'object');\n      deep = deep && (rule.required || !rule.required && data.value);\n      rule.field = data.field;\n\n      function addFullfield(key, schema) {\n        return _extends({}, schema, {\n          fullField: rule.fullField + '.' + key\n        });\n      }\n\n      function cb() {\n        var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n        var errors = e;\n        if (!Array.isArray(errors)) {\n          errors = [errors];\n        }\n        if (!options.suppressWarning && errors.length) {\n          Schema.warning('async-validator:', errors);\n        }\n        if (errors.length && rule.message) {\n          errors = [].concat(rule.message);\n        }\n\n        errors = errors.map((0, _util.complementError)(rule));\n\n        if (options.first && errors.length) {\n          errorFields[rule.field] = 1;\n          return doIt(errors);\n        }\n        if (!deep) {\n          doIt(errors);\n        } else {\n          // if rule is required but the target object\n          // does not exist fail at the rule level and don't\n          // go deeper\n          if (rule.required && !data.value) {\n            if (rule.message) {\n              errors = [].concat(rule.message).map((0, _util.complementError)(rule));\n            } else if (options.error) {\n              errors = [options.error(rule, (0, _util.format)(options.messages.required, rule.field))];\n            } else {\n              errors = [];\n            }\n            return doIt(errors);\n          }\n\n          var fieldsSchema = {};\n          if (rule.defaultField) {\n            for (var k in data.value) {\n              if (data.value.hasOwnProperty(k)) {\n                fieldsSchema[k] = rule.defaultField;\n              }\n            }\n          }\n          fieldsSchema = _extends({}, fieldsSchema, data.rule.fields);\n          for (var f in fieldsSchema) {\n            if (fieldsSchema.hasOwnProperty(f)) {\n              var fieldSchema = Array.isArray(fieldsSchema[f]) ? fieldsSchema[f] : [fieldsSchema[f]];\n              fieldsSchema[f] = fieldSchema.map(addFullfield.bind(null, f));\n            }\n          }\n          var schema = new Schema(fieldsSchema);\n          schema.messages(options.messages);\n          if (data.rule.options) {\n            data.rule.options.messages = options.messages;\n            data.rule.options.error = options.error;\n          }\n          schema.validate(data.value, data.rule.options || options, function (errs) {\n            var finalErrors = [];\n            if (errors && errors.length) {\n              finalErrors.push.apply(finalErrors, errors);\n            }\n            if (errs && errs.length) {\n              finalErrors.push.apply(finalErrors, errs);\n            }\n            doIt(finalErrors.length ? finalErrors : null);\n          });\n        }\n      }\n\n      var res = void 0;\n      if (rule.asyncValidator) {\n        res = rule.asyncValidator(rule, data.value, cb, data.source, options);\n      } else if (rule.validator) {\n        res = rule.validator(rule, data.value, cb, data.source, options);\n        if (res === true) {\n          cb();\n        } else if (res === false) {\n          cb(rule.message || rule.field + ' fails');\n        } else if (res instanceof Array) {\n          cb(res);\n        } else if (res instanceof Error) {\n          cb(res.message);\n        }\n      }\n      if (res && res.then) {\n        res.then(function () {\n          return cb();\n        }, function (e) {\n          return cb(e);\n        });\n      }\n    }, function (results) {\n      complete(results);\n    });\n  },\n  getType: function getType(rule) {\n    if (rule.type === undefined && rule.pattern instanceof RegExp) {\n      rule.type = 'pattern';\n    }\n    if (typeof rule.validator !== 'function' && rule.type && !_validator2['default'].hasOwnProperty(rule.type)) {\n      throw new Error((0, _util.format)('Unknown rule type %s', rule.type));\n    }\n    return rule.type || 'string';\n  },\n  getValidationMethod: function getValidationMethod(rule) {\n    if (typeof rule.validator === 'function') {\n      return rule.validator;\n    }\n    var keys = Object.keys(rule);\n    var messageIndex = keys.indexOf('message');\n    if (messageIndex !== -1) {\n      keys.splice(messageIndex, 1);\n    }\n    if (keys.length === 1 && keys[0] === 'required') {\n      return _validator2['default'].required;\n    }\n    return _validator2['default'][this.getType(rule)] || false;\n  }\n};\n\nSchema.register = function register(type, validator) {\n  if (typeof validator !== 'function') {\n    throw new Error('Cannot register a validator by type, validator is not a function');\n  }\n  _validator2['default'][type] = validator;\n};\n\nSchema.warning = _util.warning;\n\nSchema.messages = _messages2.messages;\n\nexports['default'] = Schema;"]}]}