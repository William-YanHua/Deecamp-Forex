{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-base\\esm\\abstract\\shape.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-base\\esm\\abstract\\shape.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\r\nimport Element from './element';\r\nimport { multiplyVec2 } from '../util/matrix';\r\nvar AbstractShape = (function (_super) {\r\n    __extends(AbstractShape, _super);\r\n    function AbstractShape(cfg) {\r\n        return _super.call(this, cfg) || this;\r\n    }\r\n    AbstractShape.prototype._isInBBox = function (refX, refY) {\r\n        var bbox = this.getBBox();\r\n        return bbox.minX <= refX && bbox.maxX >= refX && bbox.minY <= refY && bbox.maxY >= refY;\r\n    };\r\n    AbstractShape.prototype.afterAttrsChange = function (targetAttrs) {\r\n        _super.prototype.afterAttrsChange.call(this, targetAttrs);\r\n        this.clearCacheBBox();\r\n    };\r\n    AbstractShape.prototype.getBBox = function () {\r\n        var bbox = this.get('bbox');\r\n        if (!bbox) {\r\n            bbox = this.calculateBBox();\r\n            this.set('bbox', bbox);\r\n        }\r\n        return bbox;\r\n    };\r\n    AbstractShape.prototype.getCanvasBBox = function () {\r\n        var canvasBox = this.get('canvasBox');\r\n        if (!canvasBox) {\r\n            canvasBox = this.calculateCanvasBBox();\r\n            this.set('canvasBox', canvasBox);\r\n        }\r\n        return canvasBox;\r\n    };\r\n    AbstractShape.prototype.applyMatrix = function (matrix) {\r\n        _super.prototype.applyMatrix.call(this, matrix);\r\n        this.set('canvasBox', null);\r\n    };\r\n    AbstractShape.prototype.calculateCanvasBBox = function () {\r\n        var bbox = this.getBBox();\r\n        var totalMatrix = this.getTotalMatrix();\r\n        var minX = bbox.minX, minY = bbox.minY, maxX = bbox.maxX, maxY = bbox.maxY;\r\n        if (totalMatrix) {\r\n            var topLeft = multiplyVec2(totalMatrix, [bbox.minX, bbox.minY]);\r\n            var topRight = multiplyVec2(totalMatrix, [bbox.maxX, bbox.minY]);\r\n            var bottomLeft = multiplyVec2(totalMatrix, [bbox.minX, bbox.maxY]);\r\n            var bottomRight = multiplyVec2(totalMatrix, [bbox.maxX, bbox.maxY]);\r\n            minX = Math.min(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]);\r\n            maxX = Math.max(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]);\r\n            minY = Math.min(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1]);\r\n            maxY = Math.max(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1]);\r\n        }\r\n        var attrs = this.attrs;\r\n        if (attrs.shadowColor) {\r\n            var _a = attrs.shadowBlur, shadowBlur = _a === void 0 ? 0 : _a, _b = attrs.shadowOffsetX, shadowOffsetX = _b === void 0 ? 0 : _b, _c = attrs.shadowOffsetY, shadowOffsetY = _c === void 0 ? 0 : _c;\r\n            var shadowLeft = minX - shadowBlur + shadowOffsetX;\r\n            var shadowRight = maxX + shadowBlur + shadowOffsetX;\r\n            var shadowTop = minY - shadowBlur + shadowOffsetY;\r\n            var shadowBottom = maxY + shadowBlur + shadowOffsetY;\r\n            minX = Math.min(minX, shadowLeft);\r\n            maxX = Math.max(maxX, shadowRight);\r\n            minY = Math.min(minY, shadowTop);\r\n            maxY = Math.max(maxY, shadowBottom);\r\n        }\r\n        return {\r\n            x: minX,\r\n            y: minY,\r\n            minX: minX,\r\n            minY: minY,\r\n            maxX: maxX,\r\n            maxY: maxY,\r\n            width: maxX - minX,\r\n            height: maxY - minY,\r\n        };\r\n    };\r\n    AbstractShape.prototype.clearCacheBBox = function () {\r\n        this.set('bbox', null);\r\n        this.set('canvasBox', null);\r\n    };\r\n    AbstractShape.prototype.isClipShape = function () {\r\n        return this.get('isClipShape');\r\n    };\r\n    AbstractShape.prototype.isInShape = function (refX, refY) {\r\n        return false;\r\n    };\r\n    AbstractShape.prototype.isOnlyHitBox = function () {\r\n        return false;\r\n    };\r\n    AbstractShape.prototype.isHit = function (x, y) {\r\n        var startArrowShape = this.get('startArrowShape');\r\n        var endArrowShape = this.get('endArrowShape');\r\n        var vec = [x, y, 1];\r\n        vec = this.invertFromMatrix(vec);\r\n        var refX = vec[0], refY = vec[1];\r\n        var inBBox = this._isInBBox(refX, refY);\r\n        if (this.isOnlyHitBox()) {\r\n            return inBBox;\r\n        }\r\n        if (inBBox && !this.isClipped(refX, refY)) {\r\n            if (this.isInShape(refX, refY)) {\r\n                return true;\r\n            }\r\n            if (startArrowShape && startArrowShape.isHit(refX, refY)) {\r\n                return true;\r\n            }\r\n            if (endArrowShape && endArrowShape.isHit(refX, refY)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    return AbstractShape;\r\n}(Element));\r\nexport default AbstractShape;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-base\\esm\\abstract\\shape.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-base\\esm\\abstract\\shape.js"],"names":[],"mappings":"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","sourcesContent":["import { __extends } from \"tslib\";\nimport Element from './element';\nimport { multiplyVec2 } from '../util/matrix';\nvar AbstractShape = /** @class */ (function (_super) {\n    __extends(AbstractShape, _super);\n    function AbstractShape(cfg) {\n        return _super.call(this, cfg) || this;\n    }\n    // 是否在包围盒内\n    AbstractShape.prototype._isInBBox = function (refX, refY) {\n        var bbox = this.getBBox();\n        return bbox.minX <= refX && bbox.maxX >= refX && bbox.minY <= refY && bbox.maxY >= refY;\n    };\n    /**\n     * 属性更改后需要做的事情\n     * @protected\n     * @param {ShapeAttrs} targetAttrs 渲染的图像属性\n     */\n    AbstractShape.prototype.afterAttrsChange = function (targetAttrs) {\n        _super.prototype.afterAttrsChange.call(this, targetAttrs);\n        this.clearCacheBBox();\n    };\n    // 计算包围盒时，需要缓存，这是一个高频的操作\n    AbstractShape.prototype.getBBox = function () {\n        var bbox = this.get('bbox');\n        if (!bbox) {\n            bbox = this.calculateBBox();\n            this.set('bbox', bbox);\n        }\n        return bbox;\n    };\n    // 计算相对于画布的包围盒\n    AbstractShape.prototype.getCanvasBBox = function () {\n        var canvasBox = this.get('canvasBox');\n        if (!canvasBox) {\n            canvasBox = this.calculateCanvasBBox();\n            this.set('canvasBox', canvasBox);\n        }\n        return canvasBox;\n    };\n    AbstractShape.prototype.applyMatrix = function (matrix) {\n        _super.prototype.applyMatrix.call(this, matrix);\n        // 清理掉缓存的包围盒\n        this.set('canvasBox', null);\n    };\n    /**\n     * 计算相对于画布的包围盒，默认等同于 bbox\n     * @return {BBox} 包围盒\n     */\n    AbstractShape.prototype.calculateCanvasBBox = function () {\n        var bbox = this.getBBox();\n        var totalMatrix = this.getTotalMatrix();\n        var minX = bbox.minX, minY = bbox.minY, maxX = bbox.maxX, maxY = bbox.maxY;\n        if (totalMatrix) {\n            var topLeft = multiplyVec2(totalMatrix, [bbox.minX, bbox.minY]);\n            var topRight = multiplyVec2(totalMatrix, [bbox.maxX, bbox.minY]);\n            var bottomLeft = multiplyVec2(totalMatrix, [bbox.minX, bbox.maxY]);\n            var bottomRight = multiplyVec2(totalMatrix, [bbox.maxX, bbox.maxY]);\n            minX = Math.min(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]);\n            maxX = Math.max(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]);\n            minY = Math.min(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1]);\n            maxY = Math.max(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1]);\n        }\n        var attrs = this.attrs;\n        // 如果存在 shadow 则计算 shadow\n        if (attrs.shadowColor) {\n            var _a = attrs.shadowBlur, shadowBlur = _a === void 0 ? 0 : _a, _b = attrs.shadowOffsetX, shadowOffsetX = _b === void 0 ? 0 : _b, _c = attrs.shadowOffsetY, shadowOffsetY = _c === void 0 ? 0 : _c;\n            var shadowLeft = minX - shadowBlur + shadowOffsetX;\n            var shadowRight = maxX + shadowBlur + shadowOffsetX;\n            var shadowTop = minY - shadowBlur + shadowOffsetY;\n            var shadowBottom = maxY + shadowBlur + shadowOffsetY;\n            minX = Math.min(minX, shadowLeft);\n            maxX = Math.max(maxX, shadowRight);\n            minY = Math.min(minY, shadowTop);\n            maxY = Math.max(maxY, shadowBottom);\n        }\n        return {\n            x: minX,\n            y: minY,\n            minX: minX,\n            minY: minY,\n            maxX: maxX,\n            maxY: maxY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    };\n    /**\n     * @protected\n     * 清理缓存的 bbox\n     */\n    AbstractShape.prototype.clearCacheBBox = function () {\n        this.set('bbox', null);\n        this.set('canvasBox', null);\n    };\n    // 实现接口\n    AbstractShape.prototype.isClipShape = function () {\n        return this.get('isClipShape');\n    };\n    /**\n     * @protected\n     * 不同的图形自己实现是否在图形内部的逻辑，要判断边和填充区域\n     * @param  {number}  refX 相对于图形的坐标 x\n     * @param  {number}  refY 相对于图形的坐标 Y\n     * @return {boolean} 点是否在图形内部\n     */\n    AbstractShape.prototype.isInShape = function (refX, refY) {\n        return false;\n    };\n    /**\n     * 是否仅仅使用 BBox 检测就可以判定拾取到图形\n     * 默认是 false，但是有些图形例如 image、marker 等都可直接使用 BBox 的检测而不需要使用图形拾取\n     * @return {Boolean} 仅仅使用 BBox 进行拾取\n     */\n    AbstractShape.prototype.isOnlyHitBox = function () {\n        return false;\n    };\n    // 不同的 Shape 各自实现\n    AbstractShape.prototype.isHit = function (x, y) {\n        var startArrowShape = this.get('startArrowShape');\n        var endArrowShape = this.get('endArrowShape');\n        var vec = [x, y, 1];\n        vec = this.invertFromMatrix(vec);\n        var refX = vec[0], refY = vec[1];\n        var inBBox = this._isInBBox(refX, refY);\n        // 跳过图形的拾取，在某些图形中可以省略一倍的检测成本\n        if (this.isOnlyHitBox()) {\n            return inBBox;\n        }\n        // 被裁减掉的和不在包围盒内的不进行计算\n        if (inBBox && !this.isClipped(refX, refY)) {\n            // 对图形进行拾取判断\n            if (this.isInShape(refX, refY)) {\n                return true;\n            }\n            // 对起始箭头进行拾取判断\n            if (startArrowShape && startArrowShape.isHit(refX, refY)) {\n                return true;\n            }\n            // 对结束箭头进行拾取判断\n            if (endArrowShape && endArrowShape.isHit(refX, refY)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    return AbstractShape;\n}(Element));\nexport default AbstractShape;\n//# sourceMappingURL=shape.js.map"]}]}