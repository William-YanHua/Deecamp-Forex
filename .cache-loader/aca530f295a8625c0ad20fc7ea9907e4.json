{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\scale\\esm\\util\\extended.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\scale\\esm\\util\\extended.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { head, indexOf, last, map, size } from '@antv/util';\r\nexport var DEFAULT_Q = [1, 5, 2, 2.5, 4, 3];\r\nexport var ALL_Q = [1, 5, 2, 2.5, 4, 3, 1.5, 7, 6, 8, 9];\r\nvar eps = Number.EPSILON * 100;\r\nfunction mod(n, m) {\r\n    return ((n % m) + m) % m;\r\n}\r\nfunction simplicity(q, Q, j, lmin, lmax, lstep) {\r\n    var n = size(Q);\r\n    var i = indexOf(Q, q);\r\n    var v = 0;\r\n    var m = mod(lmin, lstep);\r\n    if ((m < eps || lstep - m < eps) && lmin <= 0 && lmax >= 0) {\r\n        v = 1;\r\n    }\r\n    return 1 - i / (n - 1) - j + v;\r\n}\r\nfunction simplicityMax(q, Q, j) {\r\n    var n = size(Q);\r\n    var i = indexOf(Q, q);\r\n    var v = 1;\r\n    return 1 - i / (n - 1) - j + v;\r\n}\r\nfunction density(k, m, dmin, dmax, lmin, lmax) {\r\n    var r = (k - 1) / (lmax - lmin);\r\n    var rt = (m - 1) / (Math.max(lmax, dmax) - Math.min(dmin, lmin));\r\n    return 2 - Math.max(r / rt, rt / r);\r\n}\r\nfunction densityMax(k, m) {\r\n    if (k >= m) {\r\n        return 2 - (k - 1) / (m - 1);\r\n    }\r\n    return 1;\r\n}\r\nfunction coverage(dmin, dmax, lmin, lmax) {\r\n    var range = dmax - dmin;\r\n    return 1 - (0.5 * (Math.pow(dmax - lmax, 2) + Math.pow(dmin - lmin, 2))) / Math.pow(0.1 * range, 2);\r\n}\r\nfunction coverageMax(dmin, dmax, span) {\r\n    var range = dmax - dmin;\r\n    if (span > range) {\r\n        var half = (span - range) / 2;\r\n        return 1 - Math.pow(half, 2) / Math.pow(0.1 * range, 2);\r\n    }\r\n    return 1;\r\n}\r\nfunction legibility() {\r\n    return 1;\r\n}\r\nexport default function extended(dmin, dmax, m, onlyLoose, Q, w) {\r\n    if (m === void 0) {\r\n        m = 5;\r\n    }\r\n    if (onlyLoose === void 0) {\r\n        onlyLoose = true;\r\n    }\r\n    if (Q === void 0) {\r\n        Q = DEFAULT_Q;\r\n    }\r\n    if (w === void 0) {\r\n        w = [0.25, 0.2, 0.5, 0.05];\r\n    }\r\n    if (dmin === dmax || m === 1) {\r\n        return {\r\n            min: dmin,\r\n            max: dmax,\r\n            ticks: [dmin],\r\n        };\r\n    }\r\n    var best = {\r\n        score: -2,\r\n        lmin: 0,\r\n        lmax: 0,\r\n        lstep: 0,\r\n    };\r\n    var j = 1;\r\n    while (j < Infinity) {\r\n        for (var _i = 0, Q_1 = Q; _i < Q_1.length; _i++) {\r\n            var q = Q_1[_i];\r\n            var sm = simplicityMax(q, Q, j);\r\n            if (Number.isNaN(sm)) {\r\n                throw new Error('NaN');\r\n            }\r\n            if (w[0] * sm + w[1] + w[2] + w[3] < best.score) {\r\n                j = Infinity;\r\n                break;\r\n            }\r\n            var k = 2;\r\n            while (k < Infinity) {\r\n                var dm = densityMax(k, m);\r\n                if (w[0] * sm + w[1] + w[2] * dm + w[3] < best.score) {\r\n                    break;\r\n                }\r\n                var delta = (dmax - dmin) / (k + 1) / j / q;\r\n                var z = Math.ceil(Math.log10(delta));\r\n                while (z < Infinity) {\r\n                    var step = j * q * Math.pow(10, z);\r\n                    var cm = coverageMax(dmin, dmax, step * (k - 1));\r\n                    if (w[0] * sm + w[1] * cm + w[2] * dm + w[3] < best.score) {\r\n                        break;\r\n                    }\r\n                    var minStart = Math.floor(dmax / step) * j - (k - 1) * j;\r\n                    var maxStart = Math.ceil(dmin / step) * j;\r\n                    if (minStart > maxStart) {\r\n                        z = z + 1;\r\n                        continue;\r\n                    }\r\n                    for (var start = minStart; start <= maxStart; start = start + 1) {\r\n                        var lmin = start * (step / j);\r\n                        var lmax = lmin + step * (k - 1);\r\n                        var lstep = step;\r\n                        var s = simplicity(q, Q, j, lmin, lmax, lstep);\r\n                        var c = coverage(dmin, dmax, lmin, lmax);\r\n                        var g = density(k, m, dmin, dmax, lmin, lmax);\r\n                        var l = legibility();\r\n                        var score = w[0] * s + w[1] * c + w[2] * g + w[3] * l;\r\n                        if (score > best.score && (!onlyLoose || (lmin <= dmin && lmax >= dmax))) {\r\n                            best.lmin = lmin;\r\n                            best.lmax = lmax;\r\n                            best.lstep = lstep;\r\n                            best.score = score;\r\n                        }\r\n                    }\r\n                    z = z + 1;\r\n                }\r\n                k = k + 1;\r\n            }\r\n        }\r\n        j = j + 1;\r\n    }\r\n    var toFixed = Number.isInteger(best.lstep) ? 0 : Math.ceil(Math.abs(Math.log10(best.lstep)));\r\n    var range = [];\r\n    for (var tick = best.lmin; tick <= best.lmax; tick += best.lstep) {\r\n        range.push(tick);\r\n    }\r\n    var ticks = toFixed ? map(range, function (x) { return Number.parseFloat(x.toFixed(toFixed)); }) : range;\r\n    return {\r\n        min: Math.min(dmin, head(ticks)),\r\n        max: Math.max(dmax, last(ticks)),\r\n        ticks: ticks,\r\n    };\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\scale\\esm\\util\\extended.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\scale\\esm\\util\\extended.js"],"names":[],"mappings":"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","sourcesContent":["import { head, indexOf, last, map, size } from '@antv/util';\nexport var DEFAULT_Q = [1, 5, 2, 2.5, 4, 3];\nexport var ALL_Q = [1, 5, 2, 2.5, 4, 3, 1.5, 7, 6, 8, 9];\nvar eps = Number.EPSILON * 100;\n// https://stackoverflow.com/questions/4467539/javascript-modulo-gives-a-negative-result-for-negative-numbers\nfunction mod(n, m) {\n    return ((n % m) + m) % m;\n}\nfunction simplicity(q, Q, j, lmin, lmax, lstep) {\n    var n = size(Q);\n    var i = indexOf(Q, q);\n    var v = 0;\n    var m = mod(lmin, lstep);\n    if ((m < eps || lstep - m < eps) && lmin <= 0 && lmax >= 0) {\n        v = 1;\n    }\n    return 1 - i / (n - 1) - j + v;\n}\nfunction simplicityMax(q, Q, j) {\n    var n = size(Q);\n    var i = indexOf(Q, q);\n    var v = 1;\n    return 1 - i / (n - 1) - j + v;\n}\nfunction density(k, m, dmin, dmax, lmin, lmax) {\n    var r = (k - 1) / (lmax - lmin);\n    var rt = (m - 1) / (Math.max(lmax, dmax) - Math.min(dmin, lmin));\n    return 2 - Math.max(r / rt, rt / r);\n}\nfunction densityMax(k, m) {\n    if (k >= m) {\n        return 2 - (k - 1) / (m - 1);\n    }\n    return 1;\n}\nfunction coverage(dmin, dmax, lmin, lmax) {\n    var range = dmax - dmin;\n    return 1 - (0.5 * (Math.pow(dmax - lmax, 2) + Math.pow(dmin - lmin, 2))) / Math.pow(0.1 * range, 2);\n}\nfunction coverageMax(dmin, dmax, span) {\n    var range = dmax - dmin;\n    if (span > range) {\n        var half = (span - range) / 2;\n        return 1 - Math.pow(half, 2) / Math.pow(0.1 * range, 2);\n    }\n    return 1;\n}\nfunction legibility() {\n    return 1;\n}\n/**\n * An Extension of Wilkinson's Algorithm for Position Tick Labels on Axes\n * https://www.yuque.com/preview/yuque/0/2019/pdf/185317/1546999150858-45c3b9c2-4e86-4223-bf1a-8a732e8195ed.pdf\n * @param dmin 最小值\n * @param dmax 最大值\n * @param m tick个数\n * @param onlyLoose 是否允许扩展min、max，不绝对强制，例如[3, 97]\n * @param Q nice numbers集合\n * @param w 四个优化组件的权重\n */\nexport default function extended(dmin, dmax, m, onlyLoose, Q, w) {\n    if (m === void 0) { m = 5; }\n    if (onlyLoose === void 0) { onlyLoose = true; }\n    if (Q === void 0) { Q = DEFAULT_Q; }\n    if (w === void 0) { w = [0.25, 0.2, 0.5, 0.05]; }\n    if (dmin === dmax || m === 1) {\n        return {\n            min: dmin,\n            max: dmax,\n            ticks: [dmin],\n        };\n    }\n    var best = {\n        score: -2,\n        lmin: 0,\n        lmax: 0,\n        lstep: 0,\n    };\n    var j = 1;\n    while (j < Infinity) {\n        for (var _i = 0, Q_1 = Q; _i < Q_1.length; _i++) {\n            var q = Q_1[_i];\n            var sm = simplicityMax(q, Q, j);\n            if (Number.isNaN(sm)) {\n                throw new Error('NaN');\n            }\n            if (w[0] * sm + w[1] + w[2] + w[3] < best.score) {\n                j = Infinity;\n                break;\n            }\n            var k = 2;\n            while (k < Infinity) {\n                var dm = densityMax(k, m);\n                if (w[0] * sm + w[1] + w[2] * dm + w[3] < best.score) {\n                    break;\n                }\n                var delta = (dmax - dmin) / (k + 1) / j / q;\n                var z = Math.ceil(Math.log10(delta));\n                while (z < Infinity) {\n                    var step = j * q * Math.pow(10, z);\n                    var cm = coverageMax(dmin, dmax, step * (k - 1));\n                    if (w[0] * sm + w[1] * cm + w[2] * dm + w[3] < best.score) {\n                        break;\n                    }\n                    var minStart = Math.floor(dmax / step) * j - (k - 1) * j;\n                    var maxStart = Math.ceil(dmin / step) * j;\n                    if (minStart > maxStart) {\n                        z = z + 1;\n                        continue;\n                    }\n                    for (var start = minStart; start <= maxStart; start = start + 1) {\n                        var lmin = start * (step / j);\n                        var lmax = lmin + step * (k - 1);\n                        var lstep = step;\n                        var s = simplicity(q, Q, j, lmin, lmax, lstep);\n                        var c = coverage(dmin, dmax, lmin, lmax);\n                        var g = density(k, m, dmin, dmax, lmin, lmax);\n                        var l = legibility();\n                        var score = w[0] * s + w[1] * c + w[2] * g + w[3] * l;\n                        if (score > best.score && (!onlyLoose || (lmin <= dmin && lmax >= dmax))) {\n                            best.lmin = lmin;\n                            best.lmax = lmax;\n                            best.lstep = lstep;\n                            best.score = score;\n                        }\n                    }\n                    z = z + 1;\n                }\n                k = k + 1;\n            }\n        }\n        j = j + 1;\n    }\n    // 步长为浮点数时处理精度\n    var toFixed = Number.isInteger(best.lstep) ? 0 : Math.ceil(Math.abs(Math.log10(best.lstep)));\n    var range = [];\n    for (var tick = best.lmin; tick <= best.lmax; tick += best.lstep) {\n        range.push(tick);\n    }\n    var ticks = toFixed ? map(range, function (x) { return Number.parseFloat(x.toFixed(toFixed)); }) : range;\n    return {\n        min: Math.min(dmin, head(ticks)),\n        max: Math.max(dmax, last(ticks)),\n        ticks: ticks,\n    };\n}\n//# sourceMappingURL=extended.js.map"]}]}