{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\src\\app\\pages\\InvReqPage\\InvReqDetailPage\\NotBought\\EarnAndRisk.tsx","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\src\\app\\pages\\InvReqPage\\InvReqDetailPage\\NotBought\\EarnAndRisk.tsx","mtime":1596379644583},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport React from \"react\";\r\nimport Col from \"antd/lib/col\";\r\nimport \"antd/lib/col/style/index.js\";\r\nimport Row from \"antd/lib/row\";\r\nimport \"antd/lib/row/style/index.js\";\r\nimport Card from \"antd/lib/card\";\r\nimport \"antd/lib/card/style/index.js\";\r\nimport { DoubleLineChart } from \"../Bought/Chart/DoubleLineChart\";\r\nimport DataSet from \"@antv/data-set\";\r\nvar EarnAndRisk = (function (_super) {\r\n    __extends(EarnAndRisk, _super);\r\n    function EarnAndRisk() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    EarnAndRisk.prototype.render = function () {\r\n        var DataView = DataSet.DataView;\r\n        var dv = new DataView();\r\n        dv.source(this.props.earnList)\r\n            .transform({\r\n            type: \"rename\",\r\n            map: {\r\n                straEarning: \"策略收益\",\r\n                baseEarning: \"基准收益\",\r\n            },\r\n        })\r\n            .transform({\r\n            type: \"fold\",\r\n            fields: [\"策略收益\", \"基准收益\"],\r\n            key: \"key\",\r\n            value: \"val\",\r\n            retains: [\"date\"],\r\n        });\r\n        return (React.createElement(Card, { title: \"收益与风险\" },\r\n            React.createElement(DoubleLineChart, { data: dv })));\r\n    };\r\n    return EarnAndRisk;\r\n}(React.Component));\r\nexport { EarnAndRisk };\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\src\\app\\pages\\InvReqPage\\InvReqDetailPage\\NotBought\\EarnAndRisk.tsx","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\src\\app\\pages\\InvReqPage\\InvReqDetailPage\\NotBought\\EarnAndRisk.tsx"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;;;;;;;AAE1B,OAAO,EAAE,eAAe,EAAE,MAAM,iCAAiC,CAAC;AAElE,OAAO,OAAO,MAAM,gBAAgB,CAAC;AAKrC;IAAiC,+BAAsB;IAAvD;;IA+BA,CAAC;IA9BC,4BAAM,GAAN;QACS,IAAA,2BAAQ,CAAY;QAE3B,IAAM,EAAE,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC1B,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;aAC3B,SAAS,CACR;YACE,IAAI,EAAE,QAAQ;YACd,GAAG,EAAE;gBACH,WAAW,EAAE,MAAM;gBACnB,WAAW,EAAE,MAAM;aACpB;SACF,CACF;aACA,SAAS,CACR;YACE,IAAI,EAAE,MAAM;YACZ,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;YACxB,GAAG,EAAE,KAAK;YACV,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,CAAC,MAAM,CAAC;SAClB,CACF,CAAC;QAEJ,OAAO,CACL,oBAAC,IAAI,IAAC,KAAK,EAAE,OAAO;YAClB,oBAAC,eAAe,IAAC,IAAI,EAAE,EAAE,GAAG,CACvB,CACR,CAAC;IACJ,CAAC;IACH,kBAAC;AAAD,CAAC,AA/BD,CAAiC,KAAK,CAAC,SAAS,GA+B/C","sourcesContent":["import React from \"react\";\r\nimport {Col, Row, Card} from \"antd\";\r\nimport { DoubleLineChart } from \"../Bought/Chart/DoubleLineChart\";\r\nimport {EarningList} from \"../../../../models/invreq/Bought/EarnList\";\r\nimport DataSet from \"@antv/data-set\";\r\ninterface Props {\r\n  earnList: EarningList;\r\n}\r\n\r\nexport class EarnAndRisk extends React.Component<Props> {\r\n  render() {\r\n    const {DataView} = DataSet;\r\n\r\n    const dv = new DataView();\r\n    dv.source(this.props.earnList)\r\n      .transform(\r\n        {\r\n          type: \"rename\",\r\n          map: {\r\n            straEarning: \"策略收益\",\r\n            baseEarning: \"基准收益\",\r\n          },\r\n        },\r\n      )\r\n      .transform(\r\n        {\r\n          type: \"fold\",\r\n          fields: [\"策略收益\", \"基准收益\"],\r\n          key: \"key\",\r\n          value: \"val\",\r\n          retains: [\"date\"],\r\n        },\r\n      );\r\n\r\n    return (\r\n      <Card title={\"收益与风险\"}>\r\n        <DoubleLineChart data={dv}/>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n"]}]}