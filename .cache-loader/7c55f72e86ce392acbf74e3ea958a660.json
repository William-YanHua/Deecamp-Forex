{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\enquire.js\\src\\QueryHandler.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\enquire.js\\src\\QueryHandler.js","mtime":1489491793000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["function QueryHandler(options) {\r\n    this.options = options;\r\n    !options.deferSetup && this.setup();\r\n}\r\nQueryHandler.prototype = {\r\n    constructor: QueryHandler,\r\n    setup: function () {\r\n        if (this.options.setup) {\r\n            this.options.setup();\r\n        }\r\n        this.initialised = true;\r\n    },\r\n    on: function () {\r\n        !this.initialised && this.setup();\r\n        this.options.match && this.options.match();\r\n    },\r\n    off: function () {\r\n        this.options.unmatch && this.options.unmatch();\r\n    },\r\n    destroy: function () {\r\n        this.options.destroy ? this.options.destroy() : this.off();\r\n    },\r\n    equals: function (target) {\r\n        return this.options === target || this.options.match === target;\r\n    }\r\n};\r\nmodule.exports = QueryHandler;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\enquire.js\\src\\QueryHandler.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\enquire.js\\src\\QueryHandler.js"],"names":[],"mappings":"AAUA,SAAS,YAAY,CAAC,OAAO;IACzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACvB,CAAC,OAAO,CAAC,UAAU,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;AACxC,CAAC;AAED,YAAY,CAAC,SAAS,GAAG;IAErB,WAAW,EAAG,YAAY;IAO1B,KAAK,EAAG;QACJ,IAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YACnB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;SACxB;QACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC5B,CAAC;IAOD,EAAE,EAAG;QACD,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;QAClC,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;IAC/C,CAAC;IAOD,GAAG,EAAG;QACF,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IACnD,CAAC;IAQD,OAAO,EAAG;QACN,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;IAC/D,CAAC;IASD,MAAM,EAAG,UAAS,MAAM;QACpB,OAAO,IAAI,CAAC,OAAO,KAAK,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,MAAM,CAAC;IACpE,CAAC;CAEJ,CAAC;AAEF,MAAM,CAAC,OAAO,GAAG,YAAY,CAAC","sourcesContent":["/**\n * Delegate to handle a media query being matched and unmatched.\n *\n * @param {object} options\n * @param {function} options.match callback for when the media query is matched\n * @param {function} [options.unmatch] callback for when the media query is unmatched\n * @param {function} [options.setup] one-time callback triggered the first time a query is matched\n * @param {boolean} [options.deferSetup=false] should the setup callback be run immediately, rather than first time query is matched?\n * @constructor\n */\nfunction QueryHandler(options) {\n    this.options = options;\n    !options.deferSetup && this.setup();\n}\n\nQueryHandler.prototype = {\n\n    constructor : QueryHandler,\n\n    /**\n     * coordinates setup of the handler\n     *\n     * @function\n     */\n    setup : function() {\n        if(this.options.setup) {\n            this.options.setup();\n        }\n        this.initialised = true;\n    },\n\n    /**\n     * coordinates setup and triggering of the handler\n     *\n     * @function\n     */\n    on : function() {\n        !this.initialised && this.setup();\n        this.options.match && this.options.match();\n    },\n\n    /**\n     * coordinates the unmatch event for the handler\n     *\n     * @function\n     */\n    off : function() {\n        this.options.unmatch && this.options.unmatch();\n    },\n\n    /**\n     * called when a handler is to be destroyed.\n     * delegates to the destroy or unmatch callbacks, depending on availability.\n     *\n     * @function\n     */\n    destroy : function() {\n        this.options.destroy ? this.options.destroy() : this.off();\n    },\n\n    /**\n     * determines equality by reference.\n     * if object is supplied compare options, if function, compare match callback\n     *\n     * @function\n     * @param {object || function} [target] the target for comparison\n     */\n    equals : function(target) {\n        return this.options === target || this.options.match === target;\n    }\n\n};\n\nmodule.exports = QueryHandler;\n"]}]}