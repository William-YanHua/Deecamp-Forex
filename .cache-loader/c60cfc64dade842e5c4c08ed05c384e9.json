{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-composite-projections\\node_modules\\d3-geo\\src\\projection\\fit.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-composite-projections\\node_modules\\d3-geo\\src\\projection\\fit.js","mtime":1469829977000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { default as geoStream } from \"../stream\";\r\nimport boundsStream from \"../path/bounds\";\r\nfunction fit(project, extent, object) {\r\n    var w = extent[1][0] - extent[0][0], h = extent[1][1] - extent[0][1], clip = project.clipExtent && project.clipExtent();\r\n    project\r\n        .scale(150)\r\n        .translate([0, 0]);\r\n    if (clip != null)\r\n        project.clipExtent(null);\r\n    geoStream(object, project.stream(boundsStream));\r\n    var b = boundsStream.result(), k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])), x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2, y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\r\n    if (clip != null)\r\n        project.clipExtent(clip);\r\n    return project\r\n        .scale(k * 150)\r\n        .translate([x, y]);\r\n}\r\nexport function fitSize(project) {\r\n    return function (size, object) {\r\n        return fit(project, [[0, 0], size], object);\r\n    };\r\n}\r\nexport function fitExtent(project) {\r\n    return function (extent, object) {\r\n        return fit(project, extent, object);\r\n    };\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-composite-projections\\node_modules\\d3-geo\\src\\projection\\fit.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-composite-projections\\node_modules\\d3-geo\\src\\projection\\fit.js"],"names":[],"mappings":"AAAA,OAAO,EAAC,OAAO,IAAI,SAAS,EAAC,MAAM,WAAW,CAAC;AAC/C,OAAO,YAAY,MAAM,gBAAgB,CAAC;AAE1C,SAAS,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM;IAClC,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC/B,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC/B,IAAI,GAAG,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,UAAU,EAAE,CAAC;IAEtD,OAAO;SACF,KAAK,CAAC,GAAG,CAAC;SACV,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAEvB,IAAI,IAAI,IAAI,IAAI;QAAE,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAE3C,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;IAEhD,IAAI,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,EACzB,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC9D,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EACrD,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAE1D,IAAI,IAAI,IAAI,IAAI;QAAE,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAE3C,OAAO,OAAO;SACT,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;SACd,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC;AAED,MAAM,UAAU,OAAO,CAAC,OAAO;IAC7B,OAAO,UAAS,IAAI,EAAE,MAAM;QAC1B,OAAO,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,MAAM,CAAC,CAAC;IAC9C,CAAC,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,SAAS,CAAC,OAAO;IAC/B,OAAO,UAAS,MAAM,EAAE,MAAM;QAC5B,OAAO,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;IACtC,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import {default as geoStream} from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nfunction fit(project, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = project.clipExtent && project.clipExtent();\n\n  project\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) project.clipExtent(null);\n\n  geoStream(object, project.stream(boundsStream));\n\n  var b = boundsStream.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) project.clipExtent(clip);\n\n  return project\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nexport function fitSize(project) {\n  return function(size, object) {\n    return fit(project, [[0, 0], size], object);\n  };\n}\n\nexport function fitExtent(project) {\n  return function(extent, object) {\n    return fit(project, extent, object);\n  };\n}\n"]}]}