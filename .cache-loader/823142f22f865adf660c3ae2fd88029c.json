{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/g2/lib/geom/label/polar-labels.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/g2/lib/geom/label/polar-labels.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var Labels = require('./geom-labels');\nvar PathUtil = require('../util/path');\nvar Util = require('../../util');\nvar PolarLabels = function PolarLabels(cfg) {\n    PolarLabels.superclass.constructor.call(this, cfg);\n};\nUtil.extend(PolarLabels, Labels);\nUtil.augment(PolarLabels, {\n    getPointRauis: function getPointRauis(coord, point) {\n        return PathUtil.getPointRadius(coord, point);\n    },\n    getCirclePoint: function getCirclePoint(angle, offset, point) {\n        var self = this;\n        var coord = self.get('coord');\n        var center = coord.getCenter();\n        var labelEmit = self._isEmitLabels();\n        var r = self.getPointRauis(coord, point);\n        if (r === 0) {\n            return null;\n        }\n        if (coord.isTransposed && r > offset && !labelEmit) {\n            var appendAngle = Math.asin(offset / (2 * r));\n            angle = angle + appendAngle * 2;\n        }\n        else {\n            r = r + offset;\n        }\n        return {\n            x: center.x + r * Math.cos(angle),\n            y: center.y + r * Math.sin(angle),\n            angle: angle,\n            r: r\n        };\n    },\n    getArcPoint: function getArcPoint(point, index) {\n        var self = this;\n        var outerPoint;\n        index = index || 0;\n        if (Util.isArray(point.x) || Util.isArray(point.y)) {\n            outerPoint = {\n                x: Util.isArray(point.x) ? point.x[index] : point.x,\n                y: Util.isArray(point.y) ? point.y[index] : point.y\n            };\n        }\n        else {\n            outerPoint = point;\n        }\n        self.transLabelPoint(outerPoint);\n        return outerPoint;\n    },\n    getPointAngle: function getPointAngle(point) {\n        var self = this;\n        var coord = self.get('coord');\n        return PathUtil.getPointAngle(coord, point);\n    },\n    getMiddlePoint: function getMiddlePoint(points) {\n        var self = this;\n        var coord = self.get('coord');\n        var count = points.length;\n        var middlePoint = {\n            x: 0,\n            y: 0\n        };\n        Util.each(points, function (point) {\n            middlePoint.x += point.x;\n            middlePoint.y += point.y;\n        });\n        middlePoint.x /= count;\n        middlePoint.y /= count;\n        middlePoint = coord.convert(middlePoint);\n        return middlePoint;\n    },\n    _isToMiddle: function _isToMiddle(point) {\n        return point.x.length > 2;\n    },\n    getLabelPoint: function getLabelPoint(label, point, index) {\n        var self = this;\n        var text = label.text[index];\n        var factor = 1;\n        var arcPoint;\n        if (self._isToMiddle(point)) {\n            arcPoint = self.getMiddlePoint(point.points);\n        }\n        else {\n            if (label.text.length === 1 && index === 0) {\n                index = 1;\n            }\n            else if (index === 0) {\n                factor = -1;\n            }\n            arcPoint = self.getArcPoint(point, index);\n        }\n        var offset = self.getDefaultOffset(label);\n        offset = offset * factor;\n        var middleAngle = self.getPointAngle(arcPoint);\n        var labelPoint = self.getCirclePoint(middleAngle, offset, arcPoint);\n        if (!labelPoint) {\n            labelPoint = {\n                text: ''\n            };\n        }\n        else {\n            labelPoint.text = text;\n            labelPoint.angle = middleAngle;\n            labelPoint.color = point.color;\n        }\n        if (label.autoRotate || typeof label.autoRotate === 'undefined') {\n            var rotate = labelPoint.textStyle ? labelPoint.textStyle.rotate : null;\n            if (!rotate) {\n                rotate = labelPoint.rotate || self.getLabelRotate(middleAngle, offset, point);\n            }\n            labelPoint.rotate = rotate;\n        }\n        labelPoint.start = {\n            x: arcPoint.x,\n            y: arcPoint.y\n        };\n        return labelPoint;\n    },\n    _isEmitLabels: function _isEmitLabels() {\n        var labels = this.get('label');\n        return labels.labelEmit;\n    },\n    getLabelRotate: function getLabelRotate(angle) {\n        var self = this;\n        var rotate;\n        rotate = angle * 180 / Math.PI;\n        rotate += 90;\n        if (self._isEmitLabels()) {\n            rotate -= 90;\n        }\n        if (rotate) {\n            if (rotate > 90) {\n                rotate = rotate - 180;\n            }\n            else if (rotate < -90) {\n                rotate = rotate + 180;\n            }\n        }\n        return rotate / 180 * Math.PI;\n    },\n    getLabelAlign: function getLabelAlign(point) {\n        var self = this;\n        var coord = self.get('coord');\n        var align;\n        if (self._isEmitLabels()) {\n            if (point.angle <= Math.PI / 2 && point.angle > -Math.PI / 2) {\n                align = 'left';\n            }\n            else {\n                align = 'right';\n            }\n        }\n        else if (!coord.isTransposed) {\n            align = 'center';\n        }\n        else {\n            var center = coord.getCenter();\n            var offset = self.getDefaultOffset(point);\n            if (Math.abs(point.x - center.x) < 1) {\n                align = 'center';\n            }\n            else if (point.angle > Math.PI || point.angle <= 0) {\n                if (offset > 0) {\n                    align = 'left';\n                }\n                else {\n                    align = 'right';\n                }\n            }\n            else {\n                if (offset > 0) {\n                    align = 'right';\n                }\n                else {\n                    align = 'left';\n                }\n            }\n        }\n        return align;\n    }\n});\nmodule.exports = PolarLabels;\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/g2/lib/geom/label/polar-labels.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/g2/lib/geom/label/polar-labels.js"],"names":[],"mappings":"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","sourcesContent":["var Labels = require('./geom-labels');\n\nvar PathUtil = require('../util/path');\n\nvar Util = require('../../util');\n\nvar PolarLabels = function PolarLabels(cfg) {\n  PolarLabels.superclass.constructor.call(this, cfg);\n};\n\nUtil.extend(PolarLabels, Labels);\nUtil.augment(PolarLabels, {\n  getPointRauis: function getPointRauis(coord, point) {\n    return PathUtil.getPointRadius(coord, point);\n  },\n  getCirclePoint: function getCirclePoint(angle, offset, point) {\n    var self = this;\n    var coord = self.get('coord');\n    var center = coord.getCenter();\n\n    var labelEmit = self._isEmitLabels();\n\n    var r = self.getPointRauis(coord, point);\n\n    if (r === 0) {\n      return null;\n    }\n\n    if (coord.isTransposed && r > offset && !labelEmit) {\n      var appendAngle = Math.asin(offset / (2 * r));\n      angle = angle + appendAngle * 2;\n    } else {\n      r = r + offset;\n    }\n\n    return {\n      x: center.x + r * Math.cos(angle),\n      y: center.y + r * Math.sin(angle),\n      angle: angle,\n      r: r\n    };\n  },\n  getArcPoint: function getArcPoint(point, index) {\n    var self = this;\n    var outerPoint; // 圆弧上的中点\n    // var coord = self.get('coord');\n\n    index = index || 0;\n\n    if (Util.isArray(point.x) || Util.isArray(point.y)) {\n      outerPoint = {\n        x: Util.isArray(point.x) ? point.x[index] : point.x,\n        y: Util.isArray(point.y) ? point.y[index] : point.y\n      };\n    } else {\n      outerPoint = point;\n    }\n\n    self.transLabelPoint(outerPoint);\n    return outerPoint;\n  },\n  // 获取点所在的角度\n  getPointAngle: function getPointAngle(point) {\n    var self = this;\n    var coord = self.get('coord');\n    return PathUtil.getPointAngle(coord, point);\n  },\n  // 获取中心的位置\n  getMiddlePoint: function getMiddlePoint(points) {\n    var self = this;\n    var coord = self.get('coord');\n    var count = points.length;\n    var middlePoint = {\n      x: 0,\n      y: 0\n    };\n    Util.each(points, function (point) {\n      middlePoint.x += point.x;\n      middlePoint.y += point.y;\n    });\n    middlePoint.x /= count;\n    middlePoint.y /= count;\n    middlePoint = coord.convert(middlePoint);\n    return middlePoint;\n  },\n  // 是否居中\n  _isToMiddle: function _isToMiddle(point) {\n    return point.x.length > 2;\n  },\n\n  /**\n   * @protected\n   * 获取文本的位置信息\n   * @param {Array} label labels\n   * @param {Object} point point\n   * @param {Number} index index\n   * @return {Object} point\n   */\n  getLabelPoint: function getLabelPoint(label, point, index) {\n    // if (Util.isNil(point.x)) return;\n    var self = this;\n    var text = label.text[index];\n    var factor = 1;\n    var arcPoint;\n\n    if (self._isToMiddle(point)) {\n      arcPoint = self.getMiddlePoint(point.points);\n    } else {\n      if (label.text.length === 1 && index === 0) {\n        index = 1;\n      } else if (index === 0) {\n        factor = -1;\n      }\n\n      arcPoint = self.getArcPoint(point, index);\n    }\n\n    var offset = self.getDefaultOffset(label);\n    offset = offset * factor;\n    var middleAngle = self.getPointAngle(arcPoint);\n    var labelPoint = self.getCirclePoint(middleAngle, offset, arcPoint);\n\n    if (!labelPoint) {\n      labelPoint = {\n        text: ''\n      };\n    } else {\n      labelPoint.text = text;\n      labelPoint.angle = middleAngle;\n      labelPoint.color = point.color;\n    }\n\n    if (label.autoRotate || typeof label.autoRotate === 'undefined') {\n      var rotate = labelPoint.textStyle ? labelPoint.textStyle.rotate : null;\n\n      if (!rotate) {\n        rotate = labelPoint.rotate || self.getLabelRotate(middleAngle, offset, point);\n      }\n\n      labelPoint.rotate = rotate;\n    }\n\n    labelPoint.start = {\n      x: arcPoint.x,\n      y: arcPoint.y\n    };\n    return labelPoint;\n  },\n  _isEmitLabels: function _isEmitLabels() {\n    var labels = this.get('label');\n    return labels.labelEmit;\n  },\n\n  /**\n   * @protected\n   * 获取文本旋转的方向\n   * @param {Number} angle angle\n   * @return {Number} angle\n   */\n  getLabelRotate: function getLabelRotate(angle) {\n    var self = this;\n    var rotate;\n    rotate = angle * 180 / Math.PI;\n    rotate += 90;\n\n    if (self._isEmitLabels()) {\n      rotate -= 90;\n    }\n\n    if (rotate) {\n      if (rotate > 90) {\n        rotate = rotate - 180;\n      } else if (rotate < -90) {\n        rotate = rotate + 180;\n      }\n    }\n\n    return rotate / 180 * Math.PI;\n  },\n  // override\n  getLabelAlign: function getLabelAlign(point) {\n    var self = this;\n    var coord = self.get('coord');\n    var align;\n\n    if (self._isEmitLabels()) {\n      if (point.angle <= Math.PI / 2 && point.angle > -Math.PI / 2) {\n        align = 'left';\n      } else {\n        align = 'right';\n      }\n    } else if (!coord.isTransposed) {\n      align = 'center';\n    } else {\n      var center = coord.getCenter();\n      var offset = self.getDefaultOffset(point);\n\n      if (Math.abs(point.x - center.x) < 1) {\n        align = 'center';\n      } else if (point.angle > Math.PI || point.angle <= 0) {\n        if (offset > 0) {\n          align = 'left';\n        } else {\n          align = 'right';\n        }\n      } else {\n        if (offset > 0) {\n          align = 'right';\n        } else {\n          align = 'left';\n        }\n      }\n    }\n\n    return align;\n  }\n});\nmodule.exports = PolarLabels;"]}]}