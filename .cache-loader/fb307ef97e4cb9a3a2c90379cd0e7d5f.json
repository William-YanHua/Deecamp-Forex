{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/d3-regression/src/utils/determination.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/d3-regression/src/utils/determination.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { visitPoints } from \"./points\";\nexport function determination(data, x, y, uY, predict) {\n    var SSE = 0, SST = 0;\n    visitPoints(data, x, y, function (dx, dy) {\n        var sse = dy - predict(dx), sst = dy - uY;\n        SSE += sse * sse;\n        SST += sst * sst;\n    });\n    return 1 - SSE / SST;\n}\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/d3-regression/src/utils/determination.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/d3-regression/src/utils/determination.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,UAAU,CAAC;AAIvC,MAAM,UAAU,aAAa,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,OAAO;IACnD,IAAI,GAAG,GAAG,CAAC,EACP,GAAG,GAAG,CAAC,CAAC;IAEZ,WAAW,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,UAAC,EAAE,EAAE,EAAE;QAC7B,IAAM,GAAG,GAAG,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC,EACtB,GAAG,GAAG,EAAE,GAAG,EAAE,CAAC;QAEpB,GAAG,IAAI,GAAG,GAAG,GAAG,CAAC;QACjB,GAAG,IAAI,GAAG,GAAG,GAAG,CAAC;IACnB,CAAC,CAAC,CAAC;IAEH,OAAO,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC;AACvB,CAAC","sourcesContent":["import { visitPoints } from \"./points\";\n\n// Given a dataset, x- and y-accessors, the mean center of the y values, and a predict function,\n// return the coefficient of determination, or R squared.\nexport function determination(data, x, y, uY, predict){\n  let SSE = 0,\n      SST = 0;\n  \n  visitPoints(data, x, y, (dx, dy) => {\n    const sse = dy - predict(dx),\n          sst = dy - uY;\n\n    SSE += sse * sse;\n    SST += sst * sst;\n  });\n\n  return 1 - SSE / SST;\n}"]}]}