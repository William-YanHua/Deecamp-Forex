{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\src\\app\\pages\\InvReqPage\\InvReqDetailPage\\Bought\\Stock\\AttributeAnalysis\\ConfigChart.tsx","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\src\\app\\pages\\InvReqPage\\InvReqDetailPage\\Bought\\Stock\\AttributeAnalysis\\ConfigChart.tsx","mtime":1596379644567},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport React from \"react\";\r\nimport Card from \"antd/lib/card\";\r\nimport \"antd/lib/card/style/index.js\";\r\nimport { CardFooter } from \"../../Util/CardFooter\";\r\nimport { Chart, Axis, Legend, Tooltip, Geom } from \"bizcharts\";\r\nimport DataSet from \"@antv/data-set\";\r\nvar DataView = DataSet.DataView;\r\nvar ConfigChart = (function (_super) {\r\n    __extends(ConfigChart, _super);\r\n    function ConfigChart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ConfigChart.prototype.render = function () {\r\n        var dv = new DataView();\r\n        dv.source(this.props.data)\r\n            .transform({\r\n            type: \"rename\",\r\n            map: {\r\n                styleTiming: \"风格择时贡献\",\r\n                styleChoosing: \"风格选股贡献\",\r\n                fundOver: \"基金超额收益\",\r\n                fundBaseOver: \"风格基准超额收益\",\r\n            },\r\n        })\r\n            .transform({\r\n            type: \"fold\",\r\n            fields: [\"风格择时贡献\", \"风格选股贡献\"],\r\n            key: \"style\",\r\n            value: \"val\",\r\n            retains: [\"基金超额收益\", \"风格基准超额收益\", \"date\"],\r\n        })\r\n            .transform({\r\n            type: \"fold\",\r\n            fields: [\"基金超额收益\", \"风格基准超额收益\"],\r\n            key: \"fundOver\",\r\n            value: \"fundVal\",\r\n        });\r\n        var scale = {\r\n            date: {\r\n                tickCount: 2.5,\r\n            },\r\n            val: {\r\n                alias: \"基金收益率\",\r\n                min: -30.00,\r\n                max: 30.00,\r\n                formatter: function (val) {\r\n                    return val.toFixed(2) + \"%\";\r\n                },\r\n            },\r\n            fundVal: {\r\n                alias: \"市场/风格累计超额收益\",\r\n                min: -8.00,\r\n                max: 8.00,\r\n                formatter: function (fundVal) {\r\n                    return fundVal.toFixed(2) + \"%\";\r\n                },\r\n            },\r\n        };\r\n        var title = {\r\n            position: \"end\",\r\n            offset: 80,\r\n        };\r\n        return (React.createElement(Card, null,\r\n            React.createElement(Chart, { height: 450, data: dv, forceFit: true, padding: [50, 100, 80, 100], scale: scale },\r\n                React.createElement(Tooltip, { crosshairs: {\r\n                        type: \"y\",\r\n                        style: {\r\n                            lineWidth: 1,\r\n                            stroke: \"#cfcfcf\",\r\n                        },\r\n                    } }),\r\n                React.createElement(Legend, null),\r\n                React.createElement(Axis, { name: \"date\" }),\r\n                React.createElement(Axis, { name: \"val\", position: \"left\", title: title }),\r\n                React.createElement(Axis, { name: \"fundVal\", position: \"right\", title: title }),\r\n                React.createElement(Geom, { type: \"line\", position: \"date*fundVal\", color: [\"fundOver\", [\"#ff7c76\", \"#5e7cdd\"]] }),\r\n                React.createElement(Geom, { type: \"intervalStack\", position: \"date*val\", color: [\"style\", [\"#fffc94\", \"#d4baff\"]] })),\r\n            React.createElement(CardFooter, { text: \"风格配置能力图\" })));\r\n    };\r\n    return ConfigChart;\r\n}(React.Component));\r\nexport { ConfigChart };\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\src\\app\\pages\\InvReqPage\\InvReqDetailPage\\Bought\\Stock\\AttributeAnalysis\\ConfigChart.tsx","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\src\\app\\pages\\InvReqPage\\InvReqDetailPage\\Bought\\Stock\\AttributeAnalysis\\ConfigChart.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Card} from \"antd\";\r\nimport {CardFooter} from \"../../Util/CardFooter\";\r\nimport {StyleConfigChart} from \"../../../../../../models/invreq/Bought/Stock/AttributeAnalysis\";\r\nimport {Chart, Axis, Legend, Tooltip, Geom} from \"bizcharts\";\r\nimport DataSet from \"@antv/data-set\";\r\nconst {DataView} = DataSet;\r\n\r\ninterface Props {\r\n  data: StyleConfigChart;\r\n}\r\n\r\n// 风格配置能力图\r\nexport class ConfigChart extends React.Component<Props, {}> {\r\n  render() {\r\n\r\n    const dv = new DataView();\r\n    dv.source(this.props.data)\r\n      .transform(\r\n        {\r\n          type: \"rename\",\r\n          map: {\r\n            styleTiming: \"风格择时贡献\",\r\n            styleChoosing: \"风格选股贡献\",\r\n            fundOver: \"基金超额收益\",\r\n            fundBaseOver: \"风格基准超额收益\",\r\n          },\r\n        },\r\n      )\r\n      .transform(\r\n        {\r\n          type: \"fold\",\r\n          fields: [\"风格择时贡献\", \"风格选股贡献\"],\r\n          key: \"style\",\r\n          value: \"val\",\r\n          retains: [\"基金超额收益\",  \"风格基准超额收益\", \"date\"],\r\n        },\r\n      )\r\n      .transform(\r\n        {\r\n          type: \"fold\",\r\n          fields: [\"基金超额收益\", \"风格基准超额收益\"],\r\n          key: \"fundOver\",\r\n          value: \"fundVal\",\r\n        },\r\n      );\r\n\r\n    const scale = {\r\n      date: {\r\n        tickCount: 2.5,\r\n      },\r\n      val: {\r\n        alias: \"基金收益率\",\r\n        min: -30.00,\r\n        max: 30.00,\r\n        formatter: (val) => {\r\n          return val.toFixed(2) + \"%\";\r\n        },\r\n      },\r\n      fundVal: {\r\n        alias: \"市场/风格累计超额收益\",\r\n        min: -8.00,\r\n        max: 8.00,\r\n        formatter: (fundVal) => {\r\n          return fundVal.toFixed(2) + \"%\";\r\n        },\r\n      },\r\n    };\r\n\r\n    const title = {\r\n      position: \"end\",\r\n      offset: 80,\r\n    };\r\n\r\n    return(\r\n      <Card>\r\n        <Chart height={450}\r\n               data={dv}\r\n               forceFit={true}\r\n               padding={[50, 100, 80, 100]}\r\n               scale={scale}\r\n        >\r\n          <Tooltip crosshairs={{\r\n            type: \"y\",\r\n            style: {\r\n              lineWidth: 1,\r\n              stroke: \"#cfcfcf\",\r\n            },\r\n          }}/>\r\n          <Legend />\r\n          <Axis name={\"date\"} />\r\n          <Axis name={\"val\"} position={\"left\"} title={title}/>\r\n          <Axis name={\"fundVal\"} position={\"right\"} title={title} />\r\n\r\n          <Geom type={\"line\"}\r\n                position={\"date*fundVal\"}\r\n                color={[\"fundOver\", [\"#ff7c76\", \"#5e7cdd\"]]}\r\n          />\r\n          <Geom type={\"intervalStack\"}\r\n                position={\"date*val\"}\r\n                color={\r\n                  [\"style\", [\"#fffc94\", \"#d4baff\"]]\r\n                }\r\n          />\r\n        </Chart>\r\n        <CardFooter text={\"风格配置能力图\"}/>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n"]}]}