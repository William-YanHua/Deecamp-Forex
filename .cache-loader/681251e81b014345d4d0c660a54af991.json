{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\interaction\\context.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\interaction\\context.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { each, get } from '@antv/util';\r\nimport { getComponents, isInBox } from './action/util';\r\nvar Context = (function () {\r\n    function Context(view) {\r\n        this.actions = [];\r\n        this.event = null;\r\n        this.cacheMap = {};\r\n        this.view = view;\r\n    }\r\n    Context.prototype.cache = function () {\r\n        var params = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            params[_i] = arguments[_i];\r\n        }\r\n        if (params.length === 1) {\r\n            return this.cacheMap[params[0]];\r\n        }\r\n        else if (params.length === 2) {\r\n            this.cacheMap[params[0]] = params[1];\r\n        }\r\n    };\r\n    Context.prototype.getAction = function (name) {\r\n        return this.actions.find(function (action) { return action.name === name; });\r\n    };\r\n    Context.prototype.addAction = function (action) {\r\n        this.actions.push(action);\r\n    };\r\n    Context.prototype.removeAction = function (action) {\r\n        var actions = this.actions;\r\n        var index = this.actions.indexOf(action);\r\n        if (index >= 0) {\r\n            actions.splice(index, 1);\r\n        }\r\n    };\r\n    Context.prototype.getCurrentPoint = function () {\r\n        var event = this.event;\r\n        if (event) {\r\n            if (event.target instanceof HTMLElement) {\r\n                var canvas = this.view.getCanvas();\r\n                var point = canvas.getPointByClient(event.clientX, event.clientY);\r\n                return point;\r\n            }\r\n            else {\r\n                return {\r\n                    x: event.x,\r\n                    y: event.y,\r\n                };\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    Context.prototype.getCurrentShape = function () {\r\n        return get(this.event, ['gEvent', 'shape']);\r\n    };\r\n    Context.prototype.isInPlot = function () {\r\n        var point = this.getCurrentPoint();\r\n        if (point) {\r\n            return this.view.isPointInPlot(point);\r\n        }\r\n        return false;\r\n    };\r\n    Context.prototype.isInShape = function (name) {\r\n        var shape = this.getCurrentShape();\r\n        if (shape) {\r\n            return shape.get('name') === name;\r\n        }\r\n        return false;\r\n    };\r\n    Context.prototype.isInComponent = function (name) {\r\n        var components = getComponents(this.view);\r\n        var point = this.getCurrentPoint();\r\n        if (point) {\r\n            return !!components.find(function (component) {\r\n                var bbox = component.getBBox();\r\n                if (name) {\r\n                    return component.get('name') === name && isInBox(bbox, point);\r\n                }\r\n                else {\r\n                    return isInBox(bbox, point);\r\n                }\r\n            });\r\n        }\r\n        return false;\r\n    };\r\n    Context.prototype.destroy = function () {\r\n        this.view = null;\r\n        this.event = null;\r\n        each(this.actions.slice(), function (action) {\r\n            action.destroy();\r\n        });\r\n        this.actions = null;\r\n        this.cacheMap = null;\r\n    };\r\n    return Context;\r\n}());\r\nexport default Context;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\interaction\\context.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\interaction\\context.js"],"names":[],"mappings":"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","sourcesContent":["import { each, get } from '@antv/util';\nimport { getComponents, isInBox } from './action/util';\n/**\n * 交互的上下文\n */\nvar Context = /** @class */ (function () {\n    function Context(view) {\n        /** 当前所有的 Action */\n        this.actions = [];\n        /** 当前事件对象 */\n        this.event = null;\n        this.cacheMap = {};\n        this.view = view;\n    }\n    /**\n     * 缓存信息\n     * @param params 缓存的字段\n     *  - 如果一个字段则获取缓存\n     *  - 两个字段则设置缓存\n     */\n    Context.prototype.cache = function () {\n        var params = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            params[_i] = arguments[_i];\n        }\n        if (params.length === 1) {\n            return this.cacheMap[params[0]];\n        }\n        else if (params.length === 2) {\n            this.cacheMap[params[0]] = params[1];\n        }\n    };\n    /**\n     * 获取 Action\n     * @param name Action 的名称\n     */\n    Context.prototype.getAction = function (name) {\n        return this.actions.find(function (action) { return action.name === name; });\n    };\n    /**\n     * 获取 Action\n     * @param action Action 对象\n     */\n    Context.prototype.addAction = function (action) {\n        this.actions.push(action);\n    };\n    /**\n     * 移除 Action\n     * @param action Action 对象\n     */\n    Context.prototype.removeAction = function (action) {\n        var actions = this.actions;\n        var index = this.actions.indexOf(action);\n        if (index >= 0) {\n            actions.splice(index, 1);\n        }\n    };\n    /**\n     * 获取当前的点\n     */\n    Context.prototype.getCurrentPoint = function () {\n        var event = this.event;\n        if (event) {\n            if (event.target instanceof HTMLElement) {\n                var canvas = this.view.getCanvas();\n                var point = canvas.getPointByClient(event.clientX, event.clientY);\n                return point;\n            }\n            else {\n                return {\n                    x: event.x,\n                    y: event.y,\n                };\n            }\n        }\n        return null;\n    };\n    /**\n     * 获取当前 shape\n     * @returns current shape\n     */\n    Context.prototype.getCurrentShape = function () {\n        return get(this.event, ['gEvent', 'shape']);\n    };\n    /**\n     * 当前的触发是否在 View 内\n     */\n    Context.prototype.isInPlot = function () {\n        var point = this.getCurrentPoint();\n        if (point) {\n            return this.view.isPointInPlot(point);\n        }\n        return false;\n    };\n    /**\n     * 是否在指定的图形内\n     * @param name shape 的 name\n     */\n    Context.prototype.isInShape = function (name) {\n        var shape = this.getCurrentShape(); // 不再考虑在 shape 的 parent 内的情况\n        if (shape) {\n            return shape.get('name') === name;\n        }\n        return false;\n    };\n    /**\n     * 当前的触发是组件内部\n     * @param name 组件名，可以为空\n     */\n    Context.prototype.isInComponent = function (name) {\n        var components = getComponents(this.view);\n        var point = this.getCurrentPoint();\n        if (point) {\n            return !!components.find(function (component) {\n                var bbox = component.getBBox();\n                if (name) {\n                    return component.get('name') === name && isInBox(bbox, point);\n                }\n                else {\n                    return isInBox(bbox, point);\n                }\n            });\n        }\n        return false;\n    };\n    /**\n     * 销毁\n     */\n    Context.prototype.destroy = function () {\n        this.view = null;\n        this.event = null;\n        // 先销毁 action 再清空，一边遍历，一边删除，所以数组需要更新引用\n        each(this.actions.slice(), function (action) {\n            action.destroy();\n        });\n        this.actions = null;\n        this.cacheMap = null;\n    };\n    return Context;\n}());\nexport default Context;\n//# sourceMappingURL=context.js.map"]}]}