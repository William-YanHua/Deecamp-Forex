{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\geometry\\shape\\util\\get-path-points.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\geometry\\shape\\util\\get-path-points.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { isArray } from '@antv/util';\r\nfunction isValueEmpty(value) {\r\n    if (value) {\r\n        return false;\r\n    }\r\n    return value === null || value === undefined || isNaN(value);\r\n}\r\nfunction isYNil(point) {\r\n    if (isArray(point)) {\r\n        return isValueEmpty(point[1].y);\r\n    }\r\n    var value = point.y;\r\n    return isArray(value) ? isValueEmpty(value[0]) : isValueEmpty(value);\r\n}\r\nexport function getPathPoints(points, connectNulls) {\r\n    if (!points.length) {\r\n        return [];\r\n    }\r\n    if (connectNulls) {\r\n        var filtered = [];\r\n        for (var i = 0, len = points.length; i < len; i++) {\r\n            var point = points[i];\r\n            if (!isYNil(point)) {\r\n                filtered.push(point);\r\n            }\r\n        }\r\n        return [filtered];\r\n    }\r\n    var result = [];\r\n    var tmp = [];\r\n    for (var i = 0, len = points.length; i < len; i++) {\r\n        var point = points[i];\r\n        if (isYNil(point)) {\r\n            if (tmp.length) {\r\n                result.push(tmp);\r\n                tmp = [];\r\n            }\r\n        }\r\n        else {\r\n            tmp.push(point);\r\n        }\r\n    }\r\n    if (tmp.length) {\r\n        result.push(tmp);\r\n    }\r\n    return result;\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\geometry\\shape\\util\\get-path-points.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\geometry\\shape\\util\\get-path-points.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AACrC,SAAS,YAAY,CAAC,KAAK;IACvB,IAAI,KAAK,EAAE;QACP,OAAO,KAAK,CAAC;KAChB;IACD,OAAO,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;AACjE,CAAC;AACD,SAAS,MAAM,CAAC,KAAK;IACjB,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;QAEhB,OAAO,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KACnC;IACD,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC;IACpB,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AACzE,CAAC;AAuBD,MAAM,UAAU,aAAa,CAAC,MAAM,EAAE,YAAY;IAC9C,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;QAChB,OAAO,EAAE,CAAC;KACb;IACD,IAAI,YAAY,EAAE;QAEd,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC/C,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;gBAChB,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACxB;SACJ;QACD,OAAO,CAAC,QAAQ,CAAC,CAAC;KACrB;IACD,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,IAAI,GAAG,GAAG,EAAE,CAAC;IACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;QAC/C,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACtB,IAAI,MAAM,CAAC,KAAK,CAAC,EAAE;YACf,IAAI,GAAG,CAAC,MAAM,EAAE;gBACZ,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACjB,GAAG,GAAG,EAAE,CAAC;aACZ;SACJ;aACI;YACD,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACnB;KACJ;IACD,IAAI,GAAG,CAAC,MAAM,EAAE;QACZ,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACpB;IACD,OAAO,MAAM,CAAC;AAClB,CAAC","sourcesContent":["import { isArray } from '@antv/util';\nfunction isValueEmpty(value) {\n    if (value) {\n        return false;\n    }\n    return value === null || value === undefined || isNaN(value);\n}\nfunction isYNil(point) {\n    if (isArray(point)) {\n        // 特殊处理 area 的关键点数据，其关键点结构为 [{x: 0, y: 1}, {x: 0, y: 2}]\n        return isValueEmpty(point[1].y);\n    }\n    var value = point.y;\n    return isArray(value) ? isValueEmpty(value[0]) : isValueEmpty(value);\n}\n/**\n * @ignore\n * 分割数据，用于处理在一组点数据中，y 对应的数值存在 null/undefined/NaN 的情况\n * 应用于折线图、区域图以及路径图\n *\n * ```typescript\n * // return [[{x: 1, y: 2}, {x: 3, y: 3}]]\n * getPathPoints([{x: 1, y: 2}, {x: 2, y: null}, {x: 3, y: 3}], true);\n * // return [[{x: 1, y: 2}], [{x: 3, y: 3}]]\n * getPathPoints([{x: 1, y: 2}, {x: 2, y: null}, {x: 3, y: 3}], false);\n * // return [[[{ x: 1, y: 10 }, { x: 2, y: 2 }], [{ x: 9, y: 34 }, { x: 1, y: 1 }]]]\n * getPathPoints([\n *   [{ x: 1, y: 10 }, { x: 2, y: 2 }],\n *   [{ x: 4, y: 2 }, { x: 8, y: NaN }],\n *   [{ x: 9, y: 34 }, { x: 1, y: 1 }],\n * ], true);\n * ```\n *\n * @param points 要进行处理点集合\n * @param connectNulls 是否连接空值数据\n * @returns 返回处理后的点集合\n */\nexport function getPathPoints(points, connectNulls) {\n    if (!points.length) {\n        return [];\n    }\n    if (connectNulls) {\n        // 即 y 值为空的场景\n        var filtered = [];\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n            if (!isYNil(point)) {\n                filtered.push(point);\n            }\n        }\n        return [filtered];\n    }\n    var result = [];\n    var tmp = [];\n    for (var i = 0, len = points.length; i < len; i++) {\n        var point = points[i];\n        if (isYNil(point)) {\n            if (tmp.length) {\n                result.push(tmp);\n                tmp = [];\n            }\n        }\n        else {\n            tmp.push(point);\n        }\n    }\n    if (tmp.length) {\n        result.push(tmp);\n    }\n    return result;\n}\n//# sourceMappingURL=get-path-points.js.map"]}]}