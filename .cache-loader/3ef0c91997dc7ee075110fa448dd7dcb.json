{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-composite-projections\\node_modules\\d3-geo\\src\\projection\\gnomonic.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-composite-projections\\node_modules\\d3-geo\\src\\projection\\gnomonic.js","mtime":1469829977000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { atan, cos, sin } from \"../math\";\r\nimport { azimuthalInvert } from \"./azimuthal\";\r\nimport projection from \"./index\";\r\nexport function gnomonicRaw(x, y) {\r\n    var cy = cos(y), k = cos(x) * cy;\r\n    return [cy * sin(x) / k, sin(y) / k];\r\n}\r\ngnomonicRaw.invert = azimuthalInvert(atan);\r\nexport default function () {\r\n    return projection(gnomonicRaw)\r\n        .scale(144.049)\r\n        .clipAngle(60);\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-composite-projections\\node_modules\\d3-geo\\src\\projection\\gnomonic.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-composite-projections\\node_modules\\d3-geo\\src\\projection\\gnomonic.js"],"names":[],"mappings":"AAAA,OAAO,EAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAC,MAAM,SAAS,CAAC;AACvC,OAAO,EAAC,eAAe,EAAC,MAAM,aAAa,CAAC;AAC5C,OAAO,UAAU,MAAM,SAAS,CAAC;AAEjC,MAAM,UAAU,WAAW,CAAC,CAAC,EAAE,CAAC;IAC9B,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;IACjC,OAAO,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACvC,CAAC;AAED,WAAW,CAAC,MAAM,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC;AAE3C,MAAM,CAAC,OAAO;IACZ,OAAO,UAAU,CAAC,WAAW,CAAC;SACzB,KAAK,CAAC,OAAO,CAAC;SACd,SAAS,CAAC,EAAE,CAAC,CAAC;AACrB,CAAC","sourcesContent":["import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n"]}]}