{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\geom\\shape\\shape.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\geom\\shape\\shape.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["var Util = require('../../util');\r\nvar PathUtil = require('../util/path');\r\nvar GPath = Util.PathUtil;\r\nvar Shape = {};\r\nvar ShapeBase = {\r\n    _coord: null,\r\n    draw: function draw(cfg, container) {\r\n        if (this.drawShape) {\r\n            return this.drawShape(cfg, container);\r\n        }\r\n        return null;\r\n    },\r\n    setCoord: function setCoord(coord) {\r\n        this._coord = coord;\r\n    },\r\n    parsePath: function parsePath(path, islineToArc) {\r\n        var coord = this._coord;\r\n        path = GPath.parsePathString(path);\r\n        if (coord.isPolar && islineToArc !== false) {\r\n            path = PathUtil.convertPolarPath(coord, path);\r\n        }\r\n        else {\r\n            path = PathUtil.convertNormalPath(coord, path);\r\n        }\r\n        return path;\r\n    },\r\n    parsePoint: function parsePoint(point) {\r\n        var coord = this._coord;\r\n        return coord.convertPoint(point);\r\n    },\r\n    parsePoints: function parsePoints(points) {\r\n        var coord = this._coord;\r\n        var rst = [];\r\n        Util.each(points, function (point) {\r\n            rst.push(coord.convertPoint(point));\r\n        });\r\n        return rst;\r\n    }\r\n};\r\nvar ShapeFactoryBase = {\r\n    defaultShapeType: null,\r\n    setCoord: function setCoord(coord) {\r\n        this._coord = coord;\r\n    },\r\n    getShape: function getShape(type) {\r\n        var self = this;\r\n        if (Util.isArray(type)) {\r\n            type = type[0];\r\n        }\r\n        var shape = self[type] || self[self.defaultShapeType];\r\n        shape._coord = self._coord;\r\n        return shape;\r\n    },\r\n    getShapePoints: function getShapePoints(type, cfg) {\r\n        var shape = this.getShape(type);\r\n        var fn = shape.getPoints || shape.getShapePoints || this.getDefaultPoints;\r\n        var points = fn(cfg);\r\n        return points;\r\n    },\r\n    getDefaultPoints: function getDefaultPoints() {\r\n        return [];\r\n    },\r\n    getMarkerCfg: function getMarkerCfg(type, cfg) {\r\n        var shape = this.getShape(type);\r\n        if (!shape.getMarkerCfg) {\r\n            var defaultShapeType = this.defaultShapeType;\r\n            shape = this.getShape(defaultShapeType);\r\n        }\r\n        return shape.getMarkerCfg(cfg);\r\n    },\r\n    getSelectedCfg: function getSelectedCfg() {\r\n        return {};\r\n    },\r\n    drawShape: function drawShape(type, cfg, container) {\r\n        var shape = this.getShape(type);\r\n        var gShape = shape.draw(cfg, container);\r\n        if (gShape) {\r\n            gShape.setSilent('origin', cfg.origin);\r\n            gShape._id = cfg.yIndex ? cfg._id + cfg.yIndex : cfg._id;\r\n            gShape.name = this.name;\r\n        }\r\n        return gShape;\r\n    }\r\n};\r\nShape.registerFactory = function (factoryName, cfg) {\r\n    var className = Util.upperFirst(factoryName);\r\n    var geomObj = Util.assign({}, ShapeFactoryBase, cfg);\r\n    Shape[className] = geomObj;\r\n    geomObj.name = factoryName;\r\n    return geomObj;\r\n};\r\nShape.registerShape = function (factoryName, shapeType, cfg) {\r\n    var className = Util.upperFirst(factoryName);\r\n    var factory = Shape[className];\r\n    var shapeObj = Util.assign({}, ShapeBase, cfg);\r\n    factory[shapeType] = shapeObj;\r\n    return shapeObj;\r\n};\r\nShape.getShapeFactory = function (factoryName) {\r\n    var self = this;\r\n    factoryName = factoryName || 'point';\r\n    var className = Util.upperFirst(factoryName);\r\n    return self[className];\r\n};\r\nmodule.exports = Shape;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\geom\\shape\\shape.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\geom\\shape\\shape.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * @fileOverview 工厂类，管理各种类型的 shape\n * @author dxq613@gmail.com\n */\nvar Util = require('../../util');\n\nvar PathUtil = require('../util/path');\n\nvar GPath = Util.PathUtil;\nvar Shape = {};\nvar ShapeBase = {\n  _coord: null,\n\n  /**\n   * 绘制图形\n   * @param {Object} cfg 配置项\n   * @param {Object} container 容器\n   * @return {Object} shape 创建的 shape\n   */\n  draw: function draw(cfg, container) {\n    if (this.drawShape) {\n      return this.drawShape(cfg, container);\n    }\n\n    return null;\n  },\n\n  /**\n   * 获取绘制图形需要的点, 可以不定义，则使用默认的\n  getPoints(cfg) {\n    if (this.getShapePoints) {\n      return this.getShapePoints(cfg);\n    }\n    return null;\n  },*/\n\n  /**\n   * 设置坐标系\n   * @param {Coord} coord 坐标系\n   */\n  setCoord: function setCoord(coord) {\n    this._coord = coord;\n  },\n\n  /**\n   * 0～1 path 转 画布 path\n   * @param  {path} path 路径\n   * @param  {Boolean} islineToArc 是否转换成圆弧\n   * @return {path} path 转换到画布坐标的path\n   */\n  parsePath: function parsePath(path, islineToArc) {\n    var coord = this._coord;\n    path = GPath.parsePathString(path);\n\n    if (coord.isPolar && islineToArc !== false) {\n      path = PathUtil.convertPolarPath(coord, path);\n    } else {\n      path = PathUtil.convertNormalPath(coord, path);\n    }\n\n    return path;\n  },\n\n  /**\n   * 0～1 point 转 画布 point\n   * @param  {point} point 节点\n   * @return {point} point 转换后的点\n   */\n  parsePoint: function parsePoint(point) {\n    var coord = this._coord;\n    return coord.convertPoint(point);\n  },\n\n  /**\n   * 0～1 points 转 画布 points\n   * @param  {points} points 节点集合\n   * @return {points} points 转换后的多个节点\n   */\n  parsePoints: function parsePoints(points) {\n    var coord = this._coord;\n    var rst = [];\n    Util.each(points, function (point) {\n      rst.push(coord.convertPoint(point));\n    });\n    return rst;\n  }\n};\nvar ShapeFactoryBase = {\n  defaultShapeType: null,\n  setCoord: function setCoord(coord) {\n    this._coord = coord;\n  },\n  getShape: function getShape(type) {\n    var self = this;\n\n    if (Util.isArray(type)) {\n      type = type[0];\n    }\n\n    var shape = self[type] || self[self.defaultShapeType];\n    shape._coord = self._coord;\n    return shape;\n  },\n  getShapePoints: function getShapePoints(type, cfg) {\n    var shape = this.getShape(type);\n    var fn = shape.getPoints || shape.getShapePoints || this.getDefaultPoints;\n    var points = fn(cfg);\n    return points;\n  },\n  getDefaultPoints: function getDefaultPoints()\n  /* cfg */\n  {\n    return [];\n  },\n  getMarkerCfg: function getMarkerCfg(type, cfg) {\n    var shape = this.getShape(type);\n\n    if (!shape.getMarkerCfg) {\n      var defaultShapeType = this.defaultShapeType;\n      shape = this.getShape(defaultShapeType);\n    }\n\n    return shape.getMarkerCfg(cfg);\n  },\n  getSelectedCfg: function getSelectedCfg()\n  /* type, cfg */\n  {\n    return {};\n  },\n  drawShape: function drawShape(type, cfg, container) {\n    var shape = this.getShape(type);\n    var gShape = shape.draw(cfg, container);\n\n    if (gShape) {\n      gShape.setSilent('origin', cfg.origin);\n      gShape._id = cfg.yIndex ? cfg._id + cfg.yIndex : cfg._id;\n      gShape.name = this.name;\n    }\n\n    return gShape;\n  }\n}; // 注册 Geometry 获取图形的入口\n\nShape.registerFactory = function (factoryName, cfg) {\n  var className = Util.upperFirst(factoryName);\n  var geomObj = Util.assign({}, ShapeFactoryBase, cfg);\n  Shape[className] = geomObj;\n  geomObj.name = factoryName;\n  return geomObj;\n}; // 注册图形\n\n\nShape.registerShape = function (factoryName, shapeType, cfg) {\n  var className = Util.upperFirst(factoryName);\n  var factory = Shape[className];\n  var shapeObj = Util.assign({}, ShapeBase, cfg);\n  factory[shapeType] = shapeObj;\n  return shapeObj;\n}; // 获得Geom 对应的 shapeFactory\n\n\nShape.getShapeFactory = function (factoryName) {\n  var self = this;\n  factoryName = factoryName || 'point';\n  var className = Util.upperFirst(factoryName);\n  return self[className];\n};\n\nmodule.exports = Shape;"]}]}