{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\chart\\layout\\index.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\chart\\layout\\index.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { parsePadding } from '../../util/padding';\r\nimport { calculatePadding } from './auto';\r\nexport default function defaultLayout(view) {\r\n    var axis = view.getController('axis');\r\n    var legend = view.getController('legend');\r\n    var annotation = view.getController('annotation');\r\n    var slider = view.getController('slider');\r\n    var padding = calculatePadding(view);\r\n    view.coordinateBBox = view.viewBBox.shrink(padding).shrink(parsePadding(view.appendPadding));\r\n    view.adjustCoordinate();\r\n    [axis, slider, legend, annotation].forEach(function (controller) {\r\n        if (controller) {\r\n            controller.layout();\r\n        }\r\n    });\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\chart\\layout\\index.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\chart\\layout\\index.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAC;AAClD,OAAO,EAAE,gBAAgB,EAAE,MAAM,QAAQ,CAAC;AAa1C,MAAM,CAAC,OAAO,UAAU,aAAa,CAAC,IAAI;IACtC,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IACtC,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IAC1C,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;IAClD,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IAE1C,IAAI,OAAO,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC;IAErC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;IAC7F,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAExB,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC,OAAO,CAAC,UAAU,UAAU;QAC3D,IAAI,UAAU,EAAE;YACZ,UAAU,CAAC,MAAM,EAAE,CAAC;SACvB;IACL,CAAC,CAAC,CAAC;AACP,CAAC","sourcesContent":["import { parsePadding } from '../../util/padding';\nimport { calculatePadding } from './auto';\n/**\n * @ignore\n * G2 默认提供的 layout 函数\n * 内置布局函数处理的逻辑：\n *\n * 1. 如果 padding = 'auto'，那么自动根据组件的 direction 来计算 padding 数组\n * 2. 根据 padding 和 direction 去分配对应方向的 padding 数值\n * 3. 移动组件位置\n *\n * 对于组件响应式布局，可以尝试使用约束布局的方式去求解位置信息。\n * @param view\n */\nexport default function defaultLayout(view) {\n    var axis = view.getController('axis');\n    var legend = view.getController('legend');\n    var annotation = view.getController('annotation');\n    var slider = view.getController('slider');\n    // 1. 自动加 auto padding -> absolute padding\n    var padding = calculatePadding(view);\n    // 2. 计算出新的 coordinateBBox\n    view.coordinateBBox = view.viewBBox.shrink(padding).shrink(parsePadding(view.appendPadding));\n    view.adjustCoordinate();\n    // 3. 根据最新的 coordinate 重新布局组件\n    [axis, slider, legend, annotation].forEach(function (controller) {\n        if (controller) {\n            controller.layout();\n        }\n    });\n}\n//# sourceMappingURL=index.js.map"]}]}