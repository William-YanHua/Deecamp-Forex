{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/coord/esm/coord/base.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/coord/esm/coord/base.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { __spreadArrays } from \"tslib\";\nimport { ext, mat3, vec3 } from '@antv/matrix-util';\nimport { assign } from '@antv/util';\nvar Coordinate = (function () {\n    function Coordinate(cfg) {\n        this.type = 'coordinate';\n        this.isRect = false;\n        this.isHelix = false;\n        this.isPolar = false;\n        this.isReflectX = false;\n        this.isReflectY = false;\n        var start = cfg.start, end = cfg.end, _a = cfg.matrix, matrix = _a === void 0 ? [1, 0, 0, 0, 1, 0, 0, 0, 1] : _a, _b = cfg.isTransposed, isTransposed = _b === void 0 ? false : _b;\n        this.start = start;\n        this.end = end;\n        this.matrix = matrix;\n        this.originalMatrix = __spreadArrays(matrix);\n        this.isTransposed = isTransposed;\n    }\n    Coordinate.prototype.initial = function () {\n        this.center = {\n            x: (this.start.x + this.end.x) / 2,\n            y: (this.start.y + this.end.y) / 2,\n        };\n        this.width = Math.abs(this.end.x - this.start.x);\n        this.height = Math.abs(this.end.y - this.start.y);\n    };\n    Coordinate.prototype.update = function (cfg) {\n        assign(this, cfg);\n        this.initial();\n    };\n    Coordinate.prototype.convertDim = function (percent, dim) {\n        var _a;\n        var _b = this[dim], start = _b.start, end = _b.end;\n        if (this.isReflect(dim)) {\n            _a = [end, start], start = _a[0], end = _a[1];\n        }\n        return start + percent * (end - start);\n    };\n    Coordinate.prototype.invertDim = function (value, dim) {\n        var _a;\n        var _b = this[dim], start = _b.start, end = _b.end;\n        if (this.isReflect(dim)) {\n            _a = [end, start], start = _a[0], end = _a[1];\n        }\n        return (value - start) / (end - start);\n    };\n    Coordinate.prototype.applyMatrix = function (x, y, tag) {\n        if (tag === void 0) {\n            tag = 0;\n        }\n        var matrix = this.matrix;\n        var vector = [x, y, tag];\n        vec3.transformMat3(vector, vector, matrix);\n        return vector;\n    };\n    Coordinate.prototype.invertMatrix = function (x, y, tag) {\n        if (tag === void 0) {\n            tag = 0;\n        }\n        var matrix = this.matrix;\n        var inverted = mat3.invert([0, 0, 0, 0, 0, 0, 0, 0, 0], matrix);\n        var vector = [x, y, tag];\n        if (inverted) {\n            vec3.transformMat3(vector, vector, inverted);\n        }\n        return vector;\n    };\n    Coordinate.prototype.convert = function (point) {\n        var _a = this.convertPoint(point), x = _a.x, y = _a.y;\n        var vector = this.applyMatrix(x, y, 1);\n        return {\n            x: vector[0],\n            y: vector[1],\n        };\n    };\n    Coordinate.prototype.invert = function (point) {\n        var vector = this.invertMatrix(point.x, point.y, 1);\n        return this.invertPoint({\n            x: vector[0],\n            y: vector[1],\n        });\n    };\n    Coordinate.prototype.rotate = function (radian) {\n        var matrix = this.matrix;\n        var center = this.center;\n        ext.leftTranslate(matrix, matrix, [-center.x, -center.y]);\n        ext.leftRotate(matrix, matrix, radian);\n        ext.leftTranslate(matrix, matrix, [center.x, center.y]);\n        return this;\n    };\n    Coordinate.prototype.reflect = function (dim) {\n        if (dim === 'x') {\n            this.isReflectX = !this.isReflectX;\n        }\n        else {\n            this.isReflectY = !this.isReflectY;\n        }\n        return this;\n    };\n    Coordinate.prototype.scale = function (s1, s2) {\n        var matrix = this.matrix;\n        var center = this.center;\n        ext.leftTranslate(matrix, matrix, [-center.x, -center.y]);\n        ext.leftScale(matrix, matrix, [s1, s2]);\n        ext.leftTranslate(matrix, matrix, [center.x, center.y]);\n        return this;\n    };\n    Coordinate.prototype.translate = function (x, y) {\n        var matrix = this.matrix;\n        ext.leftTranslate(matrix, matrix, [x, y]);\n        return this;\n    };\n    Coordinate.prototype.transpose = function () {\n        this.isTransposed = !this.isTransposed;\n        return this;\n    };\n    Coordinate.prototype.getCenter = function () {\n        return this.center;\n    };\n    Coordinate.prototype.getWidth = function () {\n        return this.width;\n    };\n    Coordinate.prototype.getHeight = function () {\n        return this.height;\n    };\n    Coordinate.prototype.getRadius = function () {\n        return this.radius;\n    };\n    Coordinate.prototype.isReflect = function (dim) {\n        return dim === 'x' ? this.isReflectX : this.isReflectY;\n    };\n    Coordinate.prototype.resetMatrix = function (matrix) {\n        this.matrix = matrix ? matrix : __spreadArrays(this.originalMatrix);\n    };\n    return Coordinate;\n}());\nexport default Coordinate;\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/coord/esm/coord/base.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/coord/esm/coord/base.js"],"names":[],"mappings":"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","sourcesContent":["import { __spreadArrays } from \"tslib\";\nimport { ext, mat3, vec3 } from '@antv/matrix-util';\nimport { assign } from '@antv/util';\n/**\n * Coordinate Base Class\n */\nvar Coordinate = /** @class */ (function () {\n    function Coordinate(cfg) {\n        // 自身属性\n        this.type = 'coordinate';\n        this.isRect = false;\n        this.isHelix = false;\n        this.isPolar = false;\n        this.isReflectX = false;\n        this.isReflectY = false;\n        var start = cfg.start, end = cfg.end, _a = cfg.matrix, matrix = _a === void 0 ? [1, 0, 0, 0, 1, 0, 0, 0, 1] : _a, _b = cfg.isTransposed, isTransposed = _b === void 0 ? false : _b;\n        this.start = start;\n        this.end = end;\n        this.matrix = matrix;\n        this.originalMatrix = __spreadArrays(matrix); // 去除引用\n        this.isTransposed = isTransposed;\n    }\n    /**\n     * 初始化流程\n     */\n    Coordinate.prototype.initial = function () {\n        // center、width、height\n        this.center = {\n            x: (this.start.x + this.end.x) / 2,\n            y: (this.start.y + this.end.y) / 2,\n        };\n        this.width = Math.abs(this.end.x - this.start.x);\n        this.height = Math.abs(this.end.y - this.start.y);\n    };\n    /**\n     * 更新配置\n     * @param cfg\n     */\n    Coordinate.prototype.update = function (cfg) {\n        assign(this, cfg);\n        this.initial();\n    };\n    Coordinate.prototype.convertDim = function (percent, dim) {\n        var _a;\n        var _b = this[dim], start = _b.start, end = _b.end;\n        // 交换\n        if (this.isReflect(dim)) {\n            _a = [end, start], start = _a[0], end = _a[1];\n        }\n        return start + percent * (end - start);\n    };\n    Coordinate.prototype.invertDim = function (value, dim) {\n        var _a;\n        var _b = this[dim], start = _b.start, end = _b.end;\n        // 交换\n        if (this.isReflect(dim)) {\n            _a = [end, start], start = _a[0], end = _a[1];\n        }\n        return (value - start) / (end - start);\n    };\n    /**\n     * 将坐标点进行矩阵变换\n     * @param x   对应 x 轴画布坐标\n     * @param y   对应 y 轴画布坐标\n     * @param tag 默认为 0，可取值 0, 1\n     * @return    返回变换后的三阶向量 [x, y, z]\n     */\n    Coordinate.prototype.applyMatrix = function (x, y, tag) {\n        if (tag === void 0) { tag = 0; }\n        var matrix = this.matrix;\n        var vector = [x, y, tag];\n        vec3.transformMat3(vector, vector, matrix);\n        return vector;\n    };\n    /**\n     * 将坐标点进行矩阵逆变换\n     * @param x   对应 x 轴画布坐标\n     * @param y   对应 y 轴画布坐标\n     * @param tag 默认为 0，可取值 0, 1\n     * @return    返回矩阵逆变换后的三阶向量 [x, y, z]\n     */\n    Coordinate.prototype.invertMatrix = function (x, y, tag) {\n        if (tag === void 0) { tag = 0; }\n        var matrix = this.matrix;\n        var inverted = mat3.invert([0, 0, 0, 0, 0, 0, 0, 0, 0], matrix);\n        var vector = [x, y, tag];\n        if (inverted) {\n            // 如果为空则不进行矩阵变化，防止报错\n            vec3.transformMat3(vector, vector, inverted);\n        }\n        return vector;\n    };\n    /**\n     * 将归一化的坐标点数据转换为画布坐标，并根据坐标系当前矩阵进行变换\n     * @param point 归一化的坐标点\n     * @return      返回进行矩阵变换后的画布坐标\n     */\n    Coordinate.prototype.convert = function (point) {\n        var _a = this.convertPoint(point), x = _a.x, y = _a.y;\n        var vector = this.applyMatrix(x, y, 1);\n        return {\n            x: vector[0],\n            y: vector[1],\n        };\n    };\n    /**\n     * 将进行过矩阵变换画布坐标转换为归一化坐标\n     * @param point 画布坐标\n     * @return      返回归一化的坐标点\n     */\n    Coordinate.prototype.invert = function (point) {\n        var vector = this.invertMatrix(point.x, point.y, 1);\n        return this.invertPoint({\n            x: vector[0],\n            y: vector[1],\n        });\n    };\n    /**\n     * 坐标系旋转变换\n     * @param  radian 旋转弧度\n     * @return        返回坐标系对象\n     */\n    Coordinate.prototype.rotate = function (radian) {\n        var matrix = this.matrix;\n        var center = this.center;\n        ext.leftTranslate(matrix, matrix, [-center.x, -center.y]);\n        ext.leftRotate(matrix, matrix, radian);\n        ext.leftTranslate(matrix, matrix, [center.x, center.y]);\n        return this;\n    };\n    /**\n     * 坐标系反射变换\n     * @param dim 反射维度\n     * @return    返回坐标系对象\n     */\n    Coordinate.prototype.reflect = function (dim) {\n        if (dim === 'x') {\n            this.isReflectX = !this.isReflectX;\n        }\n        else {\n            this.isReflectY = !this.isReflectY;\n        }\n        return this;\n    };\n    /**\n     * 坐标系比例变换\n     * @param s1 x 方向缩放比例\n     * @param s2 y 方向缩放比例\n     * @return     返回坐标系对象\n     */\n    Coordinate.prototype.scale = function (s1, s2) {\n        var matrix = this.matrix;\n        var center = this.center;\n        ext.leftTranslate(matrix, matrix, [-center.x, -center.y]);\n        ext.leftScale(matrix, matrix, [s1, s2]);\n        ext.leftTranslate(matrix, matrix, [center.x, center.y]);\n        return this;\n    };\n    /**\n     * 坐标系平移变换\n     * @param x x 方向平移像素\n     * @param y y 方向平移像素\n     * @return    返回坐标系对象\n     */\n    Coordinate.prototype.translate = function (x, y) {\n        var matrix = this.matrix;\n        ext.leftTranslate(matrix, matrix, [x, y]);\n        return this;\n    };\n    /**\n     * 将坐标系 x y 两个轴进行转置\n     * @return 返回坐标系对象\n     */\n    Coordinate.prototype.transpose = function () {\n        this.isTransposed = !this.isTransposed;\n        return this;\n    };\n    Coordinate.prototype.getCenter = function () {\n        return this.center;\n    };\n    Coordinate.prototype.getWidth = function () {\n        return this.width;\n    };\n    Coordinate.prototype.getHeight = function () {\n        return this.height;\n    };\n    Coordinate.prototype.getRadius = function () {\n        return this.radius;\n    };\n    /**\n     * whether has reflect\n     * @param dim\n     */\n    Coordinate.prototype.isReflect = function (dim) {\n        return dim === 'x' ? this.isReflectX : this.isReflectY;\n    };\n    /**\n     * 重置 matrix\n     * @param matrix 如果传入，则使用，否则使用构造函数中传入的默认 matrix\n     */\n    Coordinate.prototype.resetMatrix = function (matrix) {\n        // 去除引用关系\n        this.matrix = matrix ? matrix : __spreadArrays(this.originalMatrix);\n    };\n    return Coordinate;\n}());\nexport default Coordinate;\n//# sourceMappingURL=base.js.map"]}]}