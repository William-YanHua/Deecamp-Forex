{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\component\\esm\\axis\\overlap\\auto-ellipsis.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\component\\esm\\axis\\overlap\\auto-ellipsis.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { each } from '@antv/util';\r\nvar ELLIPSIS_CODE = '\\u2026';\r\nvar ELLIPSIS_CODE_LENGTH = 2;\r\nfunction strLen(str) {\r\n    var len = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        len += charAtLength(str, i);\r\n    }\r\n    return len;\r\n}\r\nfunction charAtLength(str, i) {\r\n    if (str.charCodeAt(i) > 0 && str.charCodeAt(i) < 128) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return 2;\r\n    }\r\n}\r\nfunction getLabelLength(isVertical, label) {\r\n    var bbox = label.getCanvasBBox();\r\n    return isVertical ? bbox.width : bbox.height;\r\n}\r\nfunction ellipsisLabel(isVertical, label, limitLength, position) {\r\n    var text = label.attr('text');\r\n    var labelLength = getLabelLength(isVertical, label);\r\n    var codeLength = strLen(text);\r\n    var ellipsised = false;\r\n    if (limitLength < labelLength) {\r\n        var reseveLength = Math.floor((limitLength / labelLength) * codeLength) - ELLIPSIS_CODE_LENGTH;\r\n        var newText = void 0;\r\n        if (reseveLength >= 0) {\r\n            newText = ellipsisString(text, reseveLength, position);\r\n        }\r\n        else {\r\n            newText = ELLIPSIS_CODE;\r\n        }\r\n        if (newText) {\r\n            label.attr('text', newText);\r\n            ellipsised = true;\r\n        }\r\n    }\r\n    if (ellipsised) {\r\n        label.set('tip', text);\r\n    }\r\n    else {\r\n        label.set('tip', null);\r\n    }\r\n    return ellipsised;\r\n}\r\nfunction ellipsisString(str, reseveLength, position) {\r\n    var count = str.length;\r\n    var rst = '';\r\n    if (position === 'tail') {\r\n        for (var i = 0, index = 0; i < reseveLength;) {\r\n            var charLength = charAtLength(str, index);\r\n            if (i + charLength <= reseveLength) {\r\n                rst += str[index];\r\n                i += charAtLength(str, index);\r\n                index++;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        rst += ELLIPSIS_CODE;\r\n    }\r\n    else if (position === 'head') {\r\n        for (var i = 0, index = count - 1; i < reseveLength;) {\r\n            var charLength = charAtLength(str, index);\r\n            if (i + charLength <= reseveLength) {\r\n                rst += str[index];\r\n                i += charAtLength(str, index);\r\n                index--;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        rst = ELLIPSIS_CODE + rst;\r\n    }\r\n    else {\r\n        var startStr = '';\r\n        var endStr = '';\r\n        for (var i = 0, startIndex = 0, endIndex = count - 1; i < reseveLength;) {\r\n            var startCodeLen = charAtLength(str, startIndex);\r\n            var hasAdd = false;\r\n            if (startCodeLen + i <= reseveLength) {\r\n                startStr += str[startIndex];\r\n                startIndex++;\r\n                i += startCodeLen;\r\n                hasAdd = true;\r\n            }\r\n            var endCodeLen = charAtLength(str, endIndex);\r\n            if (endCodeLen + i <= reseveLength) {\r\n                endStr = str[endIndex] + endStr;\r\n                i += endCodeLen;\r\n                endIndex--;\r\n                hasAdd = true;\r\n            }\r\n            if (!hasAdd) {\r\n                break;\r\n            }\r\n        }\r\n        rst = startStr + ELLIPSIS_CODE + endStr;\r\n    }\r\n    return rst;\r\n}\r\nfunction ellipseLabels(isVertical, labelGroup, limitLength, position) {\r\n    var children = labelGroup.getChildren();\r\n    var ellipsised = false;\r\n    each(children, function (label) {\r\n        var rst = ellipsisLabel(isVertical, label, limitLength, position);\r\n        ellipsised = ellipsised || rst;\r\n    });\r\n    return ellipsised;\r\n}\r\nexport function getDefault() {\r\n    return ellipsisTail;\r\n}\r\nexport function ellipsisHead(isVertical, labelGroup, limitLength) {\r\n    return ellipseLabels(isVertical, labelGroup, limitLength, 'head');\r\n}\r\nexport function ellipsisTail(isVertical, labelGroup, limitLength) {\r\n    return ellipseLabels(isVertical, labelGroup, limitLength, 'tail');\r\n}\r\nexport function ellipsisMiddle(isVertical, labelGroup, limitLength) {\r\n    return ellipseLabels(isVertical, labelGroup, limitLength, 'middle');\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\component\\esm\\axis\\overlap\\auto-ellipsis.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\component\\esm\\axis\\overlap\\auto-ellipsis.js"],"names":[],"mappings":"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","sourcesContent":["import { each } from '@antv/util';\nvar ELLIPSIS_CODE = '\\u2026';\nvar ELLIPSIS_CODE_LENGTH = 2; // 省略号的长度\nfunction strLen(str) {\n    var len = 0;\n    for (var i = 0; i < str.length; i++) {\n        len += charAtLength(str, i);\n    }\n    return len;\n}\nfunction charAtLength(str, i) {\n    if (str.charCodeAt(i) > 0 && str.charCodeAt(i) < 128) {\n        return 1;\n    }\n    else {\n        return 2;\n    }\n}\nfunction getLabelLength(isVertical, label) {\n    var bbox = label.getCanvasBBox();\n    return isVertical ? bbox.width : bbox.height;\n}\nfunction ellipsisLabel(isVertical, label, limitLength, position) {\n    var text = label.attr('text');\n    var labelLength = getLabelLength(isVertical, label);\n    var codeLength = strLen(text);\n    var ellipsised = false;\n    if (limitLength < labelLength) {\n        var reseveLength = Math.floor((limitLength / labelLength) * codeLength) - ELLIPSIS_CODE_LENGTH; // 计算出来的应该保存的长度\n        var newText = void 0;\n        if (reseveLength >= 0) {\n            newText = ellipsisString(text, reseveLength, position);\n        }\n        else {\n            newText = ELLIPSIS_CODE;\n        }\n        if (newText) {\n            label.attr('text', newText);\n            ellipsised = true;\n        }\n    }\n    if (ellipsised) {\n        label.set('tip', text);\n    }\n    else {\n        label.set('tip', null);\n    }\n    return ellipsised;\n}\nfunction ellipsisString(str, reseveLength, position) {\n    var count = str.length;\n    var rst = '';\n    if (position === 'tail') {\n        for (var i = 0, index = 0; i < reseveLength;) {\n            var charLength = charAtLength(str, index);\n            if (i + charLength <= reseveLength) {\n                rst += str[index];\n                i += charAtLength(str, index);\n                index++;\n            }\n            else {\n                break;\n            }\n        }\n        rst += ELLIPSIS_CODE;\n    }\n    else if (position === 'head') {\n        for (var i = 0, index = count - 1; i < reseveLength;) {\n            var charLength = charAtLength(str, index);\n            if (i + charLength <= reseveLength) {\n                rst += str[index];\n                i += charAtLength(str, index);\n                index--;\n            }\n            else {\n                break;\n            }\n        }\n        rst = ELLIPSIS_CODE + rst;\n    }\n    else {\n        var startStr = '';\n        var endStr = '';\n        for (var i = 0, startIndex = 0, endIndex = count - 1; i < reseveLength;) {\n            var startCodeLen = charAtLength(str, startIndex);\n            var hasAdd = false; // 设置标志位，防止头尾都没有附加字符\n            if (startCodeLen + i <= reseveLength) {\n                startStr += str[startIndex];\n                startIndex++;\n                i += startCodeLen;\n                hasAdd = true;\n            }\n            var endCodeLen = charAtLength(str, endIndex);\n            if (endCodeLen + i <= reseveLength) {\n                endStr = str[endIndex] + endStr;\n                i += endCodeLen;\n                endIndex--;\n                hasAdd = true;\n            }\n            if (!hasAdd) {\n                // 如果都没有增加字符，说明都不适合则中断\n                break;\n            }\n        }\n        rst = startStr + ELLIPSIS_CODE + endStr;\n    }\n    return rst;\n}\nfunction ellipseLabels(isVertical, labelGroup, limitLength, position) {\n    var children = labelGroup.getChildren();\n    var ellipsised = false;\n    each(children, function (label) {\n        var rst = ellipsisLabel(isVertical, label, limitLength, position);\n        ellipsised = ellipsised || rst;\n    });\n    return ellipsised;\n}\nexport function getDefault() {\n    return ellipsisTail;\n}\nexport function ellipsisHead(isVertical, labelGroup, limitLength) {\n    return ellipseLabels(isVertical, labelGroup, limitLength, 'head');\n}\nexport function ellipsisTail(isVertical, labelGroup, limitLength) {\n    return ellipseLabels(isVertical, labelGroup, limitLength, 'tail');\n}\nexport function ellipsisMiddle(isVertical, labelGroup, limitLength) {\n    return ellipseLabels(isVertical, labelGroup, limitLength, 'middle');\n}\n//# sourceMappingURL=auto-ellipsis.js.map"]}]}