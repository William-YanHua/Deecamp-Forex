{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\geometry\\polygon.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\geometry\\polygon.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\r\nimport { isArray } from '@antv/util';\r\nimport Geometry from './base';\r\nimport './shape/polygon';\r\nvar Polygon = (function (_super) {\r\n    __extends(Polygon, _super);\r\n    function Polygon() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.type = 'polygon';\r\n        _this.shapeType = 'polygon';\r\n        _this.generatePoints = true;\r\n        return _this;\r\n    }\r\n    Polygon.prototype.createShapePointsCfg = function (obj) {\r\n        var cfg = _super.prototype.createShapePointsCfg.call(this, obj);\r\n        var x = cfg.x;\r\n        var y = cfg.y;\r\n        var temp;\r\n        if (!(isArray(x) && isArray(y))) {\r\n            var xScale = this.getXScale();\r\n            var yScale = this.getYScale();\r\n            var xCount = xScale.values.length;\r\n            var yCount = yScale.values.length;\r\n            var xOffset = (0.5 * 1) / xCount;\r\n            var yOffset = (0.5 * 1) / yCount;\r\n            if (xScale.isCategory && yScale.isCategory) {\r\n                x = [x - xOffset, x - xOffset, x + xOffset, x + xOffset];\r\n                y = [y - yOffset, y + yOffset, y + yOffset, y - yOffset];\r\n            }\r\n            else if (isArray(x)) {\r\n                temp = x;\r\n                x = [temp[0], temp[0], temp[1], temp[1]];\r\n                y = [y - yOffset / 2, y + yOffset / 2, y + yOffset / 2, y - yOffset / 2];\r\n            }\r\n            else if (isArray(y)) {\r\n                temp = y;\r\n                y = [temp[0], temp[1], temp[1], temp[0]];\r\n                x = [x - xOffset / 2, x - xOffset / 2, x + xOffset / 2, x + xOffset / 2];\r\n            }\r\n            cfg.x = x;\r\n            cfg.y = y;\r\n        }\r\n        return cfg;\r\n    };\r\n    return Polygon;\r\n}(Geometry));\r\nexport default Polygon;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\geometry\\polygon.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\geometry\\polygon.js"],"names":[],"mappings":"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","sourcesContent":["import { __extends } from \"tslib\";\nimport { isArray } from '@antv/util';\nimport Geometry from './base';\n/** 引入 Path 对应的 ShapeFactory */\nimport './shape/polygon';\n/**\n * Polygon 几何标记。\n * 常用于绘制色块图、日历图等。\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    function Polygon() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'polygon';\n        _this.shapeType = 'polygon';\n        _this.generatePoints = true;\n        return _this;\n    }\n    /**\n     * 获取 Shape 的关键点数据。\n     * @param obj\n     * @returns\n     */\n    Polygon.prototype.createShapePointsCfg = function (obj) {\n        var cfg = _super.prototype.createShapePointsCfg.call(this, obj);\n        var x = cfg.x;\n        var y = cfg.y;\n        var temp;\n        // x y 都是数组时，不做处理\n        if (!(isArray(x) && isArray(y))) {\n            var xScale = this.getXScale();\n            var yScale = this.getYScale();\n            var xCount = xScale.values.length;\n            var yCount = yScale.values.length;\n            var xOffset = (0.5 * 1) / xCount;\n            var yOffset = (0.5 * 1) / yCount;\n            if (xScale.isCategory && yScale.isCategory) {\n                // 如果x,y都是分类\n                x = [x - xOffset, x - xOffset, x + xOffset, x + xOffset];\n                y = [y - yOffset, y + yOffset, y + yOffset, y - yOffset];\n            }\n            else if (isArray(x)) {\n                // x 是数组\n                temp = x;\n                x = [temp[0], temp[0], temp[1], temp[1]];\n                y = [y - yOffset / 2, y + yOffset / 2, y + yOffset / 2, y - yOffset / 2];\n            }\n            else if (isArray(y)) {\n                // y 是数组\n                temp = y;\n                y = [temp[0], temp[1], temp[1], temp[0]];\n                x = [x - xOffset / 2, x - xOffset / 2, x + xOffset / 2, x + xOffset / 2];\n            }\n            cfg.x = x;\n            cfg.y = y;\n        }\n        return cfg;\n    };\n    return Polygon;\n}(Geometry));\nexport default Polygon;\n//# sourceMappingURL=polygon.js.map"]}]}