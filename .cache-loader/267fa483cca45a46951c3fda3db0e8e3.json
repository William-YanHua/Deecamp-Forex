{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-geo-projection\\src\\larrivee.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-geo-projection\\src\\larrivee.js","mtime":1467599198000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { geoProjection as projection } from \"d3-geo\";\r\nimport { abs, acos, cos, epsilon, halfPi, sin, pi, sqrt, sqrt2 } from \"./math\";\r\nvar pi_sqrt2 = pi / sqrt2;\r\nexport function larriveeRaw(lambda, phi) {\r\n    return [\r\n        lambda * (1 + sqrt(cos(phi))) / 2,\r\n        phi / (cos(phi / 2) * cos(lambda / 6))\r\n    ];\r\n}\r\nlarriveeRaw.invert = function (x, y) {\r\n    var x0 = abs(x), y0 = abs(y), lambda = epsilon, phi = halfPi;\r\n    if (y0 < pi_sqrt2)\r\n        phi *= y0 / pi_sqrt2;\r\n    else\r\n        lambda += 6 * acos(pi_sqrt2 / y0);\r\n    for (var i = 0; i < 25; i++) {\r\n        var sinPhi = sin(phi), sqrtcosPhi = sqrt(cos(phi)), sinPhi_2 = sin(phi / 2), cosPhi_2 = cos(phi / 2), sinLambda_6 = sin(lambda / 6), cosLambda_6 = cos(lambda / 6), f0 = 0.5 * lambda * (1 + sqrtcosPhi) - x0, f1 = phi / (cosPhi_2 * cosLambda_6) - y0, df0dPhi = sqrtcosPhi ? -0.25 * lambda * sinPhi / sqrtcosPhi : 0, df0dLambda = 0.5 * (1 + sqrtcosPhi), df1dPhi = (1 + 0.5 * phi * sinPhi_2 / cosPhi_2) / (cosPhi_2 * cosLambda_6), df1dLambda = (phi / cosPhi_2) * (sinLambda_6 / 6) / (cosLambda_6 * cosLambda_6), denom = df0dPhi * df1dLambda - df1dPhi * df0dLambda, dPhi = (f0 * df1dLambda - f1 * df0dLambda) / denom, dLambda = (f1 * df0dPhi - f0 * df1dPhi) / denom;\r\n        phi -= dPhi;\r\n        lambda -= dLambda;\r\n        if (abs(dPhi) < epsilon && abs(dLambda) < epsilon)\r\n            break;\r\n    }\r\n    return [x < 0 ? -lambda : lambda, y < 0 ? -phi : phi];\r\n};\r\nexport default function () {\r\n    return projection(larriveeRaw)\r\n        .scale(97.2672);\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-geo-projection\\src\\larrivee.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-geo-projection\\src\\larrivee.js"],"names":[],"mappings":"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","sourcesContent":["import {geoProjection as projection} from \"d3-geo\";\nimport {abs, acos, cos, epsilon, halfPi, sin, pi, sqrt, sqrt2} from \"./math\";\n\nvar pi_sqrt2 = pi / sqrt2;\n\nexport function larriveeRaw(lambda, phi) {\n  return [\n    lambda * (1 + sqrt(cos(phi))) / 2,\n    phi / (cos(phi / 2) * cos(lambda / 6))\n  ];\n}\n\nlarriveeRaw.invert = function(x, y) {\n  var x0 = abs(x),\n      y0 = abs(y),\n      lambda = epsilon,\n      phi = halfPi;\n  if (y0 < pi_sqrt2) phi *= y0 / pi_sqrt2;\n  else lambda += 6 * acos(pi_sqrt2 / y0);\n  for (var i = 0; i < 25; i++) {\n    var sinPhi = sin(phi),\n        sqrtcosPhi = sqrt(cos(phi)),\n        sinPhi_2 = sin(phi / 2),\n        cosPhi_2 = cos(phi / 2),\n        sinLambda_6 = sin(lambda / 6),\n        cosLambda_6 = cos(lambda / 6),\n        f0 = 0.5 * lambda * (1 + sqrtcosPhi) - x0,\n        f1 = phi / (cosPhi_2 * cosLambda_6) - y0,\n        df0dPhi = sqrtcosPhi ? -0.25 * lambda * sinPhi / sqrtcosPhi : 0,\n        df0dLambda = 0.5 * (1 + sqrtcosPhi),\n        df1dPhi = (1 +0.5 * phi * sinPhi_2 / cosPhi_2) / (cosPhi_2 * cosLambda_6),\n        df1dLambda = (phi / cosPhi_2) * (sinLambda_6 / 6) / (cosLambda_6 * cosLambda_6),\n        denom = df0dPhi * df1dLambda - df1dPhi * df0dLambda,\n        dPhi = (f0 * df1dLambda - f1 * df0dLambda) / denom,\n        dLambda = (f1 * df0dPhi - f0 * df1dPhi) / denom;\n    phi -= dPhi;\n    lambda -= dLambda;\n    if (abs(dPhi) < epsilon && abs(dLambda) < epsilon) break;\n  }\n  return [x < 0 ? -lambda : lambda, y < 0 ? -phi : phi];\n};\n\nexport default function() {\n  return projection(larriveeRaw)\n      .scale(97.2672);\n}\n"]}]}