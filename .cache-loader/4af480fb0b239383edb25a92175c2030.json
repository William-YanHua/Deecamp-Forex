{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-geo-projection\\src\\lagrange.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-geo-projection\\src\\lagrange.js","mtime":1467599198000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\r\nimport { abs, asin, atan2, cos, epsilon, halfPi, pow, sign, sin } from \"./math\";\r\nexport function lagrangeRaw(n) {\r\n    function forward(lambda, phi) {\r\n        if (abs(abs(phi) - halfPi) < epsilon)\r\n            return [0, phi < 0 ? -2 : 2];\r\n        var sinPhi = sin(phi), v = pow((1 + sinPhi) / (1 - sinPhi), n / 2), c = 0.5 * (v + 1 / v) + cos(lambda *= n);\r\n        return [\r\n            2 * sin(lambda) / c,\r\n            (v - 1 / v) / c\r\n        ];\r\n    }\r\n    forward.invert = function (x, y) {\r\n        var y0 = abs(y);\r\n        if (abs(y0 - 2) < epsilon)\r\n            return x ? null : [0, sign(y) * halfPi];\r\n        if (y0 > 2)\r\n            return null;\r\n        x /= 2, y /= 2;\r\n        var x2 = x * x, y2 = y * y, t = 2 * y / (1 + x2 + y2);\r\n        t = pow((1 + t) / (1 - t), 1 / n);\r\n        return [\r\n            atan2(2 * x, 1 - x2 - y2) / n,\r\n            asin((t - 1) / (t + 1))\r\n        ];\r\n    };\r\n    return forward;\r\n}\r\nexport default function () {\r\n    var n = 0.5, m = projectionMutator(lagrangeRaw), p = m(n);\r\n    p.spacing = function (_) {\r\n        return arguments.length ? m(n = +_) : n;\r\n    };\r\n    return p\r\n        .scale(124.75);\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-geo-projection\\src\\lagrange.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-geo-projection\\src\\lagrange.js"],"names":[],"mappings":"AAAA,OAAO,EAAC,oBAAoB,IAAI,iBAAiB,EAAC,MAAM,QAAQ,CAAC;AACjE,OAAO,EAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,QAAQ,CAAC;AAE9E,MAAM,UAAU,WAAW,CAAC,CAAC;IAE3B,SAAS,OAAO,CAAC,MAAM,EAAE,GAAG;QAC1B,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,OAAO;YAAE,OAAO,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnE,IAAI,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,EACjB,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAC3C,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;QAC7C,OAAO;YACL,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC;YACnB,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;SAChB,CAAC;IACJ,CAAC;IAED,OAAO,CAAC,MAAM,GAAG,UAAS,CAAC,EAAE,CAAC;QAC5B,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QAChB,IAAI,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,OAAO;YAAE,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC;QACnE,IAAI,EAAE,GAAG,CAAC;YAAE,OAAO,IAAI,CAAC;QAExB,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;QACf,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,EACV,EAAE,GAAG,CAAC,GAAG,CAAC,EACV,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QAC9B,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAClC,OAAO;YACL,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC;YAC7B,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SACxB,CAAC;IACJ,CAAC,CAAC;IAEF,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,MAAM,CAAC,OAAO;IACZ,IAAI,CAAC,GAAG,GAAG,EACP,CAAC,GAAG,iBAAiB,CAAC,WAAW,CAAC,EAClC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAEb,CAAC,CAAC,OAAO,GAAG,UAAS,CAAC;QACpB,OAAO,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC;IAEF,OAAO,CAAC;SACH,KAAK,CAAC,MAAM,CAAC,CAAC;AACrB,CAAC","sourcesContent":["import {geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {abs, asin, atan2, cos, epsilon, halfPi, pow, sign, sin} from \"./math\";\n\nexport function lagrangeRaw(n) {\n\n  function forward(lambda, phi) {\n    if (abs(abs(phi) - halfPi) < epsilon) return [0, phi < 0 ? -2 : 2];\n    var sinPhi = sin(phi),\n        v = pow((1 + sinPhi) / (1 - sinPhi), n / 2),\n        c = 0.5 * (v + 1 / v) + cos(lambda *= n);\n    return [\n      2 * sin(lambda) / c,\n      (v - 1 / v) / c\n    ];\n  }\n\n  forward.invert = function(x, y) {\n    var y0 = abs(y);\n    if (abs(y0 - 2) < epsilon) return x ? null : [0, sign(y) * halfPi];\n    if (y0 > 2) return null;\n\n    x /= 2, y /= 2;\n    var x2 = x * x,\n        y2 = y * y,\n        t = 2 * y / (1 + x2 + y2); // tanh(nPhi)\n    t = pow((1 + t) / (1 - t), 1 / n);\n    return [\n      atan2(2 * x, 1 - x2 - y2) / n,\n      asin((t - 1) / (t + 1))\n    ];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  var n = 0.5,\n      m = projectionMutator(lagrangeRaw),\n      p = m(n);\n\n  p.spacing = function(_) {\n    return arguments.length ? m(n = +_) : n;\n  };\n\n  return p\n      .scale(124.75);\n}\n"]}]}