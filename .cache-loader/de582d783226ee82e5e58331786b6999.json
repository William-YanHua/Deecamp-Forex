{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\enquire.js\\src\\Util.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\enquire.js\\src\\Util.js","mtime":1489491793000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["function each(collection, fn) {\r\n    var i = 0, length = collection.length, cont;\r\n    for (i; i < length; i++) {\r\n        cont = fn(collection[i], i);\r\n        if (cont === false) {\r\n            break;\r\n        }\r\n    }\r\n}\r\nfunction isArray(target) {\r\n    return Object.prototype.toString.apply(target) === '[object Array]';\r\n}\r\nfunction isFunction(target) {\r\n    return typeof target === 'function';\r\n}\r\nmodule.exports = {\r\n    isFunction: isFunction,\r\n    isArray: isArray,\r\n    each: each\r\n};\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\enquire.js\\src\\Util.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\enquire.js\\src\\Util.js"],"names":[],"mappings":"AAMA,SAAS,IAAI,CAAC,UAAU,EAAE,EAAE;IACxB,IAAI,CAAC,GAAQ,CAAC,EACV,MAAM,GAAG,UAAU,CAAC,MAAM,EAC1B,IAAI,CAAC;IAET,KAAI,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;QACpB,IAAI,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5B,IAAG,IAAI,KAAK,KAAK,EAAE;YACf,MAAM;SACT;KACJ;AACL,CAAC;AAQD,SAAS,OAAO,CAAC,MAAM;IACnB,OAAO,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,gBAAgB,CAAC;AACxE,CAAC;AAQD,SAAS,UAAU,CAAC,MAAM;IACtB,OAAO,OAAO,MAAM,KAAK,UAAU,CAAC;AACxC,CAAC;AAED,MAAM,CAAC,OAAO,GAAG;IACb,UAAU,EAAG,UAAU;IACvB,OAAO,EAAG,OAAO;IACjB,IAAI,EAAG,IAAI;CACd,CAAC","sourcesContent":["/**\n * Helper function for iterating over a collection\n *\n * @param collection\n * @param fn\n */\nfunction each(collection, fn) {\n    var i      = 0,\n        length = collection.length,\n        cont;\n\n    for(i; i < length; i++) {\n        cont = fn(collection[i], i);\n        if(cont === false) {\n            break; //allow early exit\n        }\n    }\n}\n\n/**\n * Helper function for determining whether target object is an array\n *\n * @param target the object under test\n * @return {Boolean} true if array, false otherwise\n */\nfunction isArray(target) {\n    return Object.prototype.toString.apply(target) === '[object Array]';\n}\n\n/**\n * Helper function for determining whether target object is a function\n *\n * @param target the object under test\n * @return {Boolean} true if function, false otherwise\n */\nfunction isFunction(target) {\n    return typeof target === 'function';\n}\n\nmodule.exports = {\n    isFunction : isFunction,\n    isArray : isArray,\n    each : each\n};\n"]}]}