{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\connector\\graph.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\connector\\graph.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["var assign = require('@antv/util/lib/mix');\r\nvar isFunction = require('@antv/util/lib/type/is-function');\r\nvar _a = require('../data-set'), GRAPH = _a.GRAPH, registerConnector = _a.registerConnector;\r\nvar DEFAULT_OPTIONS = {\r\n    nodes: function (d) {\r\n        return d.nodes;\r\n    },\r\n    edges: function (d) {\r\n        return d.edges;\r\n    }\r\n};\r\nfunction connector(data, options, dataView) {\r\n    options = assign({}, DEFAULT_OPTIONS, options);\r\n    dataView.dataType = GRAPH;\r\n    var nodes = options.nodes, edges = options.edges;\r\n    if (nodes && !isFunction(nodes)) {\r\n        throw new TypeError('Invalid nodes: must be a function!');\r\n    }\r\n    if (edges && !isFunction(edges)) {\r\n        throw new TypeError('Invalid edges: must be a function!');\r\n    }\r\n    dataView.rows = dataView.graph = {\r\n        nodes: nodes(data),\r\n        edges: edges(data)\r\n    };\r\n    assign(dataView, dataView.graph);\r\n    return dataView.rows;\r\n}\r\nregisterConnector('graph', connector);\r\nregisterConnector('diagram', connector);\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\connector\\graph.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\connector\\graph.js"],"names":[],"mappings":"AAAA,IAAM,MAAM,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;AAC7C,IAAM,UAAU,GAAG,OAAO,CAAC,iCAAiC,CAAC,CAAC;AACxD,IAAA,2BAGoB,EAFxB,gBAAK,EACL,wCACwB,CAAC;AAE3B,IAAM,eAAe,GAAG;IACtB,KAAK,YAAC,CAAC;QACL,OAAO,CAAC,CAAC,KAAK,CAAC;IACjB,CAAC;IACD,KAAK,YAAC,CAAC;QACL,OAAO,CAAC,CAAC,KAAK,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,SAAS,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ;IACxC,OAAO,GAAG,MAAM,CAAC,EAAE,EAAE,eAAe,EAAE,OAAO,CAAC,CAAC;IAC/C,QAAQ,CAAC,QAAQ,GAAG,KAAK,CAAC;IAClB,IAAA,qBAAK,EAAE,qBAAK,CAAa;IACjC,IAAI,KAAK,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;QAC/B,MAAM,IAAI,SAAS,CAAC,oCAAoC,CAAC,CAAC;KAC3D;IACD,IAAI,KAAK,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;QAC/B,MAAM,IAAI,SAAS,CAAC,oCAAoC,CAAC,CAAC;KAC3D;IACD,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,KAAK,GAAG;QAC/B,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC;QAClB,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC;KACnB,CAAC;IACF,MAAM,CAAC,QAAQ,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;IACjC,OAAO,QAAQ,CAAC,IAAI,CAAC;AACvB,CAAC;AAED,iBAAiB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AACtC,iBAAiB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC","sourcesContent":["const assign = require('@antv/util/lib/mix');\nconst isFunction = require('@antv/util/lib/type/is-function');\nconst {\n  GRAPH,\n  registerConnector\n} = require('../data-set');\n\nconst DEFAULT_OPTIONS = {\n  nodes(d) { // optional\n    return d.nodes;\n  },\n  edges(d) { // optional\n    return d.edges;\n  }\n};\n\nfunction connector(data, options, dataView) {\n  options = assign({}, DEFAULT_OPTIONS, options);\n  dataView.dataType = GRAPH;\n  const { nodes, edges } = options;\n  if (nodes && !isFunction(nodes)) {\n    throw new TypeError('Invalid nodes: must be a function!');\n  }\n  if (edges && !isFunction(edges)) {\n    throw new TypeError('Invalid edges: must be a function!');\n  }\n  dataView.rows = dataView.graph = {\n    nodes: nodes(data),\n    edges: edges(data)\n  };\n  assign(dataView, dataView.graph);\n  return dataView.rows;\n}\n\nregisterConnector('graph', connector);\nregisterConnector('diagram', connector);\n"]}]}