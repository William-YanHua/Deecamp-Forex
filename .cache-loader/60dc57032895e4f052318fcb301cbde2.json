{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/pie/layer.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/pie/layer.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { __assign, __extends } from \"tslib\";\nimport { deepMix, every } from '@antv/util';\nimport * as EventParser from './event';\nimport ViewLayer from '../../base/view-layer';\nimport { getGeom } from '../../geoms/factory';\nimport { getPieLabel } from './component/label';\nimport SpiderLabel from './component/label/spider-label';\nimport { registerPlotType } from '../../base/global';\nimport './theme';\nvar percentageField = '$$percentage$$';\nvar G2_GEOM_MAP = {\n    pie: 'interval',\n};\nvar PLOT_GEOM_MAP = {\n    pie: 'column',\n};\nvar PieLayer = (function (_super) {\n    __extends(PieLayer, _super);\n    function PieLayer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'pie';\n        return _this;\n    }\n    PieLayer.getDefaultOptions = function () {\n        return deepMix({}, _super.getDefaultOptions.call(this), {\n            width: 400,\n            height: 400,\n            title: {\n                visible: false,\n            },\n            description: {\n                visible: false,\n            },\n            forceFit: true,\n            padding: 'auto',\n            radius: 0.8,\n            label: {\n                visible: true,\n                type: 'inner',\n                autoRotate: false,\n                adjustPosition: true,\n                allowOverlap: false,\n                line: {\n                    visible: true,\n                    smooth: true,\n                },\n            },\n            legend: {\n                visible: true,\n                position: 'right-center',\n            },\n            tooltip: {\n                visible: true,\n                shared: false,\n                showCrosshairs: false,\n                showMarkers: false,\n            },\n            pieStyle: {\n                stroke: 'white',\n                lineWidth: 1,\n            },\n        });\n    };\n    PieLayer.prototype.afterInit = function () {\n        var _a = this.options, angleField = _a.angleField, colorField = _a.colorField, data = _a.data;\n        var allZero = every(data, function (d) { return d[angleField] === 0; });\n        if (allZero) {\n            var pieGeom = this.view.geometries[0];\n            pieGeom.tooltip(colorField + \"*\" + angleField);\n        }\n    };\n    PieLayer.prototype.afterRender = function () {\n        _super.prototype.afterRender.call(this);\n        var options = this.options;\n        if (options.label && options.label.visible) {\n            if (this.labelComponent) {\n                this.labelComponent.clear();\n            }\n            var labelConfig = options.label;\n            if (labelConfig.type === 'spider') {\n                this.labelComponent = new SpiderLabel(__assign({ view: this.view, fields: options.colorField ? [options.angleField, options.colorField] : [options.angleField] }, this.options.label));\n                this.labelComponent.render();\n            }\n            else {\n                var LabelCtor = getPieLabel(labelConfig.type);\n                this.labelComponent = new LabelCtor(this, options.label);\n                this.labelComponent.render();\n            }\n        }\n    };\n    PieLayer.prototype.getAngleScale = function () {\n        var angleField = this.options.angleField;\n        if (angleField) {\n            return this.view.getScaleByField(angleField);\n        }\n    };\n    PieLayer.prototype.geometryParser = function (dim, type) {\n        if (dim === 'g2') {\n            return G2_GEOM_MAP[type];\n        }\n        return PLOT_GEOM_MAP[type];\n    };\n    PieLayer.prototype.scale = function () {\n        var props = this.options;\n        _super.prototype.scale.call(this);\n        var scales = {};\n        scales[props.angleField] = {};\n        scales[props.colorField] = { type: 'cat' };\n        scales = deepMix({}, this.config.scales, scales);\n        this.setConfig('scales', scales);\n    };\n    PieLayer.prototype.processData = function (data) {\n        var key = this.options.angleField;\n        var allZero = every(data, function (d) { return d[key] === 0; });\n        if (allZero) {\n            return data.map(function (item) {\n                var _a;\n                return (__assign(__assign({}, item), (_a = {}, _a[key] = typeof item[key] === 'string' ? Number.parseFloat(item[key]) : item[key], _a[percentageField] = 1 / data.length, _a)));\n            });\n        }\n        return data.map(function (item) {\n            var _a;\n            var value = item[key];\n            return __assign(__assign({}, item), (_a = {}, _a[key] = value && !isNaN(value) ? +value : value, _a));\n        });\n    };\n    PieLayer.prototype.axis = function () {\n        return;\n    };\n    PieLayer.prototype.coord = function () {\n        var props = this.options;\n        var coordConfig = {\n            type: 'theta',\n            cfg: {\n                radius: props.radius,\n                innerRadius: props.innerRadius || 0,\n            },\n        };\n        this.setConfig('coordinate', coordConfig);\n    };\n    PieLayer.prototype.addGeometry = function () {\n        var props = this.options;\n        var data = props.data, angleField = props.angleField;\n        var pie;\n        var allZero = every(data, function (d) { return d[angleField] === 0; });\n        if (allZero) {\n            pie = getGeom('interval', 'main', {\n                plot: this,\n                positionFields: [1, percentageField],\n            });\n        }\n        else {\n            pie = getGeom('interval', 'main', {\n                plot: this,\n                positionFields: [1, props.angleField],\n            });\n        }\n        pie.adjust = [{ type: 'stack' }];\n        this.pie = pie;\n        if (props.label) {\n            this.label();\n        }\n        if (props.tooltip && (props.tooltip.fields || props.tooltip.formatter)) {\n            this.geometryTooltip();\n        }\n        this.setConfig('geometry', pie);\n    };\n    PieLayer.prototype.geometryTooltip = function () {\n        this.pie.tooltip = {};\n        var tooltipOptions = this.options.tooltip;\n        if (tooltipOptions.fields) {\n            this.pie.tooltip.fields = tooltipOptions.fields;\n        }\n        else {\n            this.pie.tooltip.fields = [this.options.angleField, this.options.colorField];\n        }\n        if (tooltipOptions.formatter) {\n            this.pie.tooltip.callback = tooltipOptions.formatter;\n            if (!tooltipOptions.fields) {\n                this.pie.tooltip.fields = [this.options.angleField, this.options.colorField];\n            }\n        }\n    };\n    PieLayer.prototype.animation = function () {\n        _super.prototype.animation.call(this);\n        var props = this.options;\n        if (props.animation === false) {\n            this.pie.animate = false;\n        }\n    };\n    PieLayer.prototype.annotation = function () {\n        return;\n    };\n    PieLayer.prototype.parseEvents = function (eventParser) {\n        if (eventParser) {\n            _super.prototype.parseEvents.call(this, eventParser);\n        }\n        else {\n            _super.prototype.parseEvents.call(this, EventParser);\n        }\n    };\n    PieLayer.prototype.label = function () {\n        this.pie.label = false;\n    };\n    return PieLayer;\n}(ViewLayer));\nexport default PieLayer;\nregisterPlotType('pie', PieLayer);\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/pie/layer.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/pie/layer.js"],"names":[],"mappings":"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","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { deepMix, every } from '@antv/util';\nimport * as EventParser from './event';\nimport ViewLayer from '../../base/view-layer';\nimport { getGeom } from '../../geoms/factory';\nimport { getPieLabel } from './component/label';\nimport SpiderLabel from './component/label/spider-label';\nimport { registerPlotType } from '../../base/global';\nimport './theme';\nvar percentageField = '$$percentage$$';\nvar G2_GEOM_MAP = {\n    pie: 'interval',\n};\nvar PLOT_GEOM_MAP = {\n    pie: 'column',\n};\n// @ts-ignore\nvar PieLayer = /** @class */ (function (_super) {\n    __extends(PieLayer, _super);\n    function PieLayer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'pie';\n        return _this;\n    }\n    PieLayer.getDefaultOptions = function () {\n        return deepMix({}, _super.getDefaultOptions.call(this), {\n            width: 400,\n            height: 400,\n            title: {\n                visible: false,\n            },\n            description: {\n                visible: false,\n            },\n            forceFit: true,\n            padding: 'auto',\n            radius: 0.8,\n            label: {\n                visible: true,\n                type: 'inner',\n                autoRotate: false,\n                adjustPosition: true,\n                allowOverlap: false,\n                line: {\n                    visible: true,\n                    smooth: true,\n                },\n            },\n            legend: {\n                visible: true,\n                position: 'right-center',\n            },\n            tooltip: {\n                visible: true,\n                shared: false,\n                showCrosshairs: false,\n                showMarkers: false,\n            },\n            pieStyle: {\n                stroke: 'white',\n                lineWidth: 1,\n            },\n        });\n    };\n    PieLayer.prototype.afterInit = function () {\n        var _a = this.options, angleField = _a.angleField, colorField = _a.colorField, data = _a.data;\n        var allZero = every(data, function (d) { return d[angleField] === 0; });\n        if (allZero) {\n            var pieGeom = this.view.geometries[0];\n            pieGeom.tooltip(colorField + \"*\" + angleField);\n        }\n    };\n    PieLayer.prototype.afterRender = function () {\n        _super.prototype.afterRender.call(this);\n        var options = this.options;\n        /** 蜘蛛布局label */\n        if (options.label && options.label.visible) {\n            // 清除，避免二次渲染\n            if (this.labelComponent) {\n                this.labelComponent.clear();\n            }\n            var labelConfig = options.label;\n            if (labelConfig.type === 'spider') {\n                this.labelComponent = new SpiderLabel(__assign({ view: this.view, fields: options.colorField ? [options.angleField, options.colorField] : [options.angleField] }, this.options.label));\n                this.labelComponent.render();\n            }\n            else {\n                var LabelCtor = getPieLabel(labelConfig.type);\n                this.labelComponent = new LabelCtor(this, options.label);\n                this.labelComponent.render();\n            }\n        }\n    };\n    PieLayer.prototype.getAngleScale = function () {\n        var angleField = this.options.angleField;\n        if (angleField) {\n            return this.view.getScaleByField(angleField);\n        }\n    };\n    PieLayer.prototype.geometryParser = function (dim, type) {\n        if (dim === 'g2') {\n            return G2_GEOM_MAP[type];\n        }\n        return PLOT_GEOM_MAP[type];\n    };\n    PieLayer.prototype.scale = function () {\n        var props = this.options;\n        _super.prototype.scale.call(this);\n        var scales = {};\n        scales[props.angleField] = {};\n        scales[props.colorField] = { type: 'cat' };\n        scales = deepMix({}, this.config.scales, scales);\n        this.setConfig('scales', scales);\n    };\n    PieLayer.prototype.processData = function (data) {\n        var key = this.options.angleField;\n        var allZero = every(data, function (d) { return d[key] === 0; });\n        if (allZero) {\n            return data.map(function (item) {\n                var _a;\n                return (__assign(__assign({}, item), (_a = {}, _a[key] = typeof item[key] === 'string' ? Number.parseFloat(item[key]) : item[key], _a[percentageField] = 1 / data.length, _a)));\n            });\n        }\n        return data.map(function (item) {\n            var _a;\n            var value = item[key];\n            return __assign(__assign({}, item), (_a = {}, _a[key] = value && !isNaN(value) ? +value : value, _a));\n        });\n    };\n    PieLayer.prototype.axis = function () {\n        return;\n    };\n    PieLayer.prototype.coord = function () {\n        var props = this.options;\n        var coordConfig = {\n            type: 'theta',\n            cfg: {\n                radius: props.radius,\n                // @ts-ignore 业务定制,不开放配置\n                innerRadius: props.innerRadius || 0,\n            },\n        };\n        this.setConfig('coordinate', coordConfig);\n    };\n    PieLayer.prototype.addGeometry = function () {\n        var props = this.options;\n        var data = props.data, angleField = props.angleField;\n        var pie;\n        var allZero = every(data, function (d) { return d[angleField] === 0; });\n        if (allZero) {\n            pie = getGeom('interval', 'main', {\n                plot: this,\n                positionFields: [1, percentageField],\n            });\n        }\n        else {\n            pie = getGeom('interval', 'main', {\n                plot: this,\n                positionFields: [1, props.angleField],\n            });\n        }\n        pie.adjust = [{ type: 'stack' }];\n        this.pie = pie;\n        if (props.label) {\n            this.label();\n        }\n        if (props.tooltip && (props.tooltip.fields || props.tooltip.formatter)) {\n            this.geometryTooltip();\n        }\n        this.setConfig('geometry', pie);\n    };\n    PieLayer.prototype.geometryTooltip = function () {\n        this.pie.tooltip = {};\n        var tooltipOptions = this.options.tooltip;\n        if (tooltipOptions.fields) {\n            this.pie.tooltip.fields = tooltipOptions.fields;\n        }\n        else {\n            this.pie.tooltip.fields = [this.options.angleField, this.options.colorField];\n        }\n        if (tooltipOptions.formatter) {\n            this.pie.tooltip.callback = tooltipOptions.formatter;\n            if (!tooltipOptions.fields) {\n                this.pie.tooltip.fields = [this.options.angleField, this.options.colorField];\n            }\n        }\n    };\n    PieLayer.prototype.animation = function () {\n        _super.prototype.animation.call(this);\n        var props = this.options;\n        if (props.animation === false) {\n            /** 关闭动画 */\n            this.pie.animate = false;\n        }\n    };\n    PieLayer.prototype.annotation = function () {\n        return;\n    };\n    PieLayer.prototype.parseEvents = function (eventParser) {\n        if (eventParser) {\n            _super.prototype.parseEvents.call(this, eventParser);\n        }\n        else {\n            _super.prototype.parseEvents.call(this, EventParser);\n        }\n    };\n    PieLayer.prototype.label = function () {\n        // 不使用 g2 内置label\n        this.pie.label = false;\n    };\n    return PieLayer;\n}(ViewLayer));\nexport default PieLayer;\nregisterPlotType('pie', PieLayer);\n//# sourceMappingURL=layer.js.map"]}]}