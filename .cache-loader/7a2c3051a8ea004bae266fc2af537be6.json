{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/inversify/lib/constants/error_msgs.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/inversify/lib/constants/error_msgs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DUPLICATED_INJECTABLE_DECORATOR = \"Cannot apply @injectable decorator multiple times.\";\nexports.DUPLICATED_METADATA = \"Metadata key was used more than once in a parameter:\";\nexports.NULL_ARGUMENT = \"NULL argument\";\nexports.KEY_NOT_FOUND = \"Key Not Found\";\nexports.AMBIGUOUS_MATCH = \"Ambiguous match found for serviceIdentifier:\";\nexports.CANNOT_UNBIND = \"Could not unbind serviceIdentifier:\";\nexports.NOT_REGISTERED = \"No matching bindings found for serviceIdentifier:\";\nexports.MISSING_INJECTABLE_ANNOTATION = \"Missing required @injectable annotation in:\";\nexports.MISSING_INJECT_ANNOTATION = \"Missing required @inject or @multiInject annotation in:\";\nexports.UNDEFINED_INJECT_ANNOTATION = function (name) {\n    return \"@inject called with undefined this could mean that the class \" + name + \" has \" +\n        \"a circular dependency problem. You can use a LazyServiceIdentifer to  \" +\n        \"overcome this limitation.\";\n};\nexports.CIRCULAR_DEPENDENCY = \"Circular dependency found:\";\nexports.NOT_IMPLEMENTED = \"Sorry, this feature is not fully implemented yet.\";\nexports.INVALID_BINDING_TYPE = \"Invalid binding type:\";\nexports.NO_MORE_SNAPSHOTS_AVAILABLE = \"No snapshot available to restore.\";\nexports.INVALID_MIDDLEWARE_RETURN = \"Invalid return type in middleware. Middleware must return!\";\nexports.INVALID_FUNCTION_BINDING = \"Value provided to function binding must be a function!\";\nexports.INVALID_TO_SELF_VALUE = \"The toSelf function can only be applied when a constructor is \" +\n    \"used as service identifier\";\nexports.INVALID_DECORATOR_OPERATION = \"The @inject @multiInject @tagged and @named decorators \" +\n    \"must be applied to the parameters of a class constructor or a class property.\";\nexports.ARGUMENTS_LENGTH_MISMATCH = function () {\n    var values = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        values[_i] = arguments[_i];\n    }\n    return \"The number of constructor arguments in the derived class \" +\n        (values[0] + \" must be >= than the number of constructor arguments of its base class.\");\n};\nexports.CONTAINER_OPTIONS_MUST_BE_AN_OBJECT = \"Invalid Container constructor argument. Container options \" +\n    \"must be an object.\";\nexports.CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE = \"Invalid Container option. Default scope must \" +\n    \"be a string ('singleton' or 'transient').\";\nexports.CONTAINER_OPTIONS_INVALID_AUTO_BIND_INJECTABLE = \"Invalid Container option. Auto bind injectable must \" +\n    \"be a boolean\";\nexports.CONTAINER_OPTIONS_INVALID_SKIP_BASE_CHECK = \"Invalid Container option. Skip base check must \" +\n    \"be a boolean\";\nexports.MULTIPLE_POST_CONSTRUCT_METHODS = \"Cannot apply @postConstruct decorator multiple times in the same class\";\nexports.POST_CONSTRUCT_ERROR = function () {\n    var values = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        values[_i] = arguments[_i];\n    }\n    return \"@postConstruct error in class \" + values[0] + \": \" + values[1];\n};\nexports.CIRCULAR_DEPENDENCY_IN_FACTORY = function () {\n    var values = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        values[_i] = arguments[_i];\n    }\n    return \"It looks like there is a circular dependency \" +\n        (\"in one of the '\" + values[0] + \"' bindings. Please investigate bindings with\") +\n        (\"service identifier '\" + values[1] + \"'.\");\n};\nexports.STACK_OVERFLOW = \"Maximum call stack size exceeded\";\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/inversify/lib/constants/error_msgs.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/inversify/lib/constants/error_msgs.js"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DUPLICATED_INJECTABLE_DECORATOR = \"Cannot apply @injectable decorator multiple times.\";\nexports.DUPLICATED_METADATA = \"Metadata key was used more than once in a parameter:\";\nexports.NULL_ARGUMENT = \"NULL argument\";\nexports.KEY_NOT_FOUND = \"Key Not Found\";\nexports.AMBIGUOUS_MATCH = \"Ambiguous match found for serviceIdentifier:\";\nexports.CANNOT_UNBIND = \"Could not unbind serviceIdentifier:\";\nexports.NOT_REGISTERED = \"No matching bindings found for serviceIdentifier:\";\nexports.MISSING_INJECTABLE_ANNOTATION = \"Missing required @injectable annotation in:\";\nexports.MISSING_INJECT_ANNOTATION = \"Missing required @inject or @multiInject annotation in:\";\nexports.UNDEFINED_INJECT_ANNOTATION = function (name) {\n    return \"@inject called with undefined this could mean that the class \" + name + \" has \" +\n        \"a circular dependency problem. You can use a LazyServiceIdentifer to  \" +\n        \"overcome this limitation.\";\n};\nexports.CIRCULAR_DEPENDENCY = \"Circular dependency found:\";\nexports.NOT_IMPLEMENTED = \"Sorry, this feature is not fully implemented yet.\";\nexports.INVALID_BINDING_TYPE = \"Invalid binding type:\";\nexports.NO_MORE_SNAPSHOTS_AVAILABLE = \"No snapshot available to restore.\";\nexports.INVALID_MIDDLEWARE_RETURN = \"Invalid return type in middleware. Middleware must return!\";\nexports.INVALID_FUNCTION_BINDING = \"Value provided to function binding must be a function!\";\nexports.INVALID_TO_SELF_VALUE = \"The toSelf function can only be applied when a constructor is \" +\n    \"used as service identifier\";\nexports.INVALID_DECORATOR_OPERATION = \"The @inject @multiInject @tagged and @named decorators \" +\n    \"must be applied to the parameters of a class constructor or a class property.\";\nexports.ARGUMENTS_LENGTH_MISMATCH = function () {\n    var values = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        values[_i] = arguments[_i];\n    }\n    return \"The number of constructor arguments in the derived class \" +\n        (values[0] + \" must be >= than the number of constructor arguments of its base class.\");\n};\nexports.CONTAINER_OPTIONS_MUST_BE_AN_OBJECT = \"Invalid Container constructor argument. Container options \" +\n    \"must be an object.\";\nexports.CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE = \"Invalid Container option. Default scope must \" +\n    \"be a string ('singleton' or 'transient').\";\nexports.CONTAINER_OPTIONS_INVALID_AUTO_BIND_INJECTABLE = \"Invalid Container option. Auto bind injectable must \" +\n    \"be a boolean\";\nexports.CONTAINER_OPTIONS_INVALID_SKIP_BASE_CHECK = \"Invalid Container option. Skip base check must \" +\n    \"be a boolean\";\nexports.MULTIPLE_POST_CONSTRUCT_METHODS = \"Cannot apply @postConstruct decorator multiple times in the same class\";\nexports.POST_CONSTRUCT_ERROR = function () {\n    var values = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        values[_i] = arguments[_i];\n    }\n    return \"@postConstruct error in class \" + values[0] + \": \" + values[1];\n};\nexports.CIRCULAR_DEPENDENCY_IN_FACTORY = function () {\n    var values = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        values[_i] = arguments[_i];\n    }\n    return \"It looks like there is a circular dependency \" +\n        (\"in one of the '\" + values[0] + \"' bindings. Please investigate bindings with\") +\n        (\"service identifier '\" + values[1] + \"'.\");\n};\nexports.STACK_OVERFLOW = \"Maximum call stack size exceeded\";\n"]}]}