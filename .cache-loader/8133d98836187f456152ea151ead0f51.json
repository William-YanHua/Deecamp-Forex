{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\antd\\lib\\input\\calculateNodeHeight.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\antd\\lib\\input\\calculateNodeHeight.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["'use strict';\r\nObject.defineProperty(exports, \"__esModule\", {\r\n    value: true\r\n});\r\nexports['default'] = calculateNodeHeight;\r\nvar HIDDEN_TEXTAREA_STYLE = '\\n  min-height:0 !important;\\n  max-height:none !important;\\n  height:0 !important;\\n  visibility:hidden !important;\\n  overflow:hidden !important;\\n  position:absolute !important;\\n  z-index:-1000 !important;\\n  top:0 !important;\\n  right:0 !important\\n';\r\nvar SIZING_STYLE = ['letter-spacing', 'line-height', 'padding-top', 'padding-bottom', 'font-family', 'font-weight', 'font-size', 'text-rendering', 'text-transform', 'width', 'text-indent', 'padding-left', 'padding-right', 'border-width', 'box-sizing'];\r\nvar computedStyleCache = {};\r\nvar hiddenTextarea = void 0;\r\nfunction calculateNodeStyling(node) {\r\n    var useCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n    var nodeRef = node.getAttribute('id') || node.getAttribute('data-reactid') || node.getAttribute('name');\r\n    if (useCache && computedStyleCache[nodeRef]) {\r\n        return computedStyleCache[nodeRef];\r\n    }\r\n    var style = window.getComputedStyle(node);\r\n    var boxSizing = style.getPropertyValue('box-sizing') || style.getPropertyValue('-moz-box-sizing') || style.getPropertyValue('-webkit-box-sizing');\r\n    var paddingSize = parseFloat(style.getPropertyValue('padding-bottom')) + parseFloat(style.getPropertyValue('padding-top'));\r\n    var borderSize = parseFloat(style.getPropertyValue('border-bottom-width')) + parseFloat(style.getPropertyValue('border-top-width'));\r\n    var sizingStyle = SIZING_STYLE.map(function (name) {\r\n        return name + ':' + style.getPropertyValue(name);\r\n    }).join(';');\r\n    var nodeInfo = {\r\n        sizingStyle: sizingStyle,\r\n        paddingSize: paddingSize,\r\n        borderSize: borderSize,\r\n        boxSizing: boxSizing\r\n    };\r\n    if (useCache && nodeRef) {\r\n        computedStyleCache[nodeRef] = nodeInfo;\r\n    }\r\n    return nodeInfo;\r\n}\r\nfunction calculateNodeHeight(uiTextNode) {\r\n    var useCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n    var minRows = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\r\n    var maxRows = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\r\n    if (!hiddenTextarea) {\r\n        hiddenTextarea = document.createElement('textarea');\r\n        document.body.appendChild(hiddenTextarea);\r\n    }\r\n    if (uiTextNode.getAttribute('wrap')) {\r\n        hiddenTextarea.setAttribute('wrap', uiTextNode.getAttribute('wrap'));\r\n    }\r\n    else {\r\n        hiddenTextarea.removeAttribute('wrap');\r\n    }\r\n    var _calculateNodeStyling = calculateNodeStyling(uiTextNode, useCache), paddingSize = _calculateNodeStyling.paddingSize, borderSize = _calculateNodeStyling.borderSize, boxSizing = _calculateNodeStyling.boxSizing, sizingStyle = _calculateNodeStyling.sizingStyle;\r\n    hiddenTextarea.setAttribute('style', sizingStyle + ';' + HIDDEN_TEXTAREA_STYLE);\r\n    hiddenTextarea.value = uiTextNode.value || uiTextNode.placeholder || '';\r\n    var minHeight = Number.MIN_SAFE_INTEGER;\r\n    var maxHeight = Number.MAX_SAFE_INTEGER;\r\n    var height = hiddenTextarea.scrollHeight;\r\n    var overflowY = void 0;\r\n    if (boxSizing === 'border-box') {\r\n        height = height + borderSize;\r\n    }\r\n    else if (boxSizing === 'content-box') {\r\n        height = height - paddingSize;\r\n    }\r\n    if (minRows !== null || maxRows !== null) {\r\n        hiddenTextarea.value = ' ';\r\n        var singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;\r\n        if (minRows !== null) {\r\n            minHeight = singleRowHeight * minRows;\r\n            if (boxSizing === 'border-box') {\r\n                minHeight = minHeight + paddingSize + borderSize;\r\n            }\r\n            height = Math.max(minHeight, height);\r\n        }\r\n        if (maxRows !== null) {\r\n            maxHeight = singleRowHeight * maxRows;\r\n            if (boxSizing === 'border-box') {\r\n                maxHeight = maxHeight + paddingSize + borderSize;\r\n            }\r\n            overflowY = height > maxHeight ? '' : 'hidden';\r\n            height = Math.min(maxHeight, height);\r\n        }\r\n    }\r\n    if (!maxRows) {\r\n        overflowY = 'hidden';\r\n    }\r\n    return { height: height, minHeight: minHeight, maxHeight: maxHeight, overflowY: overflowY };\r\n}\r\nmodule.exports = exports['default'];\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\antd\\lib\\input\\calculateNodeHeight.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\antd\\lib\\input\\calculateNodeHeight.js"],"names":[],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports['default'] = calculateNodeHeight;\n// Thanks to https://github.com/andreypopp/react-textarea-autosize/\n/**\n * calculateNodeHeight(uiTextNode, useCache = false)\n */\nvar HIDDEN_TEXTAREA_STYLE = '\\n  min-height:0 !important;\\n  max-height:none !important;\\n  height:0 !important;\\n  visibility:hidden !important;\\n  overflow:hidden !important;\\n  position:absolute !important;\\n  z-index:-1000 !important;\\n  top:0 !important;\\n  right:0 !important\\n';\nvar SIZING_STYLE = ['letter-spacing', 'line-height', 'padding-top', 'padding-bottom', 'font-family', 'font-weight', 'font-size', 'text-rendering', 'text-transform', 'width', 'text-indent', 'padding-left', 'padding-right', 'border-width', 'box-sizing'];\nvar computedStyleCache = {};\nvar hiddenTextarea = void 0;\nfunction calculateNodeStyling(node) {\n    var useCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    var nodeRef = node.getAttribute('id') || node.getAttribute('data-reactid') || node.getAttribute('name');\n    if (useCache && computedStyleCache[nodeRef]) {\n        return computedStyleCache[nodeRef];\n    }\n    var style = window.getComputedStyle(node);\n    var boxSizing = style.getPropertyValue('box-sizing') || style.getPropertyValue('-moz-box-sizing') || style.getPropertyValue('-webkit-box-sizing');\n    var paddingSize = parseFloat(style.getPropertyValue('padding-bottom')) + parseFloat(style.getPropertyValue('padding-top'));\n    var borderSize = parseFloat(style.getPropertyValue('border-bottom-width')) + parseFloat(style.getPropertyValue('border-top-width'));\n    var sizingStyle = SIZING_STYLE.map(function (name) {\n        return name + ':' + style.getPropertyValue(name);\n    }).join(';');\n    var nodeInfo = {\n        sizingStyle: sizingStyle,\n        paddingSize: paddingSize,\n        borderSize: borderSize,\n        boxSizing: boxSizing\n    };\n    if (useCache && nodeRef) {\n        computedStyleCache[nodeRef] = nodeInfo;\n    }\n    return nodeInfo;\n}\nfunction calculateNodeHeight(uiTextNode) {\n    var useCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var minRows = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var maxRows = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n    if (!hiddenTextarea) {\n        hiddenTextarea = document.createElement('textarea');\n        document.body.appendChild(hiddenTextarea);\n    }\n    // Fix wrap=\"off\" issue\n    // https://github.com/ant-design/ant-design/issues/6577\n    if (uiTextNode.getAttribute('wrap')) {\n        hiddenTextarea.setAttribute('wrap', uiTextNode.getAttribute('wrap'));\n    } else {\n        hiddenTextarea.removeAttribute('wrap');\n    }\n    // Copy all CSS properties that have an impact on the height of the content in\n    // the textbox\n\n    var _calculateNodeStyling = calculateNodeStyling(uiTextNode, useCache),\n        paddingSize = _calculateNodeStyling.paddingSize,\n        borderSize = _calculateNodeStyling.borderSize,\n        boxSizing = _calculateNodeStyling.boxSizing,\n        sizingStyle = _calculateNodeStyling.sizingStyle;\n    // Need to have the overflow attribute to hide the scrollbar otherwise\n    // text-lines will not calculated properly as the shadow will technically be\n    // narrower for content\n\n\n    hiddenTextarea.setAttribute('style', sizingStyle + ';' + HIDDEN_TEXTAREA_STYLE);\n    hiddenTextarea.value = uiTextNode.value || uiTextNode.placeholder || '';\n    var minHeight = Number.MIN_SAFE_INTEGER;\n    var maxHeight = Number.MAX_SAFE_INTEGER;\n    var height = hiddenTextarea.scrollHeight;\n    var overflowY = void 0;\n    if (boxSizing === 'border-box') {\n        // border-box: add border, since height = content + padding + border\n        height = height + borderSize;\n    } else if (boxSizing === 'content-box') {\n        // remove padding, since height = content\n        height = height - paddingSize;\n    }\n    if (minRows !== null || maxRows !== null) {\n        // measure height of a textarea with a single row\n        hiddenTextarea.value = ' ';\n        var singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;\n        if (minRows !== null) {\n            minHeight = singleRowHeight * minRows;\n            if (boxSizing === 'border-box') {\n                minHeight = minHeight + paddingSize + borderSize;\n            }\n            height = Math.max(minHeight, height);\n        }\n        if (maxRows !== null) {\n            maxHeight = singleRowHeight * maxRows;\n            if (boxSizing === 'border-box') {\n                maxHeight = maxHeight + paddingSize + borderSize;\n            }\n            overflowY = height > maxHeight ? '' : 'hidden';\n            height = Math.min(maxHeight, height);\n        }\n    }\n    // Remove scroll bar flash when autosize without maxRows\n    if (!maxRows) {\n        overflowY = 'hidden';\n    }\n    return { height: height, minHeight: minHeight, maxHeight: maxHeight, overflowY: overflowY };\n}\nmodule.exports = exports['default'];"]}]}