{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/scatter/components/quadrant.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/scatter/components/quadrant.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { __assign } from \"tslib\";\nimport { each, isArray, isFunction, deepMix } from '@antv/util';\nimport BBox from '../../../util/bbox';\nvar Quadrant = (function () {\n    function Quadrant(cfg) {\n        this.quadrantGroups = [];\n        this.regionData = [];\n        this.lineData = [];\n        this.options = cfg;\n        this.view = this.options.view;\n        this.init();\n    }\n    Quadrant.prototype.init = function () {\n        var _a = this.options, xBaseline = _a.xBaseline, yBaseline = _a.yBaseline;\n        var coord = this.view.getCoordinate();\n        var xScale = this.view.getScaleByField(this.options.plotOptions.xField);\n        var yScale = this.view.getScaleByField(this.options.plotOptions.yField);\n        var xRegion;\n        if (xBaseline > xScale.min && xBaseline < xScale.max) {\n            var ratio = (xBaseline - xScale.min) / (xScale.max - xScale.min);\n            xRegion = [\n                new BBox(coord.start.x, coord.end.y, coord.getWidth() * ratio, coord.getHeight()),\n                new BBox(coord.start.x + coord.getWidth() * ratio, coord.end.y, coord.getWidth() * (1 - ratio), coord.getHeight()),\n            ];\n            var verticalLineData = {\n                start: { x: coord.start.x + coord.getWidth() * ratio, y: coord.end.y },\n                end: { x: coord.start.x + coord.getWidth() * ratio, y: coord.start.y },\n            };\n            this.lineData.push(verticalLineData);\n        }\n        else {\n            xRegion = [new BBox(coord.start.x, coord.end.y, coord.getWidth(), coord.getHeight())];\n        }\n        if (yBaseline > yScale.min && yBaseline < yScale.max) {\n            var ratio = (yBaseline - yScale.min) / (yScale.max - yScale.min);\n            var horizontalLineData = {\n                start: { x: coord.start.x, y: coord.start.y - coord.getHeight() * ratio },\n                end: { x: coord.end.x, y: coord.start.y - coord.getHeight() * ratio },\n            };\n            this.lineData.push(horizontalLineData);\n            var topQuadrant = {\n                name: xBaseline <= xScale.min ? 'top-right' : 'top-left',\n                bbox: new BBox(xRegion[0].minX, xRegion[0].minY, xRegion[0].width, xRegion[0].height * (1 - ratio)),\n                index: xBaseline <= xScale.min ? 2 : 0,\n            };\n            this.regionData.push(topQuadrant);\n            var bottomQuadrant = {\n                name: xBaseline <= xScale.min ? 'bottom-right' : 'bottom-left',\n                bbox: new BBox(xRegion[0].minX, xRegion[0].minY + xRegion[0].height * (1 - ratio), xRegion[0].width, xRegion[0].height * ratio),\n                index: xBaseline <= xScale.min ? 3 : 1,\n            };\n            this.regionData.push(bottomQuadrant);\n            if (xRegion.length > 1) {\n                var rightTopQuadrant = {\n                    name: 'top-right',\n                    bbox: new BBox(xRegion[1].minX, xRegion[1].minY, xRegion[1].width, xRegion[1].height * (1 - ratio)),\n                    index: 2,\n                };\n                this.regionData.push(rightTopQuadrant);\n                var rightBottomQuadrant = {\n                    name: 'bottom-right',\n                    bbox: new BBox(xRegion[1].minX, xRegion[1].minY + xRegion[1].height * (1 - ratio), xRegion[1].width, xRegion[1].height * ratio),\n                    index: 3,\n                };\n                this.regionData.push(rightBottomQuadrant);\n            }\n        }\n        else if (xRegion.length === 2) {\n            if (yBaseline <= yScale.min) {\n                var leftTopQuadrant = {\n                    name: 'top-left',\n                    bbox: xRegion[0],\n                    index: 0,\n                };\n                this.regionData.push(leftTopQuadrant);\n                var rightTopQuadrant = {\n                    name: 'top-right',\n                    bbox: xRegion[1],\n                    index: 2,\n                };\n                this.regionData.push(rightTopQuadrant);\n            }\n            else {\n                var leftBottomQuadrant = {\n                    name: 'bottom-left',\n                    bbox: xRegion[0],\n                    index: 1,\n                };\n                this.regionData.push(leftBottomQuadrant);\n                var rightBottomQuadrant = {\n                    name: 'bottom-right',\n                    bbox: xRegion[1],\n                    index: 3,\n                };\n                this.regionData.push(rightBottomQuadrant);\n            }\n        }\n        else {\n            if (xBaseline <= xScale.min) {\n                if (yBaseline <= yScale.min) {\n                    var rightTopQuadrant = {\n                        name: 'top-right',\n                        bbox: xRegion[0],\n                        index: 2,\n                    };\n                    this.regionData.push(rightTopQuadrant);\n                }\n                else {\n                    var rightBottomQuadrant = {\n                        name: 'bottom-right',\n                        bbox: xRegion[0],\n                        index: 3,\n                    };\n                    this.regionData.push(rightBottomQuadrant);\n                }\n            }\n            else {\n                if (yBaseline <= yScale.min) {\n                    var leftTopQuadrant = {\n                        name: 'top-left',\n                        bbox: xRegion[0],\n                        index: 0,\n                    };\n                    this.regionData.push(leftTopQuadrant);\n                }\n                else {\n                    var leftBottomQuadrant = {\n                        name: 'bottom-left',\n                        bbox: xRegion[0],\n                        index: 1,\n                    };\n                    this.regionData.push(leftBottomQuadrant);\n                }\n            }\n        }\n        this.container = this.view.backgroundGroup.addGroup();\n    };\n    Quadrant.prototype.render = function () {\n        var _this = this;\n        if (this.regionData.length > 0) {\n            var defaultStyle_1 = this.getDefaultStyle();\n            var regionStyle_1 = this.getRegionStyle(this.regionData);\n            each(this.regionData, function (d) {\n                var index = d.index;\n                var group = _this.container.addGroup();\n                var rect = group.addShape('rect', {\n                    attrs: __assign({ x: d.bbox.minX, y: d.bbox.minY, width: d.bbox.width, height: d.bbox.height }, regionStyle_1[index]),\n                    name: 'quadrant',\n                });\n                if (_this.options.label && _this.options.label.text) {\n                    var labelOptions = deepMix({}, defaultStyle_1.label, _this.options.label);\n                    var labelCfg = _this.getLabelConfig(d, labelOptions);\n                    group.addShape('text', {\n                        attrs: __assign({}, labelCfg),\n                        name: 'quadrant-label',\n                    });\n                }\n                rect.set('data', d);\n                _this.quadrantGroups.push(group);\n            });\n            var lineStyle_1 = deepMix({}, defaultStyle_1.line, this.options.lineStyle);\n            each(this.lineData, function (d) {\n                _this.container.addShape('path', {\n                    attrs: __assign({ path: [\n                            ['M', d.start.x, d.start.y],\n                            ['L', d.end.x, d.end.y],\n                        ] }, lineStyle_1),\n                    name: 'quadrant-line',\n                });\n            });\n            this.view.canvas.draw();\n        }\n    };\n    Quadrant.prototype.clear = function () {\n        if (this.container) {\n            this.container.clear();\n        }\n    };\n    Quadrant.prototype.destroy = function () {\n        if (this.container) {\n            this.container.remove();\n        }\n    };\n    Quadrant.prototype.getDefaultStyle = function () {\n        return {\n            line: {\n                stroke: '#9ba29a',\n                lineWidth: 1,\n            },\n            regionStyle: [\n                { fill: '#000000', opacity: 0.05 },\n                { fill: '#ffffff', opacity: 0 },\n                { fill: '#ffffff', opacity: 0 },\n                { fill: '#000000', opacity: 0.05 },\n            ],\n            label: {\n                position: 'outter-inner',\n                offset: 10,\n                style: {\n                    fontSize: 14,\n                    fill: '#ccc',\n                },\n            },\n        };\n    };\n    Quadrant.prototype.getRegionStyle = function (regionData) {\n        var defaultStyle = this.getDefaultStyle();\n        var style = defaultStyle.regionStyle;\n        if (this.options.regionStyle) {\n            var regionStyle_2 = this.options.regionStyle;\n            if (isArray(regionStyle_2)) {\n                style = style.map(function (s, index) {\n                    if (regionStyle_2.length > index && regionStyle_2[index]) {\n                        return regionStyle_2[index];\n                    }\n                    return s;\n                });\n            }\n            else if (isFunction(regionStyle_2)) {\n                each(regionData, function (d, index) {\n                    style[index] = regionStyle_2(d);\n                });\n            }\n        }\n        return style;\n    };\n    Quadrant.prototype.getLabelConfig = function (region, labelOptions) {\n        var index = region.index;\n        var x = 0;\n        var y = 0;\n        var style = {};\n        var text = labelOptions.text;\n        if (isFunction(text)) {\n            text = text(region);\n        }\n        else if (isArray(text)) {\n            text = text[index];\n        }\n        var position = labelOptions.position;\n        var pos = position.split('-');\n        var dim = region.name.split('-');\n        if (dim[1] === 'left') {\n            if (pos[0] === 'inner') {\n                x = region.bbox.maxX - labelOptions.offset;\n                style.textAlign = 'right';\n            }\n            if (pos[0] === 'outter') {\n                x = region.bbox.minX + labelOptions.offset;\n                style.textAlign = 'left';\n            }\n        }\n        else if (dim[1] === 'right') {\n            if (pos[0] === 'inner') {\n                x = region.bbox.minX + labelOptions.offset;\n                style.textAlign = 'left';\n            }\n            if (pos[0] === 'outter') {\n                x = region.bbox.maxX - labelOptions.offset;\n                style.textAlign = 'right';\n            }\n        }\n        if (dim[0] === 'top') {\n            if (pos[1] === 'inner') {\n                y = region.bbox.maxY - labelOptions.offset;\n                style.textBaseline = 'bottom';\n            }\n            if (pos[1] === 'outter') {\n                y = region.bbox.minY + labelOptions.offset;\n                style.textBaseline = 'top';\n            }\n        }\n        else if (dim[0] === 'bottom') {\n            if (pos[1] === 'inner') {\n                y = region.bbox.minY + labelOptions.offset;\n                style.textBaseline = 'top';\n            }\n            if (pos[1] === 'outter') {\n                y = region.bbox.maxY - labelOptions.offset;\n                style.textBaseline = 'bottom';\n            }\n        }\n        style = deepMix({}, labelOptions.style, style);\n        style.lineHeight = style.fontSize;\n        return __assign({ x: x,\n            y: y,\n            text: text }, style);\n    };\n    return Quadrant;\n}());\nexport default Quadrant;\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/scatter/components/quadrant.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/scatter/components/quadrant.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACjC,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AAChE,OAAO,IAAI,MAAM,oBAAoB,CAAC;AACtC,IAAI,QAAQ,GAAiB,CAAC;IAC1B,SAAS,QAAQ,CAAC,GAAG;QACjB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QAC9B,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IACD,QAAQ,CAAC,SAAS,CAAC,IAAI,GAAG;QACtB,IAAI,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,SAAS,GAAG,EAAE,CAAC,SAAS,EAAE,SAAS,GAAG,EAAE,CAAC,SAAS,CAAC;QAC1E,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;QAGtC,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACxE,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAExE,IAAI,OAAO,CAAC;QACZ,IAAI,SAAS,GAAG,MAAM,CAAC,GAAG,IAAI,SAAS,GAAG,MAAM,CAAC,GAAG,EAAE;YAClD,IAAI,KAAK,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;YACjE,OAAO,GAAG;gBACN,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,EAAE,GAAG,KAAK,EAAE,KAAK,CAAC,SAAS,EAAE,CAAC;gBACjF,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAG,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,KAAK,CAAC,SAAS,EAAE,CAAC;aACrH,CAAC;YACF,IAAI,gBAAgB,GAAG;gBACnB,KAAK,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAG,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;gBACtE,GAAG,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAG,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;aACzE,CAAC;YACF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;SACxC;aACI;YACD,OAAO,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;SACzF;QAED,IAAI,SAAS,GAAG,MAAM,CAAC,GAAG,IAAI,SAAS,GAAG,MAAM,CAAC,GAAG,EAAE;YAClD,IAAI,KAAK,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;YACjE,IAAI,kBAAkB,GAAG;gBACrB,KAAK,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,SAAS,EAAE,GAAG,KAAK,EAAE;gBACzE,GAAG,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,SAAS,EAAE,GAAG,KAAK,EAAE;aACxE,CAAC;YACF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACvC,IAAI,WAAW,GAAG;gBACd,IAAI,EAAE,SAAS,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,UAAU;gBACxD,IAAI,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;gBACnG,KAAK,EAAE,SAAS,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACzC,CAAC;YACF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAClC,IAAI,cAAc,GAAG;gBACjB,IAAI,EAAE,SAAS,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,aAAa;gBAC9D,IAAI,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC;gBAC/H,KAAK,EAAE,SAAS,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACzC,CAAC;YACF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAErC,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;gBACpB,IAAI,gBAAgB,GAAG;oBACnB,IAAI,EAAE,WAAW;oBACjB,IAAI,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;oBACnG,KAAK,EAAE,CAAC;iBACX,CAAC;gBACF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACvC,IAAI,mBAAmB,GAAG;oBACtB,IAAI,EAAE,cAAc;oBACpB,IAAI,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC;oBAC/H,KAAK,EAAE,CAAC;iBACX,CAAC;gBACF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;aAC7C;SACJ;aACI,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YAC3B,IAAI,SAAS,IAAI,MAAM,CAAC,GAAG,EAAE;gBACzB,IAAI,eAAe,GAAG;oBAClB,IAAI,EAAE,UAAU;oBAChB,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;oBAChB,KAAK,EAAE,CAAC;iBACX,CAAC;gBACF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;gBACtC,IAAI,gBAAgB,GAAG;oBACnB,IAAI,EAAE,WAAW;oBACjB,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;oBAChB,KAAK,EAAE,CAAC;iBACX,CAAC;gBACF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;aAC1C;iBACI;gBACD,IAAI,kBAAkB,GAAG;oBACrB,IAAI,EAAE,aAAa;oBACnB,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;oBAChB,KAAK,EAAE,CAAC;iBACX,CAAC;gBACF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBACzC,IAAI,mBAAmB,GAAG;oBACtB,IAAI,EAAE,cAAc;oBACpB,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;oBAChB,KAAK,EAAE,CAAC;iBACX,CAAC;gBACF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;aAC7C;SACJ;aACI;YAED,IAAI,SAAS,IAAI,MAAM,CAAC,GAAG,EAAE;gBACzB,IAAI,SAAS,IAAI,MAAM,CAAC,GAAG,EAAE;oBACzB,IAAI,gBAAgB,GAAG;wBACnB,IAAI,EAAE,WAAW;wBACjB,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;wBAChB,KAAK,EAAE,CAAC;qBACX,CAAC;oBACF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;iBAC1C;qBACI;oBACD,IAAI,mBAAmB,GAAG;wBACtB,IAAI,EAAE,cAAc;wBACpB,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;wBAChB,KAAK,EAAE,CAAC;qBACX,CAAC;oBACF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;iBAC7C;aACJ;iBACI;gBACD,IAAI,SAAS,IAAI,MAAM,CAAC,GAAG,EAAE;oBACzB,IAAI,eAAe,GAAG;wBAClB,IAAI,EAAE,UAAU;wBAChB,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;wBAChB,KAAK,EAAE,CAAC;qBACX,CAAC;oBACF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;iBACzC;qBACI;oBACD,IAAI,kBAAkB,GAAG;wBACrB,IAAI,EAAE,aAAa;wBACnB,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;wBAChB,KAAK,EAAE,CAAC;qBACX,CAAC;oBACF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;iBAC5C;aACJ;SACJ;QAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;IAC1D,CAAC,CAAC;IACF,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG;QACxB,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YAC5B,IAAI,cAAc,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;YAC5C,IAAI,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACzD,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,UAAU,CAAC;gBAC7B,IAAI,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;gBACpB,IAAI,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;gBACvC,IAAI,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE;oBAC9B,KAAK,EAAE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,aAAa,CAAC,KAAK,CAAC,CAAC;oBACrH,IAAI,EAAE,UAAU;iBACnB,CAAC,CAAC;gBACH,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE;oBACjD,IAAI,YAAY,GAAG,OAAO,CAAC,EAAE,EAAE,cAAc,CAAC,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;oBAC1E,IAAI,QAAQ,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;oBACrD,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE;wBACnB,KAAK,EAAE,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC;wBAC7B,IAAI,EAAE,gBAAgB;qBACzB,CAAC,CAAC;iBACN;gBAED,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;gBACpB,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC;YAEH,IAAI,WAAW,GAAG,OAAO,CAAC,EAAE,EAAE,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YAC3E,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,CAAC;gBAC3B,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE;oBAC7B,KAAK,EAAE,QAAQ,CAAC,EAAE,IAAI,EAAE;4BAChB,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;4BAC3B,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;yBAC1B,EAAE,EAAE,WAAW,CAAC;oBACrB,IAAI,EAAE,eAAe;iBACxB,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;SAC3B;IACL,CAAC,CAAC;IACF,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG;QACvB,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;SAC1B;IACL,CAAC,CAAC;IACF,QAAQ,CAAC,SAAS,CAAC,OAAO,GAAG;QACzB,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;SAC3B;IACL,CAAC,CAAC;IACF,QAAQ,CAAC,SAAS,CAAC,eAAe,GAAG;QACjC,OAAO;YACH,IAAI,EAAE;gBACF,MAAM,EAAE,SAAS;gBACjB,SAAS,EAAE,CAAC;aACf;YACD,WAAW,EAAE;gBACT,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE;gBAClC,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,EAAE;gBAC/B,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,EAAE;gBAC/B,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE;aACrC;YACD,KAAK,EAAE;gBACH,QAAQ,EAAE,cAAc;gBACxB,MAAM,EAAE,EAAE;gBACV,KAAK,EAAE;oBACH,QAAQ,EAAE,EAAE;oBACZ,IAAI,EAAE,MAAM;iBACf;aACJ;SACJ,CAAC;IACN,CAAC,CAAC;IACF,QAAQ,CAAC,SAAS,CAAC,cAAc,GAAG,UAAU,UAAU;QACpD,IAAI,YAAY,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QAC1C,IAAI,KAAK,GAAG,YAAY,CAAC,WAAW,CAAC;QACrC,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;YAC1B,IAAI,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;YAC7C,IAAI,OAAO,CAAC,aAAa,CAAC,EAAE;gBACxB,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,KAAK;oBAChC,IAAI,aAAa,CAAC,MAAM,GAAG,KAAK,IAAI,aAAa,CAAC,KAAK,CAAC,EAAE;wBACtD,OAAO,aAAa,CAAC,KAAK,CAAC,CAAC;qBAC/B;oBACD,OAAO,CAAC,CAAC;gBACb,CAAC,CAAC,CAAC;aACN;iBACI,IAAI,UAAU,CAAC,aAAa,CAAC,EAAE;gBAChC,IAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,KAAK;oBAC/B,KAAK,CAAC,KAAK,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;gBACpC,CAAC,CAAC,CAAC;aACN;SACJ;QACD,OAAO,KAAK,CAAC;IACjB,CAAC,CAAC;IACF,QAAQ,CAAC,SAAS,CAAC,cAAc,GAAG,UAAU,MAAM,EAAE,YAAY;QAC9D,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QACzB,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,IAAI,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC;QAC7B,IAAI,UAAU,CAAC,IAAI,CAAC,EAAE;YAClB,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;SACvB;aACI,IAAI,OAAO,CAAC,IAAI,CAAC,EAAE;YACpB,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;SACtB;QACD,IAAI,QAAQ,GAAG,YAAY,CAAC,QAAQ,CAAC;QACrC,IAAI,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC9B,IAAI,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAEjC,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,EAAE;YACnB,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE;gBACpB,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC,MAAM,CAAC;gBAC3C,KAAK,CAAC,SAAS,GAAG,OAAO,CAAC;aAC7B;YACD,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;gBACrB,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC,MAAM,CAAC;gBAC3C,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC;aAC5B;SACJ;aACI,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE;YACzB,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE;gBACpB,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC,MAAM,CAAC;gBAC3C,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC;aAC5B;YACD,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;gBACrB,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC,MAAM,CAAC;gBAC3C,KAAK,CAAC,SAAS,GAAG,OAAO,CAAC;aAC7B;SACJ;QAED,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE;YAClB,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE;gBACpB,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC,MAAM,CAAC;gBAC3C,KAAK,CAAC,YAAY,GAAG,QAAQ,CAAC;aACjC;YACD,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;gBACrB,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC,MAAM,CAAC;gBAC3C,KAAK,CAAC,YAAY,GAAG,KAAK,CAAC;aAC9B;SACJ;aACI,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;YAC1B,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE;gBACpB,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC,MAAM,CAAC;gBAC3C,KAAK,CAAC,YAAY,GAAG,KAAK,CAAC;aAC9B;YACD,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;gBACrB,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC,MAAM,CAAC;gBAC3C,KAAK,CAAC,YAAY,GAAG,QAAQ,CAAC;aACjC;SACJ;QACD,KAAK,GAAG,OAAO,CAAC,EAAE,EAAE,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAC/C,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC,QAAQ,CAAC;QAClC,OAAO,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC;YAClB,CAAC,EAAE,CAAC;YACJ,IAAI,EAAE,IAAI,EAAE,EAAE,KAAK,CAAC,CAAC;IAC7B,CAAC,CAAC;IACF,OAAO,QAAQ,CAAC;AACpB,CAAC,EAAE,CAAC,CAAC;AACL,eAAe,QAAQ,CAAC","sourcesContent":["import { __assign } from \"tslib\";\nimport { each, isArray, isFunction, deepMix } from '@antv/util';\nimport BBox from '../../../util/bbox';\nvar Quadrant = /** @class */ (function () {\n    function Quadrant(cfg) {\n        this.quadrantGroups = [];\n        this.regionData = [];\n        this.lineData = [];\n        this.options = cfg;\n        this.view = this.options.view;\n        this.init();\n    }\n    Quadrant.prototype.init = function () {\n        var _a = this.options, xBaseline = _a.xBaseline, yBaseline = _a.yBaseline;\n        var coord = this.view.getCoordinate();\n        // TODO: xBaseline和yBaseline支持百分比\n        // 根据 xBaseline 和 yBaseline 分割象限\n        var xScale = this.view.getScaleByField(this.options.plotOptions.xField);\n        var yScale = this.view.getScaleByField(this.options.plotOptions.yField);\n        // 先进行 x 方向的分割\n        var xRegion;\n        if (xBaseline > xScale.min && xBaseline < xScale.max) {\n            var ratio = (xBaseline - xScale.min) / (xScale.max - xScale.min);\n            xRegion = [\n                new BBox(coord.start.x, coord.end.y, coord.getWidth() * ratio, coord.getHeight()),\n                new BBox(coord.start.x + coord.getWidth() * ratio, coord.end.y, coord.getWidth() * (1 - ratio), coord.getHeight()),\n            ];\n            var verticalLineData = {\n                start: { x: coord.start.x + coord.getWidth() * ratio, y: coord.end.y },\n                end: { x: coord.start.x + coord.getWidth() * ratio, y: coord.start.y },\n            };\n            this.lineData.push(verticalLineData);\n        }\n        else {\n            xRegion = [new BBox(coord.start.x, coord.end.y, coord.getWidth(), coord.getHeight())];\n        }\n        // 再进行 y 方向的分割\n        if (yBaseline > yScale.min && yBaseline < yScale.max) {\n            var ratio = (yBaseline - yScale.min) / (yScale.max - yScale.min);\n            var horizontalLineData = {\n                start: { x: coord.start.x, y: coord.start.y - coord.getHeight() * ratio },\n                end: { x: coord.end.x, y: coord.start.y - coord.getHeight() * ratio },\n            };\n            this.lineData.push(horizontalLineData);\n            var topQuadrant = {\n                name: xBaseline <= xScale.min ? 'top-right' : 'top-left',\n                bbox: new BBox(xRegion[0].minX, xRegion[0].minY, xRegion[0].width, xRegion[0].height * (1 - ratio)),\n                index: xBaseline <= xScale.min ? 2 : 0,\n            };\n            this.regionData.push(topQuadrant);\n            var bottomQuadrant = {\n                name: xBaseline <= xScale.min ? 'bottom-right' : 'bottom-left',\n                bbox: new BBox(xRegion[0].minX, xRegion[0].minY + xRegion[0].height * (1 - ratio), xRegion[0].width, xRegion[0].height * ratio),\n                index: xBaseline <= xScale.min ? 3 : 1,\n            };\n            this.regionData.push(bottomQuadrant);\n            // 四象限齐全\n            if (xRegion.length > 1) {\n                var rightTopQuadrant = {\n                    name: 'top-right',\n                    bbox: new BBox(xRegion[1].minX, xRegion[1].minY, xRegion[1].width, xRegion[1].height * (1 - ratio)),\n                    index: 2,\n                };\n                this.regionData.push(rightTopQuadrant);\n                var rightBottomQuadrant = {\n                    name: 'bottom-right',\n                    bbox: new BBox(xRegion[1].minX, xRegion[1].minY + xRegion[1].height * (1 - ratio), xRegion[1].width, xRegion[1].height * ratio),\n                    index: 3,\n                };\n                this.regionData.push(rightBottomQuadrant);\n            }\n        }\n        else if (xRegion.length === 2) {\n            if (yBaseline <= yScale.min) {\n                var leftTopQuadrant = {\n                    name: 'top-left',\n                    bbox: xRegion[0],\n                    index: 0,\n                };\n                this.regionData.push(leftTopQuadrant);\n                var rightTopQuadrant = {\n                    name: 'top-right',\n                    bbox: xRegion[1],\n                    index: 2,\n                };\n                this.regionData.push(rightTopQuadrant);\n            }\n            else {\n                var leftBottomQuadrant = {\n                    name: 'bottom-left',\n                    bbox: xRegion[0],\n                    index: 1,\n                };\n                this.regionData.push(leftBottomQuadrant);\n                var rightBottomQuadrant = {\n                    name: 'bottom-right',\n                    bbox: xRegion[1],\n                    index: 3,\n                };\n                this.regionData.push(rightBottomQuadrant);\n            }\n        }\n        else {\n            // 当前绘制区域全部在一个象限中\n            if (xBaseline <= xScale.min) {\n                if (yBaseline <= yScale.min) {\n                    var rightTopQuadrant = {\n                        name: 'top-right',\n                        bbox: xRegion[0],\n                        index: 2,\n                    };\n                    this.regionData.push(rightTopQuadrant);\n                }\n                else {\n                    var rightBottomQuadrant = {\n                        name: 'bottom-right',\n                        bbox: xRegion[0],\n                        index: 3,\n                    };\n                    this.regionData.push(rightBottomQuadrant);\n                }\n            }\n            else {\n                if (yBaseline <= yScale.min) {\n                    var leftTopQuadrant = {\n                        name: 'top-left',\n                        bbox: xRegion[0],\n                        index: 0,\n                    };\n                    this.regionData.push(leftTopQuadrant);\n                }\n                else {\n                    var leftBottomQuadrant = {\n                        name: 'bottom-left',\n                        bbox: xRegion[0],\n                        index: 1,\n                    };\n                    this.regionData.push(leftBottomQuadrant);\n                }\n            }\n        }\n        // 创建container\n        this.container = this.view.backgroundGroup.addGroup();\n    };\n    Quadrant.prototype.render = function () {\n        var _this = this;\n        if (this.regionData.length > 0) {\n            var defaultStyle_1 = this.getDefaultStyle();\n            var regionStyle_1 = this.getRegionStyle(this.regionData);\n            each(this.regionData, function (d) {\n                var index = d.index;\n                var group = _this.container.addGroup();\n                var rect = group.addShape('rect', {\n                    attrs: __assign({ x: d.bbox.minX, y: d.bbox.minY, width: d.bbox.width, height: d.bbox.height }, regionStyle_1[index]),\n                    name: 'quadrant',\n                });\n                if (_this.options.label && _this.options.label.text) {\n                    var labelOptions = deepMix({}, defaultStyle_1.label, _this.options.label);\n                    var labelCfg = _this.getLabelConfig(d, labelOptions);\n                    group.addShape('text', {\n                        attrs: __assign({}, labelCfg),\n                        name: 'quadrant-label',\n                    });\n                }\n                // rect.setSilent('data', d);\n                rect.set('data', d);\n                _this.quadrantGroups.push(group);\n            });\n            // 绘制象限辅助线\n            var lineStyle_1 = deepMix({}, defaultStyle_1.line, this.options.lineStyle);\n            each(this.lineData, function (d) {\n                _this.container.addShape('path', {\n                    attrs: __assign({ path: [\n                            ['M', d.start.x, d.start.y],\n                            ['L', d.end.x, d.end.y],\n                        ] }, lineStyle_1),\n                    name: 'quadrant-line',\n                });\n            });\n            this.view.canvas.draw();\n        }\n    };\n    Quadrant.prototype.clear = function () {\n        if (this.container) {\n            this.container.clear();\n        }\n    };\n    Quadrant.prototype.destroy = function () {\n        if (this.container) {\n            this.container.remove();\n        }\n    };\n    Quadrant.prototype.getDefaultStyle = function () {\n        return {\n            line: {\n                stroke: '#9ba29a',\n                lineWidth: 1,\n            },\n            regionStyle: [\n                { fill: '#000000', opacity: 0.05 },\n                { fill: '#ffffff', opacity: 0 },\n                { fill: '#ffffff', opacity: 0 },\n                { fill: '#000000', opacity: 0.05 },\n            ],\n            label: {\n                position: 'outter-inner',\n                offset: 10,\n                style: {\n                    fontSize: 14,\n                    fill: '#ccc',\n                },\n            },\n        };\n    };\n    Quadrant.prototype.getRegionStyle = function (regionData) {\n        var defaultStyle = this.getDefaultStyle();\n        var style = defaultStyle.regionStyle;\n        if (this.options.regionStyle) {\n            var regionStyle_2 = this.options.regionStyle;\n            if (isArray(regionStyle_2)) {\n                style = style.map(function (s, index) {\n                    if (regionStyle_2.length > index && regionStyle_2[index]) {\n                        return regionStyle_2[index];\n                    }\n                    return s;\n                });\n            }\n            else if (isFunction(regionStyle_2)) {\n                each(regionData, function (d, index) {\n                    style[index] = regionStyle_2(d);\n                });\n            }\n        }\n        return style;\n    };\n    Quadrant.prototype.getLabelConfig = function (region, labelOptions) {\n        var index = region.index;\n        var x = 0;\n        var y = 0;\n        var style = {};\n        var text = labelOptions.text;\n        if (isFunction(text)) {\n            text = text(region);\n        }\n        else if (isArray(text)) {\n            text = text[index];\n        }\n        var position = labelOptions.position;\n        var pos = position.split('-');\n        var dim = region.name.split('-');\n        // x方向\n        if (dim[1] === 'left') {\n            if (pos[0] === 'inner') {\n                x = region.bbox.maxX - labelOptions.offset;\n                style.textAlign = 'right';\n            }\n            if (pos[0] === 'outter') {\n                x = region.bbox.minX + labelOptions.offset;\n                style.textAlign = 'left';\n            }\n        }\n        else if (dim[1] === 'right') {\n            if (pos[0] === 'inner') {\n                x = region.bbox.minX + labelOptions.offset;\n                style.textAlign = 'left';\n            }\n            if (pos[0] === 'outter') {\n                x = region.bbox.maxX - labelOptions.offset;\n                style.textAlign = 'right';\n            }\n        }\n        // y方向\n        if (dim[0] === 'top') {\n            if (pos[1] === 'inner') {\n                y = region.bbox.maxY - labelOptions.offset;\n                style.textBaseline = 'bottom';\n            }\n            if (pos[1] === 'outter') {\n                y = region.bbox.minY + labelOptions.offset;\n                style.textBaseline = 'top';\n            }\n        }\n        else if (dim[0] === 'bottom') {\n            if (pos[1] === 'inner') {\n                y = region.bbox.minY + labelOptions.offset;\n                style.textBaseline = 'top';\n            }\n            if (pos[1] === 'outter') {\n                y = region.bbox.maxY - labelOptions.offset;\n                style.textBaseline = 'bottom';\n            }\n        }\n        style = deepMix({}, labelOptions.style, style);\n        style.lineHeight = style.fontSize;\n        return __assign({ x: x,\n            y: y,\n            text: text }, style);\n    };\n    return Quadrant;\n}());\nexport default Quadrant;\n//# sourceMappingURL=quadrant.js.map"]}]}