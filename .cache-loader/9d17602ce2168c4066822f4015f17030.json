{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/d3-geo-projection/src/wiechel.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/d3-geo-projection/src/wiechel.js","mtime":1467599198000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { geoProjection as projection } from \"d3-geo\";\nimport { asin, atan2, cos, sin, sqrt } from \"./math\";\nexport function wiechelRaw(lambda, phi) {\n    var cosPhi = cos(phi), sinPhi = cos(lambda) * cosPhi, sin1_Phi = 1 - sinPhi, cosLambda = cos(lambda = atan2(sin(lambda) * cosPhi, -sin(phi))), sinLambda = sin(lambda);\n    cosPhi = sqrt(1 - sinPhi * sinPhi);\n    return [\n        sinLambda * cosPhi - cosLambda * sin1_Phi,\n        -cosLambda * cosPhi - sinLambda * sin1_Phi\n    ];\n}\nwiechelRaw.invert = function (x, y) {\n    var w = (x * x + y * y) / -2, k = sqrt(-w * (2 + w)), b = y * w + x * k, a = x * w - y * k, D = sqrt(a * a + b * b);\n    return [\n        atan2(k * b, D * (1 + w)),\n        D ? -asin(k * a / D) : 0\n    ];\n};\nexport default function () {\n    return projection(wiechelRaw)\n        .rotate([0, -90, 45])\n        .scale(124.75)\n        .clipAngle(180 - 1e-3);\n}\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/d3-geo-projection/src/wiechel.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/d3-geo-projection/src/wiechel.js"],"names":[],"mappings":"AAAA,OAAO,EAAC,aAAa,IAAI,UAAU,EAAC,MAAM,QAAQ,CAAC;AACnD,OAAO,EAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAC,MAAM,QAAQ,CAAC;AAEnD,MAAM,UAAU,UAAU,CAAC,MAAM,EAAE,GAAG;IACpC,IAAI,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,EACjB,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,MAAM,EAC7B,QAAQ,GAAG,CAAC,GAAG,MAAM,EACrB,SAAS,GAAG,GAAG,CAAC,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAChE,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;IAC5B,MAAM,GAAG,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,MAAM,CAAC,CAAC;IACnC,OAAO;QACL,SAAS,GAAG,MAAM,GAAG,SAAS,GAAG,QAAQ;QACzC,CAAC,SAAS,GAAG,MAAM,GAAG,SAAS,GAAG,QAAQ;KAC3C,CAAC;AACJ,CAAC;AAED,UAAU,CAAC,MAAM,GAAG,UAAS,CAAC,EAAE,CAAC;IAC/B,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EACxB,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EACtB,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EACjB,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EACjB,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5B,OAAO;QACL,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KACzB,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,OAAO;IACZ,OAAO,UAAU,CAAC,UAAU,CAAC;SACxB,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;SACpB,KAAK,CAAC,MAAM,CAAC;SACb,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC;AAC7B,CAAC","sourcesContent":["import {geoProjection as projection} from \"d3-geo\";\nimport {asin, atan2, cos, sin, sqrt} from \"./math\";\n\nexport function wiechelRaw(lambda, phi) {\n  var cosPhi = cos(phi),\n      sinPhi = cos(lambda) * cosPhi,\n      sin1_Phi = 1 - sinPhi,\n      cosLambda = cos(lambda = atan2(sin(lambda) * cosPhi, -sin(phi))),\n      sinLambda = sin(lambda);\n  cosPhi = sqrt(1 - sinPhi * sinPhi);\n  return [\n    sinLambda * cosPhi - cosLambda * sin1_Phi,\n    -cosLambda * cosPhi - sinLambda * sin1_Phi\n  ];\n}\n\nwiechelRaw.invert = function(x, y) {\n  var w = (x * x + y * y) / -2,\n      k = sqrt(-w * (2 + w)),\n      b = y * w + x * k,\n      a = x * w - y * k,\n      D = sqrt(a * a + b * b);\n  return [\n    atan2(k * b, D * (1 + w)),\n    D ? -asin(k * a / D) : 0\n  ];\n};\n\nexport default function() {\n  return projection(wiechelRaw)\n      .rotate([0, -90, 45])\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n"]}]}