{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\component\\esm\\axis\\overlap\\auto-rotate.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\component\\esm\\axis\\overlap\\auto-rotate.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { each } from '@antv/util';\r\nimport { getMaxLabelWidth } from '../../util/label';\r\nimport { getMatrixByAngle } from '../../util/matrix';\r\nimport Theme from '../../util/theme';\r\nfunction setLabelsAngle(labels, angle) {\r\n    each(labels, function (label) {\r\n        var x = label.attr('x');\r\n        var y = label.attr('y');\r\n        var matrix = getMatrixByAngle({ x: x, y: y }, angle);\r\n        label.attr('matrix', matrix);\r\n    });\r\n}\r\nfunction labelRotate(isVertical, labelsGroup, limitLength, getAngle) {\r\n    var labels = labelsGroup.getChildren();\r\n    if (!labels.length) {\r\n        return false;\r\n    }\r\n    if (!isVertical && labels.length < 2) {\r\n        return false;\r\n    }\r\n    var maxWidth = getMaxLabelWidth(labels);\r\n    var isOverlap = false;\r\n    if (isVertical) {\r\n        isOverlap = !!limitLength && maxWidth > limitLength;\r\n    }\r\n    else {\r\n        var tickWidth = Math.abs(labels[1].attr('x') - labels[0].attr('x'));\r\n        isOverlap = maxWidth > tickWidth;\r\n    }\r\n    if (isOverlap) {\r\n        var angle = getAngle(limitLength, maxWidth);\r\n        setLabelsAngle(labels, angle);\r\n    }\r\n    return isOverlap;\r\n}\r\nexport function getDefault() {\r\n    return fixedAngle;\r\n}\r\nexport function fixedAngle(isVertical, labelsGroup, limitLength) {\r\n    return labelRotate(isVertical, labelsGroup, limitLength, function () {\r\n        return isVertical ? Theme.verticalAxisRotate : Theme.horizontalAxisRotate;\r\n    });\r\n}\r\nexport function unfixedAngle(isVertical, labelsGroup, limitLength) {\r\n    return labelRotate(isVertical, labelsGroup, limitLength, function (length, maxWidth) {\r\n        if (!length) {\r\n            return isVertical ? Theme.verticalAxisRotate : Theme.horizontalAxisRotate;\r\n        }\r\n        if (isVertical) {\r\n            return -Math.acos(length / maxWidth);\r\n        }\r\n        else {\r\n            var angle = 0;\r\n            if (length > maxWidth) {\r\n                angle = Math.PI / 4;\r\n            }\r\n            else {\r\n                angle = Math.asin(length / maxWidth);\r\n                if (angle > Math.PI / 4) {\r\n                    angle = Math.PI / 4;\r\n                }\r\n            }\r\n            return angle;\r\n        }\r\n    });\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\component\\esm\\axis\\overlap\\auto-rotate.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\component\\esm\\axis\\overlap\\auto-rotate.js"],"names":[],"mappings":"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","sourcesContent":["import { each } from '@antv/util';\nimport { getMaxLabelWidth } from '../../util/label';\nimport { getMatrixByAngle } from '../../util/matrix';\nimport Theme from '../../util/theme';\n// 统一设置文本的角度\nfunction setLabelsAngle(labels, angle) {\n    each(labels, function (label) {\n        var x = label.attr('x');\n        var y = label.attr('y');\n        var matrix = getMatrixByAngle({ x: x, y: y }, angle);\n        label.attr('matrix', matrix);\n    });\n}\n// 旋转文本\nfunction labelRotate(isVertical, labelsGroup, limitLength, getAngle) {\n    var labels = labelsGroup.getChildren();\n    if (!labels.length) {\n        return false;\n    }\n    if (!isVertical && labels.length < 2) {\n        // 水平时至少有两个时才旋转\n        return false;\n    }\n    var maxWidth = getMaxLabelWidth(labels);\n    var isOverlap = false;\n    if (isVertical) {\n        // limitLength 为 0 或者 null 时不生效\n        isOverlap = !!limitLength && maxWidth > limitLength;\n    }\n    else {\n        // 同 limitLength 无关\n        var tickWidth = Math.abs(labels[1].attr('x') - labels[0].attr('x'));\n        isOverlap = maxWidth > tickWidth;\n    }\n    if (isOverlap) {\n        var angle = getAngle(limitLength, maxWidth);\n        setLabelsAngle(labels, angle);\n    }\n    return isOverlap;\n}\nexport function getDefault() {\n    return fixedAngle;\n}\n/**\n * 固定角度旋转文本\n * @param  {boolean} isVertical  是否垂直方向\n * @param  {IGroup}  labelsGroup 文本的 group\n * @param  {number}  limitLength 限定长度\n * @return {boolean}             是否发生了旋转\n */\nexport function fixedAngle(isVertical, labelsGroup, limitLength) {\n    return labelRotate(isVertical, labelsGroup, limitLength, function () {\n        return isVertical ? Theme.verticalAxisRotate : Theme.horizontalAxisRotate;\n    });\n}\n/**\n * 非固定角度旋转文本\n * @param  {boolean} isVertical  是否垂直方向\n * @param  {IGroup}  labelsGroup 文本的 group\n * @param  {number}  limitLength 限定长度\n * @return {boolean}             是否发生了旋转\n */\nexport function unfixedAngle(isVertical, labelsGroup, limitLength) {\n    return labelRotate(isVertical, labelsGroup, limitLength, function (length, maxWidth) {\n        if (!length) {\n            // 如果没有设置 limitLength，则使用固定的角度旋转\n            return isVertical ? Theme.verticalAxisRotate : Theme.horizontalAxisRotate;\n        }\n        if (isVertical) {\n            // 垂直时不需要判定 limitLength > maxWidth ，因为此时不会 overlap\n            return -Math.acos(length / maxWidth);\n        }\n        else {\n            var angle = 0;\n            if (length > maxWidth) {\n                // 需要判定，asin 的参数 -1， 1\n                angle = Math.PI / 4;\n            }\n            else {\n                angle = Math.asin(length / maxWidth);\n                if (angle > Math.PI / 4) {\n                    // 大于 Math.PI / 4 时没意义\n                    angle = Math.PI / 4;\n                }\n            }\n            return angle;\n        }\n    });\n}\n//# sourceMappingURL=auto-rotate.js.map"]}]}