{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\remark-parse\\lib\\tokenize\\definition.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\remark-parse\\lib\\tokenize\\definition.js","mtime":1516201759000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["'use strict';\r\nvar whitespace = require('is-whitespace-character');\r\nvar normalize = require('../util/normalize');\r\nmodule.exports = definition;\r\ndefinition.notInList = true;\r\ndefinition.notInBlock = true;\r\nvar C_DOUBLE_QUOTE = '\"';\r\nvar C_SINGLE_QUOTE = '\\'';\r\nvar C_BACKSLASH = '\\\\';\r\nvar C_NEWLINE = '\\n';\r\nvar C_TAB = '\\t';\r\nvar C_SPACE = ' ';\r\nvar C_BRACKET_OPEN = '[';\r\nvar C_BRACKET_CLOSE = ']';\r\nvar C_PAREN_OPEN = '(';\r\nvar C_PAREN_CLOSE = ')';\r\nvar C_COLON = ':';\r\nvar C_LT = '<';\r\nvar C_GT = '>';\r\nfunction definition(eat, value, silent) {\r\n    var self = this;\r\n    var commonmark = self.options.commonmark;\r\n    var index = 0;\r\n    var length = value.length;\r\n    var subvalue = '';\r\n    var beforeURL;\r\n    var beforeTitle;\r\n    var queue;\r\n    var character;\r\n    var test;\r\n    var identifier;\r\n    var url;\r\n    var title;\r\n    while (index < length) {\r\n        character = value.charAt(index);\r\n        if (character !== C_SPACE && character !== C_TAB) {\r\n            break;\r\n        }\r\n        subvalue += character;\r\n        index++;\r\n    }\r\n    character = value.charAt(index);\r\n    if (character !== C_BRACKET_OPEN) {\r\n        return;\r\n    }\r\n    index++;\r\n    subvalue += character;\r\n    queue = '';\r\n    while (index < length) {\r\n        character = value.charAt(index);\r\n        if (character === C_BRACKET_CLOSE) {\r\n            break;\r\n        }\r\n        else if (character === C_BACKSLASH) {\r\n            queue += character;\r\n            index++;\r\n            character = value.charAt(index);\r\n        }\r\n        queue += character;\r\n        index++;\r\n    }\r\n    if (!queue ||\r\n        value.charAt(index) !== C_BRACKET_CLOSE ||\r\n        value.charAt(index + 1) !== C_COLON) {\r\n        return;\r\n    }\r\n    identifier = queue;\r\n    subvalue += queue + C_BRACKET_CLOSE + C_COLON;\r\n    index = subvalue.length;\r\n    queue = '';\r\n    while (index < length) {\r\n        character = value.charAt(index);\r\n        if (character !== C_TAB &&\r\n            character !== C_SPACE &&\r\n            character !== C_NEWLINE) {\r\n            break;\r\n        }\r\n        subvalue += character;\r\n        index++;\r\n    }\r\n    character = value.charAt(index);\r\n    queue = '';\r\n    beforeURL = subvalue;\r\n    if (character === C_LT) {\r\n        index++;\r\n        while (index < length) {\r\n            character = value.charAt(index);\r\n            if (!isEnclosedURLCharacter(character)) {\r\n                break;\r\n            }\r\n            queue += character;\r\n            index++;\r\n        }\r\n        character = value.charAt(index);\r\n        if (character === isEnclosedURLCharacter.delimiter) {\r\n            subvalue += C_LT + queue + character;\r\n            index++;\r\n        }\r\n        else {\r\n            if (commonmark) {\r\n                return;\r\n            }\r\n            index -= queue.length + 1;\r\n            queue = '';\r\n        }\r\n    }\r\n    if (!queue) {\r\n        while (index < length) {\r\n            character = value.charAt(index);\r\n            if (!isUnclosedURLCharacter(character)) {\r\n                break;\r\n            }\r\n            queue += character;\r\n            index++;\r\n        }\r\n        subvalue += queue;\r\n    }\r\n    if (!queue) {\r\n        return;\r\n    }\r\n    url = queue;\r\n    queue = '';\r\n    while (index < length) {\r\n        character = value.charAt(index);\r\n        if (character !== C_TAB &&\r\n            character !== C_SPACE &&\r\n            character !== C_NEWLINE) {\r\n            break;\r\n        }\r\n        queue += character;\r\n        index++;\r\n    }\r\n    character = value.charAt(index);\r\n    test = null;\r\n    if (character === C_DOUBLE_QUOTE) {\r\n        test = C_DOUBLE_QUOTE;\r\n    }\r\n    else if (character === C_SINGLE_QUOTE) {\r\n        test = C_SINGLE_QUOTE;\r\n    }\r\n    else if (character === C_PAREN_OPEN) {\r\n        test = C_PAREN_CLOSE;\r\n    }\r\n    if (!test) {\r\n        queue = '';\r\n        index = subvalue.length;\r\n    }\r\n    else if (queue) {\r\n        subvalue += queue + character;\r\n        index = subvalue.length;\r\n        queue = '';\r\n        while (index < length) {\r\n            character = value.charAt(index);\r\n            if (character === test) {\r\n                break;\r\n            }\r\n            if (character === C_NEWLINE) {\r\n                index++;\r\n                character = value.charAt(index);\r\n                if (character === C_NEWLINE || character === test) {\r\n                    return;\r\n                }\r\n                queue += C_NEWLINE;\r\n            }\r\n            queue += character;\r\n            index++;\r\n        }\r\n        character = value.charAt(index);\r\n        if (character !== test) {\r\n            return;\r\n        }\r\n        beforeTitle = subvalue;\r\n        subvalue += queue + character;\r\n        index++;\r\n        title = queue;\r\n        queue = '';\r\n    }\r\n    else {\r\n        return;\r\n    }\r\n    while (index < length) {\r\n        character = value.charAt(index);\r\n        if (character !== C_TAB && character !== C_SPACE) {\r\n            break;\r\n        }\r\n        subvalue += character;\r\n        index++;\r\n    }\r\n    character = value.charAt(index);\r\n    if (!character || character === C_NEWLINE) {\r\n        if (silent) {\r\n            return true;\r\n        }\r\n        beforeURL = eat(beforeURL).test().end;\r\n        url = self.decode.raw(self.unescape(url), beforeURL, { nonTerminated: false });\r\n        if (title) {\r\n            beforeTitle = eat(beforeTitle).test().end;\r\n            title = self.decode.raw(self.unescape(title), beforeTitle);\r\n        }\r\n        return eat(subvalue)({\r\n            type: 'definition',\r\n            identifier: normalize(identifier),\r\n            title: title || null,\r\n            url: url\r\n        });\r\n    }\r\n}\r\nfunction isEnclosedURLCharacter(character) {\r\n    return character !== C_GT &&\r\n        character !== C_BRACKET_OPEN &&\r\n        character !== C_BRACKET_CLOSE;\r\n}\r\nisEnclosedURLCharacter.delimiter = C_GT;\r\nfunction isUnclosedURLCharacter(character) {\r\n    return character !== C_BRACKET_OPEN &&\r\n        character !== C_BRACKET_CLOSE &&\r\n        !whitespace(character);\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\remark-parse\\lib\\tokenize\\definition.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\remark-parse\\lib\\tokenize\\definition.js"],"names":[],"mappings":"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","sourcesContent":["'use strict';\n\nvar whitespace = require('is-whitespace-character');\nvar normalize = require('../util/normalize');\n\nmodule.exports = definition;\ndefinition.notInList = true;\ndefinition.notInBlock = true;\n\nvar C_DOUBLE_QUOTE = '\"';\nvar C_SINGLE_QUOTE = '\\'';\nvar C_BACKSLASH = '\\\\';\nvar C_NEWLINE = '\\n';\nvar C_TAB = '\\t';\nvar C_SPACE = ' ';\nvar C_BRACKET_OPEN = '[';\nvar C_BRACKET_CLOSE = ']';\nvar C_PAREN_OPEN = '(';\nvar C_PAREN_CLOSE = ')';\nvar C_COLON = ':';\nvar C_LT = '<';\nvar C_GT = '>';\n\nfunction definition(eat, value, silent) {\n  var self = this;\n  var commonmark = self.options.commonmark;\n  var index = 0;\n  var length = value.length;\n  var subvalue = '';\n  var beforeURL;\n  var beforeTitle;\n  var queue;\n  var character;\n  var test;\n  var identifier;\n  var url;\n  var title;\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character !== C_SPACE && character !== C_TAB) {\n      break;\n    }\n\n    subvalue += character;\n    index++;\n  }\n\n  character = value.charAt(index);\n\n  if (character !== C_BRACKET_OPEN) {\n    return;\n  }\n\n  index++;\n  subvalue += character;\n  queue = '';\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character === C_BRACKET_CLOSE) {\n      break;\n    } else if (character === C_BACKSLASH) {\n      queue += character;\n      index++;\n      character = value.charAt(index);\n    }\n\n    queue += character;\n    index++;\n  }\n\n  if (\n    !queue ||\n    value.charAt(index) !== C_BRACKET_CLOSE ||\n    value.charAt(index + 1) !== C_COLON\n  ) {\n    return;\n  }\n\n  identifier = queue;\n  subvalue += queue + C_BRACKET_CLOSE + C_COLON;\n  index = subvalue.length;\n  queue = '';\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (\n      character !== C_TAB &&\n      character !== C_SPACE &&\n      character !== C_NEWLINE\n    ) {\n      break;\n    }\n\n    subvalue += character;\n    index++;\n  }\n\n  character = value.charAt(index);\n  queue = '';\n  beforeURL = subvalue;\n\n  if (character === C_LT) {\n    index++;\n\n    while (index < length) {\n      character = value.charAt(index);\n\n      if (!isEnclosedURLCharacter(character)) {\n        break;\n      }\n\n      queue += character;\n      index++;\n    }\n\n    character = value.charAt(index);\n\n    if (character === isEnclosedURLCharacter.delimiter) {\n      subvalue += C_LT + queue + character;\n      index++;\n    } else {\n      if (commonmark) {\n        return;\n      }\n\n      index -= queue.length + 1;\n      queue = '';\n    }\n  }\n\n  if (!queue) {\n    while (index < length) {\n      character = value.charAt(index);\n\n      if (!isUnclosedURLCharacter(character)) {\n        break;\n      }\n\n      queue += character;\n      index++;\n    }\n\n    subvalue += queue;\n  }\n\n  if (!queue) {\n    return;\n  }\n\n  url = queue;\n  queue = '';\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (\n      character !== C_TAB &&\n      character !== C_SPACE &&\n      character !== C_NEWLINE\n    ) {\n      break;\n    }\n\n    queue += character;\n    index++;\n  }\n\n  character = value.charAt(index);\n  test = null;\n\n  if (character === C_DOUBLE_QUOTE) {\n    test = C_DOUBLE_QUOTE;\n  } else if (character === C_SINGLE_QUOTE) {\n    test = C_SINGLE_QUOTE;\n  } else if (character === C_PAREN_OPEN) {\n    test = C_PAREN_CLOSE;\n  }\n\n  if (!test) {\n    queue = '';\n    index = subvalue.length;\n  } else if (queue) {\n    subvalue += queue + character;\n    index = subvalue.length;\n    queue = '';\n\n    while (index < length) {\n      character = value.charAt(index);\n\n      if (character === test) {\n        break;\n      }\n\n      if (character === C_NEWLINE) {\n        index++;\n        character = value.charAt(index);\n\n        if (character === C_NEWLINE || character === test) {\n          return;\n        }\n\n        queue += C_NEWLINE;\n      }\n\n      queue += character;\n      index++;\n    }\n\n    character = value.charAt(index);\n\n    if (character !== test) {\n      return;\n    }\n\n    beforeTitle = subvalue;\n    subvalue += queue + character;\n    index++;\n    title = queue;\n    queue = '';\n  } else {\n    return;\n  }\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character !== C_TAB && character !== C_SPACE) {\n      break;\n    }\n\n    subvalue += character;\n    index++;\n  }\n\n  character = value.charAt(index);\n\n  if (!character || character === C_NEWLINE) {\n    if (silent) {\n      return true;\n    }\n\n    beforeURL = eat(beforeURL).test().end;\n    url = self.decode.raw(self.unescape(url), beforeURL, {nonTerminated: false});\n\n    if (title) {\n      beforeTitle = eat(beforeTitle).test().end;\n      title = self.decode.raw(self.unescape(title), beforeTitle);\n    }\n\n    return eat(subvalue)({\n      type: 'definition',\n      identifier: normalize(identifier),\n      title: title || null,\n      url: url\n    });\n  }\n}\n\n/* Check if `character` can be inside an enclosed URI. */\nfunction isEnclosedURLCharacter(character) {\n  return character !== C_GT &&\n    character !== C_BRACKET_OPEN &&\n    character !== C_BRACKET_CLOSE;\n}\n\nisEnclosedURLCharacter.delimiter = C_GT;\n\n/* Check if `character` can be inside an unclosed URI. */\nfunction isUnclosedURLCharacter(character) {\n  return character !== C_BRACKET_OPEN &&\n    character !== C_BRACKET_CLOSE &&\n    !whitespace(character);\n}\n"]}]}