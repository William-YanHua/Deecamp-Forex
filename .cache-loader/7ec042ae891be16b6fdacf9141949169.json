{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\calendar\\shape.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\calendar\\shape.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __assign } from \"tslib\";\r\nimport { isEmpty } from '@antv/util';\r\nimport { registerShape } from '@antv/g2';\r\nimport { DATE_FIELD } from './constant';\r\nimport { isLastDayOfMonth, isLastWeekOfMonth } from '../../util/date';\r\nregisterShape('polygon', 'calendar-polygon', {\r\n    draw: function (cfg, container) {\r\n        if (!isEmpty(cfg.points)) {\r\n            var points = cfg.points;\r\n            var path = [\r\n                ['M', points[0].x, points[0].y],\r\n                ['L', points[1].x, points[1].y],\r\n                ['L', points[2].x, points[2].y],\r\n                ['L', points[3].x, points[3].y],\r\n                ['Z'],\r\n            ];\r\n            path = this.parsePath(path);\r\n            var attrs = __assign(__assign({ stroke: '#fff', lineWidth: 1, fill: cfg.color }, cfg.style), { path: path });\r\n            var polygon = container.addShape('path', {\r\n                attrs: attrs,\r\n            });\r\n            var date = cfg.data[DATE_FIELD];\r\n            if (isLastWeekOfMonth(date)) {\r\n                var linePath = [\r\n                    ['M', points[2].x, points[2].y],\r\n                    ['L', points[3].x, points[3].y],\r\n                ];\r\n                container.addShape('path', {\r\n                    zIndex: 1,\r\n                    attrs: {\r\n                        path: this.parsePath(linePath),\r\n                        lineWidth: 1,\r\n                        stroke: '#404040',\r\n                    },\r\n                });\r\n                if (isLastDayOfMonth(date)) {\r\n                    container.addShape('path', {\r\n                        zIndex: 1,\r\n                        attrs: {\r\n                            path: this.parsePath([\r\n                                ['M', points[1].x, points[1].y],\r\n                                ['L', points[2].x, points[2].y],\r\n                            ]),\r\n                            lineWidth: 1,\r\n                            stroke: '#404040',\r\n                        },\r\n                    });\r\n                }\r\n            }\r\n            container.sort();\r\n            return polygon;\r\n        }\r\n    },\r\n});\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\calendar\\shape.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\calendar\\shape.js"],"names":[],"mappings":"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","sourcesContent":["import { __assign } from \"tslib\";\nimport { isEmpty } from '@antv/util';\nimport { registerShape } from '@antv/g2';\nimport { DATE_FIELD } from './constant';\nimport { isLastDayOfMonth, isLastWeekOfMonth } from '../../util/date';\n/**\n * 注册自定义日历图的 shape\n * code from https://g2.antv.vision/zh/examples/heatmap/heatmap#calendar-horizontal\n */\nregisterShape('polygon', 'calendar-polygon', {\n    draw: function (cfg, container) {\n        if (!isEmpty(cfg.points)) {\n            var points = cfg.points;\n            // rect path\n            var path = [\n                ['M', points[0].x, points[0].y],\n                ['L', points[1].x, points[1].y],\n                ['L', points[2].x, points[2].y],\n                ['L', points[3].x, points[3].y],\n                ['Z'],\n            ];\n            path = this.parsePath(path);\n            var attrs = __assign(__assign({ stroke: '#fff', lineWidth: 1, fill: cfg.color }, cfg.style), { path: path });\n            var polygon = container.addShape('path', {\n                attrs: attrs,\n            });\n            var date = cfg.data[DATE_FIELD];\n            if (isLastWeekOfMonth(date)) {\n                var linePath = [\n                    ['M', points[2].x, points[2].y],\n                    ['L', points[3].x, points[3].y],\n                ];\n                // 最后一周的多边形添加右侧边框\n                container.addShape('path', {\n                    zIndex: 1,\n                    attrs: {\n                        path: this.parsePath(linePath),\n                        lineWidth: 1,\n                        stroke: '#404040',\n                    },\n                });\n                if (isLastDayOfMonth(date)) {\n                    container.addShape('path', {\n                        zIndex: 1,\n                        attrs: {\n                            path: this.parsePath([\n                                ['M', points[1].x, points[1].y],\n                                ['L', points[2].x, points[2].y],\n                            ]),\n                            lineWidth: 1,\n                            stroke: '#404040',\n                        },\n                    });\n                }\n            }\n            container.sort();\n            return polygon;\n        }\n    },\n});\n//# sourceMappingURL=shape.js.map"]}]}