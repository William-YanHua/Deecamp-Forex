{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\lodash\\_baseMerge.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\lodash\\_baseMerge.js","mtime":1517704208000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["var Stack = require('./_Stack'), assignMergeValue = require('./_assignMergeValue'), baseFor = require('./_baseFor'), baseMergeDeep = require('./_baseMergeDeep'), isObject = require('./isObject'), keysIn = require('./keysIn'), safeGet = require('./_safeGet');\r\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\r\n    if (object === source) {\r\n        return;\r\n    }\r\n    baseFor(source, function (srcValue, key) {\r\n        if (isObject(srcValue)) {\r\n            stack || (stack = new Stack);\r\n            baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\r\n        }\r\n        else {\r\n            var newValue = customizer\r\n                ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\r\n                : undefined;\r\n            if (newValue === undefined) {\r\n                newValue = srcValue;\r\n            }\r\n            assignMergeValue(object, key, newValue);\r\n        }\r\n    }, keysIn);\r\n}\r\nmodule.exports = baseMerge;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\lodash\\_baseMerge.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\lodash\\_baseMerge.js"],"names":[],"mappings":"AAAA,IAAI,KAAK,GAAG,OAAO,CAAC,UAAU,CAAC,EAC3B,gBAAgB,GAAG,OAAO,CAAC,qBAAqB,CAAC,EACjD,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC,EAC/B,aAAa,GAAG,OAAO,CAAC,kBAAkB,CAAC,EAC3C,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC,EAChC,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,EAC5B,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AAapC,SAAS,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,KAAK;IAC5D,IAAI,MAAM,KAAK,MAAM,EAAE;QACrB,OAAO;KACR;IACD,OAAO,CAAC,MAAM,EAAE,UAAS,QAAQ,EAAE,GAAG;QACpC,IAAI,QAAQ,CAAC,QAAQ,CAAC,EAAE;YACtB,KAAK,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,CAAC;YAC7B,aAAa,CAAC,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;SAC5E;aACI;YACH,IAAI,QAAQ,GAAG,UAAU;gBACvB,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,QAAQ,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC;gBAC/E,CAAC,CAAC,SAAS,CAAC;YAEd,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC1B,QAAQ,GAAG,QAAQ,CAAC;aACrB;YACD,gBAAgB,CAAC,MAAM,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC;SACzC;IACH,CAAC,EAAE,MAAM,CAAC,CAAC;AACb,CAAC;AAED,MAAM,CAAC,OAAO,GAAG,SAAS,CAAC","sourcesContent":["var Stack = require('./_Stack'),\n    assignMergeValue = require('./_assignMergeValue'),\n    baseFor = require('./_baseFor'),\n    baseMergeDeep = require('./_baseMergeDeep'),\n    isObject = require('./isObject'),\n    keysIn = require('./keysIn'),\n    safeGet = require('./_safeGet');\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    if (isObject(srcValue)) {\n      stack || (stack = new Stack);\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nmodule.exports = baseMerge;\n"]}]}