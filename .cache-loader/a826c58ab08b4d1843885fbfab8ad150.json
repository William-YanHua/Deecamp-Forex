{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/node_modules/@antv/hierarchy/lib/layout/do-layout.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/node_modules/@antv/hierarchy/lib/layout/do-layout.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var separateTree = require('./separate-root');\nvar VALID_DIRECTIONS = ['LR',\n    'RL',\n    'TB',\n    'BT',\n    'H',\n    'V'\n];\nvar HORIZONTAL_DIRECTIONS = ['LR', 'RL', 'H'];\nvar isHorizontal = function isHorizontal(direction) {\n    return HORIZONTAL_DIRECTIONS.indexOf(direction) > -1;\n};\nvar DEFAULT_DIRECTION = VALID_DIRECTIONS[0];\nmodule.exports = function (root, options, layoutAlgrithm) {\n    var direction = options.direction || DEFAULT_DIRECTION;\n    options.isHorizontal = isHorizontal(direction);\n    if (direction && VALID_DIRECTIONS.indexOf(direction) === -1) {\n        throw new TypeError(\"Invalid direction: \" + direction);\n    }\n    if (direction === VALID_DIRECTIONS[0]) {\n        layoutAlgrithm(root, options);\n    }\n    else if (direction === VALID_DIRECTIONS[1]) {\n        layoutAlgrithm(root, options);\n        root.right2left();\n    }\n    else if (direction === VALID_DIRECTIONS[2]) {\n        layoutAlgrithm(root, options);\n    }\n    else if (direction === VALID_DIRECTIONS[3]) {\n        layoutAlgrithm(root, options);\n        root.bottom2top();\n    }\n    else if (direction === VALID_DIRECTIONS[4] || direction === VALID_DIRECTIONS[5]) {\n        var _separateTree = separateTree(root, options), left = _separateTree.left, right = _separateTree.right;\n        layoutAlgrithm(left, options);\n        layoutAlgrithm(right, options);\n        options.isHorizontal ? left.right2left() : left.bottom2top();\n        right.translate(left.x - right.x, left.y - right.y);\n        root.x = left.x;\n        root.y = right.y;\n        var bb = root.getBoundingBox();\n        if (options.isHorizontal) {\n            if (bb.top < 0) {\n                root.translate(0, -bb.top);\n            }\n        }\n        else {\n            if (bb.left < 0) {\n                root.translate(-bb.left, 0);\n            }\n        }\n    }\n    root.translate(-(root.x + root.width / 2 + root.hgap), -(root.y + root.height / 2 + root.vgap));\n    return root;\n};\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/node_modules/@antv/hierarchy/lib/layout/do-layout.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/node_modules/@antv/hierarchy/lib/layout/do-layout.js"],"names":[],"mappings":"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","sourcesContent":["var separateTree = require('./separate-root');\n\nvar VALID_DIRECTIONS = ['LR', // left to right\n'RL', // right to left\n'TB', // top to bottom\n'BT', // bottom to top\n'H', // horizontal\n'V' // vertical\n];\nvar HORIZONTAL_DIRECTIONS = ['LR', 'RL', 'H'];\n\nvar isHorizontal = function isHorizontal(direction) {\n  return HORIZONTAL_DIRECTIONS.indexOf(direction) > -1;\n};\n\nvar DEFAULT_DIRECTION = VALID_DIRECTIONS[0];\n\nmodule.exports = function (root, options, layoutAlgrithm) {\n  var direction = options.direction || DEFAULT_DIRECTION;\n  options.isHorizontal = isHorizontal(direction);\n\n  if (direction && VALID_DIRECTIONS.indexOf(direction) === -1) {\n    throw new TypeError(\"Invalid direction: \" + direction);\n  }\n\n  if (direction === VALID_DIRECTIONS[0]) {\n    // LR\n    layoutAlgrithm(root, options);\n  } else if (direction === VALID_DIRECTIONS[1]) {\n    // RL\n    layoutAlgrithm(root, options);\n    root.right2left();\n  } else if (direction === VALID_DIRECTIONS[2]) {\n    // TB\n    layoutAlgrithm(root, options);\n  } else if (direction === VALID_DIRECTIONS[3]) {\n    // BT\n    layoutAlgrithm(root, options);\n    root.bottom2top();\n  } else if (direction === VALID_DIRECTIONS[4] || direction === VALID_DIRECTIONS[5]) {\n    // H or V\n    // separate into left and right trees\n    var _separateTree = separateTree(root, options),\n        left = _separateTree.left,\n        right = _separateTree.right; // do layout for left and right trees\n\n\n    layoutAlgrithm(left, options);\n    layoutAlgrithm(right, options);\n    options.isHorizontal ? left.right2left() : left.bottom2top(); // combine left and right trees\n\n    right.translate(left.x - right.x, left.y - right.y); // translate root\n\n    root.x = left.x;\n    root.y = right.y;\n    var bb = root.getBoundingBox();\n\n    if (options.isHorizontal) {\n      if (bb.top < 0) {\n        root.translate(0, -bb.top);\n      }\n    } else {\n      if (bb.left < 0) {\n        root.translate(-bb.left, 0);\n      }\n    }\n  }\n\n  root.translate(-(root.x + root.width / 2 + root.hgap), -(root.y + root.height / 2 + root.vgap));\n  return root;\n};"]}]}