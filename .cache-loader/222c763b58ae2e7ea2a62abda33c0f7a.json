{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\node_modules\\@antv\\scale\\lib\\auto\\cat.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\node_modules\\@antv\\scale\\lib\\auto\\cat.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["var each = require('@antv/util/lib/each');\r\nvar MAX_COUNT = 8;\r\nvar SUB_COUNT = 4;\r\nfunction getSimpleArray(data) {\r\n    var arr = [];\r\n    each(data, function (sub) {\r\n        arr = arr.concat(sub);\r\n    });\r\n    return arr;\r\n}\r\nfunction getGreatestFactor(count, number) {\r\n    var i;\r\n    for (i = number; i > 0; i--) {\r\n        if (count % i === 0) {\r\n            break;\r\n        }\r\n    }\r\n    if (i === 1) {\r\n        for (i = number; i > 0; i--) {\r\n            if ((count - 1) % i === 0) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return i;\r\n}\r\nmodule.exports = function (info) {\r\n    var rst = {};\r\n    var ticks = [];\r\n    var isRounding = info.isRounding;\r\n    var categories = getSimpleArray(info.data);\r\n    var length = categories.length;\r\n    var maxCount = info.maxCount || MAX_COUNT;\r\n    var tickCount;\r\n    if (isRounding) {\r\n        tickCount = getGreatestFactor(length - 1, maxCount - 1) + 1;\r\n        if (tickCount === 2) {\r\n            tickCount = maxCount;\r\n        }\r\n        else if (tickCount < maxCount - SUB_COUNT) {\r\n            tickCount = maxCount - SUB_COUNT;\r\n        }\r\n    }\r\n    else {\r\n        tickCount = maxCount;\r\n    }\r\n    if (!isRounding && length <= tickCount + tickCount / 2) {\r\n        ticks = [].concat(categories);\r\n    }\r\n    else {\r\n        var step = parseInt(length / (tickCount - 1), 10);\r\n        var groups = categories.map(function (e, i) {\r\n            return i % step === 0 ? categories.slice(i, i + step) : null;\r\n        }).filter(function (e) {\r\n            return e;\r\n        });\r\n        for (var i = 1, groupLen = groups.length; i < groupLen && (isRounding ? i * step < length - step : i < tickCount - 1); i++) {\r\n            ticks.push(groups[i][0]);\r\n        }\r\n        if (categories.length) {\r\n            ticks.unshift(categories[0]);\r\n            var last = categories[length - 1];\r\n            if (ticks.indexOf(last) === -1) {\r\n                ticks.push(last);\r\n            }\r\n        }\r\n    }\r\n    rst.categories = categories;\r\n    rst.ticks = ticks;\r\n    return rst;\r\n};\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\node_modules\\@antv\\scale\\lib\\auto\\cat.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\node_modules\\@antv\\scale\\lib\\auto\\cat.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * @fileOverview 计算分类的的坐标点\n * @author dxq613@gmail.com\n */\nvar each = require('@antv/util/lib/each');\n\nvar MAX_COUNT = 8;\nvar SUB_COUNT = 4; // 控制个数不能过小\n\nfunction getSimpleArray(data) {\n  var arr = [];\n  each(data, function (sub) {\n    arr = arr.concat(sub);\n  });\n  return arr;\n}\n\nfunction getGreatestFactor(count, number) {\n  var i;\n\n  for (i = number; i > 0; i--) {\n    if (count % i === 0) {\n      break;\n    }\n  } // 如果是素数，没有可以整除的数字\n\n\n  if (i === 1) {\n    for (i = number; i > 0; i--) {\n      if ((count - 1) % i === 0) {\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nmodule.exports = function (info) {\n  var rst = {};\n  var ticks = [];\n  var isRounding = info.isRounding;\n  var categories = getSimpleArray(info.data);\n  var length = categories.length;\n  var maxCount = info.maxCount || MAX_COUNT;\n  var tickCount;\n\n  if (isRounding) {\n    // 取整操作\n    tickCount = getGreatestFactor(length - 1, maxCount - 1) + 1; // 如果计算出来只有两个坐标点，则直接使用传入的 maxCount\n\n    if (tickCount === 2) {\n      tickCount = maxCount;\n    } else if (tickCount < maxCount - SUB_COUNT) {\n      tickCount = maxCount - SUB_COUNT;\n    }\n  } else {\n    tickCount = maxCount;\n  }\n\n  if (!isRounding && length <= tickCount + tickCount / 2) {\n    ticks = [].concat(categories);\n  } else {\n    var step = parseInt(length / (tickCount - 1), 10);\n    var groups = categories.map(function (e, i) {\n      return i % step === 0 ? categories.slice(i, i + step) : null;\n    }).filter(function (e) {\n      return e;\n    });\n\n    for (var i = 1, groupLen = groups.length; i < groupLen && (isRounding ? i * step < length - step : i < tickCount - 1); i++) {\n      ticks.push(groups[i][0]);\n    }\n\n    if (categories.length) {\n      ticks.unshift(categories[0]);\n      var last = categories[length - 1];\n\n      if (ticks.indexOf(last) === -1) {\n        ticks.push(last);\n      }\n    }\n  }\n\n  rst.categories = categories;\n  rst.ticks = ticks;\n  return rst;\n};"]}]}