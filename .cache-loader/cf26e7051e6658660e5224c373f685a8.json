{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\src\\app\\pages\\InvReqPage\\InvReqDetailPage\\Bought\\Chart\\DoubleLineChart.tsx","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\src\\app\\pages\\InvReqPage\\InvReqDetailPage\\Bought\\Chart\\DoubleLineChart.tsx","mtime":1596379644535},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport React from \"react\";\r\nimport { Chart, Geom, Axis, Tooltip, Legend, } from \"bizcharts\";\r\nimport DataSet from \"@antv/data-set\";\r\nvar DataView = DataSet.DataView;\r\nvar DoubleLineChart = (function (_super) {\r\n    __extends(DoubleLineChart, _super);\r\n    function DoubleLineChart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DoubleLineChart.prototype.render = function () {\r\n        var mobileScale = {\r\n            date: {\r\n                tickCount: 3,\r\n            },\r\n        };\r\n        var pcScale = {\r\n            date: {\r\n                tickCount: 8,\r\n            },\r\n        };\r\n        return (React.createElement(\"div\", null,\r\n            React.createElement(Chart, { height: 300, data: this.props.data, forceFit: true, padding: [30, 80, 80, 80], scale: document.body.scrollWidth > 600 ? pcScale : mobileScale },\r\n                React.createElement(Axis, { name: \"date\" }),\r\n                React.createElement(Axis, { name: \"val\", tickLine: null, grid: null, title: null, label: {\r\n                        formatter: function (val) { return val + \"%\"; },\r\n                    } }),\r\n                React.createElement(Tooltip, { crosshairs: {\r\n                        type: \"y\",\r\n                        style: {\r\n                            lineWidth: 1,\r\n                            stroke: \"#cfcfcf\",\r\n                        },\r\n                    } }),\r\n                React.createElement(Legend, null),\r\n                React.createElement(Geom, { type: \"line\", position: \"date*val\", size: 1, color: \"key\", shape: \"smooth\", style: {\r\n                        shadowColor: \"l (270) 0:rgba(21, 146, 255, 0)\",\r\n                        shadowBlur: 60,\r\n                        shadowOffsetY: 6,\r\n                    } }))));\r\n    };\r\n    return DoubleLineChart;\r\n}(React.Component));\r\nexport { DoubleLineChart };\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\src\\app\\pages\\InvReqPage\\InvReqDetailPage\\Bought\\Chart\\DoubleLineChart.tsx","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\src\\app\\pages\\InvReqPage\\InvReqDetailPage\\Bought\\Chart\\DoubleLineChart.tsx"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAEL,KAAK,EACL,IAAI,EACJ,IAAI,EACJ,OAAO,EAGP,MAAM,GAMP,MAAM,WAAW,CAAC;AACnB,OAAO,OAAO,MAAM,gBAAgB,CAAC;AAE9B,IAAA,2BAAQ,CAAY;AAM3B;IAAqC,mCAA0B;IAA/D;;IAwDA,CAAC;IAvDC,gCAAM,GAAN;QAEE,IAAM,WAAW,GAAG;YAClB,IAAI,EAAE;gBACJ,SAAS,EAAE,CAAC;aACb;SACF,CAAC;QACF,IAAM,OAAO,GAAG;YACd,IAAI,EAAE;gBACJ,SAAS,EAAE,CAAC;aACb;SACF,CAAC;QAEF,OAAO,CACL;YACE,oBAAC,KAAK,IAAC,MAAM,EAAE,GAAG,EACX,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EACrB,QAAQ,EAAE,IAAI,EACd,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACzB,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,WAAW;gBAEnE,oBAAC,IAAI,IAAC,IAAI,EAAE,MAAM,GAAG;gBACrB,oBAAC,IAAI,IACH,IAAI,EAAC,KAAK,EACV,QAAQ,EAAE,IAAI,EACd,IAAI,EAAE,IAAI,EACV,KAAK,EAAE,IAAI,EACX,KAAK,EAAE;wBACL,SAAS,EAAE,UAAC,GAAG,IAAK,OAAG,GAAG,MAAG,EAAT,CAAS;qBAC9B,GACD;gBACF,oBAAC,OAAO,IAAC,UAAU,EAAE;wBACjB,IAAI,EAAE,GAAG;wBACT,KAAK,EAAE;4BACL,SAAS,EAAE,CAAC;4BACZ,MAAM,EAAE,SAAS;yBAClB;qBACF,GAAG;gBACN,oBAAC,MAAM,OAAG;gBACV,oBAAC,IAAI,IACH,IAAI,EAAC,MAAM,EACX,QAAQ,EAAC,UAAU,EACnB,IAAI,EAAE,CAAC,EACP,KAAK,EAAE,KAAK,EACZ,KAAK,EAAC,QAAQ,EACd,KAAK,EAAE;wBACL,WAAW,EAAE,iCAAiC;wBAC9C,UAAU,EAAE,EAAE;wBACd,aAAa,EAAE,CAAC;qBACjB,GACD,CACI,CACJ,CACP,CAAC;IACJ,CAAC;IACH,sBAAC;AAAD,CAAC,AAxDD,CAAqC,KAAK,CAAC,SAAS,GAwDnD","sourcesContent":["import React from \"react\";\r\nimport {\r\n  G2,\r\n  Chart,\r\n  Geom,\r\n  Axis,\r\n  Tooltip,\r\n  Coord,\r\n  Label,\r\n  Legend,\r\n  View,\r\n  Guide,\r\n  Shape,\r\n  Facet,\r\n  Util,\r\n} from \"bizcharts\";\r\nimport DataSet from \"@antv/data-set\";\r\n\r\nconst {DataView} = DataSet;\r\n\r\ninterface Props {\r\n  data: DataView;\r\n}\r\n\r\nexport class DoubleLineChart extends React.Component<Props, {}> {\r\n  render() {\r\n\r\n    const mobileScale = {\r\n      date: {\r\n        tickCount: 3,\r\n      },\r\n    };\r\n    const pcScale = {\r\n      date: {\r\n        tickCount: 8,\r\n      },\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Chart height={300}\r\n               data={this.props.data}\r\n               forceFit={true}\r\n               padding={[30, 80, 80, 80]}\r\n               scale={document.body.scrollWidth > 600 ? pcScale : mobileScale}\r\n        >\r\n          <Axis name={\"date\"}/>\r\n          <Axis\r\n            name=\"val\"\r\n            tickLine={null}\r\n            grid={null}\r\n            title={null}\r\n            label={{\r\n              formatter: (val) => `${val}%`,\r\n            }}\r\n          />\r\n          <Tooltip crosshairs={{\r\n              type: \"y\",\r\n              style: {\r\n                lineWidth: 1,\r\n                stroke: \"#cfcfcf\",\r\n              },\r\n            }}/>\r\n          <Legend />\r\n          <Geom\r\n            type=\"line\"\r\n            position=\"date*val\"\r\n            size={1}\r\n            color={\"key\"}\r\n            shape=\"smooth\"\r\n            style={{\r\n              shadowColor: \"l (270) 0:rgba(21, 146, 255, 0)\",\r\n              shadowBlur: 60,\r\n              shadowOffsetY: 6,\r\n            }}\r\n          />\r\n        </Chart>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}]}