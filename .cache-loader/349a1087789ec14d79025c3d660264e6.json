{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\lib\\geometry\\element\\index.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\lib\\geometry\\element\\index.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar util_1 = require(\"@antv/util\");\r\nvar animate_1 = require(\"../../animate\");\r\nvar base_1 = tslib_1.__importDefault(require(\"../../base\"));\r\nvar graphics_1 = require(\"../../util/graphics\");\r\nvar event_1 = require(\"@antv/component/lib/util/event\");\r\nvar Element = (function (_super) {\r\n    tslib_1.__extends(Element, _super);\r\n    function Element(cfg) {\r\n        var _this = _super.call(this, cfg) || this;\r\n        _this.states = [];\r\n        var shapeFactory = cfg.shapeFactory, container = cfg.container, offscreenGroup = cfg.offscreenGroup, _a = cfg.visible, visible = _a === void 0 ? true : _a;\r\n        _this.shapeFactory = shapeFactory;\r\n        _this.container = container;\r\n        _this.offscreenGroup = offscreenGroup;\r\n        _this.visible = visible;\r\n        return _this;\r\n    }\r\n    Element.prototype.draw = function (model, isUpdate) {\r\n        if (isUpdate === void 0) {\r\n            isUpdate = false;\r\n        }\r\n        this.model = model;\r\n        this.data = model.data;\r\n        this.shapeType = this.getShapeType(model);\r\n        this.drawShape(model, isUpdate);\r\n        if (this.visible === false) {\r\n            this.changeVisible(false);\r\n        }\r\n    };\r\n    Element.prototype.update = function (model) {\r\n        var _a = this, shapeFactory = _a.shapeFactory, shape = _a.shape;\r\n        if (!shape) {\r\n            return;\r\n        }\r\n        this.model = model;\r\n        this.data = model.data;\r\n        this.shapeType = this.getShapeType(model);\r\n        this.setShapeInfo(shape, model);\r\n        var offscreenGroup = this.getOffscreenGroup();\r\n        var newShape = shapeFactory.drawShape(this.shapeType, model, offscreenGroup);\r\n        newShape.cfg.data = this.data;\r\n        newShape.cfg.origin = model;\r\n        this.syncShapeStyle(shape, newShape, '', this.getAnimateCfg('update'));\r\n    };\r\n    Element.prototype.destroy = function () {\r\n        var _a = this, shapeFactory = _a.shapeFactory, shape = _a.shape;\r\n        if (shape) {\r\n            var animateCfg = this.getAnimateCfg('leave');\r\n            if (animateCfg) {\r\n                animate_1.doAnimate(shape, animateCfg, {\r\n                    coordinate: shapeFactory.coordinate,\r\n                    toAttrs: tslib_1.__assign({}, shape.attr()),\r\n                });\r\n            }\r\n            else {\r\n                shape.remove(true);\r\n            }\r\n        }\r\n        this.states = [];\r\n        this.shapeFactory = undefined;\r\n        this.container = undefined;\r\n        this.shape = undefined;\r\n        this.animate = undefined;\r\n        this.geometry = undefined;\r\n        this.labelShape = undefined;\r\n        this.model = undefined;\r\n        this.data = undefined;\r\n        this.offscreenGroup = undefined;\r\n        this.statesStyle = undefined;\r\n        _super.prototype.destroy.call(this);\r\n    };\r\n    Element.prototype.changeVisible = function (visible) {\r\n        _super.prototype.changeVisible.call(this, visible);\r\n        if (visible) {\r\n            if (this.shape) {\r\n                this.shape.show();\r\n            }\r\n            if (this.labelShape) {\r\n                this.labelShape.forEach(function (label) {\r\n                    label.show();\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            if (this.shape) {\r\n                this.shape.hide();\r\n            }\r\n            if (this.labelShape) {\r\n                this.labelShape.forEach(function (label) {\r\n                    label.hide();\r\n                });\r\n            }\r\n        }\r\n    };\r\n    Element.prototype.setState = function (stateName, stateStatus) {\r\n        var _this = this;\r\n        var _a = this, states = _a.states, shapeFactory = _a.shapeFactory, model = _a.model, shape = _a.shape, shapeType = _a.shapeType;\r\n        var index = states.indexOf(stateName);\r\n        if (stateStatus) {\r\n            if (index > -1) {\r\n                return;\r\n            }\r\n            states.push(stateName);\r\n            if (stateName === 'active' || stateName === 'selected') {\r\n                shape.toFront();\r\n            }\r\n        }\r\n        else {\r\n            if (index === -1) {\r\n                return;\r\n            }\r\n            states.splice(index, 1);\r\n            if (stateName === 'active' || stateName === 'selected') {\r\n                shape.toBack();\r\n            }\r\n        }\r\n        var offscreenShape = shapeFactory.drawShape(shapeType, model, this.getOffscreenGroup());\r\n        if (states.length) {\r\n            states.forEach(function (state) {\r\n                _this.syncShapeStyle(shape, offscreenShape, state, null);\r\n            });\r\n        }\r\n        else {\r\n            this.syncShapeStyle(shape, offscreenShape, 'reset', null);\r\n        }\r\n        offscreenShape.remove(true);\r\n        var eventObject = {\r\n            state: stateName,\r\n            stateStatus: stateStatus,\r\n            element: this,\r\n            target: this.container,\r\n        };\r\n        this.container.emit('statechange', eventObject);\r\n        event_1.propagationDelegate(this.shape, 'statechange', eventObject);\r\n    };\r\n    Element.prototype.clearStates = function () {\r\n        var _this = this;\r\n        var states = this.states;\r\n        util_1.each(states, function (state) {\r\n            _this.setState(state, false);\r\n        });\r\n        this.states = [];\r\n    };\r\n    Element.prototype.hasState = function (stateName) {\r\n        return this.states.includes(stateName);\r\n    };\r\n    Element.prototype.getStates = function () {\r\n        return this.states;\r\n    };\r\n    Element.prototype.getData = function () {\r\n        return this.data;\r\n    };\r\n    Element.prototype.getModel = function () {\r\n        return this.model;\r\n    };\r\n    Element.prototype.getBBox = function () {\r\n        var _a = this, shape = _a.shape, labelShape = _a.labelShape;\r\n        var bbox = {\r\n            x: 0,\r\n            y: 0,\r\n            minX: 0,\r\n            minY: 0,\r\n            maxX: 0,\r\n            maxY: 0,\r\n            width: 0,\r\n            height: 0,\r\n        };\r\n        if (shape) {\r\n            bbox = shape.getCanvasBBox();\r\n        }\r\n        if (labelShape) {\r\n            labelShape.forEach(function (label) {\r\n                var labelBBox = label.getCanvasBBox();\r\n                bbox.x = Math.min(labelBBox.x, bbox.x);\r\n                bbox.y = Math.min(labelBBox.y, bbox.y);\r\n                bbox.minX = Math.min(labelBBox.minX, bbox.minX);\r\n                bbox.minY = Math.min(labelBBox.minY, bbox.minY);\r\n                bbox.maxX = Math.max(labelBBox.maxX, bbox.maxX);\r\n                bbox.maxY = Math.max(labelBBox.maxY, bbox.maxY);\r\n            });\r\n        }\r\n        bbox.width = bbox.maxX - bbox.minX;\r\n        bbox.height = bbox.maxY - bbox.minY;\r\n        return bbox;\r\n    };\r\n    Element.prototype.getStatesStyle = function () {\r\n        if (!this.statesStyle) {\r\n            var _a = this, shapeType = _a.shapeType, geometry = _a.geometry, shapeFactory = _a.shapeFactory;\r\n            var stateOption = geometry.stateOption;\r\n            var defaultShapeType = shapeFactory.defaultShapeType;\r\n            var stateTheme = shapeFactory.theme[shapeType] || shapeFactory.theme[defaultShapeType];\r\n            this.statesStyle = util_1.deepMix({}, stateTheme, stateOption);\r\n        }\r\n        return this.statesStyle;\r\n    };\r\n    Element.prototype.getStateStyle = function (stateName, shapeKey) {\r\n        var statesStyle = this.getStatesStyle();\r\n        var stateCfg = util_1.get(statesStyle, [stateName, 'style'], {});\r\n        var shapeStyle = stateCfg[shapeKey] || stateCfg;\r\n        if (util_1.isFunction(shapeStyle)) {\r\n            return shapeStyle(this);\r\n        }\r\n        return shapeStyle;\r\n    };\r\n    Element.prototype.getAnimateCfg = function (animateType) {\r\n        var animate = this.animate;\r\n        if (animate) {\r\n            return animate[animateType];\r\n        }\r\n        return null;\r\n    };\r\n    Element.prototype.drawShape = function (model, isUpdate) {\r\n        if (isUpdate === void 0) {\r\n            isUpdate = false;\r\n        }\r\n        var _a = this, shapeFactory = _a.shapeFactory, container = _a.container, shapeType = _a.shapeType;\r\n        this.shape = shapeFactory.drawShape(shapeType, model, container);\r\n        if (this.shape) {\r\n            this.setShapeInfo(this.shape, model);\r\n            var name_1 = this.shape.cfg.name;\r\n            if (!name_1) {\r\n                this.shape.cfg.name = ['element', this.shapeFactory.geometryType];\r\n            }\r\n            else if (util_1.isString(name_1)) {\r\n                this.shape.cfg.name = ['element', name_1];\r\n            }\r\n            var animateType = isUpdate ? 'enter' : 'appear';\r\n            var animateCfg = this.getAnimateCfg(animateType);\r\n            if (animateCfg) {\r\n                animate_1.doAnimate(this.shape, animateCfg, {\r\n                    coordinate: shapeFactory.coordinate,\r\n                    toAttrs: tslib_1.__assign({}, this.shape.attr()),\r\n                });\r\n            }\r\n        }\r\n    };\r\n    Element.prototype.getOffscreenGroup = function () {\r\n        if (!this.offscreenGroup) {\r\n            var GroupCtor = this.container.getGroupBase();\r\n            this.offscreenGroup = new GroupCtor({});\r\n        }\r\n        return this.offscreenGroup;\r\n    };\r\n    Element.prototype.setShapeInfo = function (shape, data) {\r\n        var _this = this;\r\n        shape.cfg.origin = data;\r\n        shape.cfg.element = this;\r\n        if (shape.isGroup()) {\r\n            var children = shape.get('children');\r\n            children.forEach(function (child) {\r\n                _this.setShapeInfo(child, data);\r\n            });\r\n        }\r\n    };\r\n    Element.prototype.syncShapeStyle = function (sourceShape, targetShape, state, animateCfg, index) {\r\n        if (state === void 0) {\r\n            state = '';\r\n        }\r\n        if (index === void 0) {\r\n            index = 0;\r\n        }\r\n        if (sourceShape.isGroup()) {\r\n            var children = sourceShape.get('children');\r\n            var newChildren = targetShape.get('children');\r\n            for (var i = 0; i < children.length; i++) {\r\n                this.syncShapeStyle(children[i], newChildren[i], state, animateCfg, index + i);\r\n            }\r\n        }\r\n        else {\r\n            if (state && state !== 'reset') {\r\n                var name_2 = sourceShape.get('name');\r\n                if (util_1.isArray(name_2)) {\r\n                    name_2 = name_2[1];\r\n                }\r\n                var style = this.getStateStyle(state, name_2 || index);\r\n                targetShape.attr(style);\r\n            }\r\n            var newAttrs = graphics_1.getReplaceAttrs(sourceShape, targetShape);\r\n            if (this.animate) {\r\n                if (animateCfg) {\r\n                    animate_1.doAnimate(sourceShape, animateCfg, {\r\n                        coordinate: this.shapeFactory.coordinate,\r\n                        toAttrs: newAttrs,\r\n                        shapeModel: this.model,\r\n                    });\r\n                }\r\n                else if (state) {\r\n                    sourceShape.stopAnimate();\r\n                    sourceShape.animate(newAttrs, {\r\n                        duration: 300,\r\n                    });\r\n                }\r\n                else {\r\n                    sourceShape.attr(newAttrs);\r\n                }\r\n            }\r\n            else {\r\n                sourceShape.attr(newAttrs);\r\n            }\r\n        }\r\n    };\r\n    Element.prototype.getShapeType = function (model) {\r\n        var shape = util_1.get(model, 'shape');\r\n        return util_1.isArray(shape) ? shape[0] : shape;\r\n    };\r\n    return Element;\r\n}(base_1.default));\r\nexports.default = Element;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\lib\\geometry\\element\\index.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\lib\\geometry\\element\\index.js"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@antv/util\");\nvar animate_1 = require(\"../../animate\");\nvar base_1 = tslib_1.__importDefault(require(\"../../base\"));\nvar graphics_1 = require(\"../../util/graphics\");\nvar event_1 = require(\"@antv/component/lib/util/event\");\n/**\n * Element 图形元素。\n * 定义：在 G2 中，我们会将数据通过图形语法映射成不同的图形，比如点图，数据集中的每条数据会对应一个点，柱状图每条数据对应一个柱子，线图则是一组数据对应一条折线，Element 即一条/一组数据对应的图形元素，它代表一条数据或者一个数据集，在图形层面，它可以是单个 Shape 也可以是多个 Shape，我们称之为图形元素。\n */\nvar Element = /** @class */ (function (_super) {\n    tslib_1.__extends(Element, _super);\n    function Element(cfg) {\n        var _this = _super.call(this, cfg) || this;\n        // 存储当前开启的状态\n        _this.states = [];\n        var shapeFactory = cfg.shapeFactory, container = cfg.container, offscreenGroup = cfg.offscreenGroup, _a = cfg.visible, visible = _a === void 0 ? true : _a;\n        _this.shapeFactory = shapeFactory;\n        _this.container = container;\n        _this.offscreenGroup = offscreenGroup;\n        _this.visible = visible;\n        return _this;\n    }\n    /**\n     * 绘制图形。\n     * @param model 绘制数据。\n     * @param isUpdate 可选，是否是更新发生后的绘制。\n     */\n    Element.prototype.draw = function (model, isUpdate) {\n        if (isUpdate === void 0) { isUpdate = false; }\n        this.model = model;\n        this.data = model.data; // 存储原始数据\n        this.shapeType = this.getShapeType(model);\n        // 绘制图形\n        this.drawShape(model, isUpdate);\n        if (this.visible === false) {\n            // 用户在初始化的时候声明 visible: false\n            this.changeVisible(false);\n        }\n    };\n    /**\n     * 更新图形。\n     * @param model 更新的绘制数据。\n     */\n    Element.prototype.update = function (model) {\n        var _a = this, shapeFactory = _a.shapeFactory, shape = _a.shape;\n        if (!shape) {\n            return;\n        }\n        // 更新数据\n        this.model = model;\n        this.data = model.data;\n        this.shapeType = this.getShapeType(model);\n        // step 1: 更新 shape 携带的信息\n        this.setShapeInfo(shape, model);\n        // step 2: 使用虚拟 Group 重新绘制 shape，然后更新当前 shape\n        var offscreenGroup = this.getOffscreenGroup();\n        var newShape = shapeFactory.drawShape(this.shapeType, model, offscreenGroup);\n        // @ts-ignore\n        newShape.cfg.data = this.data;\n        // @ts-ignore\n        newShape.cfg.origin = model;\n        // step 3: 同步 shape 样式\n        this.syncShapeStyle(shape, newShape, '', this.getAnimateCfg('update'));\n    };\n    /**\n     * 销毁 element 实例。\n     */\n    Element.prototype.destroy = function () {\n        var _a = this, shapeFactory = _a.shapeFactory, shape = _a.shape;\n        if (shape) {\n            var animateCfg = this.getAnimateCfg('leave');\n            if (animateCfg) {\n                // 指定了动画配置则执行销毁动画\n                animate_1.doAnimate(shape, animateCfg, {\n                    coordinate: shapeFactory.coordinate,\n                    toAttrs: tslib_1.__assign({}, shape.attr()),\n                });\n            }\n            else {\n                // 否则直接销毁\n                shape.remove(true);\n            }\n        }\n        // reset\n        this.states = [];\n        this.shapeFactory = undefined;\n        this.container = undefined;\n        this.shape = undefined;\n        this.animate = undefined;\n        this.geometry = undefined;\n        this.labelShape = undefined;\n        this.model = undefined;\n        this.data = undefined;\n        this.offscreenGroup = undefined;\n        this.statesStyle = undefined;\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * 显示或者隐藏 element。\n     * @param visible 是否可见。\n     */\n    Element.prototype.changeVisible = function (visible) {\n        _super.prototype.changeVisible.call(this, visible);\n        if (visible) {\n            if (this.shape) {\n                this.shape.show();\n            }\n            if (this.labelShape) {\n                this.labelShape.forEach(function (label) {\n                    label.show();\n                });\n            }\n        }\n        else {\n            if (this.shape) {\n                this.shape.hide();\n            }\n            if (this.labelShape) {\n                this.labelShape.forEach(function (label) {\n                    label.hide();\n                });\n            }\n        }\n    };\n    /**\n     * 设置 Element 的状态。\n     *\n     * 目前 Element 开放三种状态：\n     * 1. active\n     * 2. selected\n     * 3. inactive\n     *\n     * 这三种状态相互独立，可以进行叠加。\n     *\n     * 这三种状态的样式可在 [[Theme]] 主题中或者通过 `geometry.state()` 接口进行配置。\n     *\n     * ```ts\n     * // 激活 active 状态\n     * setState('active', true);\n     * ```\n     *\n     * @param stateName 状态名\n     * @param stateStatus 是否开启状态\n     */\n    Element.prototype.setState = function (stateName, stateStatus) {\n        var _this = this;\n        var _a = this, states = _a.states, shapeFactory = _a.shapeFactory, model = _a.model, shape = _a.shape, shapeType = _a.shapeType;\n        var index = states.indexOf(stateName);\n        if (stateStatus) {\n            // 开启状态\n            if (index > -1) {\n                // 该状态已经开启，则返回\n                return;\n            }\n            states.push(stateName);\n            if (stateName === 'active' || stateName === 'selected') {\n                shape.toFront();\n            }\n        }\n        else {\n            if (index === -1) {\n                // 关闭状态，但是状态未设置过\n                return;\n            }\n            states.splice(index, 1);\n            if (stateName === 'active' || stateName === 'selected') {\n                shape.toBack();\n            }\n        }\n        // 使用虚拟 group 重新绘制 shape，然后对这个 shape 应用状态样式后，更新当前 shape。\n        var offscreenShape = shapeFactory.drawShape(shapeType, model, this.getOffscreenGroup());\n        if (states.length) {\n            // 应用当前状态\n            states.forEach(function (state) {\n                _this.syncShapeStyle(shape, offscreenShape, state, null);\n            });\n        }\n        else {\n            // 如果没有状态，则需要恢复至原始状态\n            this.syncShapeStyle(shape, offscreenShape, 'reset', null);\n        }\n        offscreenShape.remove(true); // 销毁，减少内存占用\n        var eventObject = {\n            state: stateName,\n            stateStatus: stateStatus,\n            element: this,\n            target: this.container,\n        };\n        this.container.emit('statechange', eventObject);\n        // @ts-ignore\n        event_1.propagationDelegate(this.shape, 'statechange', eventObject);\n    };\n    /**\n     * 清空状量态，恢复至初始状态。\n     */\n    Element.prototype.clearStates = function () {\n        var _this = this;\n        var states = this.states;\n        util_1.each(states, function (state) {\n            _this.setState(state, false);\n        });\n        this.states = [];\n    };\n    /**\n     * 查询当前 Element 上是否已设置 `stateName` 对应的状态。\n     * @param stateName 状态名称。\n     * @returns true 表示存在，false 表示不存在。\n     */\n    Element.prototype.hasState = function (stateName) {\n        return this.states.includes(stateName);\n    };\n    /**\n     * 获取当前 Element 上所有的状态。\n     * @returns 当前 Element 上所有的状态数组。\n     */\n    Element.prototype.getStates = function () {\n        return this.states;\n    };\n    /**\n     * 获取 Element 对应的原始数据。\n     * @returns 原始数据。\n     */\n    Element.prototype.getData = function () {\n        return this.data;\n    };\n    /**\n     * 获取 Element 对应的图形绘制数据。\n     * @returns 图形绘制数据。\n     */\n    Element.prototype.getModel = function () {\n        return this.model;\n    };\n    /**\n     * 返回 Element 元素整体的 bbox，包含文本及文本连线（有的话）。\n     * @returns 整体包围盒。\n     */\n    Element.prototype.getBBox = function () {\n        var _a = this, shape = _a.shape, labelShape = _a.labelShape;\n        var bbox = {\n            x: 0,\n            y: 0,\n            minX: 0,\n            minY: 0,\n            maxX: 0,\n            maxY: 0,\n            width: 0,\n            height: 0,\n        };\n        if (shape) {\n            bbox = shape.getCanvasBBox();\n        }\n        if (labelShape) {\n            labelShape.forEach(function (label) {\n                var labelBBox = label.getCanvasBBox();\n                bbox.x = Math.min(labelBBox.x, bbox.x);\n                bbox.y = Math.min(labelBBox.y, bbox.y);\n                bbox.minX = Math.min(labelBBox.minX, bbox.minX);\n                bbox.minY = Math.min(labelBBox.minY, bbox.minY);\n                bbox.maxX = Math.max(labelBBox.maxX, bbox.maxX);\n                bbox.maxY = Math.max(labelBBox.maxY, bbox.maxY);\n            });\n        }\n        bbox.width = bbox.maxX - bbox.minX;\n        bbox.height = bbox.maxY - bbox.minY;\n        return bbox;\n    };\n    Element.prototype.getStatesStyle = function () {\n        if (!this.statesStyle) {\n            var _a = this, shapeType = _a.shapeType, geometry = _a.geometry, shapeFactory = _a.shapeFactory;\n            var stateOption = geometry.stateOption;\n            var defaultShapeType = shapeFactory.defaultShapeType;\n            var stateTheme = shapeFactory.theme[shapeType] || shapeFactory.theme[defaultShapeType];\n            this.statesStyle = util_1.deepMix({}, stateTheme, stateOption);\n        }\n        return this.statesStyle;\n    };\n    // 从主题中获取对应状态量的样式\n    Element.prototype.getStateStyle = function (stateName, shapeKey) {\n        var statesStyle = this.getStatesStyle();\n        var stateCfg = util_1.get(statesStyle, [stateName, 'style'], {});\n        var shapeStyle = stateCfg[shapeKey] || stateCfg;\n        if (util_1.isFunction(shapeStyle)) {\n            return shapeStyle(this);\n        }\n        return shapeStyle;\n    };\n    // 获取动画配置\n    Element.prototype.getAnimateCfg = function (animateType) {\n        var animate = this.animate;\n        if (animate) {\n            return animate[animateType];\n        }\n        return null;\n    };\n    // 绘制图形\n    Element.prototype.drawShape = function (model, isUpdate) {\n        if (isUpdate === void 0) { isUpdate = false; }\n        var _a = this, shapeFactory = _a.shapeFactory, container = _a.container, shapeType = _a.shapeType;\n        // 自定义 shape 有可能返回空 shape\n        this.shape = shapeFactory.drawShape(shapeType, model, container);\n        if (this.shape) {\n            this.setShapeInfo(this.shape, model); // 存储绘图数据\n            // @ts-ignore\n            var name_1 = this.shape.cfg.name;\n            // 附加 element 的 name, name 现在支持数组了，很好用了\n            if (!name_1) {\n                // 这个地方如果用户添加了 name, 则附加 name ，否则就添加自己的 name\n                // @ts-ignore\n                this.shape.cfg.name = ['element', this.shapeFactory.geometryType];\n            }\n            else if (util_1.isString(name_1)) {\n                // @ts-ignore\n                this.shape.cfg.name = ['element', name_1];\n            }\n            // 执行入场动画\n            var animateType = isUpdate ? 'enter' : 'appear';\n            var animateCfg = this.getAnimateCfg(animateType);\n            if (animateCfg) {\n                animate_1.doAnimate(this.shape, animateCfg, {\n                    coordinate: shapeFactory.coordinate,\n                    toAttrs: tslib_1.__assign({}, this.shape.attr()),\n                });\n            }\n        }\n    };\n    // 获取虚拟 Group\n    Element.prototype.getOffscreenGroup = function () {\n        if (!this.offscreenGroup) {\n            var GroupCtor = this.container.getGroupBase(); // 获取分组的构造函数\n            this.offscreenGroup = new GroupCtor({});\n        }\n        return this.offscreenGroup;\n    };\n    // 设置 shape 上需要携带的信息\n    Element.prototype.setShapeInfo = function (shape, data) {\n        var _this = this;\n        // @ts-ignore\n        shape.cfg.origin = data;\n        // @ts-ignore\n        shape.cfg.element = this;\n        if (shape.isGroup()) {\n            var children = shape.get('children');\n            children.forEach(function (child) {\n                _this.setShapeInfo(child, data);\n            });\n        }\n    };\n    // 更新当前 shape 的样式\n    Element.prototype.syncShapeStyle = function (sourceShape, targetShape, state, animateCfg, index) {\n        if (state === void 0) { state = ''; }\n        if (index === void 0) { index = 0; }\n        if (sourceShape.isGroup()) {\n            var children = sourceShape.get('children');\n            var newChildren = targetShape.get('children');\n            for (var i = 0; i < children.length; i++) {\n                this.syncShapeStyle(children[i], newChildren[i], state, animateCfg, index + i);\n            }\n        }\n        else {\n            if (state && state !== 'reset') {\n                var name_2 = sourceShape.get('name');\n                if (util_1.isArray(name_2)) {\n                    // 会附加 element 的 name\n                    name_2 = name_2[1];\n                }\n                var style = this.getStateStyle(state, name_2 || index); // 如果用户没有设置 name，则默认根据索引值\n                targetShape.attr(style);\n            }\n            var newAttrs = graphics_1.getReplaceAttrs(sourceShape, targetShape);\n            if (this.animate) {\n                if (animateCfg) {\n                    // 需要进行动画\n                    animate_1.doAnimate(sourceShape, animateCfg, {\n                        coordinate: this.shapeFactory.coordinate,\n                        toAttrs: newAttrs,\n                        shapeModel: this.model,\n                    });\n                }\n                else if (state) {\n                    sourceShape.stopAnimate();\n                    sourceShape.animate(newAttrs, {\n                        duration: 300,\n                    });\n                }\n                else {\n                    sourceShape.attr(newAttrs);\n                }\n            }\n            else {\n                sourceShape.attr(newAttrs);\n            }\n        }\n    };\n    Element.prototype.getShapeType = function (model) {\n        var shape = util_1.get(model, 'shape');\n        return util_1.isArray(shape) ? shape[0] : shape;\n    };\n    return Element;\n}(base_1.default));\nexports.default = Element;\n//# sourceMappingURL=index.js.map"]}]}