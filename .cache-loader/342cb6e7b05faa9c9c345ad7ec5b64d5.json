{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\connector\\hierarchy.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\connector\\hierarchy.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["var isFunction = require('@antv/util/lib/type/is-function');\r\nvar hierarchy = require('d3-hierarchy').hierarchy;\r\nvar _a = require('../data-set'), HIERARCHY = _a.HIERARCHY, registerConnector = _a.registerConnector;\r\nfunction connector(data, options, dataView) {\r\n    dataView.dataType = HIERARCHY;\r\n    var children = options && options.children ? options.children : null;\r\n    if (children && !isFunction(children)) {\r\n        throw new TypeError('Invalid children: must be a function!');\r\n    }\r\n    if (!options.pureData) {\r\n        dataView.rows = dataView.root = hierarchy(data, children);\r\n    }\r\n    else {\r\n        dataView.rows = dataView.root = data;\r\n    }\r\n    return data;\r\n}\r\nregisterConnector('hierarchy', connector);\r\nregisterConnector('tree', connector);\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\connector\\hierarchy.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\connector\\hierarchy.js"],"names":[],"mappings":"AAAA,IAAM,UAAU,GAAG,OAAO,CAAC,iCAAiC,CAAC,CAAC;AAE5D,IAAA,6CAAS,CACiB;AACtB,IAAA,2BAGoB,EAFxB,wBAAS,EACT,wCACwB,CAAC;AAU3B,SAAS,SAAS,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ;IACxC,QAAQ,CAAC,QAAQ,GAAG,SAAS,CAAC;IAC9B,IAAM,QAAQ,GAAG,OAAO,IAAI,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC;IAEvE,IAAI,QAAQ,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;QACrC,MAAM,IAAI,SAAS,CAAC,uCAAuC,CAAC,CAAC;KAC9D;IAED,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;QACrB,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;KAC3D;SAAM;QACL,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;KACtC;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AAED,iBAAiB,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AAC1C,iBAAiB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC","sourcesContent":["const isFunction = require('@antv/util/lib/type/is-function');\nconst {\n  hierarchy\n} = require('d3-hierarchy');\nconst {\n  HIERARCHY,\n  registerConnector\n} = require('../data-set');\n\n/*\n * options: {\n *   children(d) { // optional\n *     return d.children\n *   },\n * }\n */\n\nfunction connector(data, options, dataView) {\n  dataView.dataType = HIERARCHY;\n  const children = options && options.children ? options.children : null;\n\n  if (children && !isFunction(children)) {\n    throw new TypeError('Invalid children: must be a function!');\n  }\n\n  if (!options.pureData) {\n    dataView.rows = dataView.root = hierarchy(data, children);\n  } else {\n    dataView.rows = dataView.root = data;\n  }\n  return data;\n}\n\nregisterConnector('hierarchy', connector);\nregisterConnector('tree', connector);\n"]}]}