{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/src/app/internationalization/LocaleStore/LocaleStore.tsx","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/src/app/internationalization/LocaleStore/LocaleStore.tsx","mtime":1596379644471},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport { LANGUAGE_CONFIG_TOKEN, KnownLanguages } from \"../definitions\";\nimport { action, computed, observable, runInAction } from \"mobx\";\nimport { Inject, Injectable } from \"react.di\";\nimport React from \"react\";\nimport { GET_VALUE, Lang } from \"./lang\";\nvar idSeparator = \".\";\nvar LocaleStore = (function () {\n    function LocaleStore(config) {\n        this.availableLanguages = new Map();\n        this.loadedLanguages = new Map();\n        this.config = config.languages;\n    }\n    Object.defineProperty(LocaleStore.prototype, \"definitions\", {\n        get: function () {\n            return this.currentLanguage.definitions;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LocaleStore.prototype, \"allLanguages\", {\n        get: function () {\n            return Array.from(this.availableLanguages.values());\n        },\n        enumerable: false,\n        configurable: true\n    });\n    LocaleStore.prototype.loadLanguage = function (id) {\n        return __awaiter(this, void 0, Promise, function () {\n            var language, definitions, loaded;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.availableLanguages.has(id)) {\n                            return [2, this.fallbackLanguage];\n                        }\n                        if (this.loadedLanguages.has(id)) {\n                            return [2, this.loadedLanguages.get(id)];\n                        }\n                        language = this.availableLanguages.get(id);\n                        return [4, language.getDefinition];\n                    case 1:\n                        definitions = (_a.sent()).default;\n                        loaded = __assign(__assign({}, language), { definitions: definitions });\n                        this.loadedLanguages.set(language.id, loaded);\n                        return [2, loaded];\n                }\n            });\n        });\n    };\n    LocaleStore.prototype.init = function (defaultLanguageId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var fallbackId, _a, _b, l, _c, _d;\n            var e_1, _e;\n            return __generator(this, function (_f) {\n                switch (_f.label) {\n                    case 0:\n                        fallbackId = null;\n                        try {\n                            for (_a = __values(this.config), _b = _a.next(); !_b.done; _b = _a.next()) {\n                                l = _b.value;\n                                this.availableLanguages.set(l.id, l);\n                                if (l.fallback) {\n                                    fallbackId = l.id;\n                                }\n                            }\n                        }\n                        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                        finally {\n                            try {\n                                if (_b && !_b.done && (_e = _a.return)) _e.call(_a);\n                            }\n                            finally { if (e_1) throw e_1.error; }\n                        }\n                        _c = this;\n                        return [4, this.loadLanguage(defaultLanguageId || fallbackId)];\n                    case 1:\n                        _c.currentLanguage = _f.sent();\n                        _d = this;\n                        return [4, this.loadLanguage(fallbackId)];\n                    case 2:\n                        _d.fallbackLanguage = _f.sent();\n                        return [2];\n                }\n            });\n        });\n    };\n    LocaleStore.prototype.get = function (id, replacements) {\n        var trueId = id instanceof Lang ? id[GET_VALUE] : id;\n        var definition = this.retrieveDefinition(trueId);\n        return this.replace(definition, replacements);\n    };\n    LocaleStore.prototype.replace = function (format, replacements) {\n        var splitter = /({[0-9a-zA-Z]+})/;\n        var array = format.split(splitter);\n        var newArray = array;\n        var elementReplaced = false;\n        if (replacements) {\n            for (var i = 1; i < array.length; i += 2) {\n                var tag = array[i].substr(1, array[i].length - 2);\n                var replacement = replacements[tag];\n                if (replacement) {\n                    if (React.isValidElement(replacement)) {\n                        elementReplaced = true;\n                        newArray[i] = React.createElement(React.Fragment, { key: i }, replacement);\n                    }\n                    else {\n                        newArray[i] = replacement;\n                    }\n                }\n            }\n        }\n        if (elementReplaced) {\n            return newArray;\n        }\n        else {\n            return newArray.join(\"\");\n        }\n    };\n    LocaleStore.prototype.retrieveDefinition = function (id) {\n        var e_2, _a;\n        var content = this.definitions;\n        var fallbackContent = this.fallbackLanguage.definitions;\n        var onFallback = false;\n        try {\n            for (var _b = __values(id.split(idSeparator)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var key = _c.value;\n                if (typeof content === \"undefined\") {\n                    throw new RangeError(\"unidentified id \" + id);\n                }\n                if (key in content) {\n                    if (!onFallback) {\n                        fallbackContent = fallbackContent[key];\n                    }\n                    content = content[key];\n                }\n                else {\n                    content = fallbackContent[key];\n                    onFallback = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        if (typeof content !== \"string\") {\n            throw new RangeError(\"id \" + id + \" does not refer to a string. actual value: \" + content);\n        }\n        return content;\n    };\n    LocaleStore.prototype.changeLanguage = function (id) {\n        return __awaiter(this, void 0, void 0, function () {\n            var newLanguage;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, this.loadLanguage(id)];\n                    case 1:\n                        newLanguage = _a.sent();\n                        runInAction(\"Language \" + newLanguage.name + \" selected and loaded.\", function () {\n                            _this.currentLanguage = newLanguage;\n                        });\n                        return [2];\n                }\n            });\n        });\n    };\n    var _a;\n    __decorate([\n        observable.ref,\n        __metadata(\"design:type\", Object)\n    ], LocaleStore.prototype, \"currentLanguage\", void 0);\n    __decorate([\n        computed,\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [])\n    ], LocaleStore.prototype, \"definitions\", null);\n    __decorate([\n        computed,\n        __metadata(\"design:type\", Array),\n        __metadata(\"design:paramtypes\", [])\n    ], LocaleStore.prototype, \"allLanguages\", null);\n    __decorate([\n        action,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], LocaleStore.prototype, \"init\", null);\n    __decorate([\n        action,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], LocaleStore.prototype, \"changeLanguage\", null);\n    LocaleStore = __decorate([\n        Injectable,\n        __param(0, Inject(LANGUAGE_CONFIG_TOKEN)),\n        __metadata(\"design:paramtypes\", [typeof (_a = typeof KnownLanguages !== \"undefined\" && KnownLanguages) === \"function\" ? _a : Object])\n    ], LocaleStore);\n    return LocaleStore;\n}());\nexport { LocaleStore };\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/src/app/internationalization/LocaleStore/LocaleStore.tsx","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/src/app/internationalization/LocaleStore/LocaleStore.tsx"],"names":[],"mappings":"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","sourcesContent":["import { LANGUAGE_CONFIG_TOKEN, Definition, KnownLanguages, Language } from \"../definitions\";\r\nimport { action, computed, observable, runInAction } from \"mobx\";\r\nimport { Inject, Injectable } from \"react.di\";\r\nimport React from \"react\";\r\nimport { GET_VALUE, Lang } from \"./lang\";\r\n\r\nexport interface ReplacementMap {[key: string]: React.ReactNode; }\r\n\r\nconst idSeparator = \".\";\r\n\r\ntype LoadedLanguage = Language & { definitions: Definition };\r\n\r\n@Injectable\r\nexport class LocaleStore {\r\n  private availableLanguages: Map<string, Language> = new Map();\r\n  private loadedLanguages: Map<string, LoadedLanguage> = new Map();\r\n\r\n  @observable.ref currentLanguage: LoadedLanguage;\r\n\r\n  fallbackLanguage: LoadedLanguage;\r\n\r\n  config: Language[];\r\n\r\n  constructor(@Inject(LANGUAGE_CONFIG_TOKEN) config: KnownLanguages) {\r\n    this.config = config.languages; // avoid multi inject\r\n  }\r\n\r\n  @computed get definitions() {\r\n    return this.currentLanguage.definitions;\r\n  }\r\n\r\n  @computed get allLanguages(): Language[] {\r\n    return Array.from(this.availableLanguages.values());\r\n  }\r\n\r\n  async loadLanguage(id: string): Promise<LoadedLanguage> {\r\n\r\n    if (!this.availableLanguages.has(id)) {\r\n      return this.fallbackLanguage;\r\n    }\r\n    if (this.loadedLanguages.has(id)) {\r\n      return this.loadedLanguages.get(id);\r\n    }\r\n    const language = this.availableLanguages.get(id);\r\n    const definitions = ((await language.getDefinition) as any).default;\r\n\r\n    const loaded = { ...language, definitions};\r\n    this.loadedLanguages.set(language.id, loaded);\r\n    return loaded;\r\n  }\r\n\r\n  @action async init(defaultLanguageId: string) {\r\n    let fallbackId = null;\r\n    for (const l of this.config) {\r\n      this.availableLanguages.set(l.id, l);\r\n      if (l.fallback) {\r\n        fallbackId = l.id;\r\n      }\r\n    }\r\n\r\n    this.currentLanguage = await this.loadLanguage(defaultLanguageId || fallbackId);\r\n    this.fallbackLanguage = await this.loadLanguage(fallbackId);\r\n\r\n  }\r\n\r\n  get(id: string | Lang, replacements?: ReplacementMap): React.ReactNode[] | string {\r\n    const trueId = id instanceof Lang ? id[GET_VALUE] : id;\r\n    const definition = this.retrieveDefinition(trueId);\r\n    return this.replace(definition, replacements);\r\n  }\r\n\r\n  replace(format: string, replacements?: ReplacementMap): React.ReactNode[] | string {\r\n    const splitter = /({[0-9a-zA-Z]+})/;\r\n    const array = format.split(splitter);\r\n    const newArray = array as React.ReactNode[];\r\n    let elementReplaced = false;\r\n    if (replacements) {\r\n      for (let i = 1; i < array.length; i += 2) {\r\n        const tag = array[i].substr(1, array[i].length - 2);\r\n        const replacement = replacements[tag];\r\n        if (replacement) {\r\n          if (React.isValidElement(replacement)) {\r\n            elementReplaced = true;\r\n            newArray[i] = <React.Fragment key={i}>{replacement}</React.Fragment>;\r\n          } else {\r\n            newArray[i] = replacement;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (elementReplaced) {\r\n      return newArray;\r\n    } else {\r\n      return newArray.join(\"\");\r\n    }\r\n  }\r\n\r\n  private retrieveDefinition(id: string) {\r\n    let content = this.definitions;\r\n    let fallbackContent = this.fallbackLanguage.definitions;\r\n    let onFallback = false;\r\n    for (const key of id.split(idSeparator)) {\r\n      if (typeof content === \"undefined\") {\r\n        throw new RangeError(`unidentified id ${id}`);\r\n      }\r\n      if (key in content) {\r\n        if (!onFallback) {\r\n          fallbackContent = fallbackContent[key];\r\n        }\r\n        content = content[key];\r\n      } else {\r\n        // fallback occurs.\r\n        // redirect the content to fallback\r\n        content = fallbackContent[key];\r\n        onFallback = true;\r\n      }\r\n    }\r\n    if (typeof content !== \"string\") {\r\n      throw new RangeError(`id ${id} does not refer to a string. actual value: ${content}`);\r\n    }\r\n    return content;\r\n  }\r\n\r\n  @action async changeLanguage(id: string) {\r\n    const newLanguage = await this.loadLanguage(id);\r\n    runInAction(`Language ${newLanguage.name} selected and loaded.`, () => {\r\n      this.currentLanguage = newLanguage;\r\n    });\r\n\r\n  }\r\n}\r\n"]}]}