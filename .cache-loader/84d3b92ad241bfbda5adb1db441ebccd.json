{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g-base/esm/abstract/container.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g-base/esm/abstract/container.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\nimport Element from './element';\nimport { isFunction, isObject, each, removeFromArray, upperFirst, isAllowCapture } from '../util/util';\nvar SHAPE_MAP = {};\nvar INDEX = '_INDEX';\nfunction afterAdd(element) {\n    if (element.isGroup()) {\n        if (element.isEntityGroup() || element.get('children').length) {\n            element.onCanvasChange('add');\n        }\n    }\n    else {\n        element.onCanvasChange('add');\n    }\n}\nfunction setCanvas(element, canvas) {\n    element.set('canvas', canvas);\n    if (element.isGroup()) {\n        var children = element.get('children');\n        if (children.length) {\n            children.forEach(function (child) {\n                setCanvas(child, canvas);\n            });\n        }\n    }\n}\nfunction setTimeline(element, timeline) {\n    element.set('timeline', timeline);\n    if (element.isGroup()) {\n        var children = element.get('children');\n        if (children.length) {\n            children.forEach(function (child) {\n                setTimeline(child, timeline);\n            });\n        }\n    }\n}\nfunction contains(container, element) {\n    var children = container.getChildren();\n    return children.indexOf(element) >= 0;\n}\nfunction removeChild(container, element, destroy) {\n    if (destroy === void 0) {\n        destroy = true;\n    }\n    if (destroy) {\n        element.destroy();\n    }\n    else {\n        element.set('parent', null);\n        element.set('canvas', null);\n    }\n    removeFromArray(container.getChildren(), element);\n}\nfunction getComparer(compare) {\n    return function (left, right) {\n        var result = compare(left, right);\n        return result === 0 ? left[INDEX] - right[INDEX] : result;\n    };\n}\nvar Container = (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Container.prototype.isCanvas = function () {\n        return false;\n    };\n    Container.prototype.getBBox = function () {\n        var minX = Infinity;\n        var maxX = -Infinity;\n        var minY = Infinity;\n        var maxY = -Infinity;\n        var xArr = [];\n        var yArr = [];\n        var children = this.getChildren().filter(function (child) {\n            return child.get('visible') && (!child.isGroup() || (child.isGroup() && child.getChildren().length > 0));\n        });\n        if (children.length > 0) {\n            each(children, function (child) {\n                var box = child.getBBox();\n                xArr.push(box.minX, box.maxX);\n                yArr.push(box.minY, box.maxY);\n            });\n            minX = Math.min.apply(null, xArr);\n            maxX = Math.max.apply(null, xArr);\n            minY = Math.min.apply(null, yArr);\n            maxY = Math.max.apply(null, yArr);\n        }\n        else {\n            minX = 0;\n            maxX = 0;\n            minY = 0;\n            maxY = 0;\n        }\n        var box = {\n            x: minX,\n            y: minY,\n            minX: minX,\n            minY: minY,\n            maxX: maxX,\n            maxY: maxY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n        return box;\n    };\n    Container.prototype.getCanvasBBox = function () {\n        var minX = Infinity;\n        var maxX = -Infinity;\n        var minY = Infinity;\n        var maxY = -Infinity;\n        var xArr = [];\n        var yArr = [];\n        var children = this.getChildren().filter(function (child) {\n            return child.get('visible') && (!child.isGroup() || (child.isGroup() && child.getChildren().length > 0));\n        });\n        if (children.length > 0) {\n            each(children, function (child) {\n                var box = child.getCanvasBBox();\n                xArr.push(box.minX, box.maxX);\n                yArr.push(box.minY, box.maxY);\n            });\n            minX = Math.min.apply(null, xArr);\n            maxX = Math.max.apply(null, xArr);\n            minY = Math.min.apply(null, yArr);\n            maxY = Math.max.apply(null, yArr);\n        }\n        else {\n            minX = 0;\n            maxX = 0;\n            minY = 0;\n            maxY = 0;\n        }\n        var box = {\n            x: minX,\n            y: minY,\n            minX: minX,\n            minY: minY,\n            maxX: maxX,\n            maxY: maxY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n        return box;\n    };\n    Container.prototype.getDefaultCfg = function () {\n        var cfg = _super.prototype.getDefaultCfg.call(this);\n        cfg['children'] = [];\n        return cfg;\n    };\n    Container.prototype.onAttrChange = function (name, value, originValue) {\n        _super.prototype.onAttrChange.call(this, name, value, originValue);\n        if (name === 'matrix') {\n            var totalMatrix = this.getTotalMatrix();\n            this._applyChildrenMarix(totalMatrix);\n        }\n    };\n    Container.prototype.applyMatrix = function (matrix) {\n        var preTotalMatrix = this.getTotalMatrix();\n        _super.prototype.applyMatrix.call(this, matrix);\n        var totalMatrix = this.getTotalMatrix();\n        if (totalMatrix === preTotalMatrix) {\n            return;\n        }\n        this._applyChildrenMarix(totalMatrix);\n    };\n    Container.prototype._applyChildrenMarix = function (totalMatrix) {\n        var children = this.getChildren();\n        each(children, function (child) {\n            child.applyMatrix(totalMatrix);\n        });\n    };\n    Container.prototype.addShape = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var type = args[0];\n        var cfg = args[1];\n        if (isObject(type)) {\n            cfg = type;\n        }\n        else {\n            cfg['type'] = type;\n        }\n        var shapeType = SHAPE_MAP[cfg.type];\n        if (!shapeType) {\n            shapeType = upperFirst(cfg.type);\n            SHAPE_MAP[cfg.type] = shapeType;\n        }\n        var ShapeBase = this.getShapeBase();\n        var shape = new ShapeBase[shapeType](cfg);\n        this.add(shape);\n        return shape;\n    };\n    Container.prototype.addGroup = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var groupClass = args[0], cfg = args[1];\n        var group;\n        if (isFunction(groupClass)) {\n            if (cfg) {\n                group = new groupClass(cfg);\n            }\n            else {\n                group = new groupClass({\n                    parent: this,\n                });\n            }\n        }\n        else {\n            var tmpCfg = groupClass || {};\n            var TmpGroupClass = this.getGroupBase();\n            group = new TmpGroupClass(tmpCfg);\n        }\n        this.add(group);\n        return group;\n    };\n    Container.prototype.getCanvas = function () {\n        var canvas;\n        if (this.isCanvas()) {\n            canvas = this;\n        }\n        else {\n            canvas = this.get('canvas');\n        }\n        return canvas;\n    };\n    Container.prototype.getShape = function (x, y, ev) {\n        if (!isAllowCapture(this)) {\n            return null;\n        }\n        var children = this.getChildren();\n        var shape;\n        if (!this.isCanvas()) {\n            var v = [x, y, 1];\n            v = this.invertFromMatrix(v);\n            if (!this.isClipped(v[0], v[1])) {\n                shape = this._findShape(children, v[0], v[1], ev);\n            }\n        }\n        else {\n            shape = this._findShape(children, x, y, ev);\n        }\n        return shape;\n    };\n    Container.prototype._findShape = function (children, x, y, ev) {\n        var shape = null;\n        for (var i = children.length - 1; i >= 0; i--) {\n            var child = children[i];\n            if (isAllowCapture(child)) {\n                if (child.isGroup()) {\n                    shape = child.getShape(x, y, ev);\n                }\n                else if (child.isHit(x, y)) {\n                    shape = child;\n                }\n            }\n            if (shape) {\n                break;\n            }\n        }\n        return shape;\n    };\n    Container.prototype.add = function (element) {\n        var canvas = this.getCanvas();\n        var children = this.getChildren();\n        var timeline = this.get('timeline');\n        var preParent = element.getParent();\n        if (preParent) {\n            removeChild(preParent, element, false);\n        }\n        element.set('parent', this);\n        if (canvas) {\n            setCanvas(element, canvas);\n        }\n        if (timeline) {\n            setTimeline(element, timeline);\n        }\n        children.push(element);\n        afterAdd(element);\n        this._applyElementMatrix(element);\n    };\n    Container.prototype._applyElementMatrix = function (element) {\n        var totalMatrix = this.getTotalMatrix();\n        if (totalMatrix) {\n            element.applyMatrix(totalMatrix);\n        }\n    };\n    Container.prototype.getChildren = function () {\n        return this.get('children');\n    };\n    Container.prototype.sort = function () {\n        var children = this.getChildren();\n        each(children, function (child, index) {\n            child[INDEX] = index;\n            return child;\n        });\n        children.sort(getComparer(function (obj1, obj2) {\n            return obj1.get('zIndex') - obj2.get('zIndex');\n        }));\n        this.onCanvasChange('sort');\n    };\n    Container.prototype.clear = function () {\n        this.set('clearing', true);\n        if (this.destroyed) {\n            return;\n        }\n        var children = this.getChildren();\n        for (var i = children.length - 1; i >= 0; i--) {\n            children[i].destroy();\n        }\n        this.set('children', []);\n        this.onCanvasChange('clear');\n        this.set('clearing', false);\n    };\n    Container.prototype.destroy = function () {\n        if (this.get('destroyed')) {\n            return;\n        }\n        this.clear();\n        _super.prototype.destroy.call(this);\n    };\n    Container.prototype.getFirst = function () {\n        return this.getChildByIndex(0);\n    };\n    Container.prototype.getLast = function () {\n        var children = this.getChildren();\n        return this.getChildByIndex(children.length - 1);\n    };\n    Container.prototype.getChildByIndex = function (index) {\n        var children = this.getChildren();\n        return children[index];\n    };\n    Container.prototype.getCount = function () {\n        var children = this.getChildren();\n        return children.length;\n    };\n    Container.prototype.contain = function (element) {\n        var children = this.getChildren();\n        return children.indexOf(element) > -1;\n    };\n    Container.prototype.removeChild = function (element, destroy) {\n        if (destroy === void 0) {\n            destroy = true;\n        }\n        if (this.contain(element)) {\n            element.remove(destroy);\n        }\n    };\n    Container.prototype.findAll = function (fn) {\n        var rst = [];\n        var children = this.getChildren();\n        each(children, function (element) {\n            if (fn(element)) {\n                rst.push(element);\n            }\n            if (element.isGroup()) {\n                rst = rst.concat(element.findAll(fn));\n            }\n        });\n        return rst;\n    };\n    Container.prototype.find = function (fn) {\n        var rst = null;\n        var children = this.getChildren();\n        each(children, function (element) {\n            if (fn(element)) {\n                rst = element;\n            }\n            else if (element.isGroup()) {\n                rst = element.find(fn);\n            }\n            if (rst) {\n                return false;\n            }\n        });\n        return rst;\n    };\n    Container.prototype.findById = function (id) {\n        return this.find(function (element) {\n            return element.get('id') === id;\n        });\n    };\n    Container.prototype.findByClassName = function (className) {\n        return this.find(function (element) {\n            return element.get('className') === className;\n        });\n    };\n    Container.prototype.findAllByName = function (name) {\n        return this.findAll(function (element) {\n            return element.get('name') === name;\n        });\n    };\n    return Container;\n}(Element));\nexport default Container;\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g-base/esm/abstract/container.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g-base/esm/abstract/container.js"],"names":[],"mappings":"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","sourcesContent":["import { __extends } from \"tslib\";\nimport Element from './element';\nimport { isFunction, isObject, each, removeFromArray, upperFirst, isAllowCapture } from '../util/util';\nvar SHAPE_MAP = {};\nvar INDEX = '_INDEX';\nfunction afterAdd(element) {\n    if (element.isGroup()) {\n        if (element.isEntityGroup() || element.get('children').length) {\n            element.onCanvasChange('add');\n        }\n    }\n    else {\n        element.onCanvasChange('add');\n    }\n}\n/**\n * 设置 canvas\n * @param {IElement} element 元素\n * @param {ICanvas}  canvas  画布\n */\nfunction setCanvas(element, canvas) {\n    element.set('canvas', canvas);\n    if (element.isGroup()) {\n        var children = element.get('children');\n        if (children.length) {\n            children.forEach(function (child) {\n                setCanvas(child, canvas);\n            });\n        }\n    }\n}\n/**\n * 设置 timeline\n * @param {IElement} element  元素\n * @param {Timeline} timeline 时间轴\n */\nfunction setTimeline(element, timeline) {\n    element.set('timeline', timeline);\n    if (element.isGroup()) {\n        var children = element.get('children');\n        if (children.length) {\n            children.forEach(function (child) {\n                setTimeline(child, timeline);\n            });\n        }\n    }\n}\nfunction contains(container, element) {\n    var children = container.getChildren();\n    return children.indexOf(element) >= 0;\n}\nfunction removeChild(container, element, destroy) {\n    if (destroy === void 0) { destroy = true; }\n    // 不再调用 element.remove() 方法，会出现循环调用\n    if (destroy) {\n        element.destroy();\n    }\n    else {\n        element.set('parent', null);\n        element.set('canvas', null);\n    }\n    removeFromArray(container.getChildren(), element);\n}\nfunction getComparer(compare) {\n    return function (left, right) {\n        var result = compare(left, right);\n        return result === 0 ? left[INDEX] - right[INDEX] : result;\n    };\n}\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Container.prototype.isCanvas = function () {\n        return false;\n    };\n    // 根据子节点确定 BBox\n    Container.prototype.getBBox = function () {\n        // 所有的值可能在画布的可视区外\n        var minX = Infinity;\n        var maxX = -Infinity;\n        var minY = Infinity;\n        var maxY = -Infinity;\n        var xArr = [];\n        var yArr = [];\n        // 将可见元素、图形以及不为空的图形分组筛选出来，用于包围盒合并\n        var children = this.getChildren().filter(function (child) {\n            return child.get('visible') && (!child.isGroup() || (child.isGroup() && child.getChildren().length > 0));\n        });\n        if (children.length > 0) {\n            each(children, function (child) {\n                var box = child.getBBox();\n                xArr.push(box.minX, box.maxX);\n                yArr.push(box.minY, box.maxY);\n            });\n            minX = Math.min.apply(null, xArr);\n            maxX = Math.max.apply(null, xArr);\n            minY = Math.min.apply(null, yArr);\n            maxY = Math.max.apply(null, yArr);\n        }\n        else {\n            minX = 0;\n            maxX = 0;\n            minY = 0;\n            maxY = 0;\n        }\n        var box = {\n            x: minX,\n            y: minY,\n            minX: minX,\n            minY: minY,\n            maxX: maxX,\n            maxY: maxY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n        return box;\n    };\n    // 获取画布的包围盒\n    Container.prototype.getCanvasBBox = function () {\n        var minX = Infinity;\n        var maxX = -Infinity;\n        var minY = Infinity;\n        var maxY = -Infinity;\n        var xArr = [];\n        var yArr = [];\n        // 将可见元素、图形以及不为空的图形分组筛选出来，用于包围盒合并\n        var children = this.getChildren().filter(function (child) {\n            return child.get('visible') && (!child.isGroup() || (child.isGroup() && child.getChildren().length > 0));\n        });\n        if (children.length > 0) {\n            each(children, function (child) {\n                var box = child.getCanvasBBox();\n                xArr.push(box.minX, box.maxX);\n                yArr.push(box.minY, box.maxY);\n            });\n            minX = Math.min.apply(null, xArr);\n            maxX = Math.max.apply(null, xArr);\n            minY = Math.min.apply(null, yArr);\n            maxY = Math.max.apply(null, yArr);\n        }\n        else {\n            minX = 0;\n            maxX = 0;\n            minY = 0;\n            maxY = 0;\n        }\n        var box = {\n            x: minX,\n            y: minY,\n            minX: minX,\n            minY: minY,\n            maxX: maxX,\n            maxY: maxY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n        return box;\n    };\n    Container.prototype.getDefaultCfg = function () {\n        var cfg = _super.prototype.getDefaultCfg.call(this);\n        cfg['children'] = [];\n        return cfg;\n    };\n    Container.prototype.onAttrChange = function (name, value, originValue) {\n        _super.prototype.onAttrChange.call(this, name, value, originValue);\n        if (name === 'matrix') {\n            var totalMatrix = this.getTotalMatrix();\n            this._applyChildrenMarix(totalMatrix);\n        }\n    };\n    // 不但应用到自己身上还要应用于子元素\n    Container.prototype.applyMatrix = function (matrix) {\n        var preTotalMatrix = this.getTotalMatrix();\n        _super.prototype.applyMatrix.call(this, matrix);\n        var totalMatrix = this.getTotalMatrix();\n        // totalMatrix 没有发生变化时，这里仅考虑两者都为 null 时\n        // 不继续向下传递矩阵\n        if (totalMatrix === preTotalMatrix) {\n            return;\n        }\n        this._applyChildrenMarix(totalMatrix);\n    };\n    // 在子元素上设置矩阵\n    Container.prototype._applyChildrenMarix = function (totalMatrix) {\n        var children = this.getChildren();\n        each(children, function (child) {\n            child.applyMatrix(totalMatrix);\n        });\n    };\n    // 兼容老版本的接口\n    Container.prototype.addShape = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var type = args[0];\n        var cfg = args[1];\n        if (isObject(type)) {\n            cfg = type;\n        }\n        else {\n            cfg['type'] = type;\n        }\n        var shapeType = SHAPE_MAP[cfg.type];\n        if (!shapeType) {\n            shapeType = upperFirst(cfg.type);\n            SHAPE_MAP[cfg.type] = shapeType;\n        }\n        var ShapeBase = this.getShapeBase();\n        var shape = new ShapeBase[shapeType](cfg);\n        this.add(shape);\n        return shape;\n    };\n    Container.prototype.addGroup = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var groupClass = args[0], cfg = args[1];\n        var group;\n        if (isFunction(groupClass)) {\n            if (cfg) {\n                group = new groupClass(cfg);\n            }\n            else {\n                group = new groupClass({\n                    // canvas,\n                    parent: this,\n                });\n            }\n        }\n        else {\n            var tmpCfg = groupClass || {};\n            var TmpGroupClass = this.getGroupBase();\n            group = new TmpGroupClass(tmpCfg);\n        }\n        this.add(group);\n        return group;\n    };\n    Container.prototype.getCanvas = function () {\n        var canvas;\n        if (this.isCanvas()) {\n            canvas = this;\n        }\n        else {\n            canvas = this.get('canvas');\n        }\n        return canvas;\n    };\n    Container.prototype.getShape = function (x, y, ev) {\n        // 如果不支持拾取，则直接返回\n        if (!isAllowCapture(this)) {\n            return null;\n        }\n        var children = this.getChildren();\n        var shape;\n        // 如果容器是 group\n        if (!this.isCanvas()) {\n            var v = [x, y, 1];\n            // 将 x, y 转换成对应于 group 的局部坐标\n            v = this.invertFromMatrix(v);\n            if (!this.isClipped(v[0], v[1])) {\n                shape = this._findShape(children, v[0], v[1], ev);\n            }\n        }\n        else {\n            shape = this._findShape(children, x, y, ev);\n        }\n        return shape;\n    };\n    Container.prototype._findShape = function (children, x, y, ev) {\n        var shape = null;\n        for (var i = children.length - 1; i >= 0; i--) {\n            var child = children[i];\n            if (isAllowCapture(child)) {\n                if (child.isGroup()) {\n                    shape = child.getShape(x, y, ev);\n                }\n                else if (child.isHit(x, y)) {\n                    shape = child;\n                }\n            }\n            if (shape) {\n                break;\n            }\n        }\n        return shape;\n    };\n    Container.prototype.add = function (element) {\n        var canvas = this.getCanvas();\n        var children = this.getChildren();\n        var timeline = this.get('timeline');\n        var preParent = element.getParent();\n        if (preParent) {\n            removeChild(preParent, element, false);\n        }\n        element.set('parent', this);\n        if (canvas) {\n            setCanvas(element, canvas);\n        }\n        if (timeline) {\n            setTimeline(element, timeline);\n        }\n        children.push(element);\n        afterAdd(element);\n        this._applyElementMatrix(element);\n    };\n    // 将当前容器的矩阵应用到子元素\n    Container.prototype._applyElementMatrix = function (element) {\n        var totalMatrix = this.getTotalMatrix();\n        // 添加图形或者分组时，需要把当前图元的矩阵设置进去\n        if (totalMatrix) {\n            element.applyMatrix(totalMatrix);\n        }\n    };\n    Container.prototype.getChildren = function () {\n        return this.get('children');\n    };\n    Container.prototype.sort = function () {\n        var children = this.getChildren();\n        // 稳定排序\n        each(children, function (child, index) {\n            child[INDEX] = index;\n            return child;\n        });\n        children.sort(getComparer(function (obj1, obj2) {\n            return obj1.get('zIndex') - obj2.get('zIndex');\n        }));\n        this.onCanvasChange('sort');\n    };\n    Container.prototype.clear = function () {\n        this.set('clearing', true);\n        if (this.destroyed) {\n            return;\n        }\n        var children = this.getChildren();\n        for (var i = children.length - 1; i >= 0; i--) {\n            children[i].destroy(); // 销毁子元素\n        }\n        this.set('children', []);\n        this.onCanvasChange('clear');\n        this.set('clearing', false);\n    };\n    Container.prototype.destroy = function () {\n        if (this.get('destroyed')) {\n            return;\n        }\n        this.clear();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * 获取第一个子元素\n     * @return {IElement} 第一个元素\n     */\n    Container.prototype.getFirst = function () {\n        return this.getChildByIndex(0);\n    };\n    /**\n     * 获取最后一个子元素\n     * @return {IElement} 元素\n     */\n    Container.prototype.getLast = function () {\n        var children = this.getChildren();\n        return this.getChildByIndex(children.length - 1);\n    };\n    /**\n     * 根据索引获取子元素\n     * @return {IElement} 第一个元素\n     */\n    Container.prototype.getChildByIndex = function (index) {\n        var children = this.getChildren();\n        return children[index];\n    };\n    /**\n     * 子元素的数量\n     * @return {number} 子元素数量\n     */\n    Container.prototype.getCount = function () {\n        var children = this.getChildren();\n        return children.length;\n    };\n    /**\n     * 是否包含对应元素\n     * @param {IElement} element 元素\n     * @return {boolean}\n     */\n    Container.prototype.contain = function (element) {\n        var children = this.getChildren();\n        return children.indexOf(element) > -1;\n    };\n    /**\n     * 移除对应子元素\n     * @param {IElement} element 子元素\n     * @param {boolean} destroy 是否销毁子元素，默认为 true\n     */\n    Container.prototype.removeChild = function (element, destroy) {\n        if (destroy === void 0) { destroy = true; }\n        if (this.contain(element)) {\n            element.remove(destroy);\n        }\n    };\n    /**\n     * 查找所有匹配的元素\n     * @param  {ElementFilterFn}   fn  匹配函数\n     * @return {IElement[]} 元素数组\n     */\n    Container.prototype.findAll = function (fn) {\n        var rst = [];\n        var children = this.getChildren();\n        each(children, function (element) {\n            if (fn(element)) {\n                rst.push(element);\n            }\n            if (element.isGroup()) {\n                rst = rst.concat(element.findAll(fn));\n            }\n        });\n        return rst;\n    };\n    /**\n     * 查找元素，找到第一个返回\n     * @param  {ElementFilterFn} fn    匹配函数\n     * @return {IElement|null} 元素，可以为空\n     */\n    Container.prototype.find = function (fn) {\n        var rst = null;\n        var children = this.getChildren();\n        each(children, function (element) {\n            if (fn(element)) {\n                rst = element;\n            }\n            else if (element.isGroup()) {\n                rst = element.find(fn);\n            }\n            if (rst) {\n                return false;\n            }\n        });\n        return rst;\n    };\n    /**\n     * 根据 ID 查找元素\n     * @param {string} id 元素 id\n     * @return {IElement|null} 元素\n     */\n    Container.prototype.findById = function (id) {\n        return this.find(function (element) {\n            return element.get('id') === id;\n        });\n    };\n    /**\n     * 该方法即将废弃，不建议使用\n     * 根据 className 查找元素\n     * TODO: 该方式定义暂时只给 G6 3.3 以后的版本使用，待 G6 中的 findByClassName 方法移除后，G 也需要同步移除\n     * @param {string} className 元素 className\n     * @return {IElement | null} 元素\n     */\n    Container.prototype.findByClassName = function (className) {\n        return this.find(function (element) {\n            return element.get('className') === className;\n        });\n    };\n    /**\n     * 根据 name 查找元素列表\n     * @param {string}      name 元素名称\n     * @return {IElement[]} 元素\n     */\n    Container.prototype.findAllByName = function (name) {\n        return this.findAll(function (element) {\n            return element.get('name') === name;\n        });\n    };\n    return Container;\n}(Element));\nexport default Container;\n//# sourceMappingURL=container.js.map"]}]}