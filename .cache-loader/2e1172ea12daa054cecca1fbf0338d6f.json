{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/d3-geo-projection/src/hammerRetroazimuthal.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/d3-geo-projection/src/hammerRetroazimuthal.js","mtime":1467599198000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { geoProjectionMutator as projectionMutator, geoCircle } from \"d3-geo\";\nimport { abs, acos, asin, atan2, cos, degrees, epsilon, halfPi, radians, sqrt, sin } from \"./math\";\nexport function hammerRetroazimuthalRaw(phi0) {\n    var sinPhi0 = sin(phi0), cosPhi0 = cos(phi0), rotate = hammerRetroazimuthalRotation(phi0);\n    rotate.invert = hammerRetroazimuthalRotation(-phi0);\n    function forward(lambda, phi) {\n        var p = rotate(lambda, phi);\n        lambda = p[0], phi = p[1];\n        var sinPhi = sin(phi), cosPhi = cos(phi), cosLambda = cos(lambda), z = acos(sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosLambda), sinz = sin(z), K = abs(sinz) > epsilon ? z / sinz : 1;\n        return [\n            K * cosPhi0 * sin(lambda),\n            (abs(lambda) > halfPi ? K : -K)\n                * (sinPhi0 * cosPhi - cosPhi0 * sinPhi * cosLambda)\n        ];\n    }\n    forward.invert = function (x, y) {\n        var rho = sqrt(x * x + y * y), sinz = -sin(rho), cosz = cos(rho), a = rho * cosz, b = -y * sinz, c = rho * sinPhi0, d = sqrt(a * a + b * b - c * c), phi = atan2(a * c + b * d, b * c - a * d), lambda = (rho > halfPi ? -1 : 1) * atan2(x * sinz, rho * cos(phi) * cosz + y * sin(phi) * sinz);\n        return rotate.invert(lambda, phi);\n    };\n    return forward;\n}\nfunction hammerRetroazimuthalRotation(phi0) {\n    var sinPhi0 = sin(phi0), cosPhi0 = cos(phi0);\n    return function (lambda, phi) {\n        var cosPhi = cos(phi), x = cos(lambda) * cosPhi, y = sin(lambda) * cosPhi, z = sin(phi);\n        return [\n            atan2(y, x * cosPhi0 - z * sinPhi0),\n            asin(z * cosPhi0 + x * sinPhi0)\n        ];\n    };\n}\nexport default function () {\n    var phi0 = 0, m = projectionMutator(hammerRetroazimuthalRaw), p = m(phi0), rotate_ = p.rotate, stream_ = p.stream, circle = geoCircle();\n    p.parallel = function (_) {\n        if (!arguments.length)\n            return phi0 * degrees;\n        var r = p.rotate();\n        return m(phi0 = _ * radians).rotate(r);\n    };\n    p.rotate = function (_) {\n        if (!arguments.length)\n            return (_ = rotate_.call(p), _[1] += phi0 * degrees, _);\n        rotate_.call(p, [_[0], _[1] - phi0 * degrees]);\n        circle.center([-_[0], -_[1]]);\n        return p;\n    };\n    p.stream = function (stream) {\n        stream = stream_(stream);\n        stream.sphere = function () {\n            stream.polygonStart();\n            var epsilon = 1e-2, ring = circle.radius(90 - epsilon)().coordinates[0], n = ring.length - 1, i = -1, p;\n            stream.lineStart();\n            while (++i < n)\n                stream.point((p = ring[i])[0], p[1]);\n            stream.lineEnd();\n            ring = circle.radius(90 + epsilon)().coordinates[0];\n            n = ring.length - 1;\n            stream.lineStart();\n            while (--i >= 0)\n                stream.point((p = ring[i])[0], p[1]);\n            stream.lineEnd();\n            stream.polygonEnd();\n        };\n        return stream;\n    };\n    return p\n        .scale(79.4187)\n        .parallel(45)\n        .clipAngle(180 - 1e-3);\n}\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/d3-geo-projection/src/hammerRetroazimuthal.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/d3-geo-projection/src/hammerRetroazimuthal.js"],"names":[],"mappings":"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","sourcesContent":["import {geoProjectionMutator as projectionMutator, geoCircle} from \"d3-geo\";\nimport {abs, acos, asin, atan2, cos, degrees, epsilon, halfPi, radians, sqrt, sin} from \"./math\";\n\nexport function hammerRetroazimuthalRaw(phi0) {\n  var sinPhi0 = sin(phi0),\n      cosPhi0 = cos(phi0),\n      rotate = hammerRetroazimuthalRotation(phi0);\n\n  rotate.invert = hammerRetroazimuthalRotation(-phi0);\n\n  function forward(lambda, phi) {\n    var p = rotate(lambda, phi);\n    lambda = p[0], phi = p[1];\n    var sinPhi = sin(phi),\n        cosPhi = cos(phi),\n        cosLambda = cos(lambda),\n        z = acos(sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosLambda),\n        sinz = sin(z),\n        K = abs(sinz) > epsilon ? z / sinz : 1;\n    return [\n      K * cosPhi0 * sin(lambda),\n      (abs(lambda) > halfPi ? K : -K) // rotate for back hemisphere\n        * (sinPhi0 * cosPhi - cosPhi0 * sinPhi * cosLambda)\n    ];\n  }\n\n  forward.invert = function(x, y) {\n    var rho = sqrt(x * x + y * y),\n        sinz = -sin(rho),\n        cosz = cos(rho),\n        a = rho * cosz,\n        b = -y * sinz,\n        c = rho * sinPhi0,\n        d = sqrt(a * a + b * b - c * c),\n        phi = atan2(a * c + b * d, b * c - a * d),\n        lambda = (rho > halfPi ? -1 : 1) * atan2(x * sinz, rho * cos(phi) * cosz + y * sin(phi) * sinz);\n    return rotate.invert(lambda, phi);\n  };\n\n  return forward;\n}\n\n// Latitudinal rotation by phi0.\n// Temporary hack until D3 supports arbitrary small-circle clipping origins.\nfunction hammerRetroazimuthalRotation(phi0) {\n  var sinPhi0 = sin(phi0),\n      cosPhi0 = cos(phi0);\n\n  return function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi);\n    return [\n      atan2(y, x * cosPhi0 - z * sinPhi0),\n      asin(z * cosPhi0 + x * sinPhi0)\n    ];\n  };\n}\n\nexport default function() {\n  var phi0 = 0,\n      m = projectionMutator(hammerRetroazimuthalRaw),\n      p = m(phi0),\n      rotate_ = p.rotate,\n      stream_ = p.stream,\n      circle = geoCircle();\n\n  p.parallel = function(_) {\n    if (!arguments.length) return phi0 * degrees;\n    var r = p.rotate();\n    return m(phi0 = _ * radians).rotate(r);\n  };\n\n  // Temporary hack; see hammerRetroazimuthalRotation.\n  p.rotate = function(_) {\n    if (!arguments.length) return (_ = rotate_.call(p), _[1] += phi0 * degrees, _);\n    rotate_.call(p, [_[0], _[1] - phi0 * degrees]);\n    circle.center([-_[0], -_[1]]);\n    return p;\n  };\n\n  p.stream = function(stream) {\n    stream = stream_(stream);\n    stream.sphere = function() {\n      stream.polygonStart();\n      var epsilon = 1e-2,\n          ring = circle.radius(90 - epsilon)().coordinates[0],\n          n = ring.length - 1,\n          i = -1,\n          p;\n      stream.lineStart();\n      while (++i < n) stream.point((p = ring[i])[0], p[1]);\n      stream.lineEnd();\n      ring = circle.radius(90 + epsilon)().coordinates[0];\n      n = ring.length - 1;\n      stream.lineStart();\n      while (--i >= 0) stream.point((p = ring[i])[0], p[1]);\n      stream.lineEnd();\n      stream.polygonEnd();\n    };\n    return stream;\n  };\n\n  return p\n      .scale(79.4187)\n      .parallel(45)\n      .clipAngle(180 - 1e-3);\n}\n"]}]}