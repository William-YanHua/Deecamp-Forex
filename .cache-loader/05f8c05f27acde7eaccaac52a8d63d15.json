{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/combo/stackedColumn-line/layer.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/combo/stackedColumn-line/layer.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { __assign, __extends } from \"tslib\";\nimport { registerPlotType } from '../../base/global';\nimport { deepMix, each, contains } from '@antv/util';\nimport ColumnLineLayer from '../column-line/layer';\nimport StackedColumnLayer from '../../plots/stacked-column/layer';\nimport { getGlobalTheme } from '../../theme';\nvar defaultLineConfig = {\n    color: '#f5bc32',\n    lineSize: 4,\n    connectNull: true,\n    point: {\n        visible: false,\n        size: 3,\n        shape: 'circle',\n        style: {\n            stroke: '#fff',\n        },\n    },\n    label: {\n        visible: false,\n    },\n};\nvar defaultColumnConfig = {\n    color: ['#5B8FF9', '#5AD8A6', '#5D7092', '#F6BD16', '#E8684A', '#6DC8EC', '#9270CA', '#FF9D4D', '#269A99', '#FF99C3'],\n};\nvar defaultYAxisConfig = {\n    visible: true,\n    colorMapping: true,\n    grid: {\n        visible: true,\n    },\n    line: {\n        visible: false,\n    },\n    tickLine: {\n        visible: false,\n    },\n    label: {\n        visible: true,\n        autoHide: true,\n        autoRotate: false,\n    },\n    title: {\n        autoRotate: true,\n        visible: false,\n        spacing: 12,\n    },\n};\nvar StackedColumnLineLayer = (function (_super) {\n    __extends(StackedColumnLineLayer, _super);\n    function StackedColumnLineLayer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'groupedColumnLine';\n        _this.requiredField = ['xField', 'yField', 'columnStackField'];\n        return _this;\n    }\n    StackedColumnLineLayer.getDefaultOptions = function () {\n        return deepMix({}, _super.getDefaultOptions.call(this), {\n            yAxis: {\n                leftConfig: deepMix({}, defaultYAxisConfig, { colorMapping: false }),\n                rightConfig: defaultYAxisConfig,\n            },\n            lineConfig: defaultLineConfig,\n            columnConfig: defaultColumnConfig,\n            legend: {\n                visible: true,\n            },\n        });\n    };\n    StackedColumnLineLayer.prototype.beforeInit = function () {\n        var _a, _b;\n        var stackedValue = this.getValueByStackField();\n        var _c = this, options = _c.options, initialOptions = _c.initialOptions;\n        if (options.lineSeriesField) {\n            options.yAxis.rightConfig.colorMapping = false;\n            if (!((_a = initialOptions.lineConfig) === null || _a === void 0 ? void 0 : _a.lineSize)) {\n                options.lineConfig.lineSize = 3;\n            }\n            if (!((_b = initialOptions.lineConfig) === null || _b === void 0 ? void 0 : _b.color)) {\n                var _d = getGlobalTheme(), colors = _d.colors, colors_20 = _d.colors_20;\n                var seriesValue = this.getValueBySeriesField();\n                var colorSeries_1 = seriesValue.length > colors.length ? colors_20 : colors;\n                var colorPlates_1 = [];\n                var startIndex_1 = stackedValue.length;\n                each(seriesValue, function (v, index) {\n                    colorPlates_1.push(colorSeries_1[index + startIndex_1]);\n                });\n                options.lineConfig.color = colorPlates_1;\n            }\n        }\n        var color = this.options.columnConfig.color;\n        this.options.columnConfig.color = color.slice(0, stackedValue.length);\n    };\n    StackedColumnLineLayer.prototype.drawColumn = function () {\n        var _this = this;\n        var _a = this.options, data = _a.data, xField = _a.xField, yField = _a.yField, columnStackField = _a.columnStackField, xAxis = _a.xAxis, tooltip = _a.tooltip, columnConfig = _a.columnConfig, events = _a.events;\n        var column = this.createLayer(StackedColumnLayer, data[0], __assign({ xField: xField, yField: yField[0], stackField: columnStackField, xAxis: xAxis, yAxis: deepMix({}, this.yAxis(0), {\n                grid: {\n                    visible: true,\n                },\n                nice: true,\n            }), legend: {\n                visible: false,\n            }, tooltip: deepMix({}, tooltip, {\n                showMarkers: false,\n                custom: {\n                    onChange: function (containerDom, ev) {\n                        _this.tooltip(containerDom, ev);\n                    },\n                },\n            }), events: events }, columnConfig));\n        column.render();\n    };\n    StackedColumnLineLayer.prototype.customLegend = function () {\n        var _this = this;\n        var _a = this.options, yField = _a.yField, legend = _a.legend;\n        var colors = this.colors;\n        var container = this.container.addGroup();\n        var legendCfg = legend;\n        var symbols = ['square', 'circle'];\n        each(this.geomLayers, function (geom, index) {\n            var legend;\n            if (geom.options.seriesField) {\n                var values = _this.getValueBySeriesField();\n                legend = _this.createNormalLegend(values, symbols[index], colors[index], legendCfg, container);\n            }\n            else if (geom.options.stackField) {\n                var values = _this.getValueByStackField();\n                legend = _this.createNormalLegend(values, symbols[index], colors[index], legendCfg, container);\n            }\n            else {\n                legend = _this.createSingleLegend(yField[index], symbols[index], colors[index], legendCfg, container);\n            }\n            _this.legends.push(legend);\n        });\n        each(this.geomLayers, function (geom, index) {\n            if (geom.options.seriesField) {\n                _this.multipleLegendFilter(index, geom.options.seriesField);\n            }\n            else if (geom.options.stackField) {\n                _this.multipleLegendFilter(index, geom.options.stackField);\n            }\n            else {\n                _this.legendFilter(index);\n            }\n        });\n    };\n    StackedColumnLineLayer.prototype.getValueByStackField = function () {\n        var _a = this.options, columnStackField = _a.columnStackField, data = _a.data;\n        var columnData = data[0];\n        var values = [];\n        each(columnData, function (d) {\n            var v = d[columnStackField];\n            if (!contains(values, v)) {\n                values.push(v);\n            }\n        });\n        return values;\n    };\n    StackedColumnLineLayer.prototype.getUnCheckedValue = function () {\n        var value = [];\n        each(this.legends, function (legend) {\n            var uncheckedItems = legend.getItemsByState('unchecked');\n            each(uncheckedItems, function (item) {\n                value.push(item.name);\n            });\n        });\n        return value;\n    };\n    StackedColumnLineLayer.prototype.getMockData = function (index) {\n        var _a = this.options, xField = _a.xField, yField = _a.yField, columnStackField = _a.columnStackField;\n        var mockA = {};\n        mockA[xField] = 'null_1';\n        mockA[yField[index]] = 0;\n        mockA[columnStackField] = 'null_a';\n        var mockB = {};\n        mockB[xField] = 'null_1';\n        mockB[yField[index]] = 1;\n        mockB[columnStackField] = 'null_a';\n        return [mockA, mockB];\n    };\n    return StackedColumnLineLayer;\n}(ColumnLineLayer));\nexport default StackedColumnLineLayer;\nregisterPlotType('stackedColumnLine', StackedColumnLineLayer);\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/combo/stackedColumn-line/layer.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/combo/stackedColumn-line/layer.js"],"names":[],"mappings":"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","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { registerPlotType } from '../../base/global';\nimport { deepMix, each, contains } from '@antv/util';\nimport ColumnLineLayer from '../column-line/layer';\nimport StackedColumnLayer from '../../plots/stacked-column/layer';\nimport { getGlobalTheme } from '../../theme';\nvar defaultLineConfig = {\n    color: '#f5bc32',\n    lineSize: 4,\n    connectNull: true,\n    point: {\n        visible: false,\n        size: 3,\n        shape: 'circle',\n        style: {\n            stroke: '#fff',\n        },\n    },\n    label: {\n        visible: false,\n    },\n};\nvar defaultColumnConfig = {\n    color: ['#5B8FF9', '#5AD8A6', '#5D7092', '#F6BD16', '#E8684A', '#6DC8EC', '#9270CA', '#FF9D4D', '#269A99', '#FF99C3'],\n};\nvar defaultYAxisConfig = {\n    visible: true,\n    colorMapping: true,\n    grid: {\n        visible: true,\n    },\n    line: {\n        visible: false,\n    },\n    tickLine: {\n        visible: false,\n    },\n    label: {\n        visible: true,\n        autoHide: true,\n        autoRotate: false,\n    },\n    title: {\n        autoRotate: true,\n        visible: false,\n        spacing: 12,\n    },\n};\nvar StackedColumnLineLayer = /** @class */ (function (_super) {\n    __extends(StackedColumnLineLayer, _super);\n    function StackedColumnLineLayer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'groupedColumnLine';\n        _this.requiredField = ['xField', 'yField', 'columnStackField'];\n        return _this;\n    }\n    StackedColumnLineLayer.getDefaultOptions = function () {\n        return deepMix({}, _super.getDefaultOptions.call(this), {\n            yAxis: {\n                leftConfig: deepMix({}, defaultYAxisConfig, { colorMapping: false }),\n                rightConfig: defaultYAxisConfig,\n            },\n            lineConfig: defaultLineConfig,\n            columnConfig: defaultColumnConfig,\n            legend: {\n                visible: true,\n            },\n        });\n    };\n    StackedColumnLineLayer.prototype.beforeInit = function () {\n        var _a, _b;\n        var stackedValue = this.getValueByStackField();\n        var _c = this, options = _c.options, initialOptions = _c.initialOptions;\n        if (options.lineSeriesField) {\n            options.yAxis.rightConfig.colorMapping = false;\n            if (!((_a = initialOptions.lineConfig) === null || _a === void 0 ? void 0 : _a.lineSize)) {\n                options.lineConfig.lineSize = 3;\n            }\n            if (!((_b = initialOptions.lineConfig) === null || _b === void 0 ? void 0 : _b.color)) {\n                var _d = getGlobalTheme(), colors = _d.colors, colors_20 = _d.colors_20;\n                var seriesValue = this.getValueBySeriesField();\n                var colorSeries_1 = seriesValue.length > colors.length ? colors_20 : colors;\n                var colorPlates_1 = [];\n                var startIndex_1 = stackedValue.length;\n                each(seriesValue, function (v, index) {\n                    colorPlates_1.push(colorSeries_1[index + startIndex_1]);\n                });\n                options.lineConfig.color = colorPlates_1;\n            }\n        }\n        var color = this.options.columnConfig.color;\n        this.options.columnConfig.color = color.slice(0, stackedValue.length);\n    };\n    StackedColumnLineLayer.prototype.drawColumn = function () {\n        var _this = this;\n        var _a = this.options, data = _a.data, xField = _a.xField, yField = _a.yField, columnStackField = _a.columnStackField, xAxis = _a.xAxis, tooltip = _a.tooltip, columnConfig = _a.columnConfig, events = _a.events;\n        var column = this.createLayer(StackedColumnLayer, data[0], __assign({ xField: xField, yField: yField[0], stackField: columnStackField, xAxis: xAxis, yAxis: deepMix({}, this.yAxis(0), {\n                grid: {\n                    visible: true,\n                },\n                nice: true,\n            }), legend: {\n                visible: false,\n            }, tooltip: deepMix({}, tooltip, {\n                showMarkers: false,\n                custom: {\n                    onChange: function (containerDom, ev) {\n                        _this.tooltip(containerDom, ev);\n                    },\n                },\n            }), events: events }, columnConfig));\n        column.render();\n    };\n    StackedColumnLineLayer.prototype.customLegend = function () {\n        var _this = this;\n        var _a = this.options, yField = _a.yField, legend = _a.legend;\n        var colors = this.colors;\n        var container = this.container.addGroup();\n        var legendCfg = legend;\n        var symbols = ['square', 'circle'];\n        each(this.geomLayers, function (geom, index) {\n            var legend;\n            if (geom.options.seriesField) {\n                var values = _this.getValueBySeriesField();\n                legend = _this.createNormalLegend(values, symbols[index], colors[index], legendCfg, container);\n            }\n            else if (geom.options.stackField) {\n                var values = _this.getValueByStackField();\n                legend = _this.createNormalLegend(values, symbols[index], colors[index], legendCfg, container);\n            }\n            else {\n                legend = _this.createSingleLegend(yField[index], symbols[index], colors[index], legendCfg, container);\n            }\n            _this.legends.push(legend);\n        });\n        // 使用legend做图层筛选\n        each(this.geomLayers, function (geom, index) {\n            if (geom.options.seriesField) {\n                _this.multipleLegendFilter(index, geom.options.seriesField);\n            }\n            else if (geom.options.stackField) {\n                _this.multipleLegendFilter(index, geom.options.stackField);\n            }\n            else {\n                _this.legendFilter(index);\n            }\n        });\n    };\n    StackedColumnLineLayer.prototype.getValueByStackField = function () {\n        var _a = this.options, columnStackField = _a.columnStackField, data = _a.data;\n        var columnData = data[0];\n        var values = [];\n        each(columnData, function (d) {\n            var v = d[columnStackField];\n            if (!contains(values, v)) {\n                values.push(v);\n            }\n        });\n        return values;\n    };\n    StackedColumnLineLayer.prototype.getUnCheckedValue = function () {\n        var value = [];\n        each(this.legends, function (legend) {\n            var uncheckedItems = legend.getItemsByState('unchecked');\n            each(uncheckedItems, function (item) {\n                value.push(item.name);\n            });\n        });\n        return value;\n    };\n    StackedColumnLineLayer.prototype.getMockData = function (index) {\n        var _a = this.options, xField = _a.xField, yField = _a.yField, columnStackField = _a.columnStackField;\n        var mockA = {};\n        mockA[xField] = 'null_1';\n        mockA[yField[index]] = 0;\n        mockA[columnStackField] = 'null_a';\n        var mockB = {};\n        mockB[xField] = 'null_1';\n        mockB[yField[index]] = 1;\n        mockB[columnStackField] = 'null_a';\n        return [mockA, mockB];\n    };\n    return StackedColumnLineLayer;\n}(ColumnLineLayer));\nexport default StackedColumnLineLayer;\nregisterPlotType('stackedColumnLine', StackedColumnLineLayer);\n//# sourceMappingURL=layer.js.map"]}]}