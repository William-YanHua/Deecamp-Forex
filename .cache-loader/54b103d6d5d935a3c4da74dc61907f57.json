{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/calendar/layer.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/calendar/layer.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { __assign, __extends } from \"tslib\";\nimport { deepMix, isNil, map, get } from '@antv/util';\nimport fecha from 'fecha';\nimport ViewLayer from '../../base/view-layer';\nimport { DAY_FIELD, FORMATTER, MONTHS, WEEK_FIELD, WEEKS } from './constant';\nimport { generateCalendarData, getMonthCenterWeek } from './util';\nimport { registerPlotType } from '../../base/global';\nimport { getDateRange } from '../../util/date';\nimport { getComponent } from '../../components/factory';\nimport * as EventParser from './event';\nvar CalendarLayer = (function (_super) {\n    __extends(CalendarLayer, _super);\n    function CalendarLayer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'calendar';\n        return _this;\n    }\n    CalendarLayer.getDefaultOptions = function () {\n        var _a;\n        return deepMix({}, _super.getDefaultOptions.call(this), {\n            xAxis: {\n                line: {\n                    visible: false,\n                },\n                grid: {\n                    visible: false,\n                },\n                tickLine: {\n                    visible: false,\n                },\n                label: {\n                    visible: true,\n                    autoRotate: false,\n                    autoHide: false,\n                },\n            },\n            yAxis: {\n                line: {\n                    visible: false,\n                },\n                grid: {\n                    visible: false,\n                },\n                tickLine: {\n                    visible: false,\n                },\n                label: {\n                    visible: true,\n                    autoRotate: false,\n                    autoHide: false,\n                },\n            },\n            legend: { visible: false },\n            meta: (_a = {},\n                _a[DAY_FIELD] = {\n                    type: 'cat',\n                    alias: 'Day',\n                    values: [0, 1, 2, 3, 4, 5, 6],\n                },\n                _a[WEEK_FIELD] = {\n                    type: 'cat',\n                    alias: 'Month',\n                },\n                _a),\n            tooltip: {\n                visible: true,\n                showTitle: true,\n                showCrosshairs: false,\n                showMarkers: false,\n                title: 'date',\n            },\n        });\n    };\n    CalendarLayer.prototype.processData = function (data) {\n        var dateField = this.options.dateField;\n        var dateRange = this.options.dateRange;\n        if (isNil(dateRange)) {\n            var dates = map(data, function (datum) { return fecha.parse(\"\" + datum[dateField], FORMATTER); });\n            dateRange = getDateRange(dates);\n        }\n        return generateCalendarData(data, dateRange, dateField);\n    };\n    CalendarLayer.prototype.addGeometry = function () {\n        var _a = this.options, valueField = _a.valueField, colors = _a.colors, tooltip = _a.tooltip;\n        var polygonConfig = {\n            type: 'polygon',\n            position: {\n                fields: [WEEK_FIELD, DAY_FIELD],\n            },\n            shape: {\n                values: ['calendar-polygon'],\n            },\n            color: {\n                fields: [valueField],\n                values: colors,\n            },\n            label: this.extractLabel(),\n        };\n        if (tooltip && (tooltip.fields || tooltip.formatter)) {\n            this.geometryTooltip(polygonConfig);\n        }\n        this.setConfig('geometry', polygonConfig);\n    };\n    CalendarLayer.prototype.geometryTooltip = function (geomConfig) {\n        geomConfig.tooltip = {};\n        var tooltipOptions = this.options.tooltip;\n        if (tooltipOptions.fields) {\n            geomConfig.tooltip.fields = tooltipOptions.fields;\n        }\n        if (tooltipOptions.formatter) {\n            geomConfig.tooltip.callback = tooltipOptions.formatter;\n            if (!tooltipOptions.fields) {\n                geomConfig.tooltip.fields = [WEEK_FIELD, DAY_FIELD];\n            }\n        }\n    };\n    CalendarLayer.prototype.extractLabel = function () {\n        var props = this.options;\n        var label = props.label;\n        if (label && label.visible === false) {\n            return false;\n        }\n        var valueField = this.options.valueField;\n        return getComponent('label', __assign({ plot: this, fields: [valueField], position: 'top', offset: 0 }, label));\n    };\n    CalendarLayer.prototype.coord = function () {\n        var coordinateConfig = {\n            type: 'rect',\n            cfg: {},\n            actions: [['reflect', 'y']],\n        };\n        this.setConfig('coordinate', coordinateConfig);\n    };\n    CalendarLayer.prototype.geometryParser = function () {\n        return '';\n    };\n    CalendarLayer.prototype.axis = function () {\n        var xAxis_parser = getComponent('axis', {\n            plot: this,\n            dim: 'x',\n        });\n        var yAxis_parser = getComponent('axis', {\n            plot: this,\n            dim: 'y',\n        });\n        var axesConfig = {};\n        axesConfig[WEEK_FIELD] = xAxis_parser;\n        axesConfig[DAY_FIELD] = yAxis_parser;\n        this.setConfig('axes', axesConfig);\n    };\n    CalendarLayer.prototype.scale = function () {\n        _super.prototype.scale.call(this);\n        var monthWeek = getMonthCenterWeek(this.options.dateRange);\n        var scales = this.config.scales;\n        var _a = this.options, _b = _a.weeks, weeks = _b === void 0 ? WEEKS : _b, _c = _a.months, months = _c === void 0 ? MONTHS : _c;\n        var x = scales[WEEK_FIELD];\n        var y = scales[DAY_FIELD];\n        x.formatter = function (v) {\n            var m = monthWeek[v];\n            return m !== undefined ? months[m] : '';\n        };\n        y.formatter = function (v) { return weeks[v] || ''; };\n        var _d = this.options, xAxis = _d.xAxis, yAxis = _d.yAxis;\n        x.alias = get(xAxis, ['title', 'text'], x.alias);\n        y.alias = get(yAxis, ['title', 'text'], y.alias);\n        this.setConfig('scales', scales);\n    };\n    CalendarLayer.prototype.parseEvents = function () {\n        _super.prototype.parseEvents.call(this, EventParser);\n    };\n    return CalendarLayer;\n}(ViewLayer));\nexport default CalendarLayer;\nregisterPlotType('calendar', CalendarLayer);\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/calendar/layer.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/calendar/layer.js"],"names":[],"mappings":"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","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { deepMix, isNil, map, get } from '@antv/util';\nimport fecha from 'fecha';\nimport ViewLayer from '../../base/view-layer';\nimport { DAY_FIELD, FORMATTER, MONTHS, WEEK_FIELD, WEEKS } from './constant';\nimport { generateCalendarData, getMonthCenterWeek } from './util';\nimport { registerPlotType } from '../../base/global';\nimport { getDateRange } from '../../util/date';\nimport { getComponent } from '../../components/factory';\nimport * as EventParser from './event';\n/**\n * 日历图\n */\nvar CalendarLayer = /** @class */ (function (_super) {\n    __extends(CalendarLayer, _super);\n    function CalendarLayer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'calendar';\n        return _this;\n    }\n    CalendarLayer.getDefaultOptions = function () {\n        var _a;\n        return deepMix({}, _super.getDefaultOptions.call(this), {\n            xAxis: {\n                line: {\n                    visible: false,\n                },\n                grid: {\n                    visible: false,\n                },\n                tickLine: {\n                    visible: false,\n                },\n                label: {\n                    visible: true,\n                    autoRotate: false,\n                    autoHide: false,\n                },\n            },\n            yAxis: {\n                line: {\n                    visible: false,\n                },\n                grid: {\n                    visible: false,\n                },\n                tickLine: {\n                    visible: false,\n                },\n                label: {\n                    visible: true,\n                    autoRotate: false,\n                    autoHide: false,\n                },\n            },\n            legend: { visible: false },\n            meta: (_a = {},\n                _a[DAY_FIELD] = {\n                    type: 'cat',\n                    alias: 'Day',\n                    values: [0, 1, 2, 3, 4, 5, 6],\n                },\n                _a[WEEK_FIELD] = {\n                    type: 'cat',\n                    alias: 'Month',\n                },\n                _a),\n            tooltip: {\n                visible: true,\n                showTitle: true,\n                showCrosshairs: false,\n                showMarkers: false,\n                title: 'date',\n            },\n        });\n    };\n    /**\n     * 复写父类的数据处理类，主要完成：\n     * 1. 生成 polygon 的 x y field（虚拟的，无需用户传入）\n     *\n     * @param data\n     */\n    CalendarLayer.prototype.processData = function (data) {\n        var dateField = this.options.dateField;\n        var dateRange = this.options.dateRange;\n        // 给与默认值是当前这一年\n        if (isNil(dateRange)) {\n            var dates = map(data, function (datum) { return fecha.parse(\"\" + datum[dateField], FORMATTER); });\n            dateRange = getDateRange(dates);\n        }\n        return generateCalendarData(data, dateRange, dateField);\n    };\n    CalendarLayer.prototype.addGeometry = function () {\n        var _a = this.options, valueField = _a.valueField, colors = _a.colors, tooltip = _a.tooltip;\n        var polygonConfig = {\n            type: 'polygon',\n            position: {\n                fields: [WEEK_FIELD, DAY_FIELD],\n            },\n            shape: {\n                values: ['calendar-polygon'],\n            },\n            color: {\n                fields: [valueField],\n                values: colors,\n            },\n            label: this.extractLabel(),\n        };\n        if (tooltip && (tooltip.fields || tooltip.formatter)) {\n            this.geometryTooltip(polygonConfig);\n        }\n        this.setConfig('geometry', polygonConfig);\n    };\n    CalendarLayer.prototype.geometryTooltip = function (geomConfig) {\n        geomConfig.tooltip = {};\n        var tooltipOptions = this.options.tooltip;\n        if (tooltipOptions.fields) {\n            geomConfig.tooltip.fields = tooltipOptions.fields;\n        }\n        if (tooltipOptions.formatter) {\n            geomConfig.tooltip.callback = tooltipOptions.formatter;\n            if (!tooltipOptions.fields) {\n                geomConfig.tooltip.fields = [WEEK_FIELD, DAY_FIELD];\n            }\n        }\n    };\n    CalendarLayer.prototype.extractLabel = function () {\n        var props = this.options;\n        var label = props.label;\n        if (label && label.visible === false) {\n            return false;\n        }\n        var valueField = this.options.valueField;\n        return getComponent('label', __assign({ plot: this, fields: [valueField], position: 'top', offset: 0 }, label));\n    };\n    /**\n     * 写入坐标系配置，默认增加镜像\n     */\n    CalendarLayer.prototype.coord = function () {\n        // 默认做镜像处理\n        var coordinateConfig = {\n            type: 'rect',\n            cfg: {},\n            actions: [['reflect', 'y']],\n        };\n        this.setConfig('coordinate', coordinateConfig);\n    };\n    /**\n     * 无需 geometry parser，直接使用 polygon 即可\n     */\n    CalendarLayer.prototype.geometryParser = function () {\n        return '';\n    };\n    CalendarLayer.prototype.axis = function () {\n        var xAxis_parser = getComponent('axis', {\n            plot: this,\n            dim: 'x',\n        });\n        var yAxis_parser = getComponent('axis', {\n            plot: this,\n            dim: 'y',\n        });\n        var axesConfig = {};\n        axesConfig[WEEK_FIELD] = xAxis_parser;\n        axesConfig[DAY_FIELD] = yAxis_parser;\n        /** 存储坐标轴配置项到config */\n        this.setConfig('axes', axesConfig);\n    };\n    CalendarLayer.prototype.scale = function () {\n        _super.prototype.scale.call(this);\n        var monthWeek = getMonthCenterWeek(this.options.dateRange);\n        // 拿出 scale 二次加工，主要是配置 x y 中的标题显示\n        var scales = this.config.scales;\n        var _a = this.options, _b = _a.weeks, weeks = _b === void 0 ? WEEKS : _b, _c = _a.months, months = _c === void 0 ? MONTHS : _c;\n        var x = scales[WEEK_FIELD];\n        var y = scales[DAY_FIELD];\n        // 1. 设置 formatter\n        x.formatter = function (v) {\n            var m = monthWeek[v];\n            return m !== undefined ? months[m] : '';\n        };\n        y.formatter = function (v) { return weeks[v] || ''; };\n        // 2. 设置 alias\n        var _d = this.options, xAxis = _d.xAxis, yAxis = _d.yAxis;\n        x.alias = get(xAxis, ['title', 'text'], x.alias);\n        y.alias = get(yAxis, ['title', 'text'], y.alias);\n        this.setConfig('scales', scales);\n    };\n    CalendarLayer.prototype.parseEvents = function () {\n        _super.prototype.parseEvents.call(this, EventParser);\n    };\n    return CalendarLayer;\n}(ViewLayer));\nexport default CalendarLayer;\n// 注册到池子中\nregisterPlotType('calendar', CalendarLayer);\n//# sourceMappingURL=layer.js.map"]}]}