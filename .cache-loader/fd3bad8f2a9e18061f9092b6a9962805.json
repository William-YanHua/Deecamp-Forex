{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\geom\\heatmap.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\geom\\heatmap.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\r\nvar _require = require('@antv/attr/lib'), ColorUtil = _require.ColorUtil;\r\nvar GeomBase = require('./base');\r\nvar Util = require('../util');\r\nvar ORIGIN_FIELD = '_origin';\r\nvar SHADOW_CANVAS = 'shadowCanvas';\r\nvar VALUE_RANGE = 'valueRange';\r\nvar IMAGE_SHAPE = 'imageShape';\r\nvar MAPPED_DATA = 'mappedData';\r\nvar GRAY_SCALE_BLURRED_CANVAS = 'grayScaleBlurredCanvas';\r\nvar HEATMAP_SIZE = 'heatmapSize';\r\nvar paletteCache = {};\r\nvar Heatmap = function (_GeomBase) {\r\n    _inheritsLoose(Heatmap, _GeomBase);\r\n    function Heatmap() {\r\n        return _GeomBase.apply(this, arguments) || this;\r\n    }\r\n    var _proto = Heatmap.prototype;\r\n    _proto.getDefaultCfg = function getDefaultCfg() {\r\n        var cfg = _GeomBase.prototype.getDefaultCfg.call(this);\r\n        cfg.type = 'heatmap';\r\n        return cfg;\r\n    };\r\n    _proto._prepareRange = function _prepareRange() {\r\n        var self = this;\r\n        var data = self.get(MAPPED_DATA);\r\n        var colorAttr = self.getAttr('color');\r\n        var colorField = colorAttr.field;\r\n        var min = Infinity;\r\n        var max = -Infinity;\r\n        data.forEach(function (row) {\r\n            var value = row[ORIGIN_FIELD][colorField];\r\n            if (value > max) {\r\n                max = value;\r\n            }\r\n            if (value < min) {\r\n                min = value;\r\n            }\r\n        });\r\n        if (min === max) {\r\n            min = max - 1;\r\n        }\r\n        var range = [min, max];\r\n        self.set(VALUE_RANGE, range);\r\n    };\r\n    _proto._prepareSize = function _prepareSize() {\r\n        var self = this;\r\n        var radius = self.getDefaultValue('size');\r\n        if (!Util.isNumber(radius)) {\r\n            radius = self._getDefaultSize();\r\n        }\r\n        var styleOptions = self.get('styleOptions');\r\n        var blur = styleOptions && Util.isObject(styleOptions.style) ? styleOptions.style.blur : null;\r\n        if (!Util.isFinite(blur) || blur === null) {\r\n            blur = radius / 2;\r\n        }\r\n        self.set(HEATMAP_SIZE, {\r\n            blur: blur,\r\n            radius: radius\r\n        });\r\n    };\r\n    _proto._getDefaultSize = function _getDefaultSize() {\r\n        var self = this;\r\n        var position = self.getAttr('position');\r\n        var coord = self.get('coord');\r\n        var radius = Math.min(coord.width / (position.scales[0].ticks.length * 4), coord.height / (position.scales[1].ticks.length * 4));\r\n        return radius;\r\n    };\r\n    _proto._colorize = function _colorize(img) {\r\n        var self = this;\r\n        var colorAttr = self.getAttr('color');\r\n        var pixels = img.data;\r\n        for (var i = 3; i < pixels.length; i += 4) {\r\n            var alpha = pixels[i];\r\n            if (alpha) {\r\n                var palette = void 0;\r\n                if (paletteCache[alpha]) {\r\n                    palette = paletteCache[alpha];\r\n                }\r\n                else {\r\n                    palette = ColorUtil.rgb2arr(colorAttr.gradient(alpha / 256));\r\n                    paletteCache[alpha] = palette;\r\n                }\r\n                pixels[i - 3] = palette[0];\r\n                pixels[i - 2] = palette[1];\r\n                pixels[i - 1] = palette[2];\r\n                pixels[i] = alpha;\r\n            }\r\n        }\r\n    };\r\n    _proto._prepareGreyScaleBlurredCircle = function _prepareGreyScaleBlurredCircle(r, blur) {\r\n        var self = this;\r\n        var circleCanvas = self.get(GRAY_SCALE_BLURRED_CANVAS);\r\n        if (!circleCanvas) {\r\n            circleCanvas = document.createElement('canvas');\r\n            self.set(GRAY_SCALE_BLURRED_CANVAS, circleCanvas);\r\n        }\r\n        var r2 = r + blur;\r\n        var ctx = circleCanvas.getContext('2d');\r\n        circleCanvas.width = circleCanvas.height = r2 * 2;\r\n        ctx.clearRect(0, 0, circleCanvas.width, circleCanvas.height);\r\n        ctx.shadowOffsetX = ctx.shadowOffsetY = r2 * 2;\r\n        ctx.shadowBlur = blur;\r\n        ctx.shadowColor = 'black';\r\n        ctx.beginPath();\r\n        ctx.arc(-r2, -r2, r, 0, Math.PI * 2, true);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    };\r\n    _proto._drawGrayScaleBlurredCircle = function _drawGrayScaleBlurredCircle(x, y, r, alpha, ctx) {\r\n        var self = this;\r\n        var circleCanvas = self.get(GRAY_SCALE_BLURRED_CANVAS);\r\n        ctx.globalAlpha = alpha;\r\n        ctx.drawImage(circleCanvas, x - r, y - r);\r\n    };\r\n    _proto._getShadowCanvasCtx = function _getShadowCanvasCtx() {\r\n        var self = this;\r\n        var canvas = self.get(SHADOW_CANVAS);\r\n        if (!canvas) {\r\n            canvas = document.createElement('canvas');\r\n            self.set(SHADOW_CANVAS, canvas);\r\n        }\r\n        var _self$get = self.get('coord'), width = _self$get.width, height = _self$get.height;\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        return canvas.getContext('2d');\r\n    };\r\n    _proto._clearShadowCanvasCtx = function _clearShadowCanvasCtx() {\r\n        var ctx = this._getShadowCanvasCtx();\r\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n    };\r\n    _proto._getImageShape = function _getImageShape() {\r\n        var self = this;\r\n        var imageShape = self.get(IMAGE_SHAPE);\r\n        if (imageShape) {\r\n            return imageShape;\r\n        }\r\n        var container = self.get('container');\r\n        imageShape = container.addShape('Image', {});\r\n        self.set(IMAGE_SHAPE, imageShape);\r\n        return imageShape;\r\n    };\r\n    _proto.drawWithRange = function drawWithRange(range) {\r\n        var self = this;\r\n        var _self$get2 = self.get('coord'), start = _self$get2.start, end = _self$get2.end, width = _self$get2.width, height = _self$get2.height;\r\n        var valueField = self.getAttr('color').field;\r\n        var size = self.get(HEATMAP_SIZE);\r\n        self._clearShadowCanvasCtx();\r\n        var ctx = self._getShadowCanvasCtx();\r\n        var data = self.get(MAPPED_DATA);\r\n        if (range) {\r\n            data = data.filter(function (row) {\r\n                return row[ORIGIN_FIELD][valueField] <= range[1] && row[ORIGIN_FIELD][valueField] >= range[0];\r\n            });\r\n        }\r\n        var scale = self._getScale(valueField);\r\n        for (var i = 0; i < data.length; i++) {\r\n            var obj = data[i];\r\n            var cfg = self.getDrawCfg(obj);\r\n            var alpha = scale.scale(obj[ORIGIN_FIELD][valueField]);\r\n            self._drawGrayScaleBlurredCircle(cfg.x - start.x, cfg.y - end.y, size.radius + size.blur, alpha, ctx);\r\n        }\r\n        var colored = ctx.getImageData(0, 0, width, height);\r\n        self._clearShadowCanvasCtx();\r\n        self._colorize(colored);\r\n        ctx.putImageData(colored, 0, 0);\r\n        var imageShape = self._getImageShape();\r\n        imageShape.attr('x', start.x);\r\n        imageShape.attr('y', end.y);\r\n        imageShape.attr('width', width);\r\n        imageShape.attr('height', height);\r\n        imageShape.attr('img', ctx.canvas);\r\n    };\r\n    _proto.draw = function draw(data) {\r\n        var self = this;\r\n        self.set(MAPPED_DATA, data);\r\n        self._prepareRange();\r\n        self._prepareSize();\r\n        var size = self.get(HEATMAP_SIZE);\r\n        self._prepareGreyScaleBlurredCircle(size.radius, size.blur);\r\n        var range = self.get(VALUE_RANGE);\r\n        self.drawWithRange(range);\r\n    };\r\n    return Heatmap;\r\n}(GeomBase);\r\nGeomBase.Heatmap = Heatmap;\r\nmodule.exports = Heatmap;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\geom\\heatmap.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\geom\\heatmap.js"],"names":[],"mappings":"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","sourcesContent":["function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * @fileOverview heatmap\n * @author leungwensen@gmail.com\n */\nvar _require = require('@antv/attr/lib'),\n    ColorUtil = _require.ColorUtil; // TODO: ColorUtil 独立成包，从 attr 包中抽离\n\n\nvar GeomBase = require('./base');\n\nvar Util = require('../util');\n\nvar ORIGIN_FIELD = '_origin';\nvar SHADOW_CANVAS = 'shadowCanvas';\nvar VALUE_RANGE = 'valueRange';\nvar IMAGE_SHAPE = 'imageShape';\nvar MAPPED_DATA = 'mappedData';\nvar GRAY_SCALE_BLURRED_CANVAS = 'grayScaleBlurredCanvas';\nvar HEATMAP_SIZE = 'heatmapSize';\nvar paletteCache = {};\n\nvar Heatmap =\n/*#__PURE__*/\nfunction (_GeomBase) {\n  _inheritsLoose(Heatmap, _GeomBase);\n\n  function Heatmap() {\n    return _GeomBase.apply(this, arguments) || this;\n  }\n\n  var _proto = Heatmap.prototype;\n\n  /**\n   * get default configuration\n   * @protected\n   * @return {Object} configuration\n   */\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _GeomBase.prototype.getDefaultCfg.call(this);\n\n    cfg.type = 'heatmap'; // cfg.shapeType = 'heatmap';\n\n    return cfg;\n  };\n\n  _proto._prepareRange = function _prepareRange() {\n    var self = this;\n    var data = self.get(MAPPED_DATA);\n    var colorAttr = self.getAttr('color');\n    var colorField = colorAttr.field;\n    var min = Infinity;\n    var max = -Infinity;\n    data.forEach(function (row) {\n      var value = row[ORIGIN_FIELD][colorField];\n\n      if (value > max) {\n        max = value;\n      }\n\n      if (value < min) {\n        min = value;\n      }\n    });\n\n    if (min === max) {\n      min = max - 1;\n    }\n\n    var range = [min, max];\n    self.set(VALUE_RANGE, range);\n  };\n\n  _proto._prepareSize = function _prepareSize() {\n    var self = this;\n    var radius = self.getDefaultValue('size');\n\n    if (!Util.isNumber(radius)) {\n      radius = self._getDefaultSize();\n    }\n\n    var styleOptions = self.get('styleOptions');\n    var blur = styleOptions && Util.isObject(styleOptions.style) ? styleOptions.style.blur : null;\n\n    if (!Util.isFinite(blur) || blur === null) {\n      blur = radius / 2;\n    }\n\n    self.set(HEATMAP_SIZE, {\n      blur: blur,\n      radius: radius\n    });\n  };\n\n  _proto._getDefaultSize = function _getDefaultSize() {\n    var self = this;\n    var position = self.getAttr('position');\n    var coord = self.get('coord');\n    var radius = Math.min(coord.width / (position.scales[0].ticks.length * 4), coord.height / (position.scales[1].ticks.length * 4));\n    return radius;\n  };\n\n  _proto._colorize = function _colorize(img) {\n    var self = this;\n    var colorAttr = self.getAttr('color');\n    var pixels = img.data;\n\n    for (var i = 3; i < pixels.length; i += 4) {\n      var alpha = pixels[i]; // get gradient color from opacity value\n\n      if (alpha) {\n        var palette = void 0;\n\n        if (paletteCache[alpha]) {\n          palette = paletteCache[alpha];\n        } else {\n          palette = ColorUtil.rgb2arr(colorAttr.gradient(alpha / 256));\n          paletteCache[alpha] = palette;\n        } // const palette = colorUtil.rgb2arr(colorAttr.gradient(alpha / 256));\n\n\n        pixels[i - 3] = palette[0];\n        pixels[i - 2] = palette[1];\n        pixels[i - 1] = palette[2];\n        pixels[i] = alpha;\n      }\n    }\n  };\n\n  _proto._prepareGreyScaleBlurredCircle = function _prepareGreyScaleBlurredCircle(r, blur) {\n    var self = this;\n    var circleCanvas = self.get(GRAY_SCALE_BLURRED_CANVAS);\n\n    if (!circleCanvas) {\n      circleCanvas = document.createElement('canvas');\n      self.set(GRAY_SCALE_BLURRED_CANVAS, circleCanvas);\n    }\n\n    var r2 = r + blur;\n    var ctx = circleCanvas.getContext('2d');\n    circleCanvas.width = circleCanvas.height = r2 * 2;\n    ctx.clearRect(0, 0, circleCanvas.width, circleCanvas.height); // ctx.shadowOffsetX = ctx.shadowOffsetY = r2 * 2;\n\n    ctx.shadowOffsetX = ctx.shadowOffsetY = r2 * 2;\n    ctx.shadowBlur = blur;\n    ctx.shadowColor = 'black';\n    ctx.beginPath();\n    ctx.arc(-r2, -r2, r, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n  };\n\n  _proto._drawGrayScaleBlurredCircle = function _drawGrayScaleBlurredCircle(x, y, r, alpha, ctx) {\n    var self = this;\n    var circleCanvas = self.get(GRAY_SCALE_BLURRED_CANVAS);\n    ctx.globalAlpha = alpha;\n    ctx.drawImage(circleCanvas, x - r, y - r);\n  };\n\n  _proto._getShadowCanvasCtx = function _getShadowCanvasCtx() {\n    var self = this;\n    var canvas = self.get(SHADOW_CANVAS);\n\n    if (!canvas) {\n      canvas = document.createElement('canvas');\n      self.set(SHADOW_CANVAS, canvas);\n    }\n\n    var _self$get = self.get('coord'),\n        width = _self$get.width,\n        height = _self$get.height;\n\n    canvas.width = width;\n    canvas.height = height;\n    return canvas.getContext('2d');\n  };\n\n  _proto._clearShadowCanvasCtx = function _clearShadowCanvasCtx() {\n    var ctx = this._getShadowCanvasCtx();\n\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n  };\n\n  _proto._getImageShape = function _getImageShape() {\n    var self = this;\n    var imageShape = self.get(IMAGE_SHAPE);\n\n    if (imageShape) {\n      return imageShape;\n    }\n\n    var container = self.get('container');\n    imageShape = container.addShape('Image', {});\n    self.set(IMAGE_SHAPE, imageShape);\n    return imageShape;\n  };\n\n  _proto.drawWithRange = function drawWithRange(range) {\n    var self = this; // canvas size\n\n    var _self$get2 = self.get('coord'),\n        start = _self$get2.start,\n        end = _self$get2.end,\n        width = _self$get2.width,\n        height = _self$get2.height; // value, range, etc\n\n\n    var valueField = self.getAttr('color').field;\n    var size = self.get(HEATMAP_SIZE); // prepare shadow canvas context\n\n    self._clearShadowCanvasCtx();\n\n    var ctx = self._getShadowCanvasCtx(); // filter data\n\n\n    var data = self.get(MAPPED_DATA);\n\n    if (range) {\n      data = data.filter(function (row) {\n        return row[ORIGIN_FIELD][valueField] <= range[1] && row[ORIGIN_FIELD][valueField] >= range[0];\n      });\n    } // step1. draw points with shadow\n\n\n    var scale = self._getScale(valueField);\n\n    for (var i = 0; i < data.length; i++) {\n      var obj = data[i];\n      var cfg = self.getDrawCfg(obj);\n      var alpha = scale.scale(obj[ORIGIN_FIELD][valueField]);\n\n      self._drawGrayScaleBlurredCircle(cfg.x - start.x, cfg.y - end.y, size.radius + size.blur, alpha, ctx);\n    } // step2. convert pixels\n\n\n    var colored = ctx.getImageData(0, 0, width, height);\n\n    self._clearShadowCanvasCtx();\n\n    self._colorize(colored);\n\n    ctx.putImageData(colored, 0, 0);\n\n    var imageShape = self._getImageShape();\n\n    imageShape.attr('x', start.x);\n    imageShape.attr('y', end.y);\n    imageShape.attr('width', width);\n    imageShape.attr('height', height);\n    imageShape.attr('img', ctx.canvas);\n  };\n\n  _proto.draw = function draw(data\n  /* , container, shapeFactory, index */\n  ) {\n    var self = this;\n    self.set(MAPPED_DATA, data);\n\n    self._prepareRange();\n\n    self._prepareSize();\n\n    var size = self.get(HEATMAP_SIZE);\n\n    self._prepareGreyScaleBlurredCircle(size.radius, size.blur);\n\n    var range = self.get(VALUE_RANGE);\n    self.drawWithRange(range); // super.draw(data, container, shapeFactory, index);\n  };\n\n  return Heatmap;\n}(GeomBase);\n\nGeomBase.Heatmap = Heatmap;\nmodule.exports = Heatmap;"]}]}