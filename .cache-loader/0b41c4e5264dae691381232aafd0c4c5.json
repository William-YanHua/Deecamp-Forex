{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-gesture\\esm\\gestures\\tap.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-gesture\\esm\\gestures\\tap.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\r\nimport { clock } from '../utils/clock';\r\nimport { Gesture } from './gesture';\r\nvar TIME = 300;\r\nvar DISTANCE = 2;\r\nvar Tap = (function (_super) {\r\n    __extends(Tap, _super);\r\n    function Tap() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.EVENT = 'tap';\r\n        return _this;\r\n    }\r\n    Tap.prototype.onTouchCancel = function (ev) { };\r\n    Tap.prototype.onTouchEnd = function (ev) {\r\n        var x = ev.x, y = ev.y;\r\n        if (x - this.touchStartX < DISTANCE &&\r\n            y - this.touchStartY < DISTANCE &&\r\n            clock.now() - this.touchStartTime < TIME) {\r\n            this.emit({ x: x, y: y, event: ev });\r\n        }\r\n    };\r\n    Tap.prototype.onTouchMove = function (ev) { };\r\n    Tap.prototype.onTouchStart = function (ev) {\r\n        var x = ev.x, y = ev.y;\r\n        this.touchStartTime = clock.now();\r\n        this.touchStartX = x;\r\n        this.touchStartY = y;\r\n    };\r\n    return Tap;\r\n}(Gesture));\r\nexport { Tap };\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-gesture\\esm\\gestures\\tap.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-gesture\\esm\\gestures\\tap.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAClC,OAAO,EAAE,KAAK,EAAE,MAAM,gBAAgB,CAAC;AACvC,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AACpC,IAAI,IAAI,GAAG,GAAG,CAAC;AACf,IAAI,QAAQ,GAAG,CAAC,CAAC;AACjB,IAAI,GAAG,GAAiB,CAAC,UAAU,MAAM;IACrC,SAAS,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IACvB,SAAS,GAAG;QACR,IAAI,KAAK,GAAG,MAAM,KAAK,IAAI,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,IAAI,CAAC;QACrE,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;QACpB,OAAO,KAAK,CAAC;IACjB,CAAC;IACD,GAAG,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,EAAE,IAAI,CAAC,CAAC;IAChD,GAAG,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,EAAE;QACnC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,QAAQ;YAC/B,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,QAAQ;YAC/B,KAAK,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,EAAE;YAC1C,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC;SACxC;IACL,CAAC,CAAC;IACF,GAAG,CAAC,SAAS,CAAC,WAAW,GAAG,UAAU,EAAE,IAAI,CAAC,CAAC;IAC9C,GAAG,CAAC,SAAS,CAAC,YAAY,GAAG,UAAU,EAAE;QACrC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;QAClC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;IACzB,CAAC,CAAC;IACF,OAAO,GAAG,CAAC;AACf,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;AACZ,OAAO,EAAE,GAAG,EAAE,CAAC","sourcesContent":["import { __extends } from \"tslib\";\nimport { clock } from '../utils/clock';\nimport { Gesture } from './gesture';\nvar TIME = 300;\nvar DISTANCE = 2;\nvar Tap = /** @class */ (function (_super) {\n    __extends(Tap, _super);\n    function Tap() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.EVENT = 'tap';\n        return _this;\n    }\n    Tap.prototype.onTouchCancel = function (ev) { };\n    Tap.prototype.onTouchEnd = function (ev) {\n        var x = ev.x, y = ev.y;\n        if (x - this.touchStartX < DISTANCE &&\n            y - this.touchStartY < DISTANCE &&\n            clock.now() - this.touchStartTime < TIME) {\n            this.emit({ x: x, y: y, event: ev });\n        }\n    };\n    Tap.prototype.onTouchMove = function (ev) { };\n    Tap.prototype.onTouchStart = function (ev) {\n        var x = ev.x, y = ev.y;\n        this.touchStartTime = clock.now();\n        this.touchStartX = x;\n        this.touchStartY = y;\n    };\n    return Tap;\n}(Gesture));\nexport { Tap };\n//# sourceMappingURL=tap.js.map"]}]}