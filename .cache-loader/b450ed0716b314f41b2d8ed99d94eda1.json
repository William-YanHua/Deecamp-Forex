{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\scatter\\components\\trendline.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\scatter\\components\\trendline.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __assign } from \"tslib\";\r\nimport { each, deepMix, minBy, maxBy } from '@antv/util';\r\nimport { getScale } from '@antv/scale';\r\nimport { regressionLinear, regressionExp, regressionLoess, regressionLog, regressionPoly, regressionPow, regressionQuad, } from 'd3-regression';\r\nimport { getSplinePath } from '../../../util/path';\r\nvar REGRESSION_MAP = {\r\n    exp: regressionExp,\r\n    linear: regressionLinear,\r\n    loess: regressionLoess,\r\n    log: regressionLog,\r\n    poly: regressionPoly,\r\n    pow: regressionPow,\r\n    quad: regressionQuad,\r\n};\r\nfunction se95(p, n) {\r\n    return Math.sqrt((p * (1 - p)) / n) * 1.96;\r\n}\r\nvar TrendLine = (function () {\r\n    function TrendLine(cfg) {\r\n        var defaultOptions = {\r\n            type: 'linear',\r\n            style: {\r\n                stroke: '#9ba29a',\r\n                lineWidth: 2,\r\n                opacity: 0.5,\r\n                lineJoin: 'round',\r\n                lineCap: 'round',\r\n            },\r\n            showConfidence: false,\r\n            confidenceStyle: {\r\n                fill: '#ccc',\r\n                opacity: 0.1,\r\n            },\r\n        };\r\n        this.options = deepMix({}, defaultOptions, cfg);\r\n        this.view = this.options.view;\r\n        this.init();\r\n    }\r\n    TrendLine.prototype.init = function () {\r\n        var _a = this.options.plotOptions, xField = _a.xField, yField = _a.yField, data = _a.data;\r\n        var reg = REGRESSION_MAP[this.options.type]()\r\n            .x(function (d) { return d[xField]; })\r\n            .y(function (d) { return d[yField]; });\r\n        this.data = this.processData(reg(data));\r\n        this.container = this.view.backgroundGroup.addGroup();\r\n    };\r\n    TrendLine.prototype.render = function () {\r\n        var xscale_view = this.view.getScaleByField(this.options.plotOptions.xField);\r\n        var yscale_view = this.view.getScaleByField(this.options.plotOptions.yField);\r\n        var coord = this.view.getCoordinate();\r\n        var trendlineData = this.data.trendlineData;\r\n        var LinearScale = getScale('linear');\r\n        var xRange = this.adjustScale(xscale_view, trendlineData, 'x');\r\n        var xScale = new LinearScale({\r\n            min: xRange.min,\r\n            max: xRange.max,\r\n        });\r\n        var yRange = this.adjustScale(yscale_view, trendlineData, 'y');\r\n        var yScale = new LinearScale({\r\n            min: yRange.min,\r\n            max: yRange.max,\r\n        });\r\n        if (this.options.showConfidence) {\r\n            var confidencePath = this.getConfidencePath(xScale, yScale, coord);\r\n            this.container.addShape('path', {\r\n                attrs: __assign({ path: confidencePath }, this.options.confidenceStyle),\r\n                name: 'confidence',\r\n            });\r\n        }\r\n        var points = this.getTrendlinePoints(xScale, yScale, coord);\r\n        var constraint = [\r\n            [0, 0],\r\n            [1, 1],\r\n        ];\r\n        var path = getSplinePath(points, false, constraint);\r\n        this.shape = this.container.addShape('path', {\r\n            attrs: __assign({ path: path }, this.options.style),\r\n            name: 'trendline',\r\n        });\r\n    };\r\n    TrendLine.prototype.clear = function () {\r\n        if (this.container) {\r\n            this.container.clear();\r\n        }\r\n    };\r\n    TrendLine.prototype.destroy = function () {\r\n        if (this.container) {\r\n            this.container.destroy();\r\n        }\r\n    };\r\n    TrendLine.prototype.processData = function (data) {\r\n        var trendline = [];\r\n        var confidence = [];\r\n        each(data, function (d) {\r\n            trendline.push({ x: d[0], y: d[1] });\r\n            var conf = se95(data.rSquared, d[1]);\r\n            confidence.push({ x: d[0], y0: d[1] - conf, y1: d[1] + conf });\r\n        });\r\n        return { trendlineData: trendline, confidenceData: confidence };\r\n    };\r\n    TrendLine.prototype.getTrendlinePoints = function (xScale, yScale, coord) {\r\n        var points = [];\r\n        each(this.data.trendlineData, function (d) {\r\n            var xRatio = xScale.scale(d.x);\r\n            var yRatio = yScale.scale(d.y);\r\n            var x = coord.start.x + coord.width * xRatio;\r\n            var y = coord.start.y - coord.height * yRatio;\r\n            points.push({ x: x, y: y });\r\n        });\r\n        return points;\r\n    };\r\n    TrendLine.prototype.getConfidencePath = function (xScale, yScale, coord) {\r\n        var upperPoints = [];\r\n        var lowerPoints = [];\r\n        var path = [];\r\n        each(this.data.confidenceData, function (d) {\r\n            var xRatio = xScale.scale(d.x);\r\n            var y0Ratio = yScale.scale(d.y0);\r\n            var y1Ratio = yScale.scale(d.y1);\r\n            var x = coord.start.x + coord.width * xRatio;\r\n            var y0 = coord.start.y - coord.height * y0Ratio;\r\n            var y1 = coord.start.y - coord.height * y1Ratio;\r\n            upperPoints.push({ x: x, y: y0 });\r\n            lowerPoints.push({ x: x, y: y1 });\r\n        });\r\n        for (var i = 0; i < upperPoints.length; i++) {\r\n            var flag = i === 0 ? 'M' : 'L';\r\n            var p = upperPoints[i];\r\n            if (!isNaN(p.x) && !isNaN(p.y)) {\r\n                path.push([flag, p.x, p.y]);\r\n            }\r\n        }\r\n        for (var j = lowerPoints.length - 1; j > 0; j--) {\r\n            var p = lowerPoints[j];\r\n            if (!isNaN(p.x) && !isNaN(p.y)) {\r\n                path.push(['L', p.x, p.y]);\r\n            }\r\n        }\r\n        return path;\r\n    };\r\n    TrendLine.prototype.adjustScale = function (viewScale, trendlineData, dim) {\r\n        var min = viewScale.min, max = viewScale.max;\r\n        var _a = this.options.plotOptions, data = _a.data, xField = _a.xField, yField = _a.yField;\r\n        var field = dim === 'x' ? xField : yField;\r\n        var dataMin = minBy(data, field)[field];\r\n        var dataMax = maxBy(data, field)[field];\r\n        var minRatio = (min - dataMin) / (dataMax - dataMin);\r\n        var maxRatio = (max - dataMax) / (dataMax - dataMin);\r\n        var trendMin = minBy(trendlineData, dim)[dim];\r\n        var trendMax = maxBy(trendlineData, dim)[dim];\r\n        return {\r\n            min: trendMin + minRatio * (trendMax - trendMin),\r\n            max: trendMax + maxRatio * (trendMax - trendMin),\r\n        };\r\n    };\r\n    return TrendLine;\r\n}());\r\nexport default TrendLine;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\scatter\\components\\trendline.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\scatter\\components\\trendline.js"],"names":[],"mappings":"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","sourcesContent":["import { __assign } from \"tslib\";\nimport { each, deepMix, minBy, maxBy } from '@antv/util';\nimport { getScale } from '@antv/scale';\nimport { regressionLinear, regressionExp, regressionLoess, regressionLog, regressionPoly, regressionPow, regressionQuad, } from 'd3-regression';\nimport { getSplinePath } from '../../../util/path';\nvar REGRESSION_MAP = {\n    exp: regressionExp,\n    linear: regressionLinear,\n    loess: regressionLoess,\n    log: regressionLog,\n    poly: regressionPoly,\n    pow: regressionPow,\n    quad: regressionQuad,\n};\nfunction se95(p, n) {\n    return Math.sqrt((p * (1 - p)) / n) * 1.96;\n}\nvar TrendLine = /** @class */ (function () {\n    function TrendLine(cfg) {\n        var defaultOptions = {\n            type: 'linear',\n            style: {\n                stroke: '#9ba29a',\n                lineWidth: 2,\n                opacity: 0.5,\n                lineJoin: 'round',\n                lineCap: 'round',\n            },\n            showConfidence: false,\n            confidenceStyle: {\n                fill: '#ccc',\n                opacity: 0.1,\n            },\n        };\n        this.options = deepMix({}, defaultOptions, cfg);\n        this.view = this.options.view;\n        this.init();\n    }\n    TrendLine.prototype.init = function () {\n        // 处理数据\n        var _a = this.options.plotOptions, xField = _a.xField, yField = _a.yField, data = _a.data;\n        var reg = REGRESSION_MAP[this.options.type]()\n            .x(function (d) { return d[xField]; })\n            .y(function (d) { return d[yField]; });\n        this.data = this.processData(reg(data));\n        // 创建container\n        this.container = this.view.backgroundGroup.addGroup();\n    };\n    TrendLine.prototype.render = function () {\n        var xscale_view = this.view.getScaleByField(this.options.plotOptions.xField);\n        var yscale_view = this.view.getScaleByField(this.options.plotOptions.yField);\n        var coord = this.view.getCoordinate();\n        var trendlineData = this.data.trendlineData;\n        // 创建图形绘制的scale\n        var LinearScale = getScale('linear');\n        var xRange = this.adjustScale(xscale_view, trendlineData, 'x');\n        var xScale = new LinearScale({\n            min: xRange.min,\n            max: xRange.max,\n        });\n        var yRange = this.adjustScale(yscale_view, trendlineData, 'y');\n        var yScale = new LinearScale({\n            min: yRange.min,\n            max: yRange.max,\n        });\n        // 绘制置信区间曲线\n        if (this.options.showConfidence) {\n            var confidencePath = this.getConfidencePath(xScale, yScale, coord);\n            this.container.addShape('path', {\n                attrs: __assign({ path: confidencePath }, this.options.confidenceStyle),\n                name: 'confidence',\n            });\n        }\n        // 绘制trendline\n        var points = this.getTrendlinePoints(xScale, yScale, coord);\n        var constraint = [\n            [0, 0],\n            [1, 1],\n        ];\n        var path = getSplinePath(points, false, constraint);\n        this.shape = this.container.addShape('path', {\n            attrs: __assign({ path: path }, this.options.style),\n            name: 'trendline',\n        });\n    };\n    TrendLine.prototype.clear = function () {\n        if (this.container) {\n            this.container.clear();\n        }\n    };\n    TrendLine.prototype.destroy = function () {\n        if (this.container) {\n            this.container.destroy();\n        }\n    };\n    TrendLine.prototype.processData = function (data) {\n        var trendline = [];\n        var confidence = [];\n        each(data, function (d) {\n            trendline.push({ x: d[0], y: d[1] });\n            var conf = se95(data.rSquared, d[1]);\n            confidence.push({ x: d[0], y0: d[1] - conf, y1: d[1] + conf });\n        });\n        return { trendlineData: trendline, confidenceData: confidence };\n    };\n    TrendLine.prototype.getTrendlinePoints = function (xScale, yScale, coord) {\n        var points = [];\n        each(this.data.trendlineData, function (d) {\n            var xRatio = xScale.scale(d.x);\n            var yRatio = yScale.scale(d.y);\n            var x = coord.start.x + coord.width * xRatio;\n            var y = coord.start.y - coord.height * yRatio;\n            points.push({ x: x, y: y });\n        });\n        return points;\n    };\n    TrendLine.prototype.getConfidencePath = function (xScale, yScale, coord) {\n        var upperPoints = [];\n        var lowerPoints = [];\n        var path = [];\n        each(this.data.confidenceData, function (d) {\n            var xRatio = xScale.scale(d.x);\n            var y0Ratio = yScale.scale(d.y0);\n            var y1Ratio = yScale.scale(d.y1);\n            var x = coord.start.x + coord.width * xRatio;\n            var y0 = coord.start.y - coord.height * y0Ratio;\n            var y1 = coord.start.y - coord.height * y1Ratio;\n            upperPoints.push({ x: x, y: y0 });\n            lowerPoints.push({ x: x, y: y1 });\n        });\n        for (var i = 0; i < upperPoints.length; i++) {\n            var flag = i === 0 ? 'M' : 'L';\n            var p = upperPoints[i];\n            if (!isNaN(p.x) && !isNaN(p.y)) {\n                path.push([flag, p.x, p.y]);\n            }\n        }\n        for (var j = lowerPoints.length - 1; j > 0; j--) {\n            var p = lowerPoints[j];\n            if (!isNaN(p.x) && !isNaN(p.y)) {\n                path.push(['L', p.x, p.y]);\n            }\n        }\n        return path;\n    };\n    TrendLine.prototype.adjustScale = function (viewScale, trendlineData, dim) {\n        // 处理用户自行配置min max的情况\n        var min = viewScale.min, max = viewScale.max;\n        var _a = this.options.plotOptions, data = _a.data, xField = _a.xField, yField = _a.yField;\n        var field = dim === 'x' ? xField : yField;\n        var dataMin = minBy(data, field)[field];\n        var dataMax = maxBy(data, field)[field];\n        var minRatio = (min - dataMin) / (dataMax - dataMin);\n        var maxRatio = (max - dataMax) / (dataMax - dataMin);\n        var trendMin = minBy(trendlineData, dim)[dim];\n        var trendMax = maxBy(trendlineData, dim)[dim];\n        return {\n            min: trendMin + minRatio * (trendMax - trendMin),\n            max: trendMax + maxRatio * (trendMax - trendMin),\n        };\n    };\n    return TrendLine;\n}());\nexport default TrendLine;\n//# sourceMappingURL=trendline.js.map"]}]}