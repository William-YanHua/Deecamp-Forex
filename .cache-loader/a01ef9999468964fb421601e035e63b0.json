{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\react-lifecycles-compat\\react-lifecycles-compat.es.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\react-lifecycles-compat\\react-lifecycles-compat.es.js","mtime":1526049548000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["function componentWillMount() {\r\n    var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\r\n    if (state !== null && state !== undefined) {\r\n        this.setState(state);\r\n    }\r\n}\r\nfunction componentWillReceiveProps(nextProps) {\r\n    function updater(prevState) {\r\n        var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\r\n        return state !== null && state !== undefined ? state : null;\r\n    }\r\n    this.setState(updater.bind(this));\r\n}\r\nfunction componentWillUpdate(nextProps, nextState) {\r\n    try {\r\n        var prevProps = this.props;\r\n        var prevState = this.state;\r\n        this.props = nextProps;\r\n        this.state = nextState;\r\n        this.__reactInternalSnapshotFlag = true;\r\n        this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(prevProps, prevState);\r\n    }\r\n    finally {\r\n        this.props = prevProps;\r\n        this.state = prevState;\r\n    }\r\n}\r\ncomponentWillMount.__suppressDeprecationWarning = true;\r\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\r\ncomponentWillUpdate.__suppressDeprecationWarning = true;\r\nfunction polyfill(Component) {\r\n    var prototype = Component.prototype;\r\n    if (!prototype || !prototype.isReactComponent) {\r\n        throw new Error('Can only polyfill class components');\r\n    }\r\n    if (typeof Component.getDerivedStateFromProps !== 'function' &&\r\n        typeof prototype.getSnapshotBeforeUpdate !== 'function') {\r\n        return Component;\r\n    }\r\n    var foundWillMountName = null;\r\n    var foundWillReceivePropsName = null;\r\n    var foundWillUpdateName = null;\r\n    if (typeof prototype.componentWillMount === 'function') {\r\n        foundWillMountName = 'componentWillMount';\r\n    }\r\n    else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\r\n        foundWillMountName = 'UNSAFE_componentWillMount';\r\n    }\r\n    if (typeof prototype.componentWillReceiveProps === 'function') {\r\n        foundWillReceivePropsName = 'componentWillReceiveProps';\r\n    }\r\n    else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\r\n        foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\r\n    }\r\n    if (typeof prototype.componentWillUpdate === 'function') {\r\n        foundWillUpdateName = 'componentWillUpdate';\r\n    }\r\n    else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\r\n        foundWillUpdateName = 'UNSAFE_componentWillUpdate';\r\n    }\r\n    if (foundWillMountName !== null ||\r\n        foundWillReceivePropsName !== null ||\r\n        foundWillUpdateName !== null) {\r\n        var componentName = Component.displayName || Component.name;\r\n        var newApiName = typeof Component.getDerivedStateFromProps === 'function'\r\n            ? 'getDerivedStateFromProps()'\r\n            : 'getSnapshotBeforeUpdate()';\r\n        throw Error('Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\r\n            componentName +\r\n            ' uses ' +\r\n            newApiName +\r\n            ' but also contains the following legacy lifecycles:' +\r\n            (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\r\n            (foundWillReceivePropsName !== null\r\n                ? '\\n  ' + foundWillReceivePropsName\r\n                : '') +\r\n            (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\r\n            '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\r\n            'https://fb.me/react-async-component-lifecycle-hooks');\r\n    }\r\n    if (typeof Component.getDerivedStateFromProps === 'function') {\r\n        prototype.componentWillMount = componentWillMount;\r\n        prototype.componentWillReceiveProps = componentWillReceiveProps;\r\n    }\r\n    if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\r\n        if (typeof prototype.componentDidUpdate !== 'function') {\r\n            throw new Error('Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype');\r\n        }\r\n        prototype.componentWillUpdate = componentWillUpdate;\r\n        var componentDidUpdate = prototype.componentDidUpdate;\r\n        prototype.componentDidUpdate = function componentDidUpdatePolyfill(prevProps, prevState, maybeSnapshot) {\r\n            var snapshot = this.__reactInternalSnapshotFlag\r\n                ? this.__reactInternalSnapshot\r\n                : maybeSnapshot;\r\n            componentDidUpdate.call(this, prevProps, prevState, snapshot);\r\n        };\r\n    }\r\n    return Component;\r\n}\r\nexport { polyfill };\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\react-lifecycles-compat\\react-lifecycles-compat.es.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\react-lifecycles-compat\\react-lifecycles-compat.es.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n"]}]}