{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/util/responsive/rules/node-jitter.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/util/responsive/rules/node-jitter.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { dotProduct2D } from '../../math';\nexport default function nodeJitter(shape, index, cfg) {\n    var nodes = cfg.nodes.nodes;\n    if (index === nodes.length - 1) {\n        return;\n    }\n    var current = nodes[index];\n    var next = nodes[index + 1];\n    var dir = alignDirection(current, next).dir;\n    var startPoint = shape.get('startPoint');\n    if (dir === 'x') {\n        shape.attr('y', startPoint.y + 20);\n    }\n}\nfunction alignDirection(nodeA, nodeB) {\n    var dir;\n    var vector = { x: nodeB.centerX - nodeA.centerX, y: nodeB.centerY - nodeA.centerY };\n    var mag = Math.sqrt(vector.x * vector.x + vector.y * vector.y);\n    var vector_horizontal = { x: 10, y: 0 };\n    var mag_horizontal = Math.sqrt(vector_horizontal.x * vector_horizontal.x + vector_horizontal.y * vector_horizontal.y);\n    var dot = dotProduct2D(vector, vector_horizontal);\n    var angle = ((dot / (mag * mag_horizontal)) * 180) / Math.PI;\n    if (angle < 0)\n        angle = 360 - angle;\n    angle = adjustAngle(angle);\n    var distX = Math.abs(nodeA.centerX - nodeB.centerX);\n    var distY = Math.abs(nodeA.centerY - nodeB.centerY);\n    if (angle > 45) {\n        dir = 'x';\n    }\n    else if (angle < 45) {\n        dir = 'y';\n    }\n    return { dir: dir, distX: distX, distY: distY };\n}\nfunction adjustAngle(angle) {\n    if (angle > 90 && angle <= 180) {\n        return 180 - angle;\n    }\n    if (angle > 180 && angle < 270) {\n        return angle - 180;\n    }\n    return 360 - angle;\n}\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/util/responsive/rules/node-jitter.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/util/responsive/rules/node-jitter.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,YAAY,CAAC;AAE1C,MAAM,CAAC,OAAO,UAAU,UAAU,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG;IAChD,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;IAC5B,IAAI,KAAK,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;QAC5B,OAAO;KACV;IACD,IAAI,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;IAC3B,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;IAC5B,IAAI,GAAG,GAAG,cAAc,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;IAC5C,IAAI,UAAU,GAAG,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IACzC,IAAI,GAAG,KAAK,GAAG,EAAE;QACb,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;KACtC;AACL,CAAC;AACD,SAAS,cAAc,CAAC,KAAK,EAAE,KAAK;IAChC,IAAI,GAAG,CAAC;IAER,IAAI,MAAM,GAAG,EAAE,CAAC,EAAE,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;IACpF,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAC/D,IAAI,iBAAiB,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;IAExC,IAAI,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,GAAG,iBAAiB,CAAC,CAAC,GAAG,iBAAiB,CAAC,CAAC,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;IACtH,IAAI,GAAG,GAAG,YAAY,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC;IAClD,IAAI,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,cAAc,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;IAC7D,IAAI,KAAK,GAAG,CAAC;QACT,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC;IACxB,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;IAE3B,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;IACpD,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;IACpD,IAAI,KAAK,GAAG,EAAE,EAAE;QACZ,GAAG,GAAG,GAAG,CAAC;KACb;SACI,IAAI,KAAK,GAAG,EAAE,EAAE;QACjB,GAAG,GAAG,GAAG,CAAC;KACb;IACD,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;AACpD,CAAC;AACD,SAAS,WAAW,CAAC,KAAK;IACtB,IAAI,KAAK,GAAG,EAAE,IAAI,KAAK,IAAI,GAAG,EAAE;QAC5B,OAAO,GAAG,GAAG,KAAK,CAAC;KACtB;IACD,IAAI,KAAK,GAAG,GAAG,IAAI,KAAK,GAAG,GAAG,EAAE;QAC5B,OAAO,KAAK,GAAG,GAAG,CAAC;KACtB;IACD,OAAO,GAAG,GAAG,KAAK,CAAC;AACvB,CAAC","sourcesContent":["import { dotProduct2D } from '../../math';\n/** 图形在水平或垂直方向抖开 */\nexport default function nodeJitter(shape, index, cfg) {\n    var nodes = cfg.nodes.nodes;\n    if (index === nodes.length - 1) {\n        return;\n    }\n    var current = nodes[index];\n    var next = nodes[index + 1];\n    var dir = alignDirection(current, next).dir;\n    var startPoint = shape.get('startPoint');\n    if (dir === 'x') {\n        shape.attr('y', startPoint.y + 20);\n    }\n}\nfunction alignDirection(nodeA, nodeB) {\n    var dir;\n    /** 计算两个node 中心点向量的角度 */\n    var vector = { x: nodeB.centerX - nodeA.centerX, y: nodeB.centerY - nodeA.centerY };\n    var mag = Math.sqrt(vector.x * vector.x + vector.y * vector.y);\n    var vector_horizontal = { x: 10, y: 0 }; // 水平方向向量\n    /*tslint:disable*/\n    var mag_horizontal = Math.sqrt(vector_horizontal.x * vector_horizontal.x + vector_horizontal.y * vector_horizontal.y);\n    var dot = dotProduct2D(vector, vector_horizontal);\n    var angle = ((dot / (mag * mag_horizontal)) * 180) / Math.PI;\n    if (angle < 0)\n        angle = 360 - angle;\n    angle = adjustAngle(angle); // 将角度从0-360转换到0-90\n    /** 计算两个node在x、y两个方向上的距离 */\n    var distX = Math.abs(nodeA.centerX - nodeB.centerX);\n    var distY = Math.abs(nodeA.centerY - nodeB.centerY);\n    if (angle > 45) {\n        dir = 'x';\n    }\n    else if (angle < 45) {\n        dir = 'y';\n    }\n    return { dir: dir, distX: distX, distY: distY };\n}\nfunction adjustAngle(angle) {\n    if (angle > 90 && angle <= 180) {\n        return 180 - angle;\n    }\n    if (angle > 180 && angle < 270) {\n        return angle - 180;\n    }\n    return 360 - angle;\n}\n//# sourceMappingURL=node-jitter.js.map"]}]}