{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\interaction\\action\\active-region.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\interaction\\action\\active-region.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\r\nimport { each, head, isEqual, last } from '@antv/util';\r\nimport { getAngle, getSectorPath } from '../../util/graphics';\r\nimport Action from './base';\r\nvar ActiveRegion = (function (_super) {\r\n    __extends(ActiveRegion, _super);\r\n    function ActiveRegion() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ActiveRegion.prototype.show = function () {\r\n        var view = this.context.view;\r\n        var ev = this.context.event;\r\n        var tooltipItems = view.getTooltipItems({\r\n            x: ev.x,\r\n            y: ev.y,\r\n        });\r\n        if (isEqual(tooltipItems, this.items)) {\r\n            return;\r\n        }\r\n        this.items = tooltipItems;\r\n        if (tooltipItems.length) {\r\n            var xField_1 = view.getXScale().field;\r\n            var xValue_1 = tooltipItems[0].data[xField_1];\r\n            var elements_1 = [];\r\n            var geometries = view.geometries;\r\n            each(geometries, function (geometry) {\r\n                if (geometry.type === 'interval' || geometry.type === 'schema') {\r\n                    var result = geometry.getElementsBy(function (ele) {\r\n                        var eleData = ele.getData();\r\n                        return eleData[xField_1] === xValue_1;\r\n                    });\r\n                    elements_1 = elements_1.concat(result);\r\n                }\r\n            });\r\n            if (elements_1.length) {\r\n                var coordinate_1 = view.getCoordinate();\r\n                var firstBBox_1 = elements_1[0].shape.getCanvasBBox();\r\n                var lastBBox_1 = elements_1[0].shape.getCanvasBBox();\r\n                var groupBBox_1 = firstBBox_1;\r\n                each(elements_1, function (ele) {\r\n                    var bbox = ele.shape.getCanvasBBox();\r\n                    if (coordinate_1.isTransposed) {\r\n                        if (bbox.minY < firstBBox_1.minY) {\r\n                            firstBBox_1 = bbox;\r\n                        }\r\n                        if (bbox.maxY > lastBBox_1.maxY) {\r\n                            lastBBox_1 = bbox;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (bbox.minX < firstBBox_1.minX) {\r\n                            firstBBox_1 = bbox;\r\n                        }\r\n                        if (bbox.maxX > lastBBox_1.maxX) {\r\n                            lastBBox_1 = bbox;\r\n                        }\r\n                    }\r\n                    groupBBox_1.x = Math.min(bbox.minX, groupBBox_1.minX);\r\n                    groupBBox_1.y = Math.min(bbox.minY, groupBBox_1.minY);\r\n                    groupBBox_1.width = Math.max(bbox.maxX, groupBBox_1.maxX) - groupBBox_1.x;\r\n                    groupBBox_1.height = Math.max(bbox.maxY, groupBBox_1.maxY) - groupBBox_1.y;\r\n                });\r\n                var backgroundGroup = view.backgroundGroup, coordinateBBox = view.coordinateBBox;\r\n                var path = void 0;\r\n                if (coordinate_1.isRect) {\r\n                    var xScale = view.getXScale();\r\n                    var appendRatio = xScale.isLinear ? 0 : 0.25;\r\n                    var minX = void 0;\r\n                    var minY = void 0;\r\n                    var width = void 0;\r\n                    var height = void 0;\r\n                    if (coordinate_1.isTransposed) {\r\n                        minX = coordinateBBox.minX;\r\n                        minY = Math.min(lastBBox_1.minY, firstBBox_1.minY) - appendRatio * lastBBox_1.height;\r\n                        width = coordinateBBox.width;\r\n                        height = groupBBox_1.height + appendRatio * 2 * lastBBox_1.height;\r\n                    }\r\n                    else {\r\n                        minX = Math.min(firstBBox_1.minX, lastBBox_1.minX) - appendRatio * firstBBox_1.width;\r\n                        minY = Math.min(coordinateBBox.minY, firstBBox_1.minY);\r\n                        width = groupBBox_1.width + appendRatio * 2 * firstBBox_1.width;\r\n                        height = coordinateBBox.height;\r\n                    }\r\n                    path = [\r\n                        ['M', minX, minY],\r\n                        ['L', minX + width, minY],\r\n                        ['L', minX + width, minY + height],\r\n                        ['L', minX, minY + height],\r\n                        ['Z'],\r\n                    ];\r\n                }\r\n                else {\r\n                    var firstElement = head(elements_1);\r\n                    var lastElement = last(elements_1);\r\n                    var startAngle = getAngle(firstElement.getModel(), coordinate_1).startAngle;\r\n                    var endAngle = getAngle(lastElement.getModel(), coordinate_1).endAngle;\r\n                    var center = coordinate_1.getCenter();\r\n                    var radius = coordinate_1.getRadius();\r\n                    var innterRadius = coordinate_1.innerRadius * radius;\r\n                    path = getSectorPath(center.x, center.y, radius, startAngle, endAngle, innterRadius);\r\n                }\r\n                if (this.regionPath) {\r\n                    this.regionPath.attr('path', path);\r\n                    this.regionPath.show();\r\n                }\r\n                else {\r\n                    this.regionPath = backgroundGroup.addShape({\r\n                        type: 'path',\r\n                        name: 'active-region',\r\n                        capture: false,\r\n                        attrs: {\r\n                            path: path,\r\n                            fill: '#CCD6EC',\r\n                            opacity: 0.3,\r\n                        },\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n    ActiveRegion.prototype.hide = function () {\r\n        if (this.regionPath) {\r\n            this.regionPath.hide();\r\n        }\r\n        this.items = null;\r\n    };\r\n    ActiveRegion.prototype.destroy = function () {\r\n        this.hide();\r\n        if (this.regionPath) {\r\n            this.regionPath.remove(true);\r\n        }\r\n        _super.prototype.destroy.call(this);\r\n    };\r\n    return ActiveRegion;\r\n}(Action));\r\nexport default ActiveRegion;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\interaction\\action\\active-region.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\interaction\\action\\active-region.js"],"names":[],"mappings":"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","sourcesContent":["import { __extends } from \"tslib\";\nimport { each, head, isEqual, last } from '@antv/util';\nimport { getAngle, getSectorPath } from '../../util/graphics';\nimport Action from './base';\n/**\n * 背景框的 Action\n * @ignore\n */\nvar ActiveRegion = /** @class */ (function (_super) {\n    __extends(ActiveRegion, _super);\n    function ActiveRegion() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * 显示\n     */\n    ActiveRegion.prototype.show = function () {\n        var view = this.context.view;\n        var ev = this.context.event;\n        var tooltipItems = view.getTooltipItems({\n            x: ev.x,\n            y: ev.y,\n        });\n        if (isEqual(tooltipItems, this.items)) {\n            // 如果拾取数据同上次相同，则不重复绘制\n            return;\n        }\n        this.items = tooltipItems;\n        if (tooltipItems.length) {\n            var xField_1 = view.getXScale().field;\n            var xValue_1 = tooltipItems[0].data[xField_1];\n            // 根据 x 对应的值查找 elements\n            var elements_1 = [];\n            var geometries = view.geometries;\n            each(geometries, function (geometry) {\n                if (geometry.type === 'interval' || geometry.type === 'schema') {\n                    var result = geometry.getElementsBy(function (ele) {\n                        var eleData = ele.getData();\n                        return eleData[xField_1] === xValue_1;\n                    });\n                    elements_1 = elements_1.concat(result);\n                }\n            });\n            // 根据 bbox 计算背景框的面积区域\n            if (elements_1.length) {\n                var coordinate_1 = view.getCoordinate();\n                var firstBBox_1 = elements_1[0].shape.getCanvasBBox();\n                var lastBBox_1 = elements_1[0].shape.getCanvasBBox();\n                var groupBBox_1 = firstBBox_1;\n                each(elements_1, function (ele) {\n                    var bbox = ele.shape.getCanvasBBox();\n                    if (coordinate_1.isTransposed) {\n                        if (bbox.minY < firstBBox_1.minY) {\n                            firstBBox_1 = bbox;\n                        }\n                        if (bbox.maxY > lastBBox_1.maxY) {\n                            lastBBox_1 = bbox;\n                        }\n                    }\n                    else {\n                        if (bbox.minX < firstBBox_1.minX) {\n                            firstBBox_1 = bbox;\n                        }\n                        if (bbox.maxX > lastBBox_1.maxX) {\n                            lastBBox_1 = bbox;\n                        }\n                    }\n                    groupBBox_1.x = Math.min(bbox.minX, groupBBox_1.minX);\n                    groupBBox_1.y = Math.min(bbox.minY, groupBBox_1.minY);\n                    groupBBox_1.width = Math.max(bbox.maxX, groupBBox_1.maxX) - groupBBox_1.x;\n                    groupBBox_1.height = Math.max(bbox.maxY, groupBBox_1.maxY) - groupBBox_1.y;\n                });\n                var backgroundGroup = view.backgroundGroup, coordinateBBox = view.coordinateBBox;\n                var path = void 0;\n                if (coordinate_1.isRect) {\n                    var xScale = view.getXScale();\n                    var appendRatio = xScale.isLinear ? 0 : 0.25; // 如果 x 轴是数值类型，如直方图，不需要家额外的宽度\n                    var minX = void 0;\n                    var minY = void 0;\n                    var width = void 0;\n                    var height = void 0;\n                    if (coordinate_1.isTransposed) {\n                        minX = coordinateBBox.minX;\n                        minY = Math.min(lastBBox_1.minY, firstBBox_1.minY) - appendRatio * lastBBox_1.height;\n                        width = coordinateBBox.width;\n                        height = groupBBox_1.height + appendRatio * 2 * lastBBox_1.height;\n                    }\n                    else {\n                        minX = Math.min(firstBBox_1.minX, lastBBox_1.minX) - appendRatio * firstBBox_1.width;\n                        minY = Math.min(coordinateBBox.minY, firstBBox_1.minY);\n                        width = groupBBox_1.width + appendRatio * 2 * firstBBox_1.width;\n                        height = coordinateBBox.height;\n                    }\n                    path = [\n                        ['M', minX, minY],\n                        ['L', minX + width, minY],\n                        ['L', minX + width, minY + height],\n                        ['L', minX, minY + height],\n                        ['Z'],\n                    ];\n                }\n                else {\n                    var firstElement = head(elements_1);\n                    var lastElement = last(elements_1);\n                    var startAngle = getAngle(firstElement.getModel(), coordinate_1).startAngle;\n                    var endAngle = getAngle(lastElement.getModel(), coordinate_1).endAngle;\n                    var center = coordinate_1.getCenter();\n                    var radius = coordinate_1.getRadius();\n                    var innterRadius = coordinate_1.innerRadius * radius;\n                    path = getSectorPath(center.x, center.y, radius, startAngle, endAngle, innterRadius);\n                }\n                if (this.regionPath) {\n                    this.regionPath.attr('path', path);\n                    this.regionPath.show();\n                }\n                else {\n                    this.regionPath = backgroundGroup.addShape({\n                        type: 'path',\n                        name: 'active-region',\n                        capture: false,\n                        attrs: {\n                            path: path,\n                            fill: '#CCD6EC',\n                            opacity: 0.3,\n                        },\n                    });\n                }\n            }\n        }\n    };\n    /**\n     * 隐藏\n     */\n    ActiveRegion.prototype.hide = function () {\n        if (this.regionPath) {\n            this.regionPath.hide();\n        }\n        // this.regionPath = null;\n        this.items = null;\n    };\n    /**\n     * 销毁\n     */\n    ActiveRegion.prototype.destroy = function () {\n        this.hide();\n        if (this.regionPath) {\n            this.regionPath.remove(true);\n        }\n        _super.prototype.destroy.call(this);\n    };\n    return ActiveRegion;\n}(Action));\nexport default ActiveRegion;\n//# sourceMappingURL=active-region.js.map"]}]}