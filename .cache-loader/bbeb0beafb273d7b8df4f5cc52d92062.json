{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\util\\grid.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\util\\grid.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { get, map } from '@antv/util';\r\nexport function getGridThemeCfg(theme, direction) {\r\n    return get(theme, ['components', 'axis', direction, 'grid'], {});\r\n}\r\nexport function getLineGridItems(coordinate, scale, dim, alignTick) {\r\n    var items = [];\r\n    var ticks = scale.getTicks();\r\n    if (coordinate.isPolar) {\r\n        ticks.push({\r\n            value: 1,\r\n            text: '',\r\n            tickValue: '',\r\n        });\r\n    }\r\n    ticks.reduce(function (preTick, currentTick, currentIndex) {\r\n        var currentValue = currentTick.value;\r\n        if (alignTick) {\r\n            items.push({\r\n                points: [\r\n                    coordinate.convert(dim === 'y' ? { x: 0, y: currentValue } : { x: currentValue, y: 0 }),\r\n                    coordinate.convert(dim === 'y' ? { x: 1, y: currentValue } : { x: currentValue, y: 1 }),\r\n                ],\r\n            });\r\n        }\r\n        else {\r\n            if (currentIndex) {\r\n                var preValue = preTick.value;\r\n                var middleValue = (preValue + currentValue) / 2;\r\n                items.push({\r\n                    points: [\r\n                        coordinate.convert(dim === 'y' ? { x: 0, y: middleValue } : { x: middleValue, y: 0 }),\r\n                        coordinate.convert(dim === 'y' ? { x: 1, y: middleValue } : { x: middleValue, y: 1 }),\r\n                    ],\r\n                });\r\n            }\r\n        }\r\n        return currentTick;\r\n    }, ticks[0]);\r\n    return items;\r\n}\r\nexport function getCircleGridItems(coordinate, xScale, yScale, alignTick, dim) {\r\n    var count = xScale.values.length;\r\n    var items = [];\r\n    var ticks = yScale.getTicks();\r\n    ticks.reduce(function (preTick, currentTick) {\r\n        var preValue = preTick ? preTick.value : currentTick.value;\r\n        var currentValue = currentTick.value;\r\n        var middleValue = (preValue + currentValue) / 2;\r\n        if (dim === 'x') {\r\n            items.push({\r\n                points: [\r\n                    coordinate.convert({\r\n                        x: alignTick ? currentValue : middleValue,\r\n                        y: 0,\r\n                    }),\r\n                    coordinate.convert({\r\n                        x: alignTick ? currentValue : middleValue,\r\n                        y: 1,\r\n                    }),\r\n                ],\r\n            });\r\n        }\r\n        else {\r\n            items.push({\r\n                points: map(Array(count + 1), function (__, idx) {\r\n                    return coordinate.convert({\r\n                        x: idx / count,\r\n                        y: alignTick ? currentValue : middleValue,\r\n                    });\r\n                }),\r\n            });\r\n        }\r\n        return currentTick;\r\n    }, ticks[0]);\r\n    return items;\r\n}\r\nexport function showGrid(axisTheme, axisOption) {\r\n    var userGrid = get(axisOption, 'grid');\r\n    if (userGrid === null) {\r\n        return false;\r\n    }\r\n    var themeGrid = get(axisTheme, 'grid');\r\n    return !(userGrid === undefined && themeGrid === null);\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\util\\grid.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\util\\grid.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,YAAY,CAAC;AAQtC,MAAM,UAAU,eAAe,CAAC,KAAK,EAAE,SAAS;IAC5C,OAAO,GAAG,CAAC,KAAK,EAAE,CAAC,YAAY,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;AACrE,CAAC;AASD,MAAM,UAAU,gBAAgB,CAAC,UAAU,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS;IAC9D,IAAI,KAAK,GAAG,EAAE,CAAC;IACf,IAAI,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;IAC7B,IAAI,UAAU,CAAC,OAAO,EAAE;QAEpB,KAAK,CAAC,IAAI,CAAC;YACP,KAAK,EAAE,CAAC;YACR,IAAI,EAAE,EAAE;YACR,SAAS,EAAE,EAAE;SAChB,CAAC,CAAC;KACN;IACD,KAAK,CAAC,MAAM,CAAC,UAAU,OAAO,EAAE,WAAW,EAAE,YAAY;QACrD,IAAI,YAAY,GAAG,WAAW,CAAC,KAAK,CAAC;QACrC,IAAI,SAAS,EAAE;YACX,KAAK,CAAC,IAAI,CAAC;gBACP,MAAM,EAAE;oBACJ,UAAU,CAAC,OAAO,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;oBACvF,UAAU,CAAC,OAAO,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;iBAC1F;aACJ,CAAC,CAAC;SACN;aACI;YACD,IAAI,YAAY,EAAE;gBACd,IAAI,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC;gBAC7B,IAAI,WAAW,GAAG,CAAC,QAAQ,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC;gBAChD,KAAK,CAAC,IAAI,CAAC;oBACP,MAAM,EAAE;wBACJ,UAAU,CAAC,OAAO,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;wBACrF,UAAU,CAAC,OAAO,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;qBACxF;iBACJ,CAAC,CAAC;aACN;SACJ;QACD,OAAO,WAAW,CAAC;IACvB,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACb,OAAO,KAAK,CAAC;AACjB,CAAC;AAUD,MAAM,UAAU,kBAAkB,CAAC,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG;IACzE,IAAI,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;IACjC,IAAI,KAAK,GAAG,EAAE,CAAC;IACf,IAAI,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC9B,KAAK,CAAC,MAAM,CAAC,UAAU,OAAO,EAAE,WAAW;QACvC,IAAI,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC;QAC3D,IAAI,YAAY,GAAG,WAAW,CAAC,KAAK,CAAC;QACrC,IAAI,WAAW,GAAG,CAAC,QAAQ,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC;QAChD,IAAI,GAAG,KAAK,GAAG,EAAE;YAEb,KAAK,CAAC,IAAI,CAAC;gBACP,MAAM,EAAE;oBACJ,UAAU,CAAC,OAAO,CAAC;wBACf,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,WAAW;wBACzC,CAAC,EAAE,CAAC;qBACP,CAAC;oBACF,UAAU,CAAC,OAAO,CAAC;wBACf,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,WAAW;wBACzC,CAAC,EAAE,CAAC;qBACP,CAAC;iBACL;aACJ,CAAC,CAAC;SACN;aACI;YACD,KAAK,CAAC,IAAI,CAAC;gBACP,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,UAAU,EAAE,EAAE,GAAG;oBAC3C,OAAO,UAAU,CAAC,OAAO,CAAC;wBACtB,CAAC,EAAE,GAAG,GAAG,KAAK;wBACd,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,WAAW;qBAC5C,CAAC,CAAC;gBACP,CAAC,CAAC;aACL,CAAC,CAAC;SACN;QACD,OAAO,WAAW,CAAC;IACvB,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACb,OAAO,KAAK,CAAC;AACjB,CAAC;AAOD,MAAM,UAAU,QAAQ,CAAC,SAAS,EAAE,UAAU;IAC1C,IAAI,QAAQ,GAAG,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;IACvC,IAAI,QAAQ,KAAK,IAAI,EAAE;QACnB,OAAO,KAAK,CAAC;KAChB;IACD,IAAI,SAAS,GAAG,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;IACvC,OAAO,CAAC,CAAC,QAAQ,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,CAAC,CAAC;AAC3D,CAAC","sourcesContent":["import { get, map } from '@antv/util';\n/**\n * @ignore\n * get the grid theme by type\n * @param theme\n * @param direction\n * @returns theme object\n */\nexport function getGridThemeCfg(theme, direction) {\n    return get(theme, ['components', 'axis', direction, 'grid'], {});\n}\n/**\n * @ignore\n * get axis grid items\n * @param coordinate\n * @param scale\n * @param dim\n * @return items\n */\nexport function getLineGridItems(coordinate, scale, dim, alignTick) {\n    var items = [];\n    var ticks = scale.getTicks();\n    if (coordinate.isPolar) {\n        // 补全 ticks\n        ticks.push({\n            value: 1,\n            text: '',\n            tickValue: '',\n        });\n    }\n    ticks.reduce(function (preTick, currentTick, currentIndex) {\n        var currentValue = currentTick.value;\n        if (alignTick) {\n            items.push({\n                points: [\n                    coordinate.convert(dim === 'y' ? { x: 0, y: currentValue } : { x: currentValue, y: 0 }),\n                    coordinate.convert(dim === 'y' ? { x: 1, y: currentValue } : { x: currentValue, y: 1 }),\n                ],\n            });\n        }\n        else {\n            if (currentIndex) {\n                var preValue = preTick.value;\n                var middleValue = (preValue + currentValue) / 2;\n                items.push({\n                    points: [\n                        coordinate.convert(dim === 'y' ? { x: 0, y: middleValue } : { x: middleValue, y: 0 }),\n                        coordinate.convert(dim === 'y' ? { x: 1, y: middleValue } : { x: middleValue, y: 1 }),\n                    ],\n                });\n            }\n        }\n        return currentTick;\n    }, ticks[0]);\n    return items;\n}\n/**\n * @ignore\n * get\n * @param coordinate\n * @param xScale\n * @param yScale\n * @param dim\n * @returns items\n */\nexport function getCircleGridItems(coordinate, xScale, yScale, alignTick, dim) {\n    var count = xScale.values.length;\n    var items = [];\n    var ticks = yScale.getTicks();\n    ticks.reduce(function (preTick, currentTick) {\n        var preValue = preTick ? preTick.value : currentTick.value; // 只有一项数据时取当前值\n        var currentValue = currentTick.value;\n        var middleValue = (preValue + currentValue) / 2;\n        if (dim === 'x') {\n            // 如果是 x 轴作为半径轴，那么只需要取圆弧收尾两个即可\n            items.push({\n                points: [\n                    coordinate.convert({\n                        x: alignTick ? currentValue : middleValue,\n                        y: 0,\n                    }),\n                    coordinate.convert({\n                        x: alignTick ? currentValue : middleValue,\n                        y: 1,\n                    }),\n                ],\n            });\n        }\n        else {\n            items.push({\n                points: map(Array(count + 1), function (__, idx) {\n                    return coordinate.convert({\n                        x: idx / count,\n                        y: alignTick ? currentValue : middleValue,\n                    });\n                }),\n            });\n        }\n        return currentTick;\n    }, ticks[0]);\n    return items;\n}\n/**\n * @ignore\n * show grid or not\n * @param axisTheme\n * @param axisOption\n */\nexport function showGrid(axisTheme, axisOption) {\n    var userGrid = get(axisOption, 'grid');\n    if (userGrid === null) {\n        return false;\n    }\n    var themeGrid = get(axisTheme, 'grid');\n    return !(userGrid === undefined && themeGrid === null);\n}\n//# sourceMappingURL=grid.js.map"]}]}