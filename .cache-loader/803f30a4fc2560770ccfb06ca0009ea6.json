{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\geometry\\shape\\area\\util.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\geometry\\shape\\area\\util.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { each } from '@antv/util';\r\nimport { getPathPoints } from '../util/get-path-points';\r\nimport { getStyle } from '../util/get-style';\r\nimport { getLinePath, getSplinePath } from '../util/path';\r\nfunction getPath(points, isInCircle, smooth, registeredShape, constraint) {\r\n    var topLinePoints = [];\r\n    var bottomLinePoints = [];\r\n    for (var i = 0, len = points.length; i < len; i++) {\r\n        var point = points[i];\r\n        topLinePoints.push(point[1]);\r\n        bottomLinePoints.push(point[0]);\r\n    }\r\n    bottomLinePoints = bottomLinePoints.reverse();\r\n    var path = [];\r\n    each([topLinePoints, bottomLinePoints], function (pointsData, index) {\r\n        var subPath = [];\r\n        var parsedPoints = registeredShape.parsePoints(pointsData);\r\n        var p1 = parsedPoints[0];\r\n        if (isInCircle) {\r\n            parsedPoints.push({ x: p1.x, y: p1.y });\r\n        }\r\n        if (smooth) {\r\n            subPath = getSplinePath(parsedPoints, false, constraint);\r\n        }\r\n        else {\r\n            subPath = getLinePath(parsedPoints, false);\r\n        }\r\n        if (index > 0) {\r\n            subPath[0][0] = 'L';\r\n        }\r\n        path = path.concat(subPath);\r\n    });\r\n    path.push(['Z']);\r\n    return path;\r\n}\r\nexport function getShapeAttrs(cfg, isStroke, smooth, registeredShape, constraint) {\r\n    var attrs = getStyle(cfg, isStroke, !isStroke, 'lineWidth');\r\n    var connectNulls = cfg.connectNulls, isInCircle = cfg.isInCircle, points = cfg.points;\r\n    var pathPoints = getPathPoints(points, connectNulls);\r\n    var path = [];\r\n    for (var i = 0, len = pathPoints.length; i < len; i++) {\r\n        var eachPoints = pathPoints[i];\r\n        path = path.concat(getPath(eachPoints, isInCircle, smooth, registeredShape, constraint));\r\n    }\r\n    attrs.path = path;\r\n    return attrs;\r\n}\r\nexport function getConstraint(coordinate) {\r\n    var start = coordinate.start, end = coordinate.end;\r\n    return [\r\n        [start.x, end.y],\r\n        [end.x, start.y],\r\n    ];\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\geometry\\shape\\area\\util.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\geometry\\shape\\area\\util.js"],"names":[],"mappings":"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","sourcesContent":["import { each } from '@antv/util';\nimport { getPathPoints } from '../util/get-path-points';\nimport { getStyle } from '../util/get-style';\nimport { getLinePath, getSplinePath } from '../util/path';\nfunction getPath(points, isInCircle, smooth, registeredShape, constraint) {\n    var topLinePoints = []; // area 区域上部分\n    var bottomLinePoints = []; // area 区域下部分\n    for (var i = 0, len = points.length; i < len; i++) {\n        var point = points[i];\n        topLinePoints.push(point[1]);\n        bottomLinePoints.push(point[0]);\n    }\n    bottomLinePoints = bottomLinePoints.reverse();\n    var path = [];\n    each([topLinePoints, bottomLinePoints], function (pointsData, index) {\n        var subPath = [];\n        var parsedPoints = registeredShape.parsePoints(pointsData);\n        var p1 = parsedPoints[0];\n        if (isInCircle) {\n            parsedPoints.push({ x: p1.x, y: p1.y });\n        }\n        if (smooth) {\n            subPath = getSplinePath(parsedPoints, false, constraint);\n        }\n        else {\n            subPath = getLinePath(parsedPoints, false);\n        }\n        if (index > 0) {\n            subPath[0][0] = 'L';\n        }\n        path = path.concat(subPath);\n    });\n    path.push(['Z']);\n    return path;\n}\n/**\n * @ignore\n * Gets shape attrs\n * @param cfg\n * @param isStroke\n * @param smooth\n * @param registeredShape\n * @param [constraint]\n * @returns\n */\nexport function getShapeAttrs(cfg, isStroke, smooth, registeredShape, constraint) {\n    var attrs = getStyle(cfg, isStroke, !isStroke, 'lineWidth');\n    var connectNulls = cfg.connectNulls, isInCircle = cfg.isInCircle, points = cfg.points;\n    var pathPoints = getPathPoints(points, connectNulls); // 根据 connectNulls 配置获取图形关键点\n    var path = [];\n    for (var i = 0, len = pathPoints.length; i < len; i++) {\n        var eachPoints = pathPoints[i];\n        path = path.concat(getPath(eachPoints, isInCircle, smooth, registeredShape, constraint));\n    }\n    attrs.path = path;\n    return attrs;\n}\n/**\n * @ignore\n * Gets constraint\n * @param coordinate\n * @returns constraint\n */\nexport function getConstraint(coordinate) {\n    var start = coordinate.start, end = coordinate.end;\n    return [\n        [start.x, end.y],\n        [end.x, start.y],\n    ];\n}\n//# sourceMappingURL=util.js.map"]}]}