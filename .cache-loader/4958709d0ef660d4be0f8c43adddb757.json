{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\rc-table\\es\\ExpandableTable.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\rc-table\\es\\ExpandableTable.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import _extends from 'babel-runtime/helpers/extends';\r\nimport _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\r\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\r\nimport _createClass from 'babel-runtime/helpers/createClass';\r\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\r\nimport _inherits from 'babel-runtime/helpers/inherits';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'mini-store';\r\nimport { polyfill } from 'react-lifecycles-compat';\r\nimport TableRow from './TableRow';\r\nimport { remove } from './utils';\r\nvar ExpandableTable = function (_React$Component) {\r\n    _inherits(ExpandableTable, _React$Component);\r\n    function ExpandableTable(props) {\r\n        _classCallCheck(this, ExpandableTable);\r\n        var _this = _possibleConstructorReturn(this, (ExpandableTable.__proto__ || Object.getPrototypeOf(ExpandableTable)).call(this, props));\r\n        _initialiseProps.call(_this);\r\n        var data = props.data, childrenColumnName = props.childrenColumnName, defaultExpandAllRows = props.defaultExpandAllRows, expandedRowKeys = props.expandedRowKeys, defaultExpandedRowKeys = props.defaultExpandedRowKeys, getRowKey = props.getRowKey;\r\n        var finnalExpandedRowKeys = [];\r\n        var rows = [].concat(_toConsumableArray(data));\r\n        if (defaultExpandAllRows) {\r\n            for (var i = 0; i < rows.length; i++) {\r\n                var row = rows[i];\r\n                finnalExpandedRowKeys.push(getRowKey(row, i));\r\n                rows = rows.concat(row[childrenColumnName] || []);\r\n            }\r\n        }\r\n        else {\r\n            finnalExpandedRowKeys = expandedRowKeys || defaultExpandedRowKeys;\r\n        }\r\n        _this.columnManager = props.columnManager;\r\n        _this.store = props.store;\r\n        _this.store.setState({\r\n            expandedRowsHeight: {},\r\n            expandedRowKeys: finnalExpandedRowKeys\r\n        });\r\n        return _this;\r\n    }\r\n    _createClass(ExpandableTable, [{\r\n            key: 'componentDidUpdate',\r\n            value: function componentDidUpdate() {\r\n                if ('expandedRowKeys' in this.props) {\r\n                    this.store.setState({\r\n                        expandedRowKeys: this.props.expandedRowKeys\r\n                    });\r\n                }\r\n            }\r\n        }, {\r\n            key: 'renderExpandedRow',\r\n            value: function renderExpandedRow(record, index, _render, className, ancestorKeys, indent, fixed) {\r\n                var _this2 = this;\r\n                var _props = this.props, prefixCls = _props.prefixCls, expandIconAsCell = _props.expandIconAsCell, indentSize = _props.indentSize;\r\n                var parentKey = ancestorKeys[ancestorKeys.length - 1];\r\n                var rowKey = parentKey + '-extra-row';\r\n                var components = {\r\n                    body: {\r\n                        row: 'tr',\r\n                        cell: 'td'\r\n                    }\r\n                };\r\n                var colCount = void 0;\r\n                if (fixed === 'left') {\r\n                    colCount = this.columnManager.leftLeafColumns().length;\r\n                }\r\n                else if (fixed === 'right') {\r\n                    colCount = this.columnManager.rightLeafColumns().length;\r\n                }\r\n                else {\r\n                    colCount = this.columnManager.leafColumns().length;\r\n                }\r\n                var columns = [{\r\n                        key: 'extra-row',\r\n                        render: function render() {\r\n                            var _store$getState = _this2.store.getState(), expandedRowKeys = _store$getState.expandedRowKeys;\r\n                            var expanded = !!~expandedRowKeys.indexOf(parentKey);\r\n                            return {\r\n                                props: {\r\n                                    colSpan: colCount\r\n                                },\r\n                                children: fixed !== 'right' ? _render(record, index, indent, expanded) : '&nbsp;'\r\n                            };\r\n                        }\r\n                    }];\r\n                if (expandIconAsCell && fixed !== 'right') {\r\n                    columns.unshift({\r\n                        key: 'expand-icon-placeholder',\r\n                        render: function render() {\r\n                            return null;\r\n                        }\r\n                    });\r\n                }\r\n                return React.createElement(TableRow, {\r\n                    key: rowKey,\r\n                    columns: columns,\r\n                    className: className,\r\n                    rowKey: rowKey,\r\n                    ancestorKeys: ancestorKeys,\r\n                    prefixCls: prefixCls + '-expanded-row',\r\n                    indentSize: indentSize,\r\n                    indent: indent,\r\n                    fixed: fixed,\r\n                    components: components,\r\n                    expandedRow: true\r\n                });\r\n            }\r\n        }, {\r\n            key: 'render',\r\n            value: function render() {\r\n                var _props2 = this.props, data = _props2.data, childrenColumnName = _props2.childrenColumnName, children = _props2.children;\r\n                var needIndentSpaced = data.some(function (record) {\r\n                    return record[childrenColumnName];\r\n                });\r\n                return children({\r\n                    props: this.props,\r\n                    needIndentSpaced: needIndentSpaced,\r\n                    renderRows: this.renderRows,\r\n                    handleExpandChange: this.handleExpandChange,\r\n                    renderExpandIndentCell: this.renderExpandIndentCell\r\n                });\r\n            }\r\n        }]);\r\n    return ExpandableTable;\r\n}(React.Component);\r\nExpandableTable.propTypes = {\r\n    expandIconAsCell: PropTypes.bool,\r\n    expandedRowKeys: PropTypes.array,\r\n    expandedRowClassName: PropTypes.func,\r\n    defaultExpandAllRows: PropTypes.bool,\r\n    defaultExpandedRowKeys: PropTypes.array,\r\n    expandIconColumnIndex: PropTypes.number,\r\n    expandedRowRender: PropTypes.func,\r\n    childrenColumnName: PropTypes.string,\r\n    indentSize: PropTypes.number,\r\n    onExpand: PropTypes.func,\r\n    onExpandedRowsChange: PropTypes.func,\r\n    columnManager: PropTypes.object.isRequired,\r\n    store: PropTypes.object.isRequired,\r\n    prefixCls: PropTypes.string.isRequired,\r\n    data: PropTypes.array,\r\n    children: PropTypes.func.isRequired,\r\n    getRowKey: PropTypes.func.isRequired\r\n};\r\nExpandableTable.defaultProps = {\r\n    expandIconAsCell: false,\r\n    expandedRowClassName: function expandedRowClassName() {\r\n        return '';\r\n    },\r\n    expandIconColumnIndex: 0,\r\n    defaultExpandAllRows: false,\r\n    defaultExpandedRowKeys: [],\r\n    childrenColumnName: 'children',\r\n    indentSize: 15,\r\n    onExpand: function onExpand() { },\r\n    onExpandedRowsChange: function onExpandedRowsChange() { }\r\n};\r\nvar _initialiseProps = function _initialiseProps() {\r\n    var _this3 = this;\r\n    this.handleExpandChange = function (expanded, record, event, rowKey) {\r\n        var destroy = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        var _props3 = _this3.props, onExpandedRowsChange = _props3.onExpandedRowsChange, onExpand = _props3.onExpand;\r\n        var _store$getState2 = _this3.store.getState(), expandedRowKeys = _store$getState2.expandedRowKeys;\r\n        if (expanded) {\r\n            expandedRowKeys = [].concat(_toConsumableArray(expandedRowKeys), [rowKey]);\r\n        }\r\n        else {\r\n            var expandedRowIndex = expandedRowKeys.indexOf(rowKey);\r\n            if (expandedRowIndex !== -1) {\r\n                expandedRowKeys = remove(expandedRowKeys, rowKey);\r\n            }\r\n        }\r\n        if (!_this3.props.expandedRowKeys) {\r\n            _this3.store.setState({ expandedRowKeys: expandedRowKeys });\r\n        }\r\n        onExpandedRowsChange(expandedRowKeys);\r\n        if (!destroy) {\r\n            onExpand(expanded, record);\r\n        }\r\n    };\r\n    this.renderExpandIndentCell = function (rows, fixed) {\r\n        var _props4 = _this3.props, prefixCls = _props4.prefixCls, expandIconAsCell = _props4.expandIconAsCell;\r\n        if (!expandIconAsCell || fixed === 'right' || !rows.length) {\r\n            return;\r\n        }\r\n        var iconColumn = {\r\n            key: 'rc-table-expand-icon-cell',\r\n            className: prefixCls + '-expand-icon-th',\r\n            title: '',\r\n            rowSpan: rows.length\r\n        };\r\n        rows[0].unshift(_extends({}, iconColumn, { column: iconColumn }));\r\n    };\r\n    this.renderRows = function (renderRows, rows, record, index, indent, fixed, parentKey, ancestorKeys) {\r\n        var _props5 = _this3.props, expandedRowClassName = _props5.expandedRowClassName, expandedRowRender = _props5.expandedRowRender, childrenColumnName = _props5.childrenColumnName;\r\n        var childrenData = record[childrenColumnName];\r\n        var nextAncestorKeys = [].concat(_toConsumableArray(ancestorKeys), [parentKey]);\r\n        var nextIndent = indent + 1;\r\n        if (expandedRowRender) {\r\n            rows.push(_this3.renderExpandedRow(record, index, expandedRowRender, expandedRowClassName(record, index, indent), nextAncestorKeys, nextIndent, fixed));\r\n        }\r\n        if (childrenData) {\r\n            rows.push.apply(rows, _toConsumableArray(renderRows(childrenData, nextIndent, nextAncestorKeys)));\r\n        }\r\n    };\r\n};\r\npolyfill(ExpandableTable);\r\nexport default connect()(ExpandableTable);\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\rc-table\\es\\ExpandableTable.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\rc-table\\es\\ExpandableTable.js"],"names":[],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'mini-store';\nimport { polyfill } from 'react-lifecycles-compat';\nimport TableRow from './TableRow';\nimport { remove } from './utils';\n\nvar ExpandableTable = function (_React$Component) {\n  _inherits(ExpandableTable, _React$Component);\n\n  function ExpandableTable(props) {\n    _classCallCheck(this, ExpandableTable);\n\n    var _this = _possibleConstructorReturn(this, (ExpandableTable.__proto__ || Object.getPrototypeOf(ExpandableTable)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var data = props.data,\n        childrenColumnName = props.childrenColumnName,\n        defaultExpandAllRows = props.defaultExpandAllRows,\n        expandedRowKeys = props.expandedRowKeys,\n        defaultExpandedRowKeys = props.defaultExpandedRowKeys,\n        getRowKey = props.getRowKey;\n\n\n    var finnalExpandedRowKeys = [];\n    var rows = [].concat(_toConsumableArray(data));\n\n    if (defaultExpandAllRows) {\n      for (var i = 0; i < rows.length; i++) {\n        var row = rows[i];\n        finnalExpandedRowKeys.push(getRowKey(row, i));\n        rows = rows.concat(row[childrenColumnName] || []);\n      }\n    } else {\n      finnalExpandedRowKeys = expandedRowKeys || defaultExpandedRowKeys;\n    }\n\n    _this.columnManager = props.columnManager;\n    _this.store = props.store;\n\n    _this.store.setState({\n      expandedRowsHeight: {},\n      expandedRowKeys: finnalExpandedRowKeys\n    });\n    return _this;\n  }\n\n  _createClass(ExpandableTable, [{\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      if ('expandedRowKeys' in this.props) {\n        this.store.setState({\n          expandedRowKeys: this.props.expandedRowKeys\n        });\n      }\n    }\n  }, {\n    key: 'renderExpandedRow',\n    value: function renderExpandedRow(record, index, _render, className, ancestorKeys, indent, fixed) {\n      var _this2 = this;\n\n      var _props = this.props,\n          prefixCls = _props.prefixCls,\n          expandIconAsCell = _props.expandIconAsCell,\n          indentSize = _props.indentSize;\n\n      var parentKey = ancestorKeys[ancestorKeys.length - 1];\n      var rowKey = parentKey + '-extra-row';\n      var components = {\n        body: {\n          row: 'tr',\n          cell: 'td'\n        }\n      };\n      var colCount = void 0;\n      if (fixed === 'left') {\n        colCount = this.columnManager.leftLeafColumns().length;\n      } else if (fixed === 'right') {\n        colCount = this.columnManager.rightLeafColumns().length;\n      } else {\n        colCount = this.columnManager.leafColumns().length;\n      }\n      var columns = [{\n        key: 'extra-row',\n        render: function render() {\n          var _store$getState = _this2.store.getState(),\n              expandedRowKeys = _store$getState.expandedRowKeys;\n\n          var expanded = !!~expandedRowKeys.indexOf(parentKey);\n          return {\n            props: {\n              colSpan: colCount\n            },\n            children: fixed !== 'right' ? _render(record, index, indent, expanded) : '&nbsp;'\n          };\n        }\n      }];\n      if (expandIconAsCell && fixed !== 'right') {\n        columns.unshift({\n          key: 'expand-icon-placeholder',\n          render: function render() {\n            return null;\n          }\n        });\n      }\n\n      return React.createElement(TableRow, {\n        key: rowKey,\n        columns: columns,\n        className: className,\n        rowKey: rowKey,\n        ancestorKeys: ancestorKeys,\n        prefixCls: prefixCls + '-expanded-row',\n        indentSize: indentSize,\n        indent: indent,\n        fixed: fixed,\n        components: components,\n        expandedRow: true\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          data = _props2.data,\n          childrenColumnName = _props2.childrenColumnName,\n          children = _props2.children;\n\n      var needIndentSpaced = data.some(function (record) {\n        return record[childrenColumnName];\n      });\n\n      return children({\n        props: this.props,\n        needIndentSpaced: needIndentSpaced,\n        renderRows: this.renderRows,\n        handleExpandChange: this.handleExpandChange,\n        renderExpandIndentCell: this.renderExpandIndentCell\n      });\n    }\n  }]);\n\n  return ExpandableTable;\n}(React.Component);\n\nExpandableTable.propTypes = {\n  expandIconAsCell: PropTypes.bool,\n  expandedRowKeys: PropTypes.array,\n  expandedRowClassName: PropTypes.func,\n  defaultExpandAllRows: PropTypes.bool,\n  defaultExpandedRowKeys: PropTypes.array,\n  expandIconColumnIndex: PropTypes.number,\n  expandedRowRender: PropTypes.func,\n  childrenColumnName: PropTypes.string,\n  indentSize: PropTypes.number,\n  onExpand: PropTypes.func,\n  onExpandedRowsChange: PropTypes.func,\n  columnManager: PropTypes.object.isRequired,\n  store: PropTypes.object.isRequired,\n  prefixCls: PropTypes.string.isRequired,\n  data: PropTypes.array,\n  children: PropTypes.func.isRequired,\n  getRowKey: PropTypes.func.isRequired\n};\nExpandableTable.defaultProps = {\n  expandIconAsCell: false,\n  expandedRowClassName: function expandedRowClassName() {\n    return '';\n  },\n  expandIconColumnIndex: 0,\n  defaultExpandAllRows: false,\n  defaultExpandedRowKeys: [],\n  childrenColumnName: 'children',\n  indentSize: 15,\n  onExpand: function onExpand() {},\n  onExpandedRowsChange: function onExpandedRowsChange() {}\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.handleExpandChange = function (expanded, record, event, rowKey) {\n    var destroy = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    var _props3 = _this3.props,\n        onExpandedRowsChange = _props3.onExpandedRowsChange,\n        onExpand = _props3.onExpand;\n\n    var _store$getState2 = _this3.store.getState(),\n        expandedRowKeys = _store$getState2.expandedRowKeys;\n\n    if (expanded) {\n      // row was expaned\n      expandedRowKeys = [].concat(_toConsumableArray(expandedRowKeys), [rowKey]);\n    } else {\n      // row was collapse\n      var expandedRowIndex = expandedRowKeys.indexOf(rowKey);\n      if (expandedRowIndex !== -1) {\n        expandedRowKeys = remove(expandedRowKeys, rowKey);\n      }\n    }\n\n    if (!_this3.props.expandedRowKeys) {\n      _this3.store.setState({ expandedRowKeys: expandedRowKeys });\n    }\n\n    onExpandedRowsChange(expandedRowKeys);\n    if (!destroy) {\n      onExpand(expanded, record);\n    }\n  };\n\n  this.renderExpandIndentCell = function (rows, fixed) {\n    var _props4 = _this3.props,\n        prefixCls = _props4.prefixCls,\n        expandIconAsCell = _props4.expandIconAsCell;\n\n    if (!expandIconAsCell || fixed === 'right' || !rows.length) {\n      return;\n    }\n\n    var iconColumn = {\n      key: 'rc-table-expand-icon-cell',\n      className: prefixCls + '-expand-icon-th',\n      title: '',\n      rowSpan: rows.length\n    };\n\n    rows[0].unshift(_extends({}, iconColumn, { column: iconColumn }));\n  };\n\n  this.renderRows = function (renderRows, rows, record, index, indent, fixed, parentKey, ancestorKeys) {\n    var _props5 = _this3.props,\n        expandedRowClassName = _props5.expandedRowClassName,\n        expandedRowRender = _props5.expandedRowRender,\n        childrenColumnName = _props5.childrenColumnName;\n\n    var childrenData = record[childrenColumnName];\n    var nextAncestorKeys = [].concat(_toConsumableArray(ancestorKeys), [parentKey]);\n    var nextIndent = indent + 1;\n\n    if (expandedRowRender) {\n      rows.push(_this3.renderExpandedRow(record, index, expandedRowRender, expandedRowClassName(record, index, indent), nextAncestorKeys, nextIndent, fixed));\n    }\n\n    if (childrenData) {\n      rows.push.apply(rows, _toConsumableArray(renderRows(childrenData, nextIndent, nextAncestorKeys)));\n    }\n  };\n};\n\npolyfill(ExpandableTable);\n\nexport default connect()(ExpandableTable);"]}]}