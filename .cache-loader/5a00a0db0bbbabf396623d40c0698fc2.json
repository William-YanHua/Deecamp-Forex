{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\api\\hierarchy.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\api\\hierarchy.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["var assign = require('@antv/util/lib/mix');\r\nvar View = require('../view');\r\nassign(View.prototype, {\r\n    getAllNodes: function () {\r\n        var nodes = [];\r\n        this.root.each(function (node) {\r\n            nodes.push(node);\r\n        });\r\n        return nodes;\r\n    },\r\n    getAllLinks: function () {\r\n        var links = [];\r\n        var nodes = [this.root];\r\n        var node;\r\n        while (node = nodes.pop()) {\r\n            var children = node.children;\r\n            if (children) {\r\n                children.forEach(function (child) {\r\n                    links.push({\r\n                        source: node,\r\n                        target: child\r\n                    });\r\n                    nodes.push(child);\r\n                });\r\n            }\r\n        }\r\n        return links;\r\n    }\r\n});\r\nassign(View.prototype, {\r\n    getAllEdges: View.prototype.getAllLinks\r\n});\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\api\\hierarchy.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\api\\hierarchy.js"],"names":[],"mappings":"AACA,IAAM,MAAM,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;AAC7C,IAAM,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAEhC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE;IACrB,WAAW;QACT,IAAM,KAAK,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAA,IAAI;YACjB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;QACH,OAAO,KAAK,CAAC;IACf,CAAC;IACD,WAAW;QACT,IAAM,KAAK,GAAG,EAAE,CAAC;QACjB,IAAM,KAAK,GAAG,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC;QAC5B,IAAI,IAAI,CAAC;QACT,OAAO,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,EAAE;YACzB,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC/B,IAAI,QAAQ,EAAE;gBACZ,QAAQ,CAAC,OAAO,CAAC,UAAA,KAAK;oBACpB,KAAK,CAAC,IAAI,CAAC;wBACT,MAAM,EAAE,IAAI;wBACZ,MAAM,EAAE,KAAK;qBACd,CAAC,CAAC;oBACH,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACpB,CAAC,CAAC,CAAC;aACJ;SACF;QACD,OAAO,KAAK,CAAC;IACf,CAAC;CACF,CAAC,CAAC;AAEH,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE;IACrB,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW;CACxC,CAAC,CAAC","sourcesContent":["/* eslint-disable no-cond-assign, no-loop-func */\nconst assign = require('@antv/util/lib/mix');\nconst View = require('../view');\n\nassign(View.prototype, {\n  getAllNodes() {\n    const nodes = [];\n    this.root.each(node => {\n      nodes.push(node);\n    });\n    return nodes;\n  },\n  getAllLinks() {\n    const links = [];\n    const nodes = [ this.root ];\n    let node;\n    while (node = nodes.pop()) {\n      const children = node.children;\n      if (children) {\n        children.forEach(child => {\n          links.push({\n            source: node,\n            target: child\n          });\n          nodes.push(child);\n        });\n      }\n    }\n    return links;\n  }\n});\n\nassign(View.prototype, {\n  getAllEdges: View.prototype.getAllLinks\n});\n"]}]}