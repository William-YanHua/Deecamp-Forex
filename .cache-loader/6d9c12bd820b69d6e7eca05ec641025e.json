{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/g/lib/shapes/util/path-segment.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/g/lib/shapes/util/path-segment.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var Util = require('../../util/index');\nvar Inside = require('./inside');\nvar Cubic = require('../math/cubic');\nvar Quadratic = require('../math/quadratic');\nvar Ellipse = require('../math/ellipse');\nvar vec3 = Util.vec3;\nvar mat3 = Util.mat3;\nvar ARR_CMD = ['m', 'l', 'c', 'a', 'q', 'h', 'v', 't', 's', 'z'];\nfunction toAbsolute(x, y, curPoint) {\n    return {\n        x: curPoint.x + x,\n        y: curPoint.y + y\n    };\n}\nfunction toSymmetry(point, center) {\n    return {\n        x: center.x + (center.x - point.x),\n        y: center.y + (center.y - point.y)\n    };\n}\nfunction vMag(v) {\n    return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n}\nfunction vRatio(u, v) {\n    return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n}\nfunction vAngle(u, v) {\n    return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n}\nfunction getArcParams(point1, point2, fa, fs, rx, ry, psiDeg) {\n    var psi = Util.mod(Util.toRadian(psiDeg), Math.PI * 2);\n    var x1 = point1.x;\n    var y1 = point1.y;\n    var x2 = point2.x;\n    var y2 = point2.y;\n    var xp = Math.cos(psi) * (x1 - x2) / 2.0 + Math.sin(psi) * (y1 - y2) / 2.0;\n    var yp = -1 * Math.sin(psi) * (x1 - x2) / 2.0 + Math.cos(psi) * (y1 - y2) / 2.0;\n    var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n    if (lambda > 1) {\n        rx *= Math.sqrt(lambda);\n        ry *= Math.sqrt(lambda);\n    }\n    var diff = rx * rx * (yp * yp) + ry * ry * (xp * xp);\n    var f = Math.sqrt((rx * rx * (ry * ry) - diff) / diff);\n    if (fa === fs) {\n        f *= -1;\n    }\n    if (isNaN(f)) {\n        f = 0;\n    }\n    var cxp = f * rx * yp / ry;\n    var cyp = f * -ry * xp / rx;\n    var cx = (x1 + x2) / 2.0 + Math.cos(psi) * cxp - Math.sin(psi) * cyp;\n    var cy = (y1 + y2) / 2.0 + Math.sin(psi) * cxp + Math.cos(psi) * cyp;\n    var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n    var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n    var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n    var dTheta = vAngle(u, v);\n    if (vRatio(u, v) <= -1) {\n        dTheta = Math.PI;\n    }\n    if (vRatio(u, v) >= 1) {\n        dTheta = 0;\n    }\n    if (fs === 0 && dTheta > 0) {\n        dTheta = dTheta - 2 * Math.PI;\n    }\n    if (fs === 1 && dTheta < 0) {\n        dTheta = dTheta + 2 * Math.PI;\n    }\n    return [point1, cx, cy, rx, ry, theta, dTheta, psi, fs];\n}\nvar PathSegment = function PathSegment(item, preSegment, isLast) {\n    this.preSegment = preSegment;\n    this.isLast = isLast;\n    this.init(item, preSegment);\n};\nUtil.augment(PathSegment, {\n    init: function init(item, preSegment) {\n        var command = item[0];\n        preSegment = preSegment || {\n            endPoint: {\n                x: 0,\n                y: 0\n            }\n        };\n        var relative = ARR_CMD.indexOf(command) >= 0;\n        var cmd = relative ? command.toUpperCase() : command;\n        var p = item;\n        var point1;\n        var point2;\n        var point3;\n        var point;\n        var preEndPoint = preSegment.endPoint;\n        var p1 = p[1];\n        var p2 = p[2];\n        switch (cmd) {\n            default:\n                break;\n            case 'M':\n                if (relative) {\n                    point = toAbsolute(p1, p2, preEndPoint);\n                }\n                else {\n                    point = {\n                        x: p1,\n                        y: p2\n                    };\n                }\n                this.command = 'M';\n                this.params = [preEndPoint, point];\n                this.subStart = point;\n                this.endPoint = point;\n                break;\n            case 'L':\n                if (relative) {\n                    point = toAbsolute(p1, p2, preEndPoint);\n                }\n                else {\n                    point = {\n                        x: p1,\n                        y: p2\n                    };\n                }\n                this.command = 'L';\n                this.params = [preEndPoint, point];\n                this.subStart = preSegment.subStart;\n                this.endPoint = point;\n                this.endTangent = function () {\n                    return [point.x - preEndPoint.x, point.y - preEndPoint.y];\n                };\n                this.startTangent = function () {\n                    return [preEndPoint.x - point.x, preEndPoint.y - point.y];\n                };\n                break;\n            case 'H':\n                if (relative) {\n                    point = toAbsolute(p1, 0, preEndPoint);\n                }\n                else {\n                    point = {\n                        x: p1,\n                        y: preEndPoint.y\n                    };\n                }\n                this.command = 'L';\n                this.params = [preEndPoint, point];\n                this.subStart = preSegment.subStart;\n                this.endPoint = point;\n                this.endTangent = function () {\n                    return [point.x - preEndPoint.x, point.y - preEndPoint.y];\n                };\n                this.startTangent = function () {\n                    return [preEndPoint.x - point.x, preEndPoint.y - point.y];\n                };\n                break;\n            case 'V':\n                if (relative) {\n                    point = toAbsolute(0, p1, preEndPoint);\n                }\n                else {\n                    point = {\n                        x: preEndPoint.x,\n                        y: p1\n                    };\n                }\n                this.command = 'L';\n                this.params = [preEndPoint, point];\n                this.subStart = preSegment.subStart;\n                this.endPoint = point;\n                this.endTangent = function () {\n                    return [point.x - preEndPoint.x, point.y - preEndPoint.y];\n                };\n                this.startTangent = function () {\n                    return [preEndPoint.x - point.x, preEndPoint.y - point.y];\n                };\n                break;\n            case 'Q':\n                if (relative) {\n                    point1 = toAbsolute(p1, p2, preEndPoint);\n                    point2 = toAbsolute(p[3], p[4], preEndPoint);\n                }\n                else {\n                    point1 = {\n                        x: p1,\n                        y: p2\n                    };\n                    point2 = {\n                        x: p[3],\n                        y: p[4]\n                    };\n                }\n                this.command = 'Q';\n                this.params = [preEndPoint, point1, point2];\n                this.subStart = preSegment.subStart;\n                this.endPoint = point2;\n                this.endTangent = function () {\n                    return [point2.x - point1.x, point2.y - point1.y];\n                };\n                this.startTangent = function () {\n                    return [preEndPoint.x - point1.x, preEndPoint.y - point1.y];\n                };\n                break;\n            case 'T':\n                if (relative) {\n                    point2 = toAbsolute(p1, p2, preEndPoint);\n                }\n                else {\n                    point2 = {\n                        x: p1,\n                        y: p2\n                    };\n                }\n                if (preSegment.command === 'Q') {\n                    point1 = toSymmetry(preSegment.params[1], preEndPoint);\n                    this.command = 'Q';\n                    this.params = [preEndPoint, point1, point2];\n                    this.subStart = preSegment.subStart;\n                    this.endPoint = point2;\n                    this.endTangent = function () {\n                        return [point2.x - point1.x, point2.y - point1.y];\n                    };\n                    this.startTangent = function () {\n                        return [preEndPoint.x - point1.x, preEndPoint.y - point1.y];\n                    };\n                }\n                else {\n                    this.command = 'TL';\n                    this.params = [preEndPoint, point2];\n                    this.subStart = preSegment.subStart;\n                    this.endPoint = point2;\n                    this.endTangent = function () {\n                        return [point2.x - preEndPoint.x, point2.y - preEndPoint.y];\n                    };\n                    this.startTangent = function () {\n                        return [preEndPoint.x - point2.x, preEndPoint.y - point2.y];\n                    };\n                }\n                break;\n            case 'C':\n                if (relative) {\n                    point1 = toAbsolute(p1, p2, preEndPoint);\n                    point2 = toAbsolute(p[3], p[4], preEndPoint);\n                    point3 = toAbsolute(p[5], p[6], preEndPoint);\n                }\n                else {\n                    point1 = {\n                        x: p1,\n                        y: p2\n                    };\n                    point2 = {\n                        x: p[3],\n                        y: p[4]\n                    };\n                    point3 = {\n                        x: p[5],\n                        y: p[6]\n                    };\n                }\n                this.command = 'C';\n                this.params = [preEndPoint, point1, point2, point3];\n                this.subStart = preSegment.subStart;\n                this.endPoint = point3;\n                this.endTangent = function () {\n                    return [point3.x - point2.x, point3.y - point2.y];\n                };\n                this.startTangent = function () {\n                    return [preEndPoint.x - point1.x, preEndPoint.y - point1.y];\n                };\n                break;\n            case 'S':\n                if (relative) {\n                    point2 = toAbsolute(p1, p2, preEndPoint);\n                    point3 = toAbsolute(p[3], p[4], preEndPoint);\n                }\n                else {\n                    point2 = {\n                        x: p1,\n                        y: p2\n                    };\n                    point3 = {\n                        x: p[3],\n                        y: p[4]\n                    };\n                }\n                if (preSegment.command === 'C') {\n                    point1 = toSymmetry(preSegment.params[2], preEndPoint);\n                    this.command = 'C';\n                    this.params = [preEndPoint, point1, point2, point3];\n                    this.subStart = preSegment.subStart;\n                    this.endPoint = point3;\n                    this.endTangent = function () {\n                        return [point3.x - point2.x, point3.y - point2.y];\n                    };\n                    this.startTangent = function () {\n                        return [preEndPoint.x - point1.x, preEndPoint.y - point1.y];\n                    };\n                }\n                else {\n                    this.command = 'SQ';\n                    this.params = [preEndPoint, point2, point3];\n                    this.subStart = preSegment.subStart;\n                    this.endPoint = point3;\n                    this.endTangent = function () {\n                        return [point3.x - point2.x, point3.y - point2.y];\n                    };\n                    this.startTangent = function () {\n                        return [preEndPoint.x - point2.x, preEndPoint.y - point2.y];\n                    };\n                }\n                break;\n            case 'A':\n                {\n                    var rx = p1;\n                    var ry = p2;\n                    var psi = p[3];\n                    var fa = p[4];\n                    var fs = p[5];\n                    if (relative) {\n                        point = toAbsolute(p[6], p[7], preEndPoint);\n                    }\n                    else {\n                        point = {\n                            x: p[6],\n                            y: p[7]\n                        };\n                    }\n                    this.command = 'A';\n                    var params = getArcParams(preEndPoint, point, fa, fs, rx, ry, psi);\n                    this.params = params;\n                    var start = preSegment.subStart;\n                    this.subStart = start;\n                    this.endPoint = point;\n                    var startAngle = params[5] % (Math.PI * 2);\n                    if (Util.isNumberEqual(startAngle, Math.PI * 2)) {\n                        startAngle = 0;\n                    }\n                    var endAngle = params[6] % (Math.PI * 2);\n                    if (Util.isNumberEqual(endAngle, Math.PI * 2)) {\n                        endAngle = 0;\n                    }\n                    var d = 0.001;\n                    this.startTangent = function () {\n                        if (fs === 0) {\n                            d *= -1;\n                        }\n                        var dx = params[3] * Math.cos(startAngle - d) + params[1];\n                        var dy = params[4] * Math.sin(startAngle - d) + params[2];\n                        return [dx - start.x, dy - start.y];\n                    };\n                    this.endTangent = function () {\n                        var endAngle = params[6];\n                        if (endAngle - Math.PI * 2 < 0.0001) {\n                            endAngle = 0;\n                        }\n                        var dx = params[3] * Math.cos(startAngle + endAngle + d) + params[1];\n                        var dy = params[4] * Math.sin(startAngle + endAngle - d) + params[2];\n                        return [preEndPoint.x - dx, preEndPoint.y - dy];\n                    };\n                    break;\n                }\n            case 'Z':\n                {\n                    this.command = 'Z';\n                    this.params = [preEndPoint, preSegment.subStart];\n                    this.subStart = preSegment.subStart;\n                    this.endPoint = preSegment.subStart;\n                }\n        }\n    },\n    isInside: function isInside(x, y, lineWidth) {\n        var self = this;\n        var command = self.command;\n        var params = self.params;\n        var box = self.box;\n        if (box) {\n            if (!Inside.box(box.minX, box.maxX, box.minY, box.maxY, x, y)) {\n                return false;\n            }\n        }\n        switch (command) {\n            default:\n                break;\n            case 'M':\n                return false;\n            case 'TL':\n            case 'L':\n            case 'Z':\n                return Inside.line(params[0].x, params[0].y, params[1].x, params[1].y, lineWidth, x, y);\n            case 'SQ':\n            case 'Q':\n                return Inside.quadraticline(params[0].x, params[0].y, params[1].x, params[1].y, params[2].x, params[2].y, lineWidth, x, y);\n            case 'C':\n                {\n                    return Inside.cubicline(params[0].x, params[0].y, params[1].x, params[1].y, params[2].x, params[2].y, params[3].x, params[3].y, lineWidth, x, y);\n                }\n            case 'A':\n                {\n                    var p = params;\n                    var cx = p[1];\n                    var cy = p[2];\n                    var rx = p[3];\n                    var ry = p[4];\n                    var theta = p[5];\n                    var dTheta = p[6];\n                    var psi = p[7];\n                    var fs = p[8];\n                    var r = rx > ry ? rx : ry;\n                    var scaleX = rx > ry ? 1 : rx / ry;\n                    var scaleY = rx > ry ? ry / rx : 1;\n                    p = [x, y, 1];\n                    var m = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n                    mat3.translate(m, m, [-cx, -cy]);\n                    mat3.rotate(m, m, -psi);\n                    mat3.scale(m, m, [1 / scaleX, 1 / scaleY]);\n                    vec3.transformMat3(p, p, m);\n                    return Inside.arcline(0, 0, r, theta, theta + dTheta, 1 - fs, lineWidth, p[0], p[1]);\n                }\n        }\n        return false;\n    },\n    draw: function draw(context) {\n        var command = this.command;\n        var params = this.params;\n        var point1;\n        var point2;\n        var point3;\n        switch (command) {\n            default:\n                break;\n            case 'M':\n                context.moveTo(params[1].x, params[1].y);\n                break;\n            case 'TL':\n            case 'L':\n                context.lineTo(params[1].x, params[1].y);\n                break;\n            case 'SQ':\n            case 'Q':\n                point1 = params[1];\n                point2 = params[2];\n                context.quadraticCurveTo(point1.x, point1.y, point2.x, point2.y);\n                break;\n            case 'C':\n                point1 = params[1];\n                point2 = params[2];\n                point3 = params[3];\n                context.bezierCurveTo(point1.x, point1.y, point2.x, point2.y, point3.x, point3.y);\n                break;\n            case 'A':\n                {\n                    var p = params;\n                    var p1 = p[1];\n                    var p2 = p[2];\n                    var cx = p1;\n                    var cy = p2;\n                    var rx = p[3];\n                    var ry = p[4];\n                    var theta = p[5];\n                    var dTheta = p[6];\n                    var psi = p[7];\n                    var fs = p[8];\n                    var r = rx > ry ? rx : ry;\n                    var scaleX = rx > ry ? 1 : rx / ry;\n                    var scaleY = rx > ry ? ry / rx : 1;\n                    context.translate(cx, cy);\n                    context.rotate(psi);\n                    context.scale(scaleX, scaleY);\n                    context.arc(0, 0, r, theta, theta + dTheta, 1 - fs);\n                    context.scale(1 / scaleX, 1 / scaleY);\n                    context.rotate(-psi);\n                    context.translate(-cx, -cy);\n                    break;\n                }\n            case 'Z':\n                context.closePath();\n                break;\n        }\n    },\n    getBBox: function getBBox(lineWidth) {\n        var halfWidth = lineWidth / 2;\n        var params = this.params;\n        var yDims;\n        var xDims;\n        var i;\n        var l;\n        switch (this.command) {\n            default:\n            case 'M':\n            case 'Z':\n                break;\n            case 'TL':\n            case 'L':\n                this.box = {\n                    minX: Math.min(params[0].x, params[1].x) - halfWidth,\n                    maxX: Math.max(params[0].x, params[1].x) + halfWidth,\n                    minY: Math.min(params[0].y, params[1].y) - halfWidth,\n                    maxY: Math.max(params[0].y, params[1].y) + halfWidth\n                };\n                break;\n            case 'SQ':\n            case 'Q':\n                xDims = Quadratic.extrema(params[0].x, params[1].x, params[2].x);\n                for (i = 0, l = xDims.length; i < l; i++) {\n                    xDims[i] = Quadratic.at(params[0].x, params[1].x, params[2].x, xDims[i]);\n                }\n                xDims.push(params[0].x, params[2].x);\n                yDims = Quadratic.extrema(params[0].y, params[1].y, params[2].y);\n                for (i = 0, l = yDims.length; i < l; i++) {\n                    yDims[i] = Quadratic.at(params[0].y, params[1].y, params[2].y, yDims);\n                }\n                yDims.push(params[0].y, params[2].y);\n                this.box = {\n                    minX: Math.min.apply(Math, xDims) - halfWidth,\n                    maxX: Math.max.apply(Math, xDims) + halfWidth,\n                    minY: Math.min.apply(Math, yDims) - halfWidth,\n                    maxY: Math.max.apply(Math, yDims) + halfWidth\n                };\n                break;\n            case 'C':\n                xDims = Cubic.extrema(params[0].x, params[1].x, params[2].x, params[3].x);\n                for (i = 0, l = xDims.length; i < l; i++) {\n                    xDims[i] = Cubic.at(params[0].x, params[1].x, params[2].x, params[3].x, xDims[i]);\n                }\n                yDims = Cubic.extrema(params[0].y, params[1].y, params[2].y, params[3].y);\n                for (i = 0, l = yDims.length; i < l; i++) {\n                    yDims[i] = Cubic.at(params[0].y, params[1].y, params[2].y, params[3].y, yDims[i]);\n                }\n                xDims.push(params[0].x, params[3].x);\n                yDims.push(params[0].y, params[3].y);\n                this.box = {\n                    minX: Math.min.apply(Math, xDims) - halfWidth,\n                    maxX: Math.max.apply(Math, xDims) + halfWidth,\n                    minY: Math.min.apply(Math, yDims) - halfWidth,\n                    maxY: Math.max.apply(Math, yDims) + halfWidth\n                };\n                break;\n            case 'A':\n                {\n                    var p = params;\n                    var cx = p[1];\n                    var cy = p[2];\n                    var rx = p[3];\n                    var ry = p[4];\n                    var theta = p[5];\n                    var dTheta = p[6];\n                    var psi = p[7];\n                    var fs = p[8];\n                    var start = theta;\n                    var end = theta + dTheta;\n                    var xDim = Ellipse.xExtrema(psi, rx, ry);\n                    var minX = Infinity;\n                    var maxX = -Infinity;\n                    var xs = [start, end];\n                    for (i = -Math.PI * 2; i <= Math.PI * 2; i += Math.PI) {\n                        var xAngle = xDim + i;\n                        if (fs === 1) {\n                            if (start < xAngle && xAngle < end) {\n                                xs.push(xAngle);\n                            }\n                        }\n                        else {\n                            if (end < xAngle && xAngle < start) {\n                                xs.push(xAngle);\n                            }\n                        }\n                    }\n                    for (i = 0, l = xs.length; i < l; i++) {\n                        var x = Ellipse.xAt(psi, rx, ry, cx, xs[i]);\n                        if (x < minX) {\n                            minX = x;\n                        }\n                        if (x > maxX) {\n                            maxX = x;\n                        }\n                    }\n                    var yDim = Ellipse.yExtrema(psi, rx, ry);\n                    var minY = Infinity;\n                    var maxY = -Infinity;\n                    var ys = [start, end];\n                    for (i = -Math.PI * 2; i <= Math.PI * 2; i += Math.PI) {\n                        var yAngle = yDim + i;\n                        if (fs === 1) {\n                            if (start < yAngle && yAngle < end) {\n                                ys.push(yAngle);\n                            }\n                        }\n                        else {\n                            if (end < yAngle && yAngle < start) {\n                                ys.push(yAngle);\n                            }\n                        }\n                    }\n                    for (i = 0, l = ys.length; i < l; i++) {\n                        var y = Ellipse.yAt(psi, rx, ry, cy, ys[i]);\n                        if (y < minY) {\n                            minY = y;\n                        }\n                        if (y > maxY) {\n                            maxY = y;\n                        }\n                    }\n                    this.box = {\n                        minX: minX - halfWidth,\n                        maxX: maxX + halfWidth,\n                        minY: minY - halfWidth,\n                        maxY: maxY + halfWidth\n                    };\n                    break;\n                }\n        }\n    }\n});\nmodule.exports = PathSegment;\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/g/lib/shapes/util/path-segment.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/g/lib/shapes/util/path-segment.js"],"names":[],"mappings":"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","sourcesContent":["var Util = require('../../util/index');\n\nvar Inside = require('./inside');\n\nvar Cubic = require('../math/cubic');\n\nvar Quadratic = require('../math/quadratic');\n\nvar Ellipse = require('../math/ellipse');\n\nvar vec3 = Util.vec3;\nvar mat3 = Util.mat3;\nvar ARR_CMD = ['m', 'l', 'c', 'a', 'q', 'h', 'v', 't', 's', 'z'];\n\nfunction toAbsolute(x, y, curPoint) {\n  // 获取绝对坐标\n  return {\n    x: curPoint.x + x,\n    y: curPoint.y + y\n  };\n}\n\nfunction toSymmetry(point, center) {\n  // 点对称\n  return {\n    x: center.x + (center.x - point.x),\n    y: center.y + (center.y - point.y)\n  };\n}\n\nfunction vMag(v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n}\n\nfunction vRatio(u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n}\n\nfunction vAngle(u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n}\n\nfunction getArcParams(point1, point2, fa, fs, rx, ry, psiDeg) {\n  var psi = Util.mod(Util.toRadian(psiDeg), Math.PI * 2);\n  var x1 = point1.x;\n  var y1 = point1.y;\n  var x2 = point2.x;\n  var y2 = point2.y;\n  var xp = Math.cos(psi) * (x1 - x2) / 2.0 + Math.sin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * Math.sin(psi) * (x1 - x2) / 2.0 + Math.cos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= Math.sqrt(lambda);\n    ry *= Math.sqrt(lambda);\n  }\n\n  var diff = rx * rx * (yp * yp) + ry * ry * (xp * xp);\n  var f = Math.sqrt((rx * rx * (ry * ry) - diff) / diff);\n\n  if (fa === fs) {\n    f *= -1;\n  }\n\n  if (isNaN(f)) {\n    f = 0;\n  }\n\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + Math.cos(psi) * cxp - Math.sin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + Math.sin(psi) * cxp + Math.cos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = Math.PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * Math.PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * Math.PI;\n  }\n\n  return [point1, cx, cy, rx, ry, theta, dTheta, psi, fs];\n}\n\nvar PathSegment = function PathSegment(item, preSegment, isLast) {\n  this.preSegment = preSegment;\n  this.isLast = isLast;\n  this.init(item, preSegment);\n};\n\nUtil.augment(PathSegment, {\n  init: function init(item, preSegment) {\n    var command = item[0];\n    preSegment = preSegment || {\n      endPoint: {\n        x: 0,\n        y: 0\n      }\n    };\n    var relative = ARR_CMD.indexOf(command) >= 0; // /[a-z]/.test(command);\n\n    var cmd = relative ? command.toUpperCase() : command;\n    var p = item;\n    var point1;\n    var point2;\n    var point3;\n    var point;\n    var preEndPoint = preSegment.endPoint;\n    var p1 = p[1];\n    var p2 = p[2];\n\n    switch (cmd) {\n      default:\n        break;\n\n      case 'M':\n        if (relative) {\n          point = toAbsolute(p1, p2, preEndPoint);\n        } else {\n          point = {\n            x: p1,\n            y: p2\n          };\n        }\n\n        this.command = 'M';\n        this.params = [preEndPoint, point];\n        this.subStart = point;\n        this.endPoint = point;\n        break;\n\n      case 'L':\n        if (relative) {\n          point = toAbsolute(p1, p2, preEndPoint);\n        } else {\n          point = {\n            x: p1,\n            y: p2\n          };\n        }\n\n        this.command = 'L';\n        this.params = [preEndPoint, point];\n        this.subStart = preSegment.subStart;\n        this.endPoint = point;\n\n        this.endTangent = function () {\n          return [point.x - preEndPoint.x, point.y - preEndPoint.y];\n        };\n\n        this.startTangent = function () {\n          return [preEndPoint.x - point.x, preEndPoint.y - point.y];\n        };\n\n        break;\n\n      case 'H':\n        if (relative) {\n          point = toAbsolute(p1, 0, preEndPoint);\n        } else {\n          point = {\n            x: p1,\n            y: preEndPoint.y\n          };\n        }\n\n        this.command = 'L';\n        this.params = [preEndPoint, point];\n        this.subStart = preSegment.subStart;\n        this.endPoint = point;\n\n        this.endTangent = function () {\n          return [point.x - preEndPoint.x, point.y - preEndPoint.y];\n        };\n\n        this.startTangent = function () {\n          return [preEndPoint.x - point.x, preEndPoint.y - point.y];\n        };\n\n        break;\n\n      case 'V':\n        if (relative) {\n          point = toAbsolute(0, p1, preEndPoint);\n        } else {\n          point = {\n            x: preEndPoint.x,\n            y: p1\n          };\n        }\n\n        this.command = 'L';\n        this.params = [preEndPoint, point];\n        this.subStart = preSegment.subStart;\n        this.endPoint = point;\n\n        this.endTangent = function () {\n          return [point.x - preEndPoint.x, point.y - preEndPoint.y];\n        };\n\n        this.startTangent = function () {\n          return [preEndPoint.x - point.x, preEndPoint.y - point.y];\n        };\n\n        break;\n\n      case 'Q':\n        if (relative) {\n          point1 = toAbsolute(p1, p2, preEndPoint);\n          point2 = toAbsolute(p[3], p[4], preEndPoint);\n        } else {\n          point1 = {\n            x: p1,\n            y: p2\n          };\n          point2 = {\n            x: p[3],\n            y: p[4]\n          };\n        }\n\n        this.command = 'Q';\n        this.params = [preEndPoint, point1, point2];\n        this.subStart = preSegment.subStart;\n        this.endPoint = point2;\n\n        this.endTangent = function () {\n          return [point2.x - point1.x, point2.y - point1.y];\n        };\n\n        this.startTangent = function () {\n          return [preEndPoint.x - point1.x, preEndPoint.y - point1.y];\n        };\n\n        break;\n\n      case 'T':\n        if (relative) {\n          point2 = toAbsolute(p1, p2, preEndPoint);\n        } else {\n          point2 = {\n            x: p1,\n            y: p2\n          };\n        }\n\n        if (preSegment.command === 'Q') {\n          point1 = toSymmetry(preSegment.params[1], preEndPoint);\n          this.command = 'Q';\n          this.params = [preEndPoint, point1, point2];\n          this.subStart = preSegment.subStart;\n          this.endPoint = point2;\n\n          this.endTangent = function () {\n            return [point2.x - point1.x, point2.y - point1.y];\n          };\n\n          this.startTangent = function () {\n            return [preEndPoint.x - point1.x, preEndPoint.y - point1.y];\n          };\n        } else {\n          this.command = 'TL';\n          this.params = [preEndPoint, point2];\n          this.subStart = preSegment.subStart;\n          this.endPoint = point2;\n\n          this.endTangent = function () {\n            return [point2.x - preEndPoint.x, point2.y - preEndPoint.y];\n          };\n\n          this.startTangent = function () {\n            return [preEndPoint.x - point2.x, preEndPoint.y - point2.y];\n          };\n        }\n\n        break;\n\n      case 'C':\n        if (relative) {\n          point1 = toAbsolute(p1, p2, preEndPoint);\n          point2 = toAbsolute(p[3], p[4], preEndPoint);\n          point3 = toAbsolute(p[5], p[6], preEndPoint);\n        } else {\n          point1 = {\n            x: p1,\n            y: p2\n          };\n          point2 = {\n            x: p[3],\n            y: p[4]\n          };\n          point3 = {\n            x: p[5],\n            y: p[6]\n          };\n        }\n\n        this.command = 'C';\n        this.params = [preEndPoint, point1, point2, point3];\n        this.subStart = preSegment.subStart;\n        this.endPoint = point3;\n\n        this.endTangent = function () {\n          return [point3.x - point2.x, point3.y - point2.y];\n        };\n\n        this.startTangent = function () {\n          return [preEndPoint.x - point1.x, preEndPoint.y - point1.y];\n        };\n\n        break;\n\n      case 'S':\n        if (relative) {\n          point2 = toAbsolute(p1, p2, preEndPoint);\n          point3 = toAbsolute(p[3], p[4], preEndPoint);\n        } else {\n          point2 = {\n            x: p1,\n            y: p2\n          };\n          point3 = {\n            x: p[3],\n            y: p[4]\n          };\n        }\n\n        if (preSegment.command === 'C') {\n          point1 = toSymmetry(preSegment.params[2], preEndPoint);\n          this.command = 'C';\n          this.params = [preEndPoint, point1, point2, point3];\n          this.subStart = preSegment.subStart;\n          this.endPoint = point3;\n\n          this.endTangent = function () {\n            return [point3.x - point2.x, point3.y - point2.y];\n          };\n\n          this.startTangent = function () {\n            return [preEndPoint.x - point1.x, preEndPoint.y - point1.y];\n          };\n        } else {\n          this.command = 'SQ';\n          this.params = [preEndPoint, point2, point3];\n          this.subStart = preSegment.subStart;\n          this.endPoint = point3;\n\n          this.endTangent = function () {\n            return [point3.x - point2.x, point3.y - point2.y];\n          };\n\n          this.startTangent = function () {\n            return [preEndPoint.x - point2.x, preEndPoint.y - point2.y];\n          };\n        }\n\n        break;\n\n      case 'A':\n        {\n          var rx = p1;\n          var ry = p2;\n          var psi = p[3];\n          var fa = p[4];\n          var fs = p[5];\n\n          if (relative) {\n            point = toAbsolute(p[6], p[7], preEndPoint);\n          } else {\n            point = {\n              x: p[6],\n              y: p[7]\n            };\n          }\n\n          this.command = 'A';\n          var params = getArcParams(preEndPoint, point, fa, fs, rx, ry, psi);\n          this.params = params;\n          var start = preSegment.subStart;\n          this.subStart = start;\n          this.endPoint = point;\n          var startAngle = params[5] % (Math.PI * 2);\n\n          if (Util.isNumberEqual(startAngle, Math.PI * 2)) {\n            startAngle = 0;\n          }\n\n          var endAngle = params[6] % (Math.PI * 2);\n\n          if (Util.isNumberEqual(endAngle, Math.PI * 2)) {\n            endAngle = 0;\n          }\n\n          var d = 0.001;\n\n          this.startTangent = function () {\n            if (fs === 0) {\n              d *= -1;\n            }\n\n            var dx = params[3] * Math.cos(startAngle - d) + params[1];\n            var dy = params[4] * Math.sin(startAngle - d) + params[2];\n            return [dx - start.x, dy - start.y];\n          };\n\n          this.endTangent = function () {\n            var endAngle = params[6];\n\n            if (endAngle - Math.PI * 2 < 0.0001) {\n              endAngle = 0;\n            }\n\n            var dx = params[3] * Math.cos(startAngle + endAngle + d) + params[1];\n            var dy = params[4] * Math.sin(startAngle + endAngle - d) + params[2];\n            return [preEndPoint.x - dx, preEndPoint.y - dy];\n          };\n\n          break;\n        }\n\n      case 'Z':\n        {\n          this.command = 'Z';\n          this.params = [preEndPoint, preSegment.subStart];\n          this.subStart = preSegment.subStart;\n          this.endPoint = preSegment.subStart;\n        }\n    }\n  },\n  isInside: function isInside(x, y, lineWidth) {\n    var self = this;\n    var command = self.command;\n    var params = self.params;\n    var box = self.box;\n\n    if (box) {\n      if (!Inside.box(box.minX, box.maxX, box.minY, box.maxY, x, y)) {\n        return false;\n      }\n    }\n\n    switch (command) {\n      default:\n        break;\n\n      case 'M':\n        return false;\n\n      case 'TL':\n      case 'L':\n      case 'Z':\n        return Inside.line(params[0].x, params[0].y, params[1].x, params[1].y, lineWidth, x, y);\n\n      case 'SQ':\n      case 'Q':\n        return Inside.quadraticline(params[0].x, params[0].y, params[1].x, params[1].y, params[2].x, params[2].y, lineWidth, x, y);\n\n      case 'C':\n        {\n          return Inside.cubicline(params[0].x, params[0].y, params[1].x, params[1].y, params[2].x, params[2].y, params[3].x, params[3].y, lineWidth, x, y);\n        }\n\n      case 'A':\n        {\n          var p = params;\n          var cx = p[1];\n          var cy = p[2];\n          var rx = p[3];\n          var ry = p[4];\n          var theta = p[5];\n          var dTheta = p[6];\n          var psi = p[7];\n          var fs = p[8];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          p = [x, y, 1];\n          var m = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n          mat3.translate(m, m, [-cx, -cy]);\n          mat3.rotate(m, m, -psi);\n          mat3.scale(m, m, [1 / scaleX, 1 / scaleY]);\n          vec3.transformMat3(p, p, m);\n          return Inside.arcline(0, 0, r, theta, theta + dTheta, 1 - fs, lineWidth, p[0], p[1]);\n        }\n    }\n\n    return false;\n  },\n  draw: function draw(context) {\n    var command = this.command;\n    var params = this.params;\n    var point1;\n    var point2;\n    var point3;\n\n    switch (command) {\n      default:\n        break;\n\n      case 'M':\n        context.moveTo(params[1].x, params[1].y);\n        break;\n\n      case 'TL':\n      case 'L':\n        context.lineTo(params[1].x, params[1].y);\n        break;\n\n      case 'SQ':\n      case 'Q':\n        point1 = params[1];\n        point2 = params[2];\n        context.quadraticCurveTo(point1.x, point1.y, point2.x, point2.y);\n        break;\n\n      case 'C':\n        point1 = params[1];\n        point2 = params[2];\n        point3 = params[3];\n        context.bezierCurveTo(point1.x, point1.y, point2.x, point2.y, point3.x, point3.y);\n        break;\n\n      case 'A':\n        {\n          var p = params;\n          var p1 = p[1];\n          var p2 = p[2];\n          var cx = p1;\n          var cy = p2;\n          var rx = p[3];\n          var ry = p[4];\n          var theta = p[5];\n          var dTheta = p[6];\n          var psi = p[7];\n          var fs = p[8];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          context.translate(cx, cy);\n          context.rotate(psi);\n          context.scale(scaleX, scaleY);\n          context.arc(0, 0, r, theta, theta + dTheta, 1 - fs);\n          context.scale(1 / scaleX, 1 / scaleY);\n          context.rotate(-psi);\n          context.translate(-cx, -cy);\n          break;\n        }\n\n      case 'Z':\n        context.closePath();\n        break;\n    }\n  },\n  getBBox: function getBBox(lineWidth) {\n    var halfWidth = lineWidth / 2;\n    var params = this.params;\n    var yDims;\n    var xDims;\n    var i;\n    var l;\n\n    switch (this.command) {\n      default:\n      case 'M':\n      case 'Z':\n        break;\n\n      case 'TL':\n      case 'L':\n        this.box = {\n          minX: Math.min(params[0].x, params[1].x) - halfWidth,\n          maxX: Math.max(params[0].x, params[1].x) + halfWidth,\n          minY: Math.min(params[0].y, params[1].y) - halfWidth,\n          maxY: Math.max(params[0].y, params[1].y) + halfWidth\n        };\n        break;\n\n      case 'SQ':\n      case 'Q':\n        xDims = Quadratic.extrema(params[0].x, params[1].x, params[2].x);\n\n        for (i = 0, l = xDims.length; i < l; i++) {\n          xDims[i] = Quadratic.at(params[0].x, params[1].x, params[2].x, xDims[i]);\n        }\n\n        xDims.push(params[0].x, params[2].x);\n        yDims = Quadratic.extrema(params[0].y, params[1].y, params[2].y);\n\n        for (i = 0, l = yDims.length; i < l; i++) {\n          yDims[i] = Quadratic.at(params[0].y, params[1].y, params[2].y, yDims);\n        }\n\n        yDims.push(params[0].y, params[2].y);\n        this.box = {\n          minX: Math.min.apply(Math, xDims) - halfWidth,\n          maxX: Math.max.apply(Math, xDims) + halfWidth,\n          minY: Math.min.apply(Math, yDims) - halfWidth,\n          maxY: Math.max.apply(Math, yDims) + halfWidth\n        };\n        break;\n\n      case 'C':\n        xDims = Cubic.extrema(params[0].x, params[1].x, params[2].x, params[3].x);\n\n        for (i = 0, l = xDims.length; i < l; i++) {\n          xDims[i] = Cubic.at(params[0].x, params[1].x, params[2].x, params[3].x, xDims[i]);\n        }\n\n        yDims = Cubic.extrema(params[0].y, params[1].y, params[2].y, params[3].y);\n\n        for (i = 0, l = yDims.length; i < l; i++) {\n          yDims[i] = Cubic.at(params[0].y, params[1].y, params[2].y, params[3].y, yDims[i]);\n        }\n\n        xDims.push(params[0].x, params[3].x);\n        yDims.push(params[0].y, params[3].y);\n        this.box = {\n          minX: Math.min.apply(Math, xDims) - halfWidth,\n          maxX: Math.max.apply(Math, xDims) + halfWidth,\n          minY: Math.min.apply(Math, yDims) - halfWidth,\n          maxY: Math.max.apply(Math, yDims) + halfWidth\n        };\n        break;\n\n      case 'A':\n        {\n          // todo 待优化\n          var p = params;\n          var cx = p[1];\n          var cy = p[2];\n          var rx = p[3];\n          var ry = p[4];\n          var theta = p[5];\n          var dTheta = p[6];\n          var psi = p[7];\n          var fs = p[8];\n          var start = theta;\n          var end = theta + dTheta;\n          var xDim = Ellipse.xExtrema(psi, rx, ry);\n          var minX = Infinity;\n          var maxX = -Infinity;\n          var xs = [start, end];\n\n          for (i = -Math.PI * 2; i <= Math.PI * 2; i += Math.PI) {\n            var xAngle = xDim + i;\n\n            if (fs === 1) {\n              if (start < xAngle && xAngle < end) {\n                xs.push(xAngle);\n              }\n            } else {\n              if (end < xAngle && xAngle < start) {\n                xs.push(xAngle);\n              }\n            }\n          }\n\n          for (i = 0, l = xs.length; i < l; i++) {\n            var x = Ellipse.xAt(psi, rx, ry, cx, xs[i]);\n\n            if (x < minX) {\n              minX = x;\n            }\n\n            if (x > maxX) {\n              maxX = x;\n            }\n          }\n\n          var yDim = Ellipse.yExtrema(psi, rx, ry);\n          var minY = Infinity;\n          var maxY = -Infinity;\n          var ys = [start, end];\n\n          for (i = -Math.PI * 2; i <= Math.PI * 2; i += Math.PI) {\n            var yAngle = yDim + i;\n\n            if (fs === 1) {\n              if (start < yAngle && yAngle < end) {\n                ys.push(yAngle);\n              }\n            } else {\n              if (end < yAngle && yAngle < start) {\n                ys.push(yAngle);\n              }\n            }\n          }\n\n          for (i = 0, l = ys.length; i < l; i++) {\n            var y = Ellipse.yAt(psi, rx, ry, cy, ys[i]);\n\n            if (y < minY) {\n              minY = y;\n            }\n\n            if (y > maxY) {\n              maxY = y;\n            }\n          }\n\n          this.box = {\n            minX: minX - halfWidth,\n            maxX: maxX + halfWidth,\n            minY: minY - halfWidth,\n            maxY: maxY + halfWidth\n          };\n          break;\n        }\n    }\n  }\n});\nmodule.exports = PathSegment;"]}]}