{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/geometry/label/interval.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/geometry/label/interval.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\nimport { get } from '@antv/util';\nimport GeometryLabel from './base';\nvar IntervalLabel = (function (_super) {\n    __extends(IntervalLabel, _super);\n    function IntervalLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    IntervalLabel.prototype.setLabelPosition = function (labelPointCfg, mappingData, index, position) {\n        var coordinate = this.getCoordinate();\n        var transposed = coordinate.isTransposed;\n        var shapePoints = mappingData.points;\n        var point0 = coordinate.convert(shapePoints[0]);\n        var point1 = coordinate.convert(shapePoints[2]);\n        var flag = transposed ? -1 : 1;\n        var width = ((point0.x - point1.x) / 2) * flag;\n        var height = ((point0.y - point1.y) / 2) * flag;\n        switch (position) {\n            case 'right':\n                if (!transposed) {\n                    labelPointCfg.x -= width;\n                    labelPointCfg.y += height;\n                }\n                labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', 'left');\n                break;\n            case 'left':\n                if (transposed) {\n                    labelPointCfg.x -= width * 2;\n                }\n                else {\n                    labelPointCfg.x += width;\n                    labelPointCfg.y += height;\n                }\n                labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', 'right');\n                break;\n            case 'bottom':\n                if (transposed) {\n                    labelPointCfg.x -= width;\n                    labelPointCfg.y -= height;\n                }\n                else {\n                    labelPointCfg.y += height * 2;\n                }\n                labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', 'center');\n                labelPointCfg.textBaseline = get(labelPointCfg, 'textBaseline', 'top');\n                break;\n            case 'middle':\n                if (transposed) {\n                    labelPointCfg.x -= width;\n                }\n                else {\n                    labelPointCfg.y += height;\n                }\n                labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', 'center');\n                break;\n            case 'top':\n                if (transposed) {\n                    labelPointCfg.x -= width;\n                    labelPointCfg.y += height;\n                }\n                labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', 'center');\n                labelPointCfg.textBaseline = get(labelPointCfg, 'textBaseline', 'bottom');\n                break;\n            default:\n                break;\n        }\n    };\n    return IntervalLabel;\n}(GeometryLabel));\nexport default IntervalLabel;\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/geometry/label/interval.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/geometry/label/interval.js"],"names":[],"mappings":"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","sourcesContent":["import { __extends } from \"tslib\";\nimport { get } from '@antv/util';\nimport GeometryLabel from './base';\n/**\n * 柱状图 label\n */\nvar IntervalLabel = /** @class */ (function (_super) {\n    __extends(IntervalLabel, _super);\n    function IntervalLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    IntervalLabel.prototype.setLabelPosition = function (labelPointCfg, mappingData, index, position) {\n        var coordinate = this.getCoordinate();\n        var transposed = coordinate.isTransposed;\n        var shapePoints = mappingData.points;\n        var point0 = coordinate.convert(shapePoints[0]);\n        var point1 = coordinate.convert(shapePoints[2]);\n        var flag = transposed ? -1 : 1;\n        var width = ((point0.x - point1.x) / 2) * flag;\n        var height = ((point0.y - point1.y) / 2) * flag;\n        switch (position) {\n            case 'right':\n                if (!transposed) {\n                    labelPointCfg.x -= width;\n                    labelPointCfg.y += height;\n                }\n                labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', 'left');\n                break;\n            case 'left':\n                if (transposed) {\n                    labelPointCfg.x -= width * 2;\n                }\n                else {\n                    labelPointCfg.x += width;\n                    labelPointCfg.y += height;\n                }\n                labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', 'right');\n                break;\n            case 'bottom':\n                if (transposed) {\n                    labelPointCfg.x -= width;\n                    labelPointCfg.y -= height;\n                }\n                else {\n                    labelPointCfg.y += height * 2;\n                }\n                labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', 'center');\n                labelPointCfg.textBaseline = get(labelPointCfg, 'textBaseline', 'top');\n                break;\n            case 'middle':\n                if (transposed) {\n                    labelPointCfg.x -= width;\n                }\n                else {\n                    labelPointCfg.y += height;\n                }\n                labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', 'center');\n                break;\n            case 'top':\n                if (transposed) {\n                    labelPointCfg.x -= width;\n                    labelPointCfg.y += height;\n                }\n                labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', 'center');\n                labelPointCfg.textBaseline = get(labelPointCfg, 'textBaseline', 'bottom');\n                break;\n            default:\n                break;\n        }\n    };\n    return IntervalLabel;\n}(GeometryLabel));\nexport default IntervalLabel;\n//# sourceMappingURL=interval.js.map"]}]}