{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/src/app/api/mock/ProductAnalysisServiceMock.ts","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/src/app/api/mock/ProductAnalysisServiceMock.ts","mtime":1596379644447},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { ProductAnalysisService } from \"../ProductAnalysisService\";\nvar ProductAnalysisServiceMock = (function (_super) {\n    __extends(ProductAnalysisServiceMock, _super);\n    function ProductAnalysisServiceMock() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ProductAnalysisServiceMock.prototype.getProductOverviewData = function (invreqId) {\n        return __awaiter(this, void 0, Promise, function () {\n            return __generator(this, function (_a) {\n                return [2, {\n                        futuresOverview: {\n                            startDate: \"2018-09-10\",\n                            currentVolume: 4239.00,\n                            currentRatio: 10.90,\n                            profit: 1.72,\n                            quotaId: \"SC1909\",\n                            name: \"原油期货\",\n                            price: 21.20,\n                            quantity: 200,\n                        },\n                        spotOverview: {\n                            startDate: \"2018-06-05\",\n                            currentVolume: 9113.00,\n                            currentRatio: 23.44,\n                            profit: 0.56,\n                            quotaId: \"CL002\",\n                            name: \"原油现货\",\n                            price: 33.63,\n                            quantity: 300,\n                        },\n                    }];\n            });\n        });\n    };\n    ProductAnalysisServiceMock.prototype.getProfitAndDrawdown = function (invreqId) {\n        return __awaiter(this, void 0, Promise, function () {\n            return __generator(this, function (_a) {\n                return [2, {\n                        absoluteReturn: [\n                            {\n                                date: \"2018-06-01\",\n                                bonusRatio: [\n                                    {\n                                        name: \"期货\",\n                                        ratio: 5.22,\n                                    },\n                                    {\n                                        name: \"现货\",\n                                        ratio: 10.45,\n                                    },\n                                ],\n                                totalIncomeRatio: 19.22,\n                                totalIncome: 15.11,\n                            },\n                            {\n                                date: \"2018-06-02\",\n                                bonusRatio: [\n                                    {\n                                        name: \"期货\",\n                                        ratio: 9.11,\n                                    },\n                                    {\n                                        name: \"现货\",\n                                        ratio: 17.22,\n                                    },\n                                ],\n                                totalIncomeRatio: 20.22,\n                                totalIncome: 10.11,\n                            },\n                            {\n                                date: \"2018-06-03\",\n                                bonusRatio: [\n                                    {\n                                        name: \"期货\",\n                                        ratio: 20.22,\n                                    },\n                                    {\n                                        name: \"现货\",\n                                        ratio: 14.45,\n                                    },\n                                ],\n                                totalIncomeRatio: 12.22,\n                                totalIncome: 5.11,\n                            },\n                        ],\n                        maxDrawdown: 60.11,\n                        startDate: \"2018-06-01\",\n                        endDate: \"2018-07-11\",\n                        days: 45,\n                    }];\n            });\n        });\n    };\n    ProductAnalysisServiceMock.prototype.getSceneData = function (invreqId) {\n        return __awaiter(this, void 0, Promise, function () {\n            return __generator(this, function (_a) {\n                return [2, {\n                        typeData: [\n                            {\n                                type: \"趋势强波动高\",\n                                weekNum: 24,\n                                sharpeRatio: 53.11,\n                                calmarRatio: 34.01,\n                                maxWeekIncomeRatio: 33.99,\n                                minWeekIncomeRatio: 25.34,\n                                fluctuationRatio: 7.13,\n                                maxDrawdown: 0.11,\n                            },\n                            {\n                                type: \"趋势弱波动高\",\n                                weekNum: 21,\n                                sharpeRatio: 46.44,\n                                calmarRatio: 31.11,\n                                maxWeekIncomeRatio: 57.22,\n                                minWeekIncomeRatio: 76.83,\n                                fluctuationRatio: 7.13,\n                                maxDrawdown: 0.62,\n                            },\n                            {\n                                type: \"趋势强波动低\",\n                                weekNum: 9,\n                                sharpeRatio: 7.22,\n                                calmarRatio: 56.1,\n                                maxWeekIncomeRatio: 4.72,\n                                minWeekIncomeRatio: 6.25,\n                                fluctuationRatio: 8.33,\n                                maxDrawdown: 0.35,\n                            },\n                            {\n                                type: \"趋势弱波动低\",\n                                weekNum: 6,\n                                sharpeRatio: 53.11,\n                                calmarRatio: 34.01,\n                                maxWeekIncomeRatio: 33.99,\n                                minWeekIncomeRatio: 25.34,\n                                fluctuationRatio: 7.13,\n                                maxDrawdown: 0.11,\n                            },\n                        ],\n                        totalIncomeRatioList: [\n                            {\n                                date: \"2018-06-01\",\n                                totalIncomeRatio: 12.09,\n                                type: \"趋势强波动高\",\n                            },\n                            {\n                                date: \"2018-06-02\",\n                                totalIncomeRatio: 13.44,\n                                type: \"趋势强波动高\",\n                            },\n                            {\n                                date: \"2018-06-03\",\n                                totalIncomeRatio: 21.43,\n                                type: \"趋势强波动高\",\n                            },\n                            {\n                                date: \"2018-06-04\",\n                                totalIncomeRatio: 29.26,\n                                type: \"趋势强波动低\",\n                            },\n                            {\n                                date: \"2018-06-05\",\n                                totalIncomeRatio: 30.12,\n                                type: \"趋势强波动低\",\n                            },\n                            {\n                                date: \"2018-06-06\",\n                                totalIncomeRatio: 49.11,\n                                type: \"趋势强波动高\",\n                            },\n                            {\n                                date: \"2018-06-07\",\n                                totalIncomeRatio: 57.14,\n                                type: \"趋势弱波动高\",\n                            },\n                            {\n                                date: \"2018-06-08\",\n                                totalIncomeRatio: 61.66,\n                                type: \"趋势弱波动高\",\n                            },\n                            {\n                                date: \"2018-06-09\",\n                                totalIncomeRatio: 69.00,\n                                type: \"趋势强波动高\",\n                            },\n                            {\n                                date: \"2018-06-10\",\n                                totalIncomeRatio: 70.11,\n                                type: \"趋势弱波动低\",\n                            },\n                            {\n                                date: \"2018-06-11\",\n                                totalIncomeRatio: 12.09,\n                                type: \"趋势强波动高\",\n                            },\n                            {\n                                date: \"2018-06-12\",\n                                totalIncomeRatio: 13.44,\n                                type: \"趋势强波动高\",\n                            },\n                            {\n                                date: \"2018-06-13\",\n                                totalIncomeRatio: 21.43,\n                                type: \"趋势强波动高\",\n                            },\n                            {\n                                date: \"2018-06-14\",\n                                totalIncomeRatio: 29.26,\n                                type: \"趋势强波动低\",\n                            },\n                            {\n                                date: \"2018-06-15\",\n                                totalIncomeRatio: 30.12,\n                                type: \"趋势强波动低\",\n                            },\n                            {\n                                date: \"2018-06-16\",\n                                totalIncomeRatio: 49.11,\n                                type: \"趋势强波动高\",\n                            },\n                            {\n                                date: \"2018-06-17\",\n                                totalIncomeRatio: 57.14,\n                                type: \"趋势弱波动高\",\n                            },\n                            {\n                                date: \"2018-06-18\",\n                                totalIncomeRatio: 61.66,\n                                type: \"趋势弱波动高\",\n                            },\n                            {\n                                date: \"2018-06-19\",\n                                totalIncomeRatio: 69.00,\n                                type: \"趋势强波动高\",\n                            },\n                            {\n                                date: \"2018-06-20\",\n                                totalIncomeRatio: 70.11,\n                                type: \"趋势弱波动低\",\n                            },\n                        ],\n                    }];\n            });\n        });\n    };\n    ProductAnalysisServiceMock.prototype.getComparision = function (invreqId) {\n        return __awaiter(this, void 0, Promise, function () {\n            return __generator(this, function (_a) {\n                return [2, {\n                        comparisionWithMarketBenchmark: [\n                            {\n                                date: \"2018-06-01\",\n                                marketRatio1: 34.11,\n                                marketRatio2: 23.11,\n                                totalIncomeRatio: 35.66,\n                            },\n                            {\n                                date: \"2018-06-02\",\n                                marketRatio1: 33.14,\n                                marketRatio2: 26.11,\n                                totalIncomeRatio: 34.11,\n                            },\n                            {\n                                date: \"2018-06-03\",\n                                marketRatio1: 35.01,\n                                marketRatio2: 24.11,\n                                totalIncomeRatio: 33.66,\n                            },\n                        ],\n                    }];\n            });\n        });\n    };\n    ProductAnalysisServiceMock.prototype.getSensitivity = function (invreqId) {\n        return __awaiter(this, void 0, Promise, function () {\n            return __generator(this, function (_a) {\n                return [2, {\n                        factorSensitivity: [\n                            {\n                                weekIncomeRatio: 23.11,\n                                weekFluctuationRatio: 24.11,\n                            },\n                            {\n                                weekIncomeRatio: 24.56,\n                                weekFluctuationRatio: 10.34,\n                            },\n                            {\n                                weekIncomeRatio: 32.14,\n                                weekFluctuationRatio: 16.12,\n                            },\n                        ],\n                        x1: 3.99,\n                        y1: 6.11,\n                        x2: 5.88,\n                        y2: 7.22,\n                    }];\n            });\n        });\n    };\n    ProductAnalysisServiceMock.prototype.getResidual = function (invreqId) {\n        return __awaiter(this, void 0, Promise, function () {\n            return __generator(this, function (_a) {\n                return [2, {\n                        residualList: [\n                            {\n                                date: \"2018-06-01\",\n                                residual: 2.13,\n                            },\n                            {\n                                date: \"2018-06-02\",\n                                residual: 3.11,\n                            },\n                            {\n                                date: \"2018-06-03\",\n                                residual: 1.90,\n                            },\n                            {\n                                date: \"2018-06-04\",\n                                residual: 2.42,\n                            },\n                        ],\n                        kurt: 6.66,\n                        skew: 1.09,\n                    }];\n            });\n        });\n    };\n    ProductAnalysisServiceMock.prototype.getMemorabilia = function (invreqId) {\n        return __awaiter(this, void 0, Promise, function () {\n            return __generator(this, function (_a) {\n                return [2, {\n                        memorabilia: [\n                            {\n                                scene: \"情景1\",\n                                startDate: \"2018-06-21\",\n                                endDate: \"2018-07-01\",\n                                returnRatio: 53.11,\n                                maxDrawdown: 78.33,\n                                fluctuation: 2.11,\n                                nanhuaMarketRatio: 53.11,\n                            },\n                        ],\n                    }];\n            });\n        });\n    };\n    return ProductAnalysisServiceMock;\n}(ProductAnalysisService));\nexport { ProductAnalysisServiceMock };\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/src/app/api/mock/ProductAnalysisServiceMock.ts","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/src/app/api/mock/ProductAnalysisServiceMock.ts"],"names":[],"mappings":"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","sourcesContent":["import {ProductOverviewData} from \"../../models/invreq/Bought/Product/ProductOverviewData\";\r\nimport {ProductAnalysisService} from \"../ProductAnalysisService\";\r\nimport {\r\n  ComparisionTableList, MemorabiliaResponse,\r\n  ProfitAndDrawDown, ResidualAnalysisResponse,\r\n  SceneAnalysisResponse, SensitivityList,\r\n} from \"../../models/invreq/Bought/Product/ProductAnalysis\";\r\n\r\nexport class ProductAnalysisServiceMock extends ProductAnalysisService {\r\n\r\n  /**\r\n   * 得到商品市场的总览数据\r\n   * @param {string} invreqId 配置id\r\n   * @returns {Promise<ProductOverviewData>}\r\n   */\r\n  async getProductOverviewData(invreqId: string): Promise<ProductOverviewData> {\r\n    return {\r\n      futuresOverview: {\r\n        startDate: \"2018-09-10\",\r\n        currentVolume: 4239.00,\r\n        currentRatio: 10.90,\r\n        profit: 1.72,\r\n        quotaId: \"SC1909\",\r\n        name: \"原油期货\",\r\n        price: 21.20,\r\n        quantity: 200,\r\n      },\r\n      spotOverview: {\r\n        startDate: \"2018-06-05\",\r\n        currentVolume: 9113.00,\r\n        currentRatio: 23.44,\r\n        profit: 0.56,\r\n        quotaId: \"CL002\",\r\n        name: \"原油现货\",\r\n        price: 33.63,\r\n        quantity: 300,\r\n      },\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 得到动态回撤和绝对收益图\r\n   * @param {string} invreqId\r\n   * @returns {Promise<ProfitAndDrawDown>}\r\n   */\r\n  async getProfitAndDrawdown(invreqId: string): Promise<ProfitAndDrawDown> {\r\n    return {\r\n      absoluteReturn: [\r\n        {\r\n          date: \"2018-06-01\",\r\n          bonusRatio: [\r\n            {\r\n              name: \"期货\",\r\n              ratio: 5.22,\r\n            },\r\n            {\r\n              name: \"现货\",\r\n              ratio: 10.45,\r\n            },\r\n          ],\r\n          totalIncomeRatio: 19.22,\r\n          totalIncome: 15.11,\r\n        },\r\n        {\r\n          date: \"2018-06-02\",\r\n          bonusRatio: [\r\n            {\r\n              name: \"期货\",\r\n              ratio: 9.11,\r\n            },\r\n            {\r\n              name: \"现货\",\r\n              ratio: 17.22,\r\n            },\r\n          ],\r\n          totalIncomeRatio: 20.22,\r\n          totalIncome: 10.11,\r\n        },\r\n        {\r\n          date: \"2018-06-03\",\r\n          bonusRatio: [\r\n            {\r\n              name: \"期货\",\r\n              ratio: 20.22,\r\n            },\r\n            {\r\n              name: \"现货\",\r\n              ratio: 14.45,\r\n            },\r\n          ],\r\n          totalIncomeRatio: 12.22,\r\n          totalIncome: 5.11,\r\n        },\r\n      ],\r\n      maxDrawdown: 60.11,\r\n      startDate: \"2018-06-01\",\r\n      endDate: \"2018-07-11\",\r\n      days: 45,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 得到场景分析数据\r\n   * @param {string} invreqId\r\n   * @returns {Promise<SceneAnalysisResponse>}\r\n   */\r\n  async getSceneData(invreqId: string): Promise<SceneAnalysisResponse> {\r\n    return {\r\n      typeData: [\r\n          {\r\n            type: \"趋势强波动高\",\r\n            weekNum: 24,\r\n            sharpeRatio: 53.11,\r\n            calmarRatio: 34.01,\r\n            maxWeekIncomeRatio: 33.99,\r\n            minWeekIncomeRatio: 25.34,\r\n            fluctuationRatio: 7.13,\r\n            maxDrawdown: 0.11,\r\n          },\r\n          {\r\n            type: \"趋势弱波动高\",\r\n            weekNum: 21,\r\n            sharpeRatio: 46.44,\r\n            calmarRatio: 31.11,\r\n            maxWeekIncomeRatio: 57.22,\r\n            minWeekIncomeRatio: 76.83,\r\n            fluctuationRatio: 7.13,\r\n            maxDrawdown: 0.62,\r\n          },\r\n          {\r\n            type: \"趋势强波动低\",\r\n            weekNum: 9,\r\n            sharpeRatio: 7.22,\r\n            calmarRatio: 56.1,\r\n            maxWeekIncomeRatio: 4.72,\r\n            minWeekIncomeRatio: 6.25,\r\n            fluctuationRatio: 8.33,\r\n            maxDrawdown: 0.35,\r\n          },\r\n          {\r\n            type: \"趋势弱波动低\",\r\n            weekNum: 6,\r\n            sharpeRatio: 53.11,\r\n            calmarRatio: 34.01,\r\n            maxWeekIncomeRatio: 33.99,\r\n            minWeekIncomeRatio: 25.34,\r\n            fluctuationRatio: 7.13,\r\n            maxDrawdown: 0.11,\r\n          },\r\n        ],\r\n        totalIncomeRatioList: [\r\n          {\r\n            date: \"2018-06-01\",\r\n            totalIncomeRatio: 12.09,\r\n            type: \"趋势强波动高\",\r\n          },\r\n          {\r\n            date: \"2018-06-02\",\r\n            totalIncomeRatio: 13.44,\r\n            type: \"趋势强波动高\",\r\n          },\r\n          {\r\n            date: \"2018-06-03\",\r\n            totalIncomeRatio: 21.43,\r\n            type: \"趋势强波动高\",\r\n          },\r\n          {\r\n            date: \"2018-06-04\",\r\n            totalIncomeRatio: 29.26,\r\n            type: \"趋势强波动低\",\r\n          },\r\n          {\r\n            date: \"2018-06-05\",\r\n            totalIncomeRatio: 30.12,\r\n            type: \"趋势强波动低\",\r\n          },\r\n          {\r\n            date: \"2018-06-06\",\r\n            totalIncomeRatio: 49.11,\r\n            type: \"趋势强波动高\",\r\n          },\r\n          {\r\n            date: \"2018-06-07\",\r\n            totalIncomeRatio: 57.14,\r\n            type: \"趋势弱波动高\",\r\n          },\r\n          {\r\n            date: \"2018-06-08\",\r\n            totalIncomeRatio: 61.66,\r\n            type: \"趋势弱波动高\",\r\n          },\r\n          {\r\n            date: \"2018-06-09\",\r\n            totalIncomeRatio: 69.00,\r\n            type: \"趋势强波动高\",\r\n          },\r\n          {\r\n            date: \"2018-06-10\",\r\n            totalIncomeRatio: 70.11,\r\n            type: \"趋势弱波动低\",\r\n          },\r\n          {\r\n            date: \"2018-06-11\",\r\n            totalIncomeRatio: 12.09,\r\n            type: \"趋势强波动高\",\r\n          },\r\n          {\r\n            date: \"2018-06-12\",\r\n            totalIncomeRatio: 13.44,\r\n            type: \"趋势强波动高\",\r\n          },\r\n          {\r\n            date: \"2018-06-13\",\r\n            totalIncomeRatio: 21.43,\r\n            type: \"趋势强波动高\",\r\n          },\r\n          {\r\n            date: \"2018-06-14\",\r\n            totalIncomeRatio: 29.26,\r\n            type: \"趋势强波动低\",\r\n          },\r\n          {\r\n            date: \"2018-06-15\",\r\n            totalIncomeRatio: 30.12,\r\n            type: \"趋势强波动低\",\r\n          },\r\n          {\r\n            date: \"2018-06-16\",\r\n            totalIncomeRatio: 49.11,\r\n            type: \"趋势强波动高\",\r\n          },\r\n          {\r\n            date: \"2018-06-17\",\r\n            totalIncomeRatio: 57.14,\r\n            type: \"趋势弱波动高\",\r\n          },\r\n          {\r\n            date: \"2018-06-18\",\r\n            totalIncomeRatio: 61.66,\r\n            type: \"趋势弱波动高\",\r\n          },\r\n          {\r\n            date: \"2018-06-19\",\r\n            totalIncomeRatio: 69.00,\r\n            type: \"趋势强波动高\",\r\n          },\r\n          {\r\n            date: \"2018-06-20\",\r\n            totalIncomeRatio: 70.11,\r\n            type: \"趋势弱波动低\",\r\n          },\r\n        ],\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 得到每日与市场基准的比较\r\n   * @param {string} invreqId\r\n   * @returns {Promise<ComparisionTableList>}\r\n   */\r\n  async getComparision(invreqId: string): Promise<ComparisionTableList> {\r\n    return {\r\n      comparisionWithMarketBenchmark: [\r\n        {\r\n          date: \"2018-06-01\",\r\n          marketRatio1: 34.11,\r\n          marketRatio2: 23.11,\r\n          totalIncomeRatio: 35.66,\r\n        },\r\n        {\r\n          date: \"2018-06-02\",\r\n          marketRatio1: 33.14,\r\n          marketRatio2: 26.11,\r\n          totalIncomeRatio: 34.11,\r\n        },\r\n        {\r\n          date: \"2018-06-03\",\r\n          marketRatio1: 35.01,\r\n          marketRatio2: 24.11,\r\n          totalIncomeRatio: 33.66,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 得到因子敏感性分析数据\r\n   * @param {string} invreqId\r\n   * @returns {Promise<SensitivityList>}\r\n   */\r\n  async getSensitivity(invreqId: string): Promise<SensitivityList> {\r\n    return {\r\n      factorSensitivity: [\r\n          {\r\n            weekIncomeRatio: 23.11,\r\n            weekFluctuationRatio: 24.11,\r\n          },\r\n          {\r\n            weekIncomeRatio: 24.56,\r\n            weekFluctuationRatio: 10.34,\r\n          },\r\n          {\r\n            weekIncomeRatio: 32.14,\r\n            weekFluctuationRatio: 16.12,\r\n          },\r\n        ],\r\n        x1: 3.99,\r\n        y1: 6.11,\r\n        x2: 5.88,\r\n        y2: 7.22,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 得到残差项分析数据\r\n   * @param {string} invreqId\r\n   * @returns {Promise<ResidualAnalysisResponse>}\r\n   */\r\n  async getResidual(invreqId: string): Promise<ResidualAnalysisResponse> {\r\n    return {\r\n      residualList: [\r\n          {\r\n            date: \"2018-06-01\",\r\n            residual: 2.13,\r\n          },\r\n          {\r\n            date: \"2018-06-02\",\r\n            residual: 3.11,\r\n          },\r\n          {\r\n            date: \"2018-06-03\",\r\n            residual: 1.90,\r\n          },\r\n          {\r\n            date: \"2018-06-04\",\r\n            residual: 2.42,\r\n          },\r\n        ],\r\n        kurt: 6.66,\r\n        skew: 1.09,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 得到大事记数据\r\n   * @param {string} invreqId\r\n   * @returns {Promise<MemorabiliaResponse>}\r\n   */\r\n  async getMemorabilia(invreqId: string): Promise<MemorabiliaResponse> {\r\n    return {\r\n      memorabilia: [\r\n        {\r\n          scene: \"情景1\",\r\n          startDate: \"2018-06-21\",\r\n          endDate: \"2018-07-01\",\r\n          returnRatio: 53.11,\r\n          maxDrawdown: 78.33,\r\n          fluctuation: 2.11,\r\n          nanhuaMarketRatio: 53.11,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n}\r\n"]}]}