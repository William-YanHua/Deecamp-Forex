{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\lodash\\_baseGet.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\lodash\\_baseGet.js","mtime":1517704208000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["var castPath = require('./_castPath'), toKey = require('./_toKey');\r\nfunction baseGet(object, path) {\r\n    path = castPath(path, object);\r\n    var index = 0, length = path.length;\r\n    while (object != null && index < length) {\r\n        object = object[toKey(path[index++])];\r\n    }\r\n    return (index && index == length) ? object : undefined;\r\n}\r\nmodule.exports = baseGet;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\lodash\\_baseGet.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\lodash\\_baseGet.js"],"names":[],"mappings":"AAAA,IAAI,QAAQ,GAAG,OAAO,CAAC,aAAa,CAAC,EACjC,KAAK,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAUhC,SAAS,OAAO,CAAC,MAAM,EAAE,IAAI;IAC3B,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAE9B,IAAI,KAAK,GAAG,CAAC,EACT,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IAEzB,OAAO,MAAM,IAAI,IAAI,IAAI,KAAK,GAAG,MAAM,EAAE;QACvC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;KACvC;IACD,OAAO,CAAC,KAAK,IAAI,KAAK,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;AACzD,CAAC;AAED,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC","sourcesContent":["var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n"]}]}