{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\transform\\partition.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\transform\\partition.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["var assign = require('@antv/util/lib/mix');\r\nvar values = require('@antv/util/lib/object/values');\r\nvar partition = require('../util/partition');\r\nvar registerTransform = require('../data-set').registerTransform;\r\nvar DEFAULT_OPTIONS = {\r\n    groupBy: [],\r\n    orderBy: []\r\n};\r\nregisterTransform('partition', function (dataView, options) {\r\n    if (options === void 0) { options = {}; }\r\n    options = assign({}, DEFAULT_OPTIONS, options);\r\n    dataView.rows = partition(dataView.rows, options.groupBy, options.orderBy);\r\n});\r\nfunction group(dataView, options) {\r\n    if (options === void 0) { options = {}; }\r\n    options = assign({}, DEFAULT_OPTIONS, options);\r\n    dataView.rows = values(partition(dataView.rows, options.groupBy, options.orderBy));\r\n}\r\nregisterTransform('group', group);\r\nregisterTransform('groups', group);\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\transform\\partition.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\transform\\partition.js"],"names":[],"mappings":"AAAA,IAAM,MAAM,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;AAC7C,IAAM,MAAM,GAAG,OAAO,CAAC,8BAA8B,CAAC,CAAC;AACvD,IAAM,SAAS,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;AAE7C,IAAA,4DAAiB,CACQ;AAE3B,IAAM,eAAe,GAAG;IACtB,OAAO,EAAE,EAAE;IACX,OAAO,EAAE,EAAE;CACZ,CAAC;AAEF,iBAAiB,CAAC,WAAW,EAAE,UAAC,QAAQ,EAAE,OAAY;IAAZ,wBAAA,EAAA,YAAY;IACpD,OAAO,GAAG,MAAM,CAAC,EAAE,EAAE,eAAe,EAAE,OAAO,CAAC,CAAC;IAC/C,QAAQ,CAAC,IAAI,GAAG,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;AAC7E,CAAC,CAAC,CAAC;AAEH,SAAS,KAAK,CAAC,QAAQ,EAAE,OAAY;IAAZ,wBAAA,EAAA,YAAY;IACnC,OAAO,GAAG,MAAM,CAAC,EAAE,EAAE,eAAe,EAAE,OAAO,CAAC,CAAC;IAC/C,QAAQ,CAAC,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;AACrF,CAAC;AAED,iBAAiB,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;AAClC,iBAAiB,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC","sourcesContent":["const assign = require('@antv/util/lib/mix');\nconst values = require('@antv/util/lib/object/values');\nconst partition = require('../util/partition');\nconst {\n  registerTransform\n} = require('../data-set');\n\nconst DEFAULT_OPTIONS = {\n  groupBy: [], // optional\n  orderBy: []\n};\n\nregisterTransform('partition', (dataView, options = {}) => {\n  options = assign({}, DEFAULT_OPTIONS, options);\n  dataView.rows = partition(dataView.rows, options.groupBy, options.orderBy);\n});\n\nfunction group(dataView, options = {}) {\n  options = assign({}, DEFAULT_OPTIONS, options);\n  dataView.rows = values(partition(dataView.rows, options.groupBy, options.orderBy));\n}\n\nregisterTransform('group', group);\nregisterTransform('groups', group);\n"]}]}