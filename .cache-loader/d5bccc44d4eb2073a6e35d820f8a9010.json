{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/graphlib/lib/graph.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/graphlib/lib/graph.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\nvar _ = require(\"./lodash\");\nmodule.exports = Graph;\nvar DEFAULT_EDGE_NAME = \"\\x00\";\nvar GRAPH_NODE = \"\\x00\";\nvar EDGE_KEY_DELIM = \"\\x01\";\nfunction Graph(opts) {\n    this._isDirected = _.has(opts, \"directed\") ? opts.directed : true;\n    this._isMultigraph = _.has(opts, \"multigraph\") ? opts.multigraph : false;\n    this._isCompound = _.has(opts, \"compound\") ? opts.compound : false;\n    this._label = undefined;\n    this._defaultNodeLabelFn = _.constant(undefined);\n    this._defaultEdgeLabelFn = _.constant(undefined);\n    this._nodes = {};\n    if (this._isCompound) {\n        this._parent = {};\n        this._children = {};\n        this._children[GRAPH_NODE] = {};\n    }\n    this._in = {};\n    this._preds = {};\n    this._out = {};\n    this._sucs = {};\n    this._edgeObjs = {};\n    this._edgeLabels = {};\n}\nGraph.prototype._nodeCount = 0;\nGraph.prototype._edgeCount = 0;\nGraph.prototype.isDirected = function () {\n    return this._isDirected;\n};\nGraph.prototype.isMultigraph = function () {\n    return this._isMultigraph;\n};\nGraph.prototype.isCompound = function () {\n    return this._isCompound;\n};\nGraph.prototype.setGraph = function (label) {\n    this._label = label;\n    return this;\n};\nGraph.prototype.graph = function () {\n    return this._label;\n};\nGraph.prototype.setDefaultNodeLabel = function (newDefault) {\n    if (!_.isFunction(newDefault)) {\n        newDefault = _.constant(newDefault);\n    }\n    this._defaultNodeLabelFn = newDefault;\n    return this;\n};\nGraph.prototype.nodeCount = function () {\n    return this._nodeCount;\n};\nGraph.prototype.nodes = function () {\n    return _.keys(this._nodes);\n};\nGraph.prototype.sources = function () {\n    var self = this;\n    return _.filter(this.nodes(), function (v) {\n        return _.isEmpty(self._in[v]);\n    });\n};\nGraph.prototype.sinks = function () {\n    var self = this;\n    return _.filter(this.nodes(), function (v) {\n        return _.isEmpty(self._out[v]);\n    });\n};\nGraph.prototype.setNodes = function (vs, value) {\n    var args = arguments;\n    var self = this;\n    _.each(vs, function (v) {\n        if (args.length > 1) {\n            self.setNode(v, value);\n        }\n        else {\n            self.setNode(v);\n        }\n    });\n    return this;\n};\nGraph.prototype.setNode = function (v, value) {\n    if (_.has(this._nodes, v)) {\n        if (arguments.length > 1) {\n            this._nodes[v] = value;\n        }\n        return this;\n    }\n    this._nodes[v] = arguments.length > 1 ? value : this._defaultNodeLabelFn(v);\n    if (this._isCompound) {\n        this._parent[v] = GRAPH_NODE;\n        this._children[v] = {};\n        this._children[GRAPH_NODE][v] = true;\n    }\n    this._in[v] = {};\n    this._preds[v] = {};\n    this._out[v] = {};\n    this._sucs[v] = {};\n    ++this._nodeCount;\n    return this;\n};\nGraph.prototype.node = function (v) {\n    return this._nodes[v];\n};\nGraph.prototype.hasNode = function (v) {\n    return _.has(this._nodes, v);\n};\nGraph.prototype.removeNode = function (v) {\n    var self = this;\n    if (_.has(this._nodes, v)) {\n        var removeEdge = function (e) { self.removeEdge(self._edgeObjs[e]); };\n        delete this._nodes[v];\n        if (this._isCompound) {\n            this._removeFromParentsChildList(v);\n            delete this._parent[v];\n            _.each(this.children(v), function (child) {\n                self.setParent(child);\n            });\n            delete this._children[v];\n        }\n        _.each(_.keys(this._in[v]), removeEdge);\n        delete this._in[v];\n        delete this._preds[v];\n        _.each(_.keys(this._out[v]), removeEdge);\n        delete this._out[v];\n        delete this._sucs[v];\n        --this._nodeCount;\n    }\n    return this;\n};\nGraph.prototype.setParent = function (v, parent) {\n    if (!this._isCompound) {\n        throw new Error(\"Cannot set parent in a non-compound graph\");\n    }\n    if (_.isUndefined(parent)) {\n        parent = GRAPH_NODE;\n    }\n    else {\n        parent += \"\";\n        for (var ancestor = parent; !_.isUndefined(ancestor); ancestor = this.parent(ancestor)) {\n            if (ancestor === v) {\n                throw new Error(\"Setting \" + parent + \" as parent of \" + v +\n                    \" would create a cycle\");\n            }\n        }\n        this.setNode(parent);\n    }\n    this.setNode(v);\n    this._removeFromParentsChildList(v);\n    this._parent[v] = parent;\n    this._children[parent][v] = true;\n    return this;\n};\nGraph.prototype._removeFromParentsChildList = function (v) {\n    delete this._children[this._parent[v]][v];\n};\nGraph.prototype.parent = function (v) {\n    if (this._isCompound) {\n        var parent = this._parent[v];\n        if (parent !== GRAPH_NODE) {\n            return parent;\n        }\n    }\n};\nGraph.prototype.children = function (v) {\n    if (_.isUndefined(v)) {\n        v = GRAPH_NODE;\n    }\n    if (this._isCompound) {\n        var children = this._children[v];\n        if (children) {\n            return _.keys(children);\n        }\n    }\n    else if (v === GRAPH_NODE) {\n        return this.nodes();\n    }\n    else if (this.hasNode(v)) {\n        return [];\n    }\n};\nGraph.prototype.predecessors = function (v) {\n    var predsV = this._preds[v];\n    if (predsV) {\n        return _.keys(predsV);\n    }\n};\nGraph.prototype.successors = function (v) {\n    var sucsV = this._sucs[v];\n    if (sucsV) {\n        return _.keys(sucsV);\n    }\n};\nGraph.prototype.neighbors = function (v) {\n    var preds = this.predecessors(v);\n    if (preds) {\n        return _.union(preds, this.successors(v));\n    }\n};\nGraph.prototype.isLeaf = function (v) {\n    var neighbors;\n    if (this.isDirected()) {\n        neighbors = this.successors(v);\n    }\n    else {\n        neighbors = this.neighbors(v);\n    }\n    return neighbors.length === 0;\n};\nGraph.prototype.filterNodes = function (filter) {\n    var copy = new this.constructor({\n        directed: this._isDirected,\n        multigraph: this._isMultigraph,\n        compound: this._isCompound\n    });\n    copy.setGraph(this.graph());\n    var self = this;\n    _.each(this._nodes, function (value, v) {\n        if (filter(v)) {\n            copy.setNode(v, value);\n        }\n    });\n    _.each(this._edgeObjs, function (e) {\n        if (copy.hasNode(e.v) && copy.hasNode(e.w)) {\n            copy.setEdge(e, self.edge(e));\n        }\n    });\n    var parents = {};\n    function findParent(v) {\n        var parent = self.parent(v);\n        if (parent === undefined || copy.hasNode(parent)) {\n            parents[v] = parent;\n            return parent;\n        }\n        else if (parent in parents) {\n            return parents[parent];\n        }\n        else {\n            return findParent(parent);\n        }\n    }\n    if (this._isCompound) {\n        _.each(copy.nodes(), function (v) {\n            copy.setParent(v, findParent(v));\n        });\n    }\n    return copy;\n};\nGraph.prototype.setDefaultEdgeLabel = function (newDefault) {\n    if (!_.isFunction(newDefault)) {\n        newDefault = _.constant(newDefault);\n    }\n    this._defaultEdgeLabelFn = newDefault;\n    return this;\n};\nGraph.prototype.edgeCount = function () {\n    return this._edgeCount;\n};\nGraph.prototype.edges = function () {\n    return _.values(this._edgeObjs);\n};\nGraph.prototype.setPath = function (vs, value) {\n    var self = this;\n    var args = arguments;\n    _.reduce(vs, function (v, w) {\n        if (args.length > 1) {\n            self.setEdge(v, w, value);\n        }\n        else {\n            self.setEdge(v, w);\n        }\n        return w;\n    });\n    return this;\n};\nGraph.prototype.setEdge = function () {\n    var v, w, name, value;\n    var valueSpecified = false;\n    var arg0 = arguments[0];\n    if (typeof arg0 === \"object\" && arg0 !== null && \"v\" in arg0) {\n        v = arg0.v;\n        w = arg0.w;\n        name = arg0.name;\n        if (arguments.length === 2) {\n            value = arguments[1];\n            valueSpecified = true;\n        }\n    }\n    else {\n        v = arg0;\n        w = arguments[1];\n        name = arguments[3];\n        if (arguments.length > 2) {\n            value = arguments[2];\n            valueSpecified = true;\n        }\n    }\n    v = \"\" + v;\n    w = \"\" + w;\n    if (!_.isUndefined(name)) {\n        name = \"\" + name;\n    }\n    var e = edgeArgsToId(this._isDirected, v, w, name);\n    if (_.has(this._edgeLabels, e)) {\n        if (valueSpecified) {\n            this._edgeLabels[e] = value;\n        }\n        return this;\n    }\n    if (!_.isUndefined(name) && !this._isMultigraph) {\n        throw new Error(\"Cannot set a named edge when isMultigraph = false\");\n    }\n    this.setNode(v);\n    this.setNode(w);\n    this._edgeLabels[e] = valueSpecified ? value : this._defaultEdgeLabelFn(v, w, name);\n    var edgeObj = edgeArgsToObj(this._isDirected, v, w, name);\n    v = edgeObj.v;\n    w = edgeObj.w;\n    Object.freeze(edgeObj);\n    this._edgeObjs[e] = edgeObj;\n    incrementOrInitEntry(this._preds[w], v);\n    incrementOrInitEntry(this._sucs[v], w);\n    this._in[w][e] = edgeObj;\n    this._out[v][e] = edgeObj;\n    this._edgeCount++;\n    return this;\n};\nGraph.prototype.edge = function (v, w, name) {\n    var e = (arguments.length === 1\n        ? edgeObjToId(this._isDirected, arguments[0])\n        : edgeArgsToId(this._isDirected, v, w, name));\n    return this._edgeLabels[e];\n};\nGraph.prototype.hasEdge = function (v, w, name) {\n    var e = (arguments.length === 1\n        ? edgeObjToId(this._isDirected, arguments[0])\n        : edgeArgsToId(this._isDirected, v, w, name));\n    return _.has(this._edgeLabels, e);\n};\nGraph.prototype.removeEdge = function (v, w, name) {\n    var e = (arguments.length === 1\n        ? edgeObjToId(this._isDirected, arguments[0])\n        : edgeArgsToId(this._isDirected, v, w, name));\n    var edge = this._edgeObjs[e];\n    if (edge) {\n        v = edge.v;\n        w = edge.w;\n        delete this._edgeLabels[e];\n        delete this._edgeObjs[e];\n        decrementOrRemoveEntry(this._preds[w], v);\n        decrementOrRemoveEntry(this._sucs[v], w);\n        delete this._in[w][e];\n        delete this._out[v][e];\n        this._edgeCount--;\n    }\n    return this;\n};\nGraph.prototype.inEdges = function (v, u) {\n    var inV = this._in[v];\n    if (inV) {\n        var edges = _.values(inV);\n        if (!u) {\n            return edges;\n        }\n        return _.filter(edges, function (edge) { return edge.v === u; });\n    }\n};\nGraph.prototype.outEdges = function (v, w) {\n    var outV = this._out[v];\n    if (outV) {\n        var edges = _.values(outV);\n        if (!w) {\n            return edges;\n        }\n        return _.filter(edges, function (edge) { return edge.w === w; });\n    }\n};\nGraph.prototype.nodeEdges = function (v, w) {\n    var inEdges = this.inEdges(v, w);\n    if (inEdges) {\n        return inEdges.concat(this.outEdges(v, w));\n    }\n};\nfunction incrementOrInitEntry(map, k) {\n    if (map[k]) {\n        map[k]++;\n    }\n    else {\n        map[k] = 1;\n    }\n}\nfunction decrementOrRemoveEntry(map, k) {\n    if (!--map[k]) {\n        delete map[k];\n    }\n}\nfunction edgeArgsToId(isDirected, v_, w_, name) {\n    var v = \"\" + v_;\n    var w = \"\" + w_;\n    if (!isDirected && v > w) {\n        var tmp = v;\n        v = w;\n        w = tmp;\n    }\n    return v + EDGE_KEY_DELIM + w + EDGE_KEY_DELIM +\n        (_.isUndefined(name) ? DEFAULT_EDGE_NAME : name);\n}\nfunction edgeArgsToObj(isDirected, v_, w_, name) {\n    var v = \"\" + v_;\n    var w = \"\" + w_;\n    if (!isDirected && v > w) {\n        var tmp = v;\n        v = w;\n        w = tmp;\n    }\n    var edgeObj = { v: v, w: w };\n    if (name) {\n        edgeObj.name = name;\n    }\n    return edgeObj;\n}\nfunction edgeObjToId(isDirected, edgeObj) {\n    return edgeArgsToId(isDirected, edgeObj.v, edgeObj.w, edgeObj.name);\n}\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/graphlib/lib/graph.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/graphlib/lib/graph.js"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _ = require(\"./lodash\");\n\nmodule.exports = Graph;\n\nvar DEFAULT_EDGE_NAME = \"\\x00\";\nvar GRAPH_NODE = \"\\x00\";\nvar EDGE_KEY_DELIM = \"\\x01\";\n\n// Implementation notes:\n//\n//  * Node id query functions should return string ids for the nodes\n//  * Edge id query functions should return an \"edgeObj\", edge object, that is\n//    composed of enough information to uniquely identify an edge: {v, w, name}.\n//  * Internally we use an \"edgeId\", a stringified form of the edgeObj, to\n//    reference edges. This is because we need a performant way to look these\n//    edges up and, object properties, which have string keys, are the closest\n//    we're going to get to a performant hashtable in JavaScript.\n\nfunction Graph(opts) {\n  this._isDirected = _.has(opts, \"directed\") ? opts.directed : true;\n  this._isMultigraph = _.has(opts, \"multigraph\") ? opts.multigraph : false;\n  this._isCompound = _.has(opts, \"compound\") ? opts.compound : false;\n\n  // Label for the graph itself\n  this._label = undefined;\n\n  // Defaults to be set when creating a new node\n  this._defaultNodeLabelFn = _.constant(undefined);\n\n  // Defaults to be set when creating a new edge\n  this._defaultEdgeLabelFn = _.constant(undefined);\n\n  // v -> label\n  this._nodes = {};\n\n  if (this._isCompound) {\n    // v -> parent\n    this._parent = {};\n\n    // v -> children\n    this._children = {};\n    this._children[GRAPH_NODE] = {};\n  }\n\n  // v -> edgeObj\n  this._in = {};\n\n  // u -> v -> Number\n  this._preds = {};\n\n  // v -> edgeObj\n  this._out = {};\n\n  // v -> w -> Number\n  this._sucs = {};\n\n  // e -> edgeObj\n  this._edgeObjs = {};\n\n  // e -> label\n  this._edgeLabels = {};\n}\n\n/* Number of nodes in the graph. Should only be changed by the implementation. */\nGraph.prototype._nodeCount = 0;\n\n/* Number of edges in the graph. Should only be changed by the implementation. */\nGraph.prototype._edgeCount = 0;\n\n\n/* === Graph functions ========= */\n\nGraph.prototype.isDirected = function() {\n  return this._isDirected;\n};\n\nGraph.prototype.isMultigraph = function() {\n  return this._isMultigraph;\n};\n\nGraph.prototype.isCompound = function() {\n  return this._isCompound;\n};\n\nGraph.prototype.setGraph = function(label) {\n  this._label = label;\n  return this;\n};\n\nGraph.prototype.graph = function() {\n  return this._label;\n};\n\n\n/* === Node functions ========== */\n\nGraph.prototype.setDefaultNodeLabel = function(newDefault) {\n  if (!_.isFunction(newDefault)) {\n    newDefault = _.constant(newDefault);\n  }\n  this._defaultNodeLabelFn = newDefault;\n  return this;\n};\n\nGraph.prototype.nodeCount = function() {\n  return this._nodeCount;\n};\n\nGraph.prototype.nodes = function() {\n  return _.keys(this._nodes);\n};\n\nGraph.prototype.sources = function() {\n  var self = this;\n  return _.filter(this.nodes(), function(v) {\n    return _.isEmpty(self._in[v]);\n  });\n};\n\nGraph.prototype.sinks = function() {\n  var self = this;\n  return _.filter(this.nodes(), function(v) {\n    return _.isEmpty(self._out[v]);\n  });\n};\n\nGraph.prototype.setNodes = function(vs, value) {\n  var args = arguments;\n  var self = this;\n  _.each(vs, function(v) {\n    if (args.length > 1) {\n      self.setNode(v, value);\n    } else {\n      self.setNode(v);\n    }\n  });\n  return this;\n};\n\nGraph.prototype.setNode = function(v, value) {\n  if (_.has(this._nodes, v)) {\n    if (arguments.length > 1) {\n      this._nodes[v] = value;\n    }\n    return this;\n  }\n\n  this._nodes[v] = arguments.length > 1 ? value : this._defaultNodeLabelFn(v);\n  if (this._isCompound) {\n    this._parent[v] = GRAPH_NODE;\n    this._children[v] = {};\n    this._children[GRAPH_NODE][v] = true;\n  }\n  this._in[v] = {};\n  this._preds[v] = {};\n  this._out[v] = {};\n  this._sucs[v] = {};\n  ++this._nodeCount;\n  return this;\n};\n\nGraph.prototype.node = function(v) {\n  return this._nodes[v];\n};\n\nGraph.prototype.hasNode = function(v) {\n  return _.has(this._nodes, v);\n};\n\nGraph.prototype.removeNode =  function(v) {\n  var self = this;\n  if (_.has(this._nodes, v)) {\n    var removeEdge = function(e) { self.removeEdge(self._edgeObjs[e]); };\n    delete this._nodes[v];\n    if (this._isCompound) {\n      this._removeFromParentsChildList(v);\n      delete this._parent[v];\n      _.each(this.children(v), function(child) {\n        self.setParent(child);\n      });\n      delete this._children[v];\n    }\n    _.each(_.keys(this._in[v]), removeEdge);\n    delete this._in[v];\n    delete this._preds[v];\n    _.each(_.keys(this._out[v]), removeEdge);\n    delete this._out[v];\n    delete this._sucs[v];\n    --this._nodeCount;\n  }\n  return this;\n};\n\nGraph.prototype.setParent = function(v, parent) {\n  if (!this._isCompound) {\n    throw new Error(\"Cannot set parent in a non-compound graph\");\n  }\n\n  if (_.isUndefined(parent)) {\n    parent = GRAPH_NODE;\n  } else {\n    // Coerce parent to string\n    parent += \"\";\n    for (var ancestor = parent;\n      !_.isUndefined(ancestor);\n      ancestor = this.parent(ancestor)) {\n      if (ancestor === v) {\n        throw new Error(\"Setting \" + parent+ \" as parent of \" + v +\n                        \" would create a cycle\");\n      }\n    }\n\n    this.setNode(parent);\n  }\n\n  this.setNode(v);\n  this._removeFromParentsChildList(v);\n  this._parent[v] = parent;\n  this._children[parent][v] = true;\n  return this;\n};\n\nGraph.prototype._removeFromParentsChildList = function(v) {\n  delete this._children[this._parent[v]][v];\n};\n\nGraph.prototype.parent = function(v) {\n  if (this._isCompound) {\n    var parent = this._parent[v];\n    if (parent !== GRAPH_NODE) {\n      return parent;\n    }\n  }\n};\n\nGraph.prototype.children = function(v) {\n  if (_.isUndefined(v)) {\n    v = GRAPH_NODE;\n  }\n\n  if (this._isCompound) {\n    var children = this._children[v];\n    if (children) {\n      return _.keys(children);\n    }\n  } else if (v === GRAPH_NODE) {\n    return this.nodes();\n  } else if (this.hasNode(v)) {\n    return [];\n  }\n};\n\nGraph.prototype.predecessors = function(v) {\n  var predsV = this._preds[v];\n  if (predsV) {\n    return _.keys(predsV);\n  }\n};\n\nGraph.prototype.successors = function(v) {\n  var sucsV = this._sucs[v];\n  if (sucsV) {\n    return _.keys(sucsV);\n  }\n};\n\nGraph.prototype.neighbors = function(v) {\n  var preds = this.predecessors(v);\n  if (preds) {\n    return _.union(preds, this.successors(v));\n  }\n};\n\nGraph.prototype.isLeaf = function (v) {\n  var neighbors;\n  if (this.isDirected()) {\n    neighbors = this.successors(v);\n  } else {\n    neighbors = this.neighbors(v);\n  }\n  return neighbors.length === 0;\n};\n\nGraph.prototype.filterNodes = function(filter) {\n  var copy = new this.constructor({\n    directed: this._isDirected,\n    multigraph: this._isMultigraph,\n    compound: this._isCompound\n  });\n\n  copy.setGraph(this.graph());\n\n  var self = this;\n  _.each(this._nodes, function(value, v) {\n    if (filter(v)) {\n      copy.setNode(v, value);\n    }\n  });\n\n  _.each(this._edgeObjs, function(e) {\n    if (copy.hasNode(e.v) && copy.hasNode(e.w)) {\n      copy.setEdge(e, self.edge(e));\n    }\n  });\n\n  var parents = {};\n  function findParent(v) {\n    var parent = self.parent(v);\n    if (parent === undefined || copy.hasNode(parent)) {\n      parents[v] = parent;\n      return parent;\n    } else if (parent in parents) {\n      return parents[parent];\n    } else {\n      return findParent(parent);\n    }\n  }\n\n  if (this._isCompound) {\n    _.each(copy.nodes(), function(v) {\n      copy.setParent(v, findParent(v));\n    });\n  }\n\n  return copy;\n};\n\n/* === Edge functions ========== */\n\nGraph.prototype.setDefaultEdgeLabel = function(newDefault) {\n  if (!_.isFunction(newDefault)) {\n    newDefault = _.constant(newDefault);\n  }\n  this._defaultEdgeLabelFn = newDefault;\n  return this;\n};\n\nGraph.prototype.edgeCount = function() {\n  return this._edgeCount;\n};\n\nGraph.prototype.edges = function() {\n  return _.values(this._edgeObjs);\n};\n\nGraph.prototype.setPath = function(vs, value) {\n  var self = this;\n  var args = arguments;\n  _.reduce(vs, function(v, w) {\n    if (args.length > 1) {\n      self.setEdge(v, w, value);\n    } else {\n      self.setEdge(v, w);\n    }\n    return w;\n  });\n  return this;\n};\n\n/*\n * setEdge(v, w, [value, [name]])\n * setEdge({ v, w, [name] }, [value])\n */\nGraph.prototype.setEdge = function() {\n  var v, w, name, value;\n  var valueSpecified = false;\n  var arg0 = arguments[0];\n\n  if (typeof arg0 === \"object\" && arg0 !== null && \"v\" in arg0) {\n    v = arg0.v;\n    w = arg0.w;\n    name = arg0.name;\n    if (arguments.length === 2) {\n      value = arguments[1];\n      valueSpecified = true;\n    }\n  } else {\n    v = arg0;\n    w = arguments[1];\n    name = arguments[3];\n    if (arguments.length > 2) {\n      value = arguments[2];\n      valueSpecified = true;\n    }\n  }\n\n  v = \"\" + v;\n  w = \"\" + w;\n  if (!_.isUndefined(name)) {\n    name = \"\" + name;\n  }\n\n  var e = edgeArgsToId(this._isDirected, v, w, name);\n  if (_.has(this._edgeLabels, e)) {\n    if (valueSpecified) {\n      this._edgeLabels[e] = value;\n    }\n    return this;\n  }\n\n  if (!_.isUndefined(name) && !this._isMultigraph) {\n    throw new Error(\"Cannot set a named edge when isMultigraph = false\");\n  }\n\n  // It didn't exist, so we need to create it.\n  // First ensure the nodes exist.\n  this.setNode(v);\n  this.setNode(w);\n\n  this._edgeLabels[e] = valueSpecified ? value : this._defaultEdgeLabelFn(v, w, name);\n\n  var edgeObj = edgeArgsToObj(this._isDirected, v, w, name);\n  // Ensure we add undirected edges in a consistent way.\n  v = edgeObj.v;\n  w = edgeObj.w;\n\n  Object.freeze(edgeObj);\n  this._edgeObjs[e] = edgeObj;\n  incrementOrInitEntry(this._preds[w], v);\n  incrementOrInitEntry(this._sucs[v], w);\n  this._in[w][e] = edgeObj;\n  this._out[v][e] = edgeObj;\n  this._edgeCount++;\n  return this;\n};\n\nGraph.prototype.edge = function(v, w, name) {\n  var e = (arguments.length === 1\n    ? edgeObjToId(this._isDirected, arguments[0])\n    : edgeArgsToId(this._isDirected, v, w, name));\n  return this._edgeLabels[e];\n};\n\nGraph.prototype.hasEdge = function(v, w, name) {\n  var e = (arguments.length === 1\n    ? edgeObjToId(this._isDirected, arguments[0])\n    : edgeArgsToId(this._isDirected, v, w, name));\n  return _.has(this._edgeLabels, e);\n};\n\nGraph.prototype.removeEdge = function(v, w, name) {\n  var e = (arguments.length === 1\n    ? edgeObjToId(this._isDirected, arguments[0])\n    : edgeArgsToId(this._isDirected, v, w, name));\n  var edge = this._edgeObjs[e];\n  if (edge) {\n    v = edge.v;\n    w = edge.w;\n    delete this._edgeLabels[e];\n    delete this._edgeObjs[e];\n    decrementOrRemoveEntry(this._preds[w], v);\n    decrementOrRemoveEntry(this._sucs[v], w);\n    delete this._in[w][e];\n    delete this._out[v][e];\n    this._edgeCount--;\n  }\n  return this;\n};\n\nGraph.prototype.inEdges = function(v, u) {\n  var inV = this._in[v];\n  if (inV) {\n    var edges = _.values(inV);\n    if (!u) {\n      return edges;\n    }\n    return _.filter(edges, function(edge) { return edge.v === u; });\n  }\n};\n\nGraph.prototype.outEdges = function(v, w) {\n  var outV = this._out[v];\n  if (outV) {\n    var edges = _.values(outV);\n    if (!w) {\n      return edges;\n    }\n    return _.filter(edges, function(edge) { return edge.w === w; });\n  }\n};\n\nGraph.prototype.nodeEdges = function(v, w) {\n  var inEdges = this.inEdges(v, w);\n  if (inEdges) {\n    return inEdges.concat(this.outEdges(v, w));\n  }\n};\n\nfunction incrementOrInitEntry(map, k) {\n  if (map[k]) {\n    map[k]++;\n  } else {\n    map[k] = 1;\n  }\n}\n\nfunction decrementOrRemoveEntry(map, k) {\n  if (!--map[k]) { delete map[k]; }\n}\n\nfunction edgeArgsToId(isDirected, v_, w_, name) {\n  var v = \"\" + v_;\n  var w = \"\" + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return v + EDGE_KEY_DELIM + w + EDGE_KEY_DELIM +\n             (_.isUndefined(name) ? DEFAULT_EDGE_NAME : name);\n}\n\nfunction edgeArgsToObj(isDirected, v_, w_, name) {\n  var v = \"\" + v_;\n  var w = \"\" + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  var edgeObj =  { v: v, w: w };\n  if (name) {\n    edgeObj.name = name;\n  }\n  return edgeObj;\n}\n\nfunction edgeObjToId(isDirected, edgeObj) {\n  return edgeArgsToId(isDirected, edgeObj.v, edgeObj.w, edgeObj.name);\n}\n"]}]}