{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\pie\\layer.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\pie\\layer.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __assign, __extends } from \"tslib\";\r\nimport { deepMix, isNil, map, some, every } from '@antv/util';\r\nimport * as EventParser from './event';\r\nimport ViewLayer from '../../base/view-layer';\r\nimport { getGeom } from '../../geoms/factory';\r\nimport { getPieLabel } from './component/label';\r\nimport SpiderLabel from './component/label/spider-label';\r\nimport { registerPlotType } from '../../base/global';\r\nimport './theme';\r\nvar G2_GEOM_MAP = {\r\n    pie: 'interval',\r\n};\r\nvar PLOT_GEOM_MAP = {\r\n    pie: 'column',\r\n};\r\nvar PieLayer = (function (_super) {\r\n    __extends(PieLayer, _super);\r\n    function PieLayer() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.type = 'pie';\r\n        return _this;\r\n    }\r\n    PieLayer.getDefaultOptions = function () {\r\n        return deepMix({}, _super.getDefaultOptions.call(this), {\r\n            width: 400,\r\n            height: 400,\r\n            title: {\r\n                visible: false,\r\n            },\r\n            description: {\r\n                visible: false,\r\n            },\r\n            forceFit: true,\r\n            padding: 'auto',\r\n            radius: 0.8,\r\n            label: {\r\n                visible: true,\r\n                type: 'inner',\r\n                autoRotate: false,\r\n                adjustPosition: true,\r\n                allowOverlap: false,\r\n                line: {\r\n                    visible: true,\r\n                    smooth: true,\r\n                },\r\n            },\r\n            legend: {\r\n                visible: true,\r\n                position: 'right-center',\r\n            },\r\n            tooltip: {\r\n                visible: true,\r\n                shared: false,\r\n                showCrosshairs: false,\r\n                showMarkers: false,\r\n            },\r\n            pieStyle: {\r\n                stroke: 'white',\r\n                lineWidth: 1,\r\n            },\r\n        });\r\n    };\r\n    PieLayer.prototype.afterRender = function () {\r\n        _super.prototype.afterRender.call(this);\r\n        var options = this.options;\r\n        if (options.label && options.label.visible) {\r\n            if (this.labelComponent) {\r\n                this.labelComponent.clear();\r\n            }\r\n            var labelConfig = options.label;\r\n            if (labelConfig.type === 'spider') {\r\n                this.labelComponent = new SpiderLabel(__assign({ view: this.view, fields: options.colorField ? [options.angleField, options.colorField] : [options.angleField] }, this.options.label));\r\n                this.labelComponent.render();\r\n            }\r\n            else {\r\n                var LabelCtor = getPieLabel(labelConfig.type);\r\n                this.labelComponent = new LabelCtor(this, options.label);\r\n                this.labelComponent.render();\r\n            }\r\n        }\r\n    };\r\n    PieLayer.prototype.getAngleScale = function () {\r\n        var angleField = this.options.angleField;\r\n        if (angleField) {\r\n            return this.view.getScaleByField(angleField);\r\n        }\r\n    };\r\n    PieLayer.prototype.geometryParser = function (dim, type) {\r\n        if (dim === 'g2') {\r\n            return G2_GEOM_MAP[type];\r\n        }\r\n        return PLOT_GEOM_MAP[type];\r\n    };\r\n    PieLayer.prototype.scale = function () {\r\n        var props = this.options;\r\n        _super.prototype.scale.call(this);\r\n        var scales = {};\r\n        scales[props.angleField] = {};\r\n        scales[props.colorField] = { type: 'cat' };\r\n        scales = deepMix({}, this.config.scales, scales);\r\n        this.setConfig('scales', scales);\r\n    };\r\n    PieLayer.prototype.processData = function (data) {\r\n        var _a, _b;\r\n        var key = this.options.angleField;\r\n        var originalData = data.map(function (item) {\r\n            var _a;\r\n            return (__assign(__assign({}, item), (_a = {}, _a[key] = typeof item[key] === 'string' ? Number.parseFloat(item[key]) : item[key], _a)));\r\n        });\r\n        var getValue = function (d) { return d[key]; };\r\n        var notEqualZeroOrNil = function (v) { return v !== 0 && !isNil(v); };\r\n        var allAngleValue = map(originalData, getValue);\r\n        var allNil = every(allAngleValue, isNil);\r\n        if (!some(allAngleValue, notEqualZeroOrNil)) {\r\n            var meta = this.options.meta || {};\r\n            if (allNil) {\r\n                this.options.meta = deepMix({}, meta, (_a = {}, _a[key] = { formatter: function () { return 'null'; } }, _a));\r\n                return map(originalData, function (d) {\r\n                    var _a;\r\n                    return (__assign(__assign({}, d), (_a = {}, _a[key] = allNil ? 1 : d[key] === 0 ? 1 : d[key], _a)));\r\n                });\r\n            }\r\n            else {\r\n                this.options.meta = deepMix({}, meta, (_b = {}, _b[key] = { formatter: function () { return '0'; } }, _b));\r\n                return map(originalData, function (d) {\r\n                    var _a;\r\n                    return (__assign(__assign({}, d), (_a = {}, _a[key] = d[key] === 0 ? 1 : d[key], _a)));\r\n                });\r\n            }\r\n        }\r\n        return originalData;\r\n    };\r\n    PieLayer.prototype.axis = function () {\r\n        return;\r\n    };\r\n    PieLayer.prototype.coord = function () {\r\n        var props = this.options;\r\n        var coordConfig = {\r\n            type: 'theta',\r\n            cfg: {\r\n                radius: props.radius,\r\n                innerRadius: props.innerRadius || 0,\r\n            },\r\n        };\r\n        this.setConfig('coordinate', coordConfig);\r\n    };\r\n    PieLayer.prototype.addGeometry = function () {\r\n        var props = this.options;\r\n        var pie = getGeom('interval', 'main', {\r\n            plot: this,\r\n            positionFields: [1, props.angleField],\r\n        });\r\n        pie.adjust = [{ type: 'stack' }];\r\n        this.pie = pie;\r\n        if (props.label) {\r\n            this.label();\r\n        }\r\n        if (props.tooltip && (props.tooltip.fields || props.tooltip.formatter)) {\r\n            this.geometryTooltip();\r\n        }\r\n        this.setConfig('geometry', pie);\r\n    };\r\n    PieLayer.prototype.geometryTooltip = function () {\r\n        this.pie.tooltip = {};\r\n        var tooltipOptions = this.options.tooltip;\r\n        if (tooltipOptions.fields) {\r\n            this.pie.tooltip.fields = tooltipOptions.fields;\r\n        }\r\n        if (tooltipOptions.formatter) {\r\n            this.pie.tooltip.callback = tooltipOptions.formatter;\r\n            if (!tooltipOptions.fields) {\r\n                this.pie.tooltip.fields = [this.options.angleField, this.options.colorField];\r\n            }\r\n        }\r\n    };\r\n    PieLayer.prototype.animation = function () {\r\n        _super.prototype.animation.call(this);\r\n        var props = this.options;\r\n        if (props.animation === false) {\r\n            this.pie.animate = false;\r\n        }\r\n    };\r\n    PieLayer.prototype.annotation = function () {\r\n        return;\r\n    };\r\n    PieLayer.prototype.parseEvents = function (eventParser) {\r\n        if (eventParser) {\r\n            _super.prototype.parseEvents.call(this, eventParser);\r\n        }\r\n        else {\r\n            _super.prototype.parseEvents.call(this, EventParser);\r\n        }\r\n    };\r\n    PieLayer.prototype.label = function () {\r\n        this.pie.label = false;\r\n    };\r\n    return PieLayer;\r\n}(ViewLayer));\r\nexport default PieLayer;\r\nregisterPlotType('pie', PieLayer);\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\pie\\layer.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\pie\\layer.js"],"names":[],"mappings":"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","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { deepMix, isNil, map, some, every } from '@antv/util';\nimport * as EventParser from './event';\nimport ViewLayer from '../../base/view-layer';\nimport { getGeom } from '../../geoms/factory';\nimport { getPieLabel } from './component/label';\nimport SpiderLabel from './component/label/spider-label';\nimport { registerPlotType } from '../../base/global';\nimport './theme';\nvar G2_GEOM_MAP = {\n    pie: 'interval',\n};\nvar PLOT_GEOM_MAP = {\n    pie: 'column',\n};\n// @ts-ignore\nvar PieLayer = /** @class */ (function (_super) {\n    __extends(PieLayer, _super);\n    function PieLayer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'pie';\n        return _this;\n    }\n    PieLayer.getDefaultOptions = function () {\n        return deepMix({}, _super.getDefaultOptions.call(this), {\n            width: 400,\n            height: 400,\n            title: {\n                visible: false,\n            },\n            description: {\n                visible: false,\n            },\n            forceFit: true,\n            padding: 'auto',\n            radius: 0.8,\n            label: {\n                visible: true,\n                type: 'inner',\n                autoRotate: false,\n                adjustPosition: true,\n                allowOverlap: false,\n                line: {\n                    visible: true,\n                    smooth: true,\n                },\n            },\n            legend: {\n                visible: true,\n                position: 'right-center',\n            },\n            tooltip: {\n                visible: true,\n                shared: false,\n                showCrosshairs: false,\n                showMarkers: false,\n            },\n            pieStyle: {\n                stroke: 'white',\n                lineWidth: 1,\n            },\n        });\n    };\n    PieLayer.prototype.afterRender = function () {\n        _super.prototype.afterRender.call(this);\n        var options = this.options;\n        /** 蜘蛛布局label */\n        if (options.label && options.label.visible) {\n            // 清除，避免二次渲染\n            if (this.labelComponent) {\n                this.labelComponent.clear();\n            }\n            var labelConfig = options.label;\n            if (labelConfig.type === 'spider') {\n                this.labelComponent = new SpiderLabel(__assign({ view: this.view, fields: options.colorField ? [options.angleField, options.colorField] : [options.angleField] }, this.options.label));\n                this.labelComponent.render();\n            }\n            else {\n                var LabelCtor = getPieLabel(labelConfig.type);\n                this.labelComponent = new LabelCtor(this, options.label);\n                this.labelComponent.render();\n            }\n        }\n    };\n    PieLayer.prototype.getAngleScale = function () {\n        var angleField = this.options.angleField;\n        if (angleField) {\n            return this.view.getScaleByField(angleField);\n        }\n    };\n    PieLayer.prototype.geometryParser = function (dim, type) {\n        if (dim === 'g2') {\n            return G2_GEOM_MAP[type];\n        }\n        return PLOT_GEOM_MAP[type];\n    };\n    PieLayer.prototype.scale = function () {\n        var props = this.options;\n        _super.prototype.scale.call(this);\n        var scales = {};\n        scales[props.angleField] = {};\n        scales[props.colorField] = { type: 'cat' };\n        scales = deepMix({}, this.config.scales, scales);\n        this.setConfig('scales', scales);\n    };\n    PieLayer.prototype.processData = function (data) {\n        var _a, _b;\n        var key = this.options.angleField;\n        var originalData = data.map(function (item) {\n            var _a;\n            return (__assign(__assign({}, item), (_a = {}, _a[key] = typeof item[key] === 'string' ? Number.parseFloat(item[key]) : item[key], _a)));\n        });\n        var getValue = function (d) { return d[key]; };\n        var notEqualZeroOrNil = function (v) { return v !== 0 && !isNil(v); };\n        var allAngleValue = map(originalData, getValue);\n        var allNil = every(allAngleValue, isNil);\n        /** 数据全空处理，同时处理 meta */\n        if (!some(allAngleValue, notEqualZeroOrNil)) {\n            var meta = this.options.meta || {};\n            // 数据全为 null\n            if (allNil) {\n                this.options.meta = deepMix({}, meta, (_a = {}, _a[key] = { formatter: function () { return 'null'; } }, _a));\n                return map(originalData, function (d) {\n                    var _a;\n                    return (__assign(__assign({}, d), (_a = {}, _a[key] = allNil ? 1 : d[key] === 0 ? 1 : d[key], _a)));\n                });\n            }\n            else {\n                // 数据不全为 null，部分 0 部分 null（null值不展示）\n                this.options.meta = deepMix({}, meta, (_b = {}, _b[key] = { formatter: function () { return '0'; } }, _b));\n                return map(originalData, function (d) {\n                    var _a;\n                    return (__assign(__assign({}, d), (_a = {}, _a[key] = d[key] === 0 ? 1 : d[key], _a)));\n                });\n            }\n        }\n        return originalData;\n    };\n    PieLayer.prototype.axis = function () {\n        return;\n    };\n    PieLayer.prototype.coord = function () {\n        var props = this.options;\n        var coordConfig = {\n            type: 'theta',\n            cfg: {\n                radius: props.radius,\n                // @ts-ignore 业务定制,不开放配置\n                innerRadius: props.innerRadius || 0,\n            },\n        };\n        this.setConfig('coordinate', coordConfig);\n    };\n    PieLayer.prototype.addGeometry = function () {\n        var props = this.options;\n        var pie = getGeom('interval', 'main', {\n            plot: this,\n            positionFields: [1, props.angleField],\n        });\n        pie.adjust = [{ type: 'stack' }];\n        this.pie = pie;\n        if (props.label) {\n            this.label();\n        }\n        if (props.tooltip && (props.tooltip.fields || props.tooltip.formatter)) {\n            this.geometryTooltip();\n        }\n        this.setConfig('geometry', pie);\n    };\n    PieLayer.prototype.geometryTooltip = function () {\n        this.pie.tooltip = {};\n        var tooltipOptions = this.options.tooltip;\n        if (tooltipOptions.fields) {\n            this.pie.tooltip.fields = tooltipOptions.fields;\n        }\n        if (tooltipOptions.formatter) {\n            this.pie.tooltip.callback = tooltipOptions.formatter;\n            if (!tooltipOptions.fields) {\n                this.pie.tooltip.fields = [this.options.angleField, this.options.colorField];\n            }\n        }\n    };\n    PieLayer.prototype.animation = function () {\n        _super.prototype.animation.call(this);\n        var props = this.options;\n        if (props.animation === false) {\n            /** 关闭动画 */\n            this.pie.animate = false;\n        }\n    };\n    PieLayer.prototype.annotation = function () {\n        return;\n    };\n    PieLayer.prototype.parseEvents = function (eventParser) {\n        if (eventParser) {\n            _super.prototype.parseEvents.call(this, eventParser);\n        }\n        else {\n            _super.prototype.parseEvents.call(this, EventParser);\n        }\n    };\n    PieLayer.prototype.label = function () {\n        // 不使用 g2 内置label\n        this.pie.label = false;\n    };\n    return PieLayer;\n}(ViewLayer));\nexport default PieLayer;\nregisterPlotType('pie', PieLayer);\n//# sourceMappingURL=layer.js.map"]}]}