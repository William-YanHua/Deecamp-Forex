{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\adjust\\esm\\adjusts\\symmetric.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\adjust\\esm\\adjusts\\symmetric.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __assign, __extends } from \"tslib\";\r\nimport * as _ from '@antv/util';\r\nimport Adjust from './adjust';\r\nvar Symmetric = (function (_super) {\r\n    __extends(Symmetric, _super);\r\n    function Symmetric() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Symmetric.prototype.process = function (groupDataArray) {\r\n        var mergeData = _.flatten(groupDataArray);\r\n        var _a = this, xField = _a.xField, yField = _a.yField;\r\n        var cache = this.getXValuesMaxMap(mergeData);\r\n        var max = Math.max.apply(Math, Object.keys(cache).map(function (key) { return cache[key]; }));\r\n        return _.map(groupDataArray, function (dataArray) {\r\n            return _.map(dataArray, function (data) {\r\n                var _a, _b;\r\n                var yValue = data[yField];\r\n                var xValue = data[xField];\r\n                if (_.isArray(yValue)) {\r\n                    var off_1 = (max - cache[xValue]) / 2;\r\n                    return __assign(__assign({}, data), (_a = {}, _a[yField] = _.map(yValue, function (y) { return off_1 + y; }), _a));\r\n                }\r\n                var offset = (max - yValue) / 2;\r\n                return __assign(__assign({}, data), (_b = {}, _b[yField] = [offset, yValue + offset], _b));\r\n            });\r\n        });\r\n    };\r\n    Symmetric.prototype.getXValuesMaxMap = function (mergeData) {\r\n        var _this = this;\r\n        var _a = this, xField = _a.xField, yField = _a.yField;\r\n        var groupDataArray = _.groupBy(mergeData, function (data) { return data[xField]; });\r\n        return _.mapValues(groupDataArray, function (dataArray) { return _this.getDimMaxValue(dataArray, yField); });\r\n    };\r\n    Symmetric.prototype.getDimMaxValue = function (mergeData, dim) {\r\n        var dimValues = _.map(mergeData, function (data) { return _.get(data, dim, []); });\r\n        var flattenValues = _.flatten(dimValues);\r\n        return Math.max.apply(Math, flattenValues);\r\n    };\r\n    return Symmetric;\r\n}(Adjust));\r\nexport default Symmetric;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\adjust\\esm\\adjusts\\symmetric.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\adjust\\esm\\adjusts\\symmetric.js"],"names":[],"mappings":"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","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport * as _ from '@antv/util';\nimport Adjust from './adjust';\nvar Symmetric = /** @class */ (function (_super) {\n    __extends(Symmetric, _super);\n    function Symmetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Symmetric.prototype.process = function (groupDataArray) {\n        var mergeData = _.flatten(groupDataArray);\n        var _a = this, xField = _a.xField, yField = _a.yField;\n        // 每个 x 值对应的 最大值\n        var cache = this.getXValuesMaxMap(mergeData);\n        // 所有数据的最大的值\n        var max = Math.max.apply(Math, Object.keys(cache).map(function (key) { return cache[key]; }));\n        return _.map(groupDataArray, function (dataArray) {\n            return _.map(dataArray, function (data) {\n                var _a, _b;\n                var yValue = data[yField];\n                var xValue = data[xField];\n                // 数组处理逻辑\n                if (_.isArray(yValue)) {\n                    var off_1 = (max - cache[xValue]) / 2;\n                    return __assign(__assign({}, data), (_a = {}, _a[yField] = _.map(yValue, function (y) { return off_1 + y; }), _a));\n                }\n                // 非数组处理逻辑\n                var offset = (max - yValue) / 2;\n                return __assign(__assign({}, data), (_b = {}, _b[yField] = [offset, yValue + offset], _b));\n            });\n        });\n    };\n    // 获取每个 x 对应的最大的值\n    Symmetric.prototype.getXValuesMaxMap = function (mergeData) {\n        var _this = this;\n        var _a = this, xField = _a.xField, yField = _a.yField;\n        // 根据 xField 的值进行分组\n        var groupDataArray = _.groupBy(mergeData, function (data) { return data[xField]; });\n        // 获取每个 xField 值中的最大值\n        return _.mapValues(groupDataArray, function (dataArray) { return _this.getDimMaxValue(dataArray, yField); });\n    };\n    Symmetric.prototype.getDimMaxValue = function (mergeData, dim) {\n        // 所有的 value 值\n        var dimValues = _.map(mergeData, function (data) { return _.get(data, dim, []); });\n        // 将数组打平（dim value 有可能是数组，比如 stack 之后的）\n        var flattenValues = _.flatten(dimValues);\n        // 求出数组的最大值\n        return Math.max.apply(Math, flattenValues);\n    };\n    return Symmetric;\n}(Adjust));\nexport default Symmetric;\n//# sourceMappingURL=symmetric.js.map"]}]}