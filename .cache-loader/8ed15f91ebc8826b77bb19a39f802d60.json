{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/geometry/label/pie.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/geometry/label/pie.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { __assign, __extends } from \"tslib\";\nimport { get, isArray } from '@antv/util';\nimport { getAngleByPoint } from '../../util/coordinate';\nimport { polarToCartesian } from '../../util/graphics';\nimport PolarLabel from './polar';\nvar PieLabel = (function (_super) {\n    __extends(PieLabel, _super);\n    function PieLabel(geometry) {\n        var _this = _super.call(this, geometry) || this;\n        _this.defaultLayout = 'distribute';\n        return _this;\n    }\n    PieLabel.prototype.getDefaultLabelCfg = function () {\n        return get(this.geometry.theme, 'pieLabels', {});\n    };\n    PieLabel.prototype.getDefaultOffset = function (offset) {\n        return offset || 0;\n    };\n    PieLabel.prototype.getLabelRotate = function (angle, offset, isLabelLimit) {\n        var rotate;\n        if (offset < 0) {\n            rotate = angle;\n            if (rotate > Math.PI / 2) {\n                rotate = rotate - Math.PI;\n            }\n            if (rotate < -Math.PI / 2) {\n                rotate = rotate + Math.PI;\n            }\n        }\n        return rotate;\n    };\n    PieLabel.prototype.getLabelAlign = function (point) {\n        var coordinate = this.getCoordinate();\n        var center = coordinate.getCenter();\n        var align;\n        if (point.angle <= Math.PI / 2 && point.x >= center.x) {\n            align = 'left';\n        }\n        else {\n            align = 'right';\n        }\n        var offset = this.getDefaultOffset(point.offset);\n        if (offset <= 0) {\n            if (align === 'right') {\n                align = 'left';\n            }\n            else {\n                align = 'right';\n            }\n        }\n        return align;\n    };\n    PieLabel.prototype.getArcPoint = function (point) {\n        return point;\n    };\n    PieLabel.prototype.getPointAngle = function (point) {\n        var coordinate = this.getCoordinate();\n        var startPoint = {\n            x: isArray(point.x) ? point.x[0] : point.x,\n            y: point.y[0],\n        };\n        var endPoint = {\n            x: isArray(point.x) ? point.x[1] : point.x,\n            y: point.y[1],\n        };\n        var angle;\n        var startAngle = getAngleByPoint(coordinate, startPoint);\n        if (point.points && point.points[0].y === point.points[1].y) {\n            angle = startAngle;\n        }\n        else {\n            var endAngle = getAngleByPoint(coordinate, endPoint);\n            if (startAngle >= endAngle) {\n                endAngle = endAngle + Math.PI * 2;\n            }\n            angle = startAngle + (endAngle - startAngle) / 2;\n        }\n        return angle;\n    };\n    PieLabel.prototype.getCirclePoint = function (angle, offset, p) {\n        var coordinate = this.getCoordinate();\n        var center = coordinate.getCenter();\n        var r = coordinate.getRadius() + offset;\n        return __assign(__assign({}, polarToCartesian(center.x, center.y, r, angle)), { angle: angle,\n            r: r });\n    };\n    return PieLabel;\n}(PolarLabel));\nexport default PieLabel;\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/geometry/label/pie.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/geometry/label/pie.js"],"names":[],"mappings":"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","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { get, isArray } from '@antv/util';\nimport { getAngleByPoint } from '../../util/coordinate';\nimport { polarToCartesian } from '../../util/graphics';\nimport PolarLabel from './polar';\n/**\n * 饼图 label\n */\nvar PieLabel = /** @class */ (function (_super) {\n    __extends(PieLabel, _super);\n    function PieLabel(geometry) {\n        var _this = _super.call(this, geometry) || this;\n        _this.defaultLayout = 'distribute';\n        return _this;\n    }\n    PieLabel.prototype.getDefaultLabelCfg = function () {\n        return get(this.geometry.theme, 'pieLabels', {});\n    };\n    PieLabel.prototype.getDefaultOffset = function (offset) {\n        return offset || 0;\n    };\n    PieLabel.prototype.getLabelRotate = function (angle, offset, isLabelLimit) {\n        var rotate;\n        if (offset < 0) {\n            rotate = angle;\n            if (rotate > Math.PI / 2) {\n                rotate = rotate - Math.PI;\n            }\n            if (rotate < -Math.PI / 2) {\n                rotate = rotate + Math.PI;\n            }\n        }\n        return rotate;\n    };\n    PieLabel.prototype.getLabelAlign = function (point) {\n        var coordinate = this.getCoordinate();\n        var center = coordinate.getCenter();\n        var align;\n        if (point.angle <= Math.PI / 2 && point.x >= center.x) {\n            align = 'left';\n        }\n        else {\n            align = 'right';\n        }\n        var offset = this.getDefaultOffset(point.offset);\n        if (offset <= 0) {\n            if (align === 'right') {\n                align = 'left';\n            }\n            else {\n                align = 'right';\n            }\n        }\n        return align;\n    };\n    PieLabel.prototype.getArcPoint = function (point) {\n        return point;\n    };\n    PieLabel.prototype.getPointAngle = function (point) {\n        var coordinate = this.getCoordinate();\n        var startPoint = {\n            x: isArray(point.x) ? point.x[0] : point.x,\n            y: point.y[0],\n        };\n        var endPoint = {\n            x: isArray(point.x) ? point.x[1] : point.x,\n            y: point.y[1],\n        };\n        var angle;\n        var startAngle = getAngleByPoint(coordinate, startPoint);\n        if (point.points && point.points[0].y === point.points[1].y) {\n            angle = startAngle;\n        }\n        else {\n            var endAngle = getAngleByPoint(coordinate, endPoint);\n            if (startAngle >= endAngle) {\n                // 100% pie slice\n                endAngle = endAngle + Math.PI * 2;\n            }\n            angle = startAngle + (endAngle - startAngle) / 2;\n        }\n        return angle;\n    };\n    PieLabel.prototype.getCirclePoint = function (angle, offset, p) {\n        var coordinate = this.getCoordinate();\n        var center = coordinate.getCenter();\n        var r = coordinate.getRadius() + offset;\n        return __assign(__assign({}, polarToCartesian(center.x, center.y, r, angle)), { angle: angle,\n            r: r });\n    };\n    return PieLabel;\n}(PolarLabel));\nexport default PieLabel;\n//# sourceMappingURL=pie.js.map"]}]}