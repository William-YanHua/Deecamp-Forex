{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\geom\\mixin\\size.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\geom\\mixin\\size.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["var Global = require('../../global');\r\nvar Util = require('../../util');\r\nfunction findMinDistance(arr, scale) {\r\n    var count = arr.length;\r\n    if (Util.isString(arr[0])) {\r\n        arr = arr.map(function (v) {\r\n            return scale.translate(v);\r\n        });\r\n    }\r\n    var distance = arr[1] - arr[0];\r\n    for (var i = 2; i < count; i++) {\r\n        var tmp = arr[i] - arr[i - 1];\r\n        if (distance > tmp) {\r\n            distance = tmp;\r\n        }\r\n    }\r\n    return distance;\r\n}\r\nvar SizeMixin = {\r\n    getDefaultSize: function getDefaultSize() {\r\n        var defaultSize = this.get('defaultSize');\r\n        var viewTheme = this.get('viewTheme') || Global;\r\n        if (!defaultSize) {\r\n            var coord = this.get('coord');\r\n            var xScale = this.getXScale();\r\n            var xValues = xScale.values;\r\n            var dataArray = this.get('dataArray');\r\n            var count;\r\n            if (xScale.isLinear && xValues.length > 1) {\r\n                xValues.sort();\r\n                var interval = findMinDistance(xValues, xScale);\r\n                count = (xScale.max - xScale.min) / interval;\r\n                if (xValues.length > count) {\r\n                    count = xValues.length;\r\n                }\r\n            }\r\n            else {\r\n                count = xValues.length;\r\n            }\r\n            var range = xScale.range;\r\n            var normalizeSize = 1 / count;\r\n            var widthRatio = 1;\r\n            if (this.isInCircle()) {\r\n                if (coord.isTransposed && count > 1) {\r\n                    widthRatio = viewTheme.widthRatio.multiplePie;\r\n                }\r\n                else {\r\n                    widthRatio = viewTheme.widthRatio.rose;\r\n                }\r\n            }\r\n            else {\r\n                if (xScale.isLinear) {\r\n                    normalizeSize *= range[1] - range[0];\r\n                }\r\n                widthRatio = viewTheme.widthRatio.column;\r\n            }\r\n            normalizeSize *= widthRatio;\r\n            if (this.hasAdjust('dodge')) {\r\n                var dodgeCount = this._getDodgeCount(dataArray);\r\n                normalizeSize = normalizeSize / dodgeCount;\r\n            }\r\n            defaultSize = normalizeSize;\r\n            this.set('defaultSize', defaultSize);\r\n        }\r\n        return defaultSize;\r\n    },\r\n    _getDodgeCount: function _getDodgeCount(dataArray) {\r\n        var adjusts = this.get('adjusts');\r\n        var dodgeBy;\r\n        var count = dataArray.length;\r\n        Util.each(adjusts, function (adjust) {\r\n            if (adjust.type === 'dodge') {\r\n                dodgeBy = adjust.dodgeBy;\r\n            }\r\n        });\r\n        if (dodgeBy) {\r\n            var mergeData = Util.Array.merge(dataArray);\r\n            var values = Util.Array.values(mergeData, dodgeBy);\r\n            count = values.length;\r\n        }\r\n        return count;\r\n    },\r\n    getDimWidth: function getDimWidth(dimName) {\r\n        var coord = this.get('coord');\r\n        var start = coord.convertPoint({\r\n            x: 0,\r\n            y: 0\r\n        });\r\n        var end = coord.convertPoint({\r\n            x: dimName === 'x' ? 1 : 0,\r\n            y: dimName === 'x' ? 0 : 1\r\n        });\r\n        var width = 0;\r\n        if (start && end) {\r\n            width = Math.sqrt(Math.pow(end.x - start.x, 2) + Math.pow(end.y - start.y, 2));\r\n        }\r\n        return width;\r\n    },\r\n    _getWidth: function _getWidth() {\r\n        var coord = this.get('coord');\r\n        var width;\r\n        if (this.isInCircle() && !coord.isTransposed) {\r\n            width = (coord.endAngle - coord.startAngle) * coord.radius;\r\n        }\r\n        else {\r\n            width = this.getDimWidth('x');\r\n        }\r\n        return width;\r\n    },\r\n    _toNormalizedSize: function _toNormalizedSize(size) {\r\n        var width = this._getWidth();\r\n        return size / width;\r\n    },\r\n    _toCoordSize: function _toCoordSize(normalizeSize) {\r\n        var width = this._getWidth();\r\n        return width * normalizeSize;\r\n    },\r\n    getNormalizedSize: function getNormalizedSize(obj) {\r\n        var size = this.getAttrValue('size', obj);\r\n        if (Util.isNil(size)) {\r\n            size = this.getDefaultSize();\r\n        }\r\n        else {\r\n            size = this._toNormalizedSize(size);\r\n        }\r\n        return size;\r\n    },\r\n    getSize: function getSize(obj) {\r\n        var size = this.getAttrValue('size', obj);\r\n        if (Util.isNil(size)) {\r\n            var normalizeSize = this.getDefaultSize();\r\n            size = this._toCoordSize(normalizeSize);\r\n        }\r\n        return size;\r\n    }\r\n};\r\nmodule.exports = SizeMixin;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\geom\\mixin\\size.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\geom\\mixin\\size.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * @fileOverview 需要计算所占x轴上的宽度的辅助类\n * @author sima.zhang1990@gmail.com\n * @author dxq613@gmail.com\n */\nvar Global = require('../../global');\n\nvar Util = require('../../util'); // 已经排序后的数据查找距离最小的\n\n\nfunction findMinDistance(arr, scale) {\n  var count = arr.length; // 日期类型的 values 经常上文本类型，所以需要转换一下\n\n  if (Util.isString(arr[0])) {\n    arr = arr.map(function (v) {\n      return scale.translate(v);\n    });\n  }\n\n  var distance = arr[1] - arr[0];\n\n  for (var i = 2; i < count; i++) {\n    var tmp = arr[i] - arr[i - 1];\n\n    if (distance > tmp) {\n      distance = tmp;\n    }\n  }\n\n  return distance;\n}\n\nvar SizeMixin = {\n  getDefaultSize: function getDefaultSize() {\n    var defaultSize = this.get('defaultSize');\n    var viewTheme = this.get('viewTheme') || Global;\n\n    if (!defaultSize) {\n      var coord = this.get('coord');\n      var xScale = this.getXScale();\n      var xValues = xScale.values;\n      var dataArray = this.get('dataArray');\n      var count;\n\n      if (xScale.isLinear && xValues.length > 1) {\n        xValues.sort();\n        var interval = findMinDistance(xValues, xScale);\n        count = (xScale.max - xScale.min) / interval;\n\n        if (xValues.length > count) {\n          count = xValues.length;\n        }\n      } else {\n        count = xValues.length;\n      }\n\n      var range = xScale.range;\n      var normalizeSize = 1 / count;\n      var widthRatio = 1;\n\n      if (this.isInCircle()) {\n        if (coord.isTransposed && count > 1) {\n          // 极坐标下多层环图\n          widthRatio = viewTheme.widthRatio.multiplePie;\n        } else {\n          widthRatio = viewTheme.widthRatio.rose;\n        }\n        /* if (dataArray.length > 1) {\n          normalizeSize *= (range[1] - range[0]);\n        } */\n\n      } else {\n        if (xScale.isLinear) {\n          normalizeSize *= range[1] - range[0];\n        }\n\n        widthRatio = viewTheme.widthRatio.column; // 柱状图要除以2\n      }\n\n      normalizeSize *= widthRatio;\n\n      if (this.hasAdjust('dodge')) {\n        var dodgeCount = this._getDodgeCount(dataArray);\n\n        normalizeSize = normalizeSize / dodgeCount;\n      }\n\n      defaultSize = normalizeSize;\n      this.set('defaultSize', defaultSize);\n    }\n\n    return defaultSize;\n  },\n  _getDodgeCount: function _getDodgeCount(dataArray) {\n    var adjusts = this.get('adjusts');\n    var dodgeBy;\n    var count = dataArray.length;\n    Util.each(adjusts, function (adjust) {\n      if (adjust.type === 'dodge') {\n        dodgeBy = adjust.dodgeBy;\n      }\n    });\n\n    if (dodgeBy) {\n      var mergeData = Util.Array.merge(dataArray);\n      var values = Util.Array.values(mergeData, dodgeBy);\n      count = values.length;\n    }\n\n    return count;\n  },\n  getDimWidth: function getDimWidth(dimName) {\n    var coord = this.get('coord');\n    var start = coord.convertPoint({\n      x: 0,\n      y: 0\n    });\n    var end = coord.convertPoint({\n      x: dimName === 'x' ? 1 : 0,\n      y: dimName === 'x' ? 0 : 1\n    });\n    var width = 0;\n\n    if (start && end) {\n      width = Math.sqrt(Math.pow(end.x - start.x, 2) + Math.pow(end.y - start.y, 2));\n    }\n\n    return width;\n  },\n  _getWidth: function _getWidth() {\n    var coord = this.get('coord');\n    var width; // x轴的长度\n\n    if (this.isInCircle() && !coord.isTransposed) {\n      // 极坐标下 width 为弧长\n      width = (coord.endAngle - coord.startAngle) * coord.radius;\n    } else {\n      width = this.getDimWidth('x'); // 不需要判断transpose\n    }\n\n    return width;\n  },\n  _toNormalizedSize: function _toNormalizedSize(size) {\n    var width = this._getWidth();\n\n    return size / width;\n  },\n  _toCoordSize: function _toCoordSize(normalizeSize) {\n    var width = this._getWidth();\n\n    return width * normalizeSize;\n  },\n  getNormalizedSize: function getNormalizedSize(obj) {\n    var size = this.getAttrValue('size', obj);\n\n    if (Util.isNil(size)) {\n      size = this.getDefaultSize();\n    } else {\n      size = this._toNormalizedSize(size);\n    }\n\n    return size;\n  },\n  getSize: function getSize(obj) {\n    var size = this.getAttrValue('size', obj);\n\n    if (Util.isNil(size)) {\n      var normalizeSize = this.getDefaultSize();\n      size = this._toCoordSize(normalizeSize);\n    }\n\n    return size;\n  }\n};\nmodule.exports = SizeMixin;"]}]}