{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\util\\responsive\\rules\\datetime-string-abbrevaite.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\util\\responsive\\rules\\datetime-string-abbrevaite.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { each } from '@antv/util';\r\nimport fecha from 'fecha';\r\nvar SECOND = 1000;\r\nvar MINUTE = 60 * SECOND;\r\nvar HOUR = 60 * MINUTE;\r\nvar DAY = 24 * HOUR;\r\nvar MONTH = 31 * DAY;\r\nvar YEAR = 365 * DAY;\r\nexport default function datetimeStringAbbrevaite(shape, option, index, cfg) {\r\n    var nodes = cfg.nodes.nodes;\r\n    var campareText;\r\n    if (index === nodes.length - 1) {\r\n        campareText = nodes[index - 1].shape.get('delegateObject').item.name;\r\n    }\r\n    else {\r\n        campareText = nodes[index + 1].shape.get('delegateObject').item.name;\r\n    }\r\n    var compare = new Date(campareText);\r\n    var text = shape.get('delegateObject').item.name;\r\n    var current = new Date(text);\r\n    var startText = nodes[0].shape.get('delegateObject').item.name;\r\n    var start = new Date(startText);\r\n    var endText = nodes[nodes.length - 1].shape.get('delegateObject').item.name;\r\n    var end = new Date(endText);\r\n    var timeDuration = getDateTimeMode(start, end);\r\n    var timeCycle = getDateTimeMode(current, compare);\r\n    if (timeDuration === timeCycle) {\r\n        if (index !== 0 && index !== nodes.length - 1) {\r\n            var formatter = sameSectionFormatter(timeDuration);\r\n            shape.attr('text', fecha.format(current, formatter));\r\n        }\r\n        return;\r\n    }\r\n    if (index !== 0) {\r\n        var previousText = nodes[index - 1].shape.get('delegateObject').item.name;\r\n        var previous = new Date(previousText);\r\n        var isAbbreviate = needAbbrevaite(timeDuration, current, previous);\r\n        if (isAbbreviate) {\r\n            var formatter = getAbbrevaiteFormatter(timeDuration, timeCycle);\r\n            shape.attr('text', fecha.format(current, formatter));\r\n            return;\r\n        }\r\n    }\r\n}\r\nfunction needAbbrevaite(mode, current, previous) {\r\n    var currentStamp = getTime(current, mode);\r\n    var previousStamp = getTime(previous, mode);\r\n    if (currentStamp !== previousStamp) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nfunction getDateTimeMode(a, b) {\r\n    var mode;\r\n    var dist = Math.abs(a - b);\r\n    var mapper = {\r\n        minute: [MINUTE, HOUR],\r\n        hour: [HOUR, DAY],\r\n        day: [DAY, MONTH],\r\n        month: [MONTH, YEAR],\r\n        year: [YEAR, Infinity],\r\n    };\r\n    each(mapper, function (range, key) {\r\n        if (dist >= range[0] && dist < range[1]) {\r\n            mode = key;\r\n        }\r\n    });\r\n    return mode;\r\n}\r\nfunction getAbbrevaiteFormatter(duration, cycle) {\r\n    var times = ['year', 'month', 'day', 'hour', 'minute'];\r\n    var formatters = ['YYYY', 'MM', 'DD', 'HH', 'MM'];\r\n    var startIndex = times.indexOf(duration) + 1;\r\n    var endIndex = times.indexOf(cycle);\r\n    var formatter = '';\r\n    for (var i = startIndex; i <= endIndex; i++) {\r\n        formatter += formatters[i];\r\n        if (i < endIndex) {\r\n            formatter += '-';\r\n        }\r\n    }\r\n    return formatter;\r\n}\r\nfunction sameSectionFormatter(mode) {\r\n    var times = ['year', 'month', 'day', 'hour', 'minute'];\r\n    var formatters = ['YYYY', 'MM', 'DD', 'HH', 'MM'];\r\n    var index = times.indexOf(mode);\r\n    var formatter = formatters[index];\r\n    return formatter;\r\n}\r\nfunction getTime(date, mode) {\r\n    if (mode === 'year') {\r\n        return date.getFullYear();\r\n    }\r\n    if (mode === 'month') {\r\n        return date.getMonth() + 1;\r\n    }\r\n    if (mode === 'day') {\r\n        return date.getDay() + 1;\r\n    }\r\n    if (mode === 'hour') {\r\n        return date.getHours() + 1;\r\n    }\r\n    if (mode === 'minute') {\r\n        return date.getMinutes() + 1;\r\n    }\r\n}\r\nexport function isTime(string) {\r\n    var hourminExp = /^(?:(?:[0-2][0-3])|(?:[01]\\d)):[0-5]\\d$/;\r\n    var hourminSecExp = /^(?:(?:[0-2][0-3])|(?:[01]\\d))(?::[0-5]\\d){2}$/;\r\n    return hourminExp.test(string) || hourminSecExp.test(string);\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\util\\responsive\\rules\\datetime-string-abbrevaite.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\util\\responsive\\rules\\datetime-string-abbrevaite.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,YAAY,CAAC;AAClC,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,IAAI,MAAM,GAAG,IAAI,CAAC;AAClB,IAAI,MAAM,GAAG,EAAE,GAAG,MAAM,CAAC;AACzB,IAAI,IAAI,GAAG,EAAE,GAAG,MAAM,CAAC;AACvB,IAAI,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC;AACpB,IAAI,KAAK,GAAG,EAAE,GAAG,GAAG,CAAC;AACrB,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC;AACrB,MAAM,CAAC,OAAO,UAAU,wBAAwB,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG;IACtE,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;IAC5B,IAAI,WAAW,CAAC;IAChB,IAAI,KAAK,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;QAC5B,WAAW,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;KACxE;SACI;QACD,WAAW,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;KACxE;IACD,IAAI,OAAO,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC;IAEpC,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;IACjD,IAAI,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,IAAI,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;IAC/D,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;IAChC,IAAI,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;IAC5E,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5B,IAAI,YAAY,GAAG,eAAe,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAC/C,IAAI,SAAS,GAAG,eAAe,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAElD,IAAI,YAAY,KAAK,SAAS,EAAE;QAC5B,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YAC3C,IAAI,SAAS,GAAG,oBAAoB,CAAC,YAAY,CAAC,CAAC;YACnD,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC,CAAC;SACxD;QACD,OAAO;KACV;IACD,IAAI,KAAK,KAAK,CAAC,EAAE;QACb,IAAI,YAAY,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;QAC1E,IAAI,QAAQ,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC;QACtC,IAAI,YAAY,GAAG,cAAc,CAAC,YAAY,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;QACnE,IAAI,YAAY,EAAE;YACd,IAAI,SAAS,GAAG,sBAAsB,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;YAChE,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC,CAAC;YACrD,OAAO;SACV;KACJ;AACL,CAAC;AACD,SAAS,cAAc,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ;IAC3C,IAAI,YAAY,GAAG,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IAC1C,IAAI,aAAa,GAAG,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC5C,IAAI,YAAY,KAAK,aAAa,EAAE;QAChC,OAAO,KAAK,CAAC;KAChB;IACD,OAAO,IAAI,CAAC;AAChB,CAAC;AACD,SAAS,eAAe,CAAC,CAAC,EAAE,CAAC;IACzB,IAAI,IAAI,CAAC;IACT,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC3B,IAAI,MAAM,GAAG;QACT,MAAM,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC;QACtB,IAAI,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC;QACjB,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC;QACjB,KAAK,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC;QACpB,IAAI,EAAE,CAAC,IAAI,EAAE,QAAQ,CAAC;KACzB,CAAC;IACF,IAAI,CAAC,MAAM,EAAE,UAAU,KAAK,EAAE,GAAG;QAC7B,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE;YACrC,IAAI,GAAG,GAAG,CAAC;SACd;IACL,CAAC,CAAC,CAAC;IACH,OAAO,IAAI,CAAC;AAChB,CAAC;AACD,SAAS,sBAAsB,CAAC,QAAQ,EAAE,KAAK;IAC3C,IAAI,KAAK,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;IACvD,IAAI,UAAU,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAClD,IAAI,UAAU,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IAC7C,IAAI,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACpC,IAAI,SAAS,GAAG,EAAE,CAAC;IACnB,KAAK,IAAI,CAAC,GAAG,UAAU,EAAE,CAAC,IAAI,QAAQ,EAAE,CAAC,EAAE,EAAE;QACzC,SAAS,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAC3B,IAAI,CAAC,GAAG,QAAQ,EAAE;YACd,SAAS,IAAI,GAAG,CAAC;SACpB;KACJ;IACD,OAAO,SAAS,CAAC;AACrB,CAAC;AACD,SAAS,oBAAoB,CAAC,IAAI;IAC9B,IAAI,KAAK,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;IACvD,IAAI,UAAU,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAClD,IAAI,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAChC,IAAI,SAAS,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;IAClC,OAAO,SAAS,CAAC;AACrB,CAAC;AACD,SAAS,OAAO,CAAC,IAAI,EAAE,IAAI;IACvB,IAAI,IAAI,KAAK,MAAM,EAAE;QACjB,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;KAC7B;IACD,IAAI,IAAI,KAAK,OAAO,EAAE;QAClB,OAAO,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;KAC9B;IACD,IAAI,IAAI,KAAK,KAAK,EAAE;QAChB,OAAO,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;KAC5B;IACD,IAAI,IAAI,KAAK,MAAM,EAAE;QACjB,OAAO,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;KAC9B;IACD,IAAI,IAAI,KAAK,QAAQ,EAAE;QACnB,OAAO,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;KAChC;AACL,CAAC;AAED,MAAM,UAAU,MAAM,CAAC,MAAM;IACzB,IAAI,UAAU,GAAG,yCAAyC,CAAC;IAC3D,IAAI,aAAa,GAAG,gDAAgD,CAAC;IACrE,OAAO,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjE,CAAC","sourcesContent":["import { each } from '@antv/util';\nimport fecha from 'fecha';\nvar SECOND = 1000;\nvar MINUTE = 60 * SECOND;\nvar HOUR = 60 * MINUTE;\nvar DAY = 24 * HOUR;\nvar MONTH = 31 * DAY;\nvar YEAR = 365 * DAY;\nexport default function datetimeStringAbbrevaite(shape, option, index, cfg) {\n    var nodes = cfg.nodes.nodes;\n    var campareText;\n    if (index === nodes.length - 1) {\n        campareText = nodes[index - 1].shape.get('delegateObject').item.name;\n    }\n    else {\n        campareText = nodes[index + 1].shape.get('delegateObject').item.name;\n    }\n    var compare = new Date(campareText);\n    /** 获取时间周期和时间间隔 */\n    var text = shape.get('delegateObject').item.name;\n    var current = new Date(text);\n    var startText = nodes[0].shape.get('delegateObject').item.name;\n    var start = new Date(startText);\n    var endText = nodes[nodes.length - 1].shape.get('delegateObject').item.name;\n    var end = new Date(endText);\n    var timeDuration = getDateTimeMode(start, end);\n    var timeCycle = getDateTimeMode(current, compare); // time frequency\n    // 如果duration和frequency在同一区间\n    if (timeDuration === timeCycle) {\n        if (index !== 0 && index !== nodes.length - 1) {\n            var formatter = sameSectionFormatter(timeDuration);\n            shape.attr('text', fecha.format(current, formatter));\n        }\n        return;\n    }\n    if (index !== 0) {\n        var previousText = nodes[index - 1].shape.get('delegateObject').item.name;\n        var previous = new Date(previousText);\n        var isAbbreviate = needAbbrevaite(timeDuration, current, previous);\n        if (isAbbreviate) {\n            var formatter = getAbbrevaiteFormatter(timeDuration, timeCycle);\n            shape.attr('text', fecha.format(current, formatter));\n            return;\n        }\n    }\n}\nfunction needAbbrevaite(mode, current, previous) {\n    var currentStamp = getTime(current, mode);\n    var previousStamp = getTime(previous, mode);\n    if (currentStamp !== previousStamp) {\n        return false;\n    }\n    return true;\n}\nfunction getDateTimeMode(a, b) {\n    var mode;\n    var dist = Math.abs(a - b);\n    var mapper = {\n        minute: [MINUTE, HOUR],\n        hour: [HOUR, DAY],\n        day: [DAY, MONTH],\n        month: [MONTH, YEAR],\n        year: [YEAR, Infinity],\n    };\n    each(mapper, function (range, key) {\n        if (dist >= range[0] && dist < range[1]) {\n            mode = key;\n        }\n    });\n    return mode;\n}\nfunction getAbbrevaiteFormatter(duration, cycle) {\n    var times = ['year', 'month', 'day', 'hour', 'minute'];\n    var formatters = ['YYYY', 'MM', 'DD', 'HH', 'MM'];\n    var startIndex = times.indexOf(duration) + 1;\n    var endIndex = times.indexOf(cycle);\n    var formatter = '';\n    for (var i = startIndex; i <= endIndex; i++) {\n        formatter += formatters[i];\n        if (i < endIndex) {\n            formatter += '-';\n        }\n    }\n    return formatter;\n}\nfunction sameSectionFormatter(mode) {\n    var times = ['year', 'month', 'day', 'hour', 'minute'];\n    var formatters = ['YYYY', 'MM', 'DD', 'HH', 'MM'];\n    var index = times.indexOf(mode);\n    var formatter = formatters[index];\n    return formatter;\n}\nfunction getTime(date, mode) {\n    if (mode === 'year') {\n        return date.getFullYear();\n    }\n    if (mode === 'month') {\n        return date.getMonth() + 1;\n    }\n    if (mode === 'day') {\n        return date.getDay() + 1;\n    }\n    if (mode === 'hour') {\n        return date.getHours() + 1;\n    }\n    if (mode === 'minute') {\n        return date.getMinutes() + 1;\n    }\n}\n/*tslint:disable*/\nexport function isTime(string) {\n    var hourminExp = /^(?:(?:[0-2][0-3])|(?:[01]\\d)):[0-5]\\d$/;\n    var hourminSecExp = /^(?:(?:[0-2][0-3])|(?:[01]\\d))(?::[0-5]\\d){2}$/;\n    return hourminExp.test(string) || hourminSecExp.test(string);\n}\n//# sourceMappingURL=datetime-string-abbrevaite.js.map"]}]}