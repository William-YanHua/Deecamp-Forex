{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/geometry/shape/polygon/square.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/geometry/shape/polygon/square.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { __assign } from \"tslib\";\nimport { isEmpty, clamp } from '@antv/util';\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\nfunction getRectAttrs(points, size) {\n    var width = Math.abs(points[0].x - points[2].x);\n    var height = Math.abs(points[0].y - points[2].y);\n    var len = Math.min(width, height);\n    if (size) {\n        len = clamp(size, 0, Math.min(width, height));\n    }\n    len = len / 2;\n    var centerX = (points[0].x + points[2].x) / 2;\n    var centerY = (points[0].y + points[2].y) / 2;\n    return {\n        x: centerX - len,\n        y: centerY - len,\n        width: len * 2,\n        height: len * 2,\n    };\n}\nregisterShape('polygon', 'square', {\n    draw: function (cfg, container) {\n        if (!isEmpty(cfg.points)) {\n            var shapeAttrs = getStyle(cfg, true, true);\n            var points = this.parsePoints(cfg.points);\n            return container.addShape('rect', {\n                attrs: __assign(__assign({}, shapeAttrs), getRectAttrs(points, cfg.size)),\n                name: 'polygon',\n            });\n        }\n    },\n    getMarker: function (markerCfg) {\n        var color = markerCfg.color;\n        return {\n            symbol: 'square',\n            style: {\n                r: 4,\n                fill: color,\n            },\n        };\n    },\n});\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/geometry/shape/polygon/square.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/geometry/shape/polygon/square.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACjC,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,YAAY,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,MAAM,SAAS,CAAC;AACxC,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC7C,SAAS,YAAY,CAAC,MAAM,EAAE,IAAI;IAC9B,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChD,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjD,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAClC,IAAI,IAAI,EAAE;QACN,GAAG,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;KACjD;IACD,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;IACd,IAAI,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC9C,IAAI,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC9C,OAAO;QACH,CAAC,EAAE,OAAO,GAAG,GAAG;QAChB,CAAC,EAAE,OAAO,GAAG,GAAG;QAChB,KAAK,EAAE,GAAG,GAAG,CAAC;QACd,MAAM,EAAE,GAAG,GAAG,CAAC;KAClB,CAAC;AACN,CAAC;AACD,aAAa,CAAC,SAAS,EAAE,QAAQ,EAAE;IAC/B,IAAI,EAAE,UAAU,GAAG,EAAE,SAAS;QAC1B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;YACtB,IAAI,UAAU,GAAG,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YAC3C,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAC1C,OAAO,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE;gBAC9B,KAAK,EAAE,QAAQ,CAAC,QAAQ,CAAC,EAAE,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;gBACzE,IAAI,EAAE,SAAS;aAClB,CAAC,CAAC;SACN;IACL,CAAC;IACD,SAAS,EAAE,UAAU,SAAS;QAC1B,IAAI,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;QAC5B,OAAO;YACH,MAAM,EAAE,QAAQ;YAChB,KAAK,EAAE;gBACH,CAAC,EAAE,CAAC;gBACJ,IAAI,EAAE,KAAK;aACd;SACJ,CAAC;IACN,CAAC;CACJ,CAAC,CAAC","sourcesContent":["import { __assign } from \"tslib\";\nimport { isEmpty, clamp } from '@antv/util';\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\nfunction getRectAttrs(points, size) {\n    var width = Math.abs(points[0].x - points[2].x);\n    var height = Math.abs(points[0].y - points[2].y);\n    var len = Math.min(width, height);\n    if (size) {\n        len = clamp(size, 0, Math.min(width, height));\n    }\n    len = len / 2;\n    var centerX = (points[0].x + points[2].x) / 2;\n    var centerY = (points[0].y + points[2].y) / 2;\n    return {\n        x: centerX - len,\n        y: centerY - len,\n        width: len * 2,\n        height: len * 2,\n    };\n}\nregisterShape('polygon', 'square', {\n    draw: function (cfg, container) {\n        if (!isEmpty(cfg.points)) {\n            var shapeAttrs = getStyle(cfg, true, true);\n            var points = this.parsePoints(cfg.points); // 转换为画布坐标\n            return container.addShape('rect', {\n                attrs: __assign(__assign({}, shapeAttrs), getRectAttrs(points, cfg.size)),\n                name: 'polygon',\n            });\n        }\n    },\n    getMarker: function (markerCfg) {\n        var color = markerCfg.color;\n        return {\n            symbol: 'square',\n            style: {\n                r: 4,\n                fill: color,\n            },\n        };\n    },\n});\n//# sourceMappingURL=square.js.map"]}]}