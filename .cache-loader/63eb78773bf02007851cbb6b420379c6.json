{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\util\\axis.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\util\\axis.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { get, isBoolean } from '@antv/util';\r\nimport { DIRECTION } from '../constant';\r\nimport { getName } from './scale';\r\nimport { vec2 } from '@antv/matrix-util';\r\nexport function getLineAxisRelativeRegion(direction) {\r\n    var start;\r\n    var end;\r\n    switch (direction) {\r\n        case DIRECTION.TOP:\r\n            start = { x: 0, y: 1 };\r\n            end = { x: 1, y: 1 };\r\n            break;\r\n        case DIRECTION.RIGHT:\r\n            start = { x: 1, y: 0 };\r\n            end = { x: 1, y: 1 };\r\n            break;\r\n        case DIRECTION.BOTTOM:\r\n            start = { x: 0, y: 0 };\r\n            end = { x: 1, y: 0 };\r\n            break;\r\n        case DIRECTION.LEFT:\r\n            start = { x: 0, y: 0 };\r\n            end = { x: 0, y: 1 };\r\n            break;\r\n        default:\r\n            start = end = { x: 0, y: 0 };\r\n    }\r\n    return { start: start, end: end };\r\n}\r\nexport function getCircleAxisRelativeRegion(coordinate) {\r\n    var start;\r\n    var end;\r\n    if (coordinate.isTransposed) {\r\n        start = {\r\n            x: 0,\r\n            y: 0,\r\n        };\r\n        end = {\r\n            x: 1,\r\n            y: 0,\r\n        };\r\n    }\r\n    else {\r\n        start = {\r\n            x: 0,\r\n            y: 0,\r\n        };\r\n        end = {\r\n            x: 0,\r\n            y: 1,\r\n        };\r\n    }\r\n    return { start: start, end: end };\r\n}\r\nexport function getAxisRegion(coordinate, direction) {\r\n    var region = { start: { x: 0, y: 0 }, end: { x: 0, y: 0 } };\r\n    if (coordinate.isRect) {\r\n        region = getLineAxisRelativeRegion(direction);\r\n    }\r\n    else if (coordinate.isPolar) {\r\n        region = getCircleAxisRelativeRegion(coordinate);\r\n    }\r\n    var start = region.start, end = region.end;\r\n    return {\r\n        start: coordinate.convert(start),\r\n        end: coordinate.convert(end),\r\n    };\r\n}\r\nexport function getAxisFactor(coordinate, direction) {\r\n    if (coordinate.isRect) {\r\n        return coordinate.isTransposed\r\n            ? [DIRECTION.RIGHT, DIRECTION.BOTTOM].includes(direction)\r\n                ? 1\r\n                : -1\r\n            : [DIRECTION.BOTTOM, DIRECTION.RIGHT].includes(direction)\r\n                ? -1\r\n                : 1;\r\n    }\r\n    if (coordinate.isPolar) {\r\n        var startAngle = coordinate.x.start;\r\n        return startAngle < 0 ? -1 : 1;\r\n    }\r\n    return 1;\r\n}\r\nexport function isVertical(region) {\r\n    var start = region.start, end = region.end;\r\n    return start.x === end.x;\r\n}\r\nexport function getAxisFactorByRegion(region, center) {\r\n    var start = region.start, end = region.end;\r\n    var isAxisVertical = isVertical(region);\r\n    if (isAxisVertical) {\r\n        if ((start.y - end.y) * (center.x - start.x) > 0) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    }\r\n    else {\r\n        if ((end.x - start.x) * (start.y - center.y) > 0) {\r\n            return -1;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    }\r\n}\r\nexport function getAxisThemeCfg(theme, direction) {\r\n    return get(theme, ['components', 'axis', direction], {});\r\n}\r\nexport function getCircleAxisCenterRadius(coordinate) {\r\n    var x = coordinate.x, y = coordinate.y, center = coordinate.circleCenter;\r\n    var isReflectY = y.start > y.end;\r\n    var start = coordinate.isTransposed\r\n        ? coordinate.convert({\r\n            x: isReflectY ? 0 : 1,\r\n            y: 0,\r\n        })\r\n        : coordinate.convert({\r\n            x: 0,\r\n            y: isReflectY ? 0 : 1,\r\n        });\r\n    var startVector = [start.x - center.x, start.y - center.y];\r\n    var normalVector = [1, 0];\r\n    var startAngle = start.y > center.y ? vec2.angle(startVector, normalVector) : vec2.angle(startVector, normalVector) * -1;\r\n    var endAngle = startAngle + (x.end - x.start);\r\n    var radius = Math.sqrt(Math.pow((start.x - center.x), 2) + Math.pow((start.y - center.y), 2));\r\n    return {\r\n        center: center,\r\n        radius: radius,\r\n        startAngle: startAngle,\r\n        endAngle: endAngle,\r\n    };\r\n}\r\nexport function getAxisOption(axes, field) {\r\n    if (isBoolean(axes)) {\r\n        return axes === false ? false : {};\r\n    }\r\n    return get(axes, [field]);\r\n}\r\nexport function getAxisDirection(axisOption, def) {\r\n    return get(axisOption, 'position', def);\r\n}\r\nexport function getAxisTitleText(scale, axisOption) {\r\n    return get(axisOption, ['title', 'text'], getName(scale));\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\util\\axis.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\util\\axis.js"],"names":[],"mappings":"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","sourcesContent":["import { get, isBoolean } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { getName } from './scale';\nimport { vec2 } from '@antv/matrix-util';\n/**\n * @ignore\n * get axis relative region ( 0 ~ 1) by direction when coordinate is rect\n * @param direction\n * @returns axis coordinate region\n */\nexport function getLineAxisRelativeRegion(direction) {\n    var start;\n    var end;\n    switch (direction) {\n        case DIRECTION.TOP:\n            start = { x: 0, y: 1 };\n            end = { x: 1, y: 1 };\n            break;\n        case DIRECTION.RIGHT:\n            start = { x: 1, y: 0 };\n            end = { x: 1, y: 1 };\n            break;\n        case DIRECTION.BOTTOM:\n            start = { x: 0, y: 0 };\n            end = { x: 1, y: 0 };\n            break;\n        case DIRECTION.LEFT:\n            start = { x: 0, y: 0 };\n            end = { x: 0, y: 1 };\n            break;\n        default:\n            start = end = { x: 0, y: 0 };\n    }\n    return { start: start, end: end };\n}\n/**\n * @ignore\n * get axis relative region ( 0 ~ 1) by direction when coordinate is polar\n * @param coordinate\n * @returns axis coordinate region\n */\nexport function getCircleAxisRelativeRegion(coordinate) {\n    var start;\n    var end;\n    if (coordinate.isTransposed) {\n        start = {\n            x: 0,\n            y: 0,\n        };\n        end = {\n            x: 1,\n            y: 0,\n        };\n    }\n    else {\n        start = {\n            x: 0,\n            y: 0,\n        };\n        end = {\n            x: 0,\n            y: 1,\n        };\n    }\n    return { start: start, end: end };\n}\n/**\n * @ignore\n * get the axis region from coordinate\n * @param coordinate\n * @param direction\n * @returns the axis region (start point, end point)\n */\nexport function getAxisRegion(coordinate, direction) {\n    var region = { start: { x: 0, y: 0 }, end: { x: 0, y: 0 } };\n    if (coordinate.isRect) {\n        region = getLineAxisRelativeRegion(direction);\n    }\n    else if (coordinate.isPolar) {\n        region = getCircleAxisRelativeRegion(coordinate);\n    }\n    var start = region.start, end = region.end;\n    return {\n        start: coordinate.convert(start),\n        end: coordinate.convert(end),\n    };\n}\n/**\n * @ignore\n * get axis factor\n * @param coordinate\n * @param direction\n * @returns factor\n */\nexport function getAxisFactor(coordinate, direction) {\n    // rect coordinate, by direction\n    if (coordinate.isRect) {\n        return coordinate.isTransposed\n            ? [DIRECTION.RIGHT, DIRECTION.BOTTOM].includes(direction)\n                ? 1\n                : -1\n            : [DIRECTION.BOTTOM, DIRECTION.RIGHT].includes(direction)\n                ? -1\n                : 1;\n    }\n    // polar y axis, by angle\n    if (coordinate.isPolar) {\n        var startAngle = coordinate.x.start;\n        return startAngle < 0 ? -1 : 1;\n    }\n    return 1;\n}\n/**\n * @ignore\n * whether the axis isVertical\n * @param region\n * @returns isVertical\n */\nexport function isVertical(region) {\n    var start = region.start, end = region.end;\n    return start.x === end.x;\n}\n/**\n * @ignore\n * get factor by region (real position)\n * @param region\n * @param center\n * @returns factor\n */\nexport function getAxisFactorByRegion(region, center) {\n    var start = region.start, end = region.end;\n    var isAxisVertical = isVertical(region);\n    // 垂直\n    if (isAxisVertical) {\n        // 左方,从下到上、右方,从上到下\n        if ((start.y - end.y) * (center.x - start.x) > 0) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    }\n    else {\n        // 下方,从左到右、上方,从右到做\n        if ((end.x - start.x) * (start.y - center.y) > 0) {\n            return -1;\n        }\n        else {\n            return 1;\n        }\n    }\n}\n/**\n * @ignore\n * get the axis cfg from theme\n * @param theme view theme object\n * @param direction axis direction\n * @returns axis theme cfg\n */\nexport function getAxisThemeCfg(theme, direction) {\n    return get(theme, ['components', 'axis', direction], {});\n}\n/**\n * @ignore\n * get circle axis center and radius\n * @param coordinate\n */\nexport function getCircleAxisCenterRadius(coordinate) {\n    // @ts-ignore\n    var x = coordinate.x, y = coordinate.y, center = coordinate.circleCenter;\n    var isReflectY = y.start > y.end;\n    var start = coordinate.isTransposed\n        ? coordinate.convert({\n            x: isReflectY ? 0 : 1,\n            y: 0,\n        })\n        : coordinate.convert({\n            x: 0,\n            y: isReflectY ? 0 : 1,\n        });\n    var startVector = [start.x - center.x, start.y - center.y];\n    var normalVector = [1, 0];\n    var startAngle = start.y > center.y ? vec2.angle(startVector, normalVector) : vec2.angle(startVector, normalVector) * -1;\n    var endAngle = startAngle + (x.end - x.start);\n    var radius = Math.sqrt(Math.pow((start.x - center.x), 2) + Math.pow((start.y - center.y), 2));\n    return {\n        center: center,\n        radius: radius,\n        startAngle: startAngle,\n        endAngle: endAngle,\n    };\n}\n/**\n * @ignore\n * 从配置中获取单个字段的 axis 配置\n * @param axes\n * @param field\n * @returns the axis option of field\n */\nexport function getAxisOption(axes, field) {\n    if (isBoolean(axes)) {\n        return axes === false ? false : {};\n    }\n    return get(axes, [field]);\n}\n/**\n * @ignore\n * 如果配置了 position，则使用配置\n * @param axisOption\n * @param def\n */\nexport function getAxisDirection(axisOption, def) {\n    return get(axisOption, 'position', def);\n}\n/**\n * 获取 axis 的 title 文本\n * @param scale\n * @param axisOption\n */\nexport function getAxisTitleText(scale, axisOption) {\n    return get(axisOption, ['title', 'text'], getName(scale));\n}\n//# sourceMappingURL=axis.js.map"]}]}