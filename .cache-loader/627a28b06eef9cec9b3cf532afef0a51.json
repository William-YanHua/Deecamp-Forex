{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\dom-align\\es\\align\\align.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\dom-align\\es\\align\\align.js","mtime":1529911611000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import utils from '../utils';\r\nimport getVisibleRectForElement from '../getVisibleRectForElement';\r\nimport adjustForViewport from '../adjustForViewport';\r\nimport getRegion from '../getRegion';\r\nimport getElFuturePos from '../getElFuturePos';\r\nfunction isFailX(elFuturePos, elRegion, visibleRect) {\r\n    return elFuturePos.left < visibleRect.left || elFuturePos.left + elRegion.width > visibleRect.right;\r\n}\r\nfunction isFailY(elFuturePos, elRegion, visibleRect) {\r\n    return elFuturePos.top < visibleRect.top || elFuturePos.top + elRegion.height > visibleRect.bottom;\r\n}\r\nfunction isCompleteFailX(elFuturePos, elRegion, visibleRect) {\r\n    return elFuturePos.left > visibleRect.right || elFuturePos.left + elRegion.width < visibleRect.left;\r\n}\r\nfunction isCompleteFailY(elFuturePos, elRegion, visibleRect) {\r\n    return elFuturePos.top > visibleRect.bottom || elFuturePos.top + elRegion.height < visibleRect.top;\r\n}\r\nfunction flip(points, reg, map) {\r\n    var ret = [];\r\n    utils.each(points, function (p) {\r\n        ret.push(p.replace(reg, function (m) {\r\n            return map[m];\r\n        }));\r\n    });\r\n    return ret;\r\n}\r\nfunction flipOffset(offset, index) {\r\n    offset[index] = -offset[index];\r\n    return offset;\r\n}\r\nfunction convertOffset(str, offsetLen) {\r\n    var n = void 0;\r\n    if (/%$/.test(str)) {\r\n        n = parseInt(str.substring(0, str.length - 1), 10) / 100 * offsetLen;\r\n    }\r\n    else {\r\n        n = parseInt(str, 10);\r\n    }\r\n    return n || 0;\r\n}\r\nfunction normalizeOffset(offset, el) {\r\n    offset[0] = convertOffset(offset[0], el.width);\r\n    offset[1] = convertOffset(offset[1], el.height);\r\n}\r\nfunction doAlign(el, tgtRegion, align, isTgtRegionVisible) {\r\n    var points = align.points;\r\n    var offset = align.offset || [0, 0];\r\n    var targetOffset = align.targetOffset || [0, 0];\r\n    var overflow = align.overflow;\r\n    var source = align.source || el;\r\n    offset = [].concat(offset);\r\n    targetOffset = [].concat(targetOffset);\r\n    overflow = overflow || {};\r\n    var newOverflowCfg = {};\r\n    var fail = 0;\r\n    var visibleRect = getVisibleRectForElement(source);\r\n    var elRegion = getRegion(source);\r\n    normalizeOffset(offset, elRegion);\r\n    normalizeOffset(targetOffset, tgtRegion);\r\n    var elFuturePos = getElFuturePos(elRegion, tgtRegion, points, offset, targetOffset);\r\n    var newElRegion = utils.merge(elRegion, elFuturePos);\r\n    if (visibleRect && (overflow.adjustX || overflow.adjustY) && isTgtRegionVisible) {\r\n        if (overflow.adjustX) {\r\n            if (isFailX(elFuturePos, elRegion, visibleRect)) {\r\n                var newPoints = flip(points, /[lr]/ig, {\r\n                    l: 'r',\r\n                    r: 'l'\r\n                });\r\n                var newOffset = flipOffset(offset, 0);\r\n                var newTargetOffset = flipOffset(targetOffset, 0);\r\n                var newElFuturePos = getElFuturePos(elRegion, tgtRegion, newPoints, newOffset, newTargetOffset);\r\n                if (!isCompleteFailX(newElFuturePos, elRegion, visibleRect)) {\r\n                    fail = 1;\r\n                    points = newPoints;\r\n                    offset = newOffset;\r\n                    targetOffset = newTargetOffset;\r\n                }\r\n            }\r\n        }\r\n        if (overflow.adjustY) {\r\n            if (isFailY(elFuturePos, elRegion, visibleRect)) {\r\n                var _newPoints = flip(points, /[tb]/ig, {\r\n                    t: 'b',\r\n                    b: 't'\r\n                });\r\n                var _newOffset = flipOffset(offset, 1);\r\n                var _newTargetOffset = flipOffset(targetOffset, 1);\r\n                var _newElFuturePos = getElFuturePos(elRegion, tgtRegion, _newPoints, _newOffset, _newTargetOffset);\r\n                if (!isCompleteFailY(_newElFuturePos, elRegion, visibleRect)) {\r\n                    fail = 1;\r\n                    points = _newPoints;\r\n                    offset = _newOffset;\r\n                    targetOffset = _newTargetOffset;\r\n                }\r\n            }\r\n        }\r\n        if (fail) {\r\n            elFuturePos = getElFuturePos(elRegion, tgtRegion, points, offset, targetOffset);\r\n            utils.mix(newElRegion, elFuturePos);\r\n        }\r\n        var isStillFailX = isFailX(elFuturePos, elRegion, visibleRect);\r\n        var isStillFailY = isFailY(elFuturePos, elRegion, visibleRect);\r\n        if (isStillFailX || isStillFailY) {\r\n            points = align.points;\r\n            offset = align.offset || [0, 0];\r\n            targetOffset = align.targetOffset || [0, 0];\r\n        }\r\n        newOverflowCfg.adjustX = overflow.adjustX && isStillFailX;\r\n        newOverflowCfg.adjustY = overflow.adjustY && isStillFailY;\r\n        if (newOverflowCfg.adjustX || newOverflowCfg.adjustY) {\r\n            newElRegion = adjustForViewport(elFuturePos, elRegion, visibleRect, newOverflowCfg);\r\n        }\r\n    }\r\n    if (newElRegion.width !== elRegion.width) {\r\n        utils.css(source, 'width', utils.width(source) + newElRegion.width - elRegion.width);\r\n    }\r\n    if (newElRegion.height !== elRegion.height) {\r\n        utils.css(source, 'height', utils.height(source) + newElRegion.height - elRegion.height);\r\n    }\r\n    utils.offset(source, {\r\n        left: newElRegion.left,\r\n        top: newElRegion.top\r\n    }, {\r\n        useCssRight: align.useCssRight,\r\n        useCssBottom: align.useCssBottom,\r\n        useCssTransform: align.useCssTransform,\r\n        ignoreShake: align.ignoreShake\r\n    });\r\n    return {\r\n        points: points,\r\n        offset: offset,\r\n        targetOffset: targetOffset,\r\n        overflow: newOverflowCfg\r\n    };\r\n}\r\nexport default doAlign;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\dom-align\\es\\align\\align.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\dom-align\\es\\align\\align.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * align dom node flexibly\n * @author yiminghe@gmail.com\n */\n\nimport utils from '../utils';\nimport getVisibleRectForElement from '../getVisibleRectForElement';\nimport adjustForViewport from '../adjustForViewport';\nimport getRegion from '../getRegion';\nimport getElFuturePos from '../getElFuturePos';\n\n// http://yiminghe.iteye.com/blog/1124720\n\nfunction isFailX(elFuturePos, elRegion, visibleRect) {\n  return elFuturePos.left < visibleRect.left || elFuturePos.left + elRegion.width > visibleRect.right;\n}\n\nfunction isFailY(elFuturePos, elRegion, visibleRect) {\n  return elFuturePos.top < visibleRect.top || elFuturePos.top + elRegion.height > visibleRect.bottom;\n}\n\nfunction isCompleteFailX(elFuturePos, elRegion, visibleRect) {\n  return elFuturePos.left > visibleRect.right || elFuturePos.left + elRegion.width < visibleRect.left;\n}\n\nfunction isCompleteFailY(elFuturePos, elRegion, visibleRect) {\n  return elFuturePos.top > visibleRect.bottom || elFuturePos.top + elRegion.height < visibleRect.top;\n}\n\nfunction flip(points, reg, map) {\n  var ret = [];\n  utils.each(points, function (p) {\n    ret.push(p.replace(reg, function (m) {\n      return map[m];\n    }));\n  });\n  return ret;\n}\n\nfunction flipOffset(offset, index) {\n  offset[index] = -offset[index];\n  return offset;\n}\n\nfunction convertOffset(str, offsetLen) {\n  var n = void 0;\n  if (/%$/.test(str)) {\n    n = parseInt(str.substring(0, str.length - 1), 10) / 100 * offsetLen;\n  } else {\n    n = parseInt(str, 10);\n  }\n  return n || 0;\n}\n\nfunction normalizeOffset(offset, el) {\n  offset[0] = convertOffset(offset[0], el.width);\n  offset[1] = convertOffset(offset[1], el.height);\n}\n\n/**\n * @param el\n * @param tgtRegion 参照节点所占的区域: { left, top, width, height }\n * @param align\n */\nfunction doAlign(el, tgtRegion, align, isTgtRegionVisible) {\n  var points = align.points;\n  var offset = align.offset || [0, 0];\n  var targetOffset = align.targetOffset || [0, 0];\n  var overflow = align.overflow;\n  var source = align.source || el;\n  offset = [].concat(offset);\n  targetOffset = [].concat(targetOffset);\n  overflow = overflow || {};\n  var newOverflowCfg = {};\n  var fail = 0;\n  // 当前节点可以被放置的显示区域\n  var visibleRect = getVisibleRectForElement(source);\n  // 当前节点所占的区域, left/top/width/height\n  var elRegion = getRegion(source);\n  // 将 offset 转换成数值，支持百分比\n  normalizeOffset(offset, elRegion);\n  normalizeOffset(targetOffset, tgtRegion);\n  // 当前节点将要被放置的位置\n  var elFuturePos = getElFuturePos(elRegion, tgtRegion, points, offset, targetOffset);\n  // 当前节点将要所处的区域\n  var newElRegion = utils.merge(elRegion, elFuturePos);\n\n  // 如果可视区域不能完全放置当前节点时允许调整\n  if (visibleRect && (overflow.adjustX || overflow.adjustY) && isTgtRegionVisible) {\n    if (overflow.adjustX) {\n      // 如果横向不能放下\n      if (isFailX(elFuturePos, elRegion, visibleRect)) {\n        // 对齐位置反下\n        var newPoints = flip(points, /[lr]/ig, {\n          l: 'r',\n          r: 'l'\n        });\n        // 偏移量也反下\n        var newOffset = flipOffset(offset, 0);\n        var newTargetOffset = flipOffset(targetOffset, 0);\n        var newElFuturePos = getElFuturePos(elRegion, tgtRegion, newPoints, newOffset, newTargetOffset);\n\n        if (!isCompleteFailX(newElFuturePos, elRegion, visibleRect)) {\n          fail = 1;\n          points = newPoints;\n          offset = newOffset;\n          targetOffset = newTargetOffset;\n        }\n      }\n    }\n\n    if (overflow.adjustY) {\n      // 如果纵向不能放下\n      if (isFailY(elFuturePos, elRegion, visibleRect)) {\n        // 对齐位置反下\n        var _newPoints = flip(points, /[tb]/ig, {\n          t: 'b',\n          b: 't'\n        });\n        // 偏移量也反下\n        var _newOffset = flipOffset(offset, 1);\n        var _newTargetOffset = flipOffset(targetOffset, 1);\n        var _newElFuturePos = getElFuturePos(elRegion, tgtRegion, _newPoints, _newOffset, _newTargetOffset);\n\n        if (!isCompleteFailY(_newElFuturePos, elRegion, visibleRect)) {\n          fail = 1;\n          points = _newPoints;\n          offset = _newOffset;\n          targetOffset = _newTargetOffset;\n        }\n      }\n    }\n\n    // 如果失败，重新计算当前节点将要被放置的位置\n    if (fail) {\n      elFuturePos = getElFuturePos(elRegion, tgtRegion, points, offset, targetOffset);\n      utils.mix(newElRegion, elFuturePos);\n    }\n    var isStillFailX = isFailX(elFuturePos, elRegion, visibleRect);\n    var isStillFailY = isFailY(elFuturePos, elRegion, visibleRect);\n    // 检查反下后的位置是否可以放下了，如果仍然放不下：\n    // 1. 复原修改过的定位参数\n    if (isStillFailX || isStillFailY) {\n      points = align.points;\n      offset = align.offset || [0, 0];\n      targetOffset = align.targetOffset || [0, 0];\n    }\n    // 2. 只有指定了可以调整当前方向才调整\n    newOverflowCfg.adjustX = overflow.adjustX && isStillFailX;\n    newOverflowCfg.adjustY = overflow.adjustY && isStillFailY;\n\n    // 确实要调整，甚至可能会调整高度宽度\n    if (newOverflowCfg.adjustX || newOverflowCfg.adjustY) {\n      newElRegion = adjustForViewport(elFuturePos, elRegion, visibleRect, newOverflowCfg);\n    }\n  }\n\n  // need judge to in case set fixed with in css on height auto element\n  if (newElRegion.width !== elRegion.width) {\n    utils.css(source, 'width', utils.width(source) + newElRegion.width - elRegion.width);\n  }\n\n  if (newElRegion.height !== elRegion.height) {\n    utils.css(source, 'height', utils.height(source) + newElRegion.height - elRegion.height);\n  }\n\n  // https://github.com/kissyteam/kissy/issues/190\n  // 相对于屏幕位置没变，而 left/top 变了\n  // 例如 <div 'relative'><el absolute></div>\n  utils.offset(source, {\n    left: newElRegion.left,\n    top: newElRegion.top\n  }, {\n    useCssRight: align.useCssRight,\n    useCssBottom: align.useCssBottom,\n    useCssTransform: align.useCssTransform,\n    ignoreShake: align.ignoreShake\n  });\n\n  return {\n    points: points,\n    offset: offset,\n    targetOffset: targetOffset,\n    overflow: newOverflowCfg\n  };\n}\n\nexport default doAlign;\n/**\n *  2012-04-26 yiminghe@gmail.com\n *   - 优化智能对齐算法\n *   - 慎用 resizeXX\n *\n *  2011-07-13 yiminghe@gmail.com note:\n *   - 增加智能对齐，以及大小调整选项\n **/"]}]}