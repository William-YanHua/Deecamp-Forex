{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/density-heatmap/components/legend.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/density-heatmap/components/legend.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { __assign } from \"tslib\";\nimport { each, isArray, deepMix, clone } from '@antv/util';\nimport BBox from '../../../util/bbox';\nvar LABEL_MARGIN = 4;\nvar ACTIVE_OPACITY = 1;\nvar DEACTIVE_OPACITY = 0.1;\nvar HeatmapLegend = (function () {\n    function HeatmapLegend(cfg) {\n        this.destroyed = false;\n        this.dataSlides = {};\n        var defaultOptions = this.getDefaultOptions();\n        if (cfg.plot.options.theme && cfg.plot.options.theme === 'dark') {\n            defaultOptions = this.getDarkOptions();\n        }\n        this.options = deepMix({}, defaultOptions, cfg);\n        this.view = this.options.view;\n        this.afterRender = true;\n        this.init();\n    }\n    HeatmapLegend.prototype.init = function () {\n        this.layout = this.getLayout();\n        this.width = this.options.width ? this.options.width : this.getDefaultWidth();\n        this.height = this.options.height ? this.options.height : this.getDefaultHeight();\n        var plotContainer = this.options.plot.container;\n        this.container = plotContainer.addGroup();\n    };\n    HeatmapLegend.prototype.render = function () {\n        var scales = this.getScales();\n        var colorField = this.options.plot.options.colorField;\n        this.colorScale = scales[colorField];\n        var _a = this.colorScale, min = _a.min, max = _a.max;\n        var color = this.options.plot.options.color;\n        if (this.layout === 'horizontal') {\n            this.renderHorizontal(min, max, color);\n        }\n        else {\n            this.renderVertical(min, max, color);\n        }\n        this.legendLayout();\n        this.addInteraction();\n        this.options.plot.canvas.draw();\n    };\n    HeatmapLegend.prototype.hide = function () {\n        this.container.set('visible', false);\n        this.options.plot.canvas.draw();\n    };\n    HeatmapLegend.prototype.show = function () {\n        this.container.set('visible', true);\n        this.options.plot.canvas.draw();\n    };\n    HeatmapLegend.prototype.clear = function () {\n        if (this.container) {\n            this.container.clear();\n        }\n    };\n    HeatmapLegend.prototype.destroy = function () {\n        if (this.container) {\n            this.container.remove();\n        }\n        this.destroyed = true;\n    };\n    HeatmapLegend.prototype.getBBox = function () {\n        var origin_bbox = this.container.getBBox();\n        return new BBox(this.x, this.y, origin_bbox.width, origin_bbox.height);\n    };\n    HeatmapLegend.prototype.renderVertical = function (min, max, colors) {\n        var _this = this;\n        var gridWidth = this.width;\n        var gridHeight = this.height / colors.length;\n        var gridLineContainer = this.container.addGroup();\n        var gridColors = clone(colors).reverse();\n        var valueStep = (max - min) / colors.length;\n        each(gridColors, function (c, i) {\n            var y = gridHeight * i;\n            var appendInfo = { to: max - valueStep * i, from: max - valueStep * (i + 1) };\n            var rect = _this.container.addShape('rect', {\n                attrs: {\n                    x: 0,\n                    y: y,\n                    width: gridWidth,\n                    height: gridHeight,\n                    fill: c,\n                    opacity: ACTIVE_OPACITY,\n                    cursor: 'pointer',\n                },\n                name: 'legend',\n            });\n            rect.set('info', appendInfo);\n            var dataSlide = _this.getDataSlide(appendInfo);\n            _this.dataSlides[appendInfo.from + \"-\" + appendInfo.to] = { mode: 'active', data: dataSlide };\n            gridLineContainer.addShape('path', {\n                attrs: __assign({ path: [\n                        ['M', 0, y + gridHeight],\n                        ['L', gridWidth, y + gridHeight],\n                    ] }, _this.options.gridlineStyle),\n            });\n        });\n        this.container.addShape('text', {\n            attrs: __assign({ text: max, x: gridWidth / 2, y: -LABEL_MARGIN, textAlign: 'center', textBaseline: 'bottom' }, this.options.text.style),\n            name: 'legend-label',\n        });\n        this.container.addShape('text', {\n            attrs: __assign(__assign({ text: min, x: gridWidth / 2, y: this.height + LABEL_MARGIN, textAlign: 'center', textBaseline: 'top' }, this.options.text.style), { name: 'legend-label' }),\n        });\n        gridLineContainer.addShape('path', {\n            attrs: __assign({ path: [\n                    ['M', 0, 0],\n                    ['L', this.width, 0],\n                    ['L', this.width, this.height],\n                    ['L', 0, this.height],\n                    ['L', 0, 0],\n                ] }, this.options.gridlineStyle),\n        });\n    };\n    HeatmapLegend.prototype.renderHorizontal = function (min, max, colors) {\n        var _this = this;\n        var gridWidth = this.width / colors.length;\n        var gridHeight = this.height;\n        var gridLineContainer = this.container.addGroup();\n        var valueStep = (max - min) / colors.length;\n        each(colors, function (c, i) {\n            var x = gridWidth * i;\n            var appendInfo = { from: valueStep * i, to: valueStep * (i + 1) };\n            var rect = _this.container.addShape('rect', {\n                attrs: {\n                    x: x,\n                    y: 0,\n                    width: gridWidth,\n                    height: gridHeight,\n                    fill: c,\n                    opacity: 0.8,\n                    cursor: 'pointer',\n                },\n                name: 'legend',\n            });\n            rect.set('info', appendInfo);\n            gridLineContainer.addShape('path', {\n                attrs: __assign({ path: [\n                        ['M', x + gridWidth, 0],\n                        ['L', x + gridWidth, gridHeight],\n                    ] }, _this.options.gridlineStyle),\n            });\n        });\n        this.container.addShape('text', {\n            attrs: __assign(__assign({ text: min, x: -LABEL_MARGIN, y: gridHeight / 2 }, this.options.text.style), { textAlign: 'right', textBaseline: 'middle' }),\n            name: 'legend-label',\n        });\n        this.container.addShape('text', {\n            attrs: __assign({ text: max, x: this.width + LABEL_MARGIN, y: gridHeight / 2, textAlign: 'left', textBaseline: 'middle' }, this.options.text.style),\n            name: 'legend-label',\n        });\n        gridLineContainer.addShape('path', {\n            attrs: __assign({ path: [\n                    ['M', 0, 0],\n                    ['L', this.width, 0],\n                    ['L', this.width, this.height],\n                    ['L', 0, this.height],\n                    ['L', 0, 0],\n                ] }, this.options.gridlineStyle),\n        });\n    };\n    HeatmapLegend.prototype.getLayout = function () {\n        var positions = this.options.position.split('-');\n        this.position = positions[0];\n        if (positions[0] === 'left' || positions[0] === 'right') {\n            return 'vertical';\n        }\n        return 'horizontal';\n    };\n    HeatmapLegend.prototype.getDefaultWidth = function () {\n        if (this.layout === 'horizontal') {\n            var width = this.options.plot.options.width;\n            return width * 0.5;\n        }\n        return 10;\n    };\n    HeatmapLegend.prototype.getDefaultHeight = function () {\n        if (this.layout === 'vertical') {\n            var height = this.options.plot.options.height;\n            return height * 0.5;\n        }\n        return 10;\n    };\n    HeatmapLegend.prototype.legendLayout = function () {\n        var _this = this;\n        var bleeding = this.options.plot.getPlotTheme().bleeding;\n        if (isArray(bleeding)) {\n            each(bleeding, function (it, index) {\n                if (typeof bleeding[index] === 'function') {\n                    bleeding[index] = bleeding[index](_this.options.plot.options);\n                }\n            });\n        }\n        var bbox = this.container.getBBox();\n        var x = 0;\n        var y = 0;\n        var positions = this.options.position.split('-');\n        var plotWidth = this.options.plot.width;\n        var plotHeight = this.options.plot.height;\n        if (positions[0] === 'left') {\n            x = bleeding[3];\n        }\n        else if (positions[0] === 'right') {\n            x = plotWidth - bleeding[1] - bbox.width;\n        }\n        else if (positions[1] === 'center') {\n            x = (plotWidth - bbox.width) / 2;\n        }\n        else if (positions[1] === 'left') {\n            x = bleeding[3];\n        }\n        else if (positions[1] === 'right') {\n            x = this.options.plot.width - bleeding[1] - bbox.width;\n        }\n        if (positions[0] === 'bottom') {\n            y = plotHeight - bleeding[2] - bbox.height;\n        }\n        else if (positions[0] === 'top') {\n            y = this.getTopPosition(bleeding);\n        }\n        else if (positions[1] === 'center') {\n            y = (plotHeight - bbox.height) / 2;\n        }\n        else if (positions[1] === 'top') {\n            y = bleeding[0];\n        }\n        else if (positions[1] === 'bottom') {\n            y = plotHeight - bleeding[2] - bbox.height;\n        }\n        this.x = x;\n        this.y = y;\n        this.container.translate(x, y);\n    };\n    HeatmapLegend.prototype.getDefaultOptions = function () {\n        return {\n            text: {\n                style: {\n                    fontSize: 12,\n                    fill: 'rgba(0, 0, 0, 0.45)',\n                },\n            },\n            gridlineStyle: {\n                lineWidth: 1,\n                stroke: 'rgba(0, 0, 0, 0.45)',\n            },\n        };\n    };\n    HeatmapLegend.prototype.getDarkOptions = function () {\n        return {\n            text: {\n                style: {\n                    fontSize: 12,\n                    fill: 'rgba(255, 255, 255, 0.45)',\n                },\n            },\n            gridlineStyle: {\n                lineWidth: 1,\n                stroke: 'rgba(255, 255, 255, 0.25)',\n            },\n        };\n    };\n    HeatmapLegend.prototype.addInteraction = function () {\n        var _this = this;\n        var colorField = this.options.plot.options.colorField;\n        this.container.on('click', function (ev) {\n            var target = ev.target;\n            if (target.get('name') === 'legend') {\n                var appendInfo = target.get('info');\n                var targetInfo = appendInfo.from + \"-\" + appendInfo.to;\n                var relativeData = _this.dataSlides[targetInfo];\n                if (relativeData.mode === 'active') {\n                    relativeData.mode = 'deactive';\n                    target.stopAnimate();\n                    target.animate({\n                        opacity: DEACTIVE_OPACITY,\n                    }, 200);\n                }\n                else {\n                    relativeData.mode = 'active';\n                    target.stopAnimate();\n                    target.animate({\n                        opacity: ACTIVE_OPACITY,\n                    }, 200);\n                }\n                var filteredData = _this.getFilteredData();\n                if (filteredData.length > 0) {\n                    _this.view.changeData(filteredData);\n                    _this.view.scale(colorField, {\n                        min: _this.colorScale.min,\n                        max: _this.colorScale.max,\n                        nice: _this.colorScale.nice,\n                    });\n                    _this.view.render();\n                }\n            }\n        });\n    };\n    HeatmapLegend.prototype.getFilteredData = function () {\n        var filteredData = [];\n        each(this.dataSlides, function (s) {\n            if (s.mode == 'active') {\n                filteredData.push.apply(filteredData, s.data);\n            }\n        });\n        return filteredData;\n    };\n    HeatmapLegend.prototype.getDataSlide = function (range) {\n        var slide = [];\n        var _a = this.options.plot.options, colorField = _a.colorField, data = _a.data;\n        each(data, function (d) {\n            var value = d[colorField];\n            if (value >= range.from && value < range.to) {\n                slide.push(d);\n            }\n        });\n        return slide;\n    };\n    HeatmapLegend.prototype.getTopPosition = function (bleeding) {\n        if (this.options.plot.description) {\n            var bbox = this.options.plot.description.getBBox();\n            return bbox.maxY + 10;\n        }\n        else if (this.options.plot.title) {\n            var bbox = this.options.plot.title.getBBox();\n            return bbox.maxY + 10;\n        }\n        return bleeding[0];\n    };\n    HeatmapLegend.prototype.getScales = function () {\n        var scales;\n        each(this.view.geometries, function (geom) {\n            if (geom.type === 'heatmap') {\n                scales = geom.scales;\n            }\n        });\n        return scales;\n    };\n    return HeatmapLegend;\n}());\nexport default HeatmapLegend;\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/density-heatmap/components/legend.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/density-heatmap/components/legend.js"],"names":[],"mappings":"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","sourcesContent":["import { __assign } from \"tslib\";\nimport { each, isArray, deepMix, clone } from '@antv/util';\nimport BBox from '../../../util/bbox';\nvar LABEL_MARGIN = 4;\nvar ACTIVE_OPACITY = 1;\nvar DEACTIVE_OPACITY = 0.1;\nvar HeatmapLegend = /** @class */ (function () {\n    function HeatmapLegend(cfg) {\n        this.destroyed = false;\n        this.dataSlides = {};\n        var defaultOptions = this.getDefaultOptions();\n        if (cfg.plot.options.theme && cfg.plot.options.theme === 'dark') {\n            defaultOptions = this.getDarkOptions();\n        }\n        this.options = deepMix({}, defaultOptions, cfg);\n        this.view = this.options.view;\n        this.afterRender = true;\n        this.init();\n    }\n    HeatmapLegend.prototype.init = function () {\n        this.layout = this.getLayout();\n        this.width = this.options.width ? this.options.width : this.getDefaultWidth();\n        this.height = this.options.height ? this.options.height : this.getDefaultHeight();\n        var plotContainer = this.options.plot.container;\n        this.container = plotContainer.addGroup();\n    };\n    HeatmapLegend.prototype.render = function () {\n        var scales = this.getScales();\n        var colorField = this.options.plot.options.colorField;\n        this.colorScale = scales[colorField];\n        var _a = this.colorScale, min = _a.min, max = _a.max;\n        var color = this.options.plot.options.color;\n        if (this.layout === 'horizontal') {\n            this.renderHorizontal(min, max, color);\n        }\n        else {\n            this.renderVertical(min, max, color);\n        }\n        this.legendLayout();\n        this.addInteraction();\n        this.options.plot.canvas.draw();\n    };\n    HeatmapLegend.prototype.hide = function () {\n        this.container.set('visible', false);\n        this.options.plot.canvas.draw();\n    };\n    HeatmapLegend.prototype.show = function () {\n        this.container.set('visible', true);\n        this.options.plot.canvas.draw();\n    };\n    HeatmapLegend.prototype.clear = function () {\n        if (this.container) {\n            this.container.clear();\n        }\n    };\n    HeatmapLegend.prototype.destroy = function () {\n        if (this.container) {\n            this.container.remove();\n        }\n        this.destroyed = true;\n    };\n    HeatmapLegend.prototype.getBBox = function () {\n        var origin_bbox = this.container.getBBox();\n        return new BBox(this.x, this.y, origin_bbox.width, origin_bbox.height);\n    };\n    HeatmapLegend.prototype.renderVertical = function (min, max, colors) {\n        var _this = this;\n        var gridWidth = this.width;\n        var gridHeight = this.height / colors.length;\n        var gridLineContainer = this.container.addGroup();\n        var gridColors = clone(colors).reverse();\n        var valueStep = (max - min) / colors.length;\n        // 绘制色彩格子\n        each(gridColors, function (c, i) {\n            var y = gridHeight * i;\n            // 记录每个grid代表的区间信息用于legend交互\n            var appendInfo = { to: max - valueStep * i, from: max - valueStep * (i + 1) };\n            var rect = _this.container.addShape('rect', {\n                attrs: {\n                    x: 0,\n                    y: y,\n                    width: gridWidth,\n                    height: gridHeight,\n                    fill: c,\n                    opacity: ACTIVE_OPACITY,\n                    cursor: 'pointer',\n                },\n                name: 'legend',\n            });\n            rect.set('info', appendInfo);\n            var dataSlide = _this.getDataSlide(appendInfo);\n            _this.dataSlides[appendInfo.from + \"-\" + appendInfo.to] = { mode: 'active', data: dataSlide };\n            gridLineContainer.addShape('path', {\n                attrs: __assign({ path: [\n                        ['M', 0, y + gridHeight],\n                        ['L', gridWidth, y + gridHeight],\n                    ] }, _this.options.gridlineStyle),\n            });\n        });\n        // 绘制两边的label\n        this.container.addShape('text', {\n            attrs: __assign({ text: max, x: gridWidth / 2, y: -LABEL_MARGIN, textAlign: 'center', textBaseline: 'bottom' }, this.options.text.style),\n            name: 'legend-label',\n        });\n        this.container.addShape('text', {\n            attrs: __assign(__assign({ text: min, x: gridWidth / 2, y: this.height + LABEL_MARGIN, textAlign: 'center', textBaseline: 'top' }, this.options.text.style), { name: 'legend-label' }),\n        });\n        // 绘制包围线\n        gridLineContainer.addShape('path', {\n            attrs: __assign({ path: [\n                    ['M', 0, 0],\n                    ['L', this.width, 0],\n                    ['L', this.width, this.height],\n                    ['L', 0, this.height],\n                    ['L', 0, 0],\n                ] }, this.options.gridlineStyle),\n        });\n    };\n    HeatmapLegend.prototype.renderHorizontal = function (min, max, colors) {\n        var _this = this;\n        var gridWidth = this.width / colors.length;\n        var gridHeight = this.height;\n        var gridLineContainer = this.container.addGroup();\n        var valueStep = (max - min) / colors.length;\n        // 绘制色彩格子\n        each(colors, function (c, i) {\n            var x = gridWidth * i;\n            // 记录每个grid代表的区间信息用于legend交互\n            var appendInfo = { from: valueStep * i, to: valueStep * (i + 1) };\n            var rect = _this.container.addShape('rect', {\n                attrs: {\n                    x: x,\n                    y: 0,\n                    width: gridWidth,\n                    height: gridHeight,\n                    fill: c,\n                    opacity: 0.8,\n                    cursor: 'pointer',\n                },\n                name: 'legend',\n            });\n            rect.set('info', appendInfo);\n            gridLineContainer.addShape('path', {\n                attrs: __assign({ path: [\n                        ['M', x + gridWidth, 0],\n                        ['L', x + gridWidth, gridHeight],\n                    ] }, _this.options.gridlineStyle),\n            });\n        });\n        // 绘制两边的label\n        this.container.addShape('text', {\n            attrs: __assign(__assign({ text: min, x: -LABEL_MARGIN, y: gridHeight / 2 }, this.options.text.style), { textAlign: 'right', textBaseline: 'middle' }),\n            name: 'legend-label',\n        });\n        this.container.addShape('text', {\n            attrs: __assign({ text: max, x: this.width + LABEL_MARGIN, y: gridHeight / 2, textAlign: 'left', textBaseline: 'middle' }, this.options.text.style),\n            name: 'legend-label',\n        });\n        // 绘制包围线\n        gridLineContainer.addShape('path', {\n            attrs: __assign({ path: [\n                    ['M', 0, 0],\n                    ['L', this.width, 0],\n                    ['L', this.width, this.height],\n                    ['L', 0, this.height],\n                    ['L', 0, 0],\n                ] }, this.options.gridlineStyle),\n        });\n    };\n    HeatmapLegend.prototype.getLayout = function () {\n        var positions = this.options.position.split('-');\n        this.position = positions[0];\n        if (positions[0] === 'left' || positions[0] === 'right') {\n            return 'vertical';\n        }\n        return 'horizontal';\n    };\n    HeatmapLegend.prototype.getDefaultWidth = function () {\n        if (this.layout === 'horizontal') {\n            var width = this.options.plot.options.width;\n            return width * 0.5;\n        }\n        return 10;\n    };\n    HeatmapLegend.prototype.getDefaultHeight = function () {\n        if (this.layout === 'vertical') {\n            var height = this.options.plot.options.height;\n            return height * 0.5;\n        }\n        return 10;\n    };\n    HeatmapLegend.prototype.legendLayout = function () {\n        var _this = this;\n        var bleeding = this.options.plot.getPlotTheme().bleeding;\n        if (isArray(bleeding)) {\n            each(bleeding, function (it, index) {\n                if (typeof bleeding[index] === 'function') {\n                    bleeding[index] = bleeding[index](_this.options.plot.options);\n                }\n            });\n        }\n        var bbox = this.container.getBBox();\n        var x = 0;\n        var y = 0;\n        var positions = this.options.position.split('-');\n        var plotWidth = this.options.plot.width;\n        var plotHeight = this.options.plot.height;\n        // 先确定x\n        if (positions[0] === 'left') {\n            x = bleeding[3];\n        }\n        else if (positions[0] === 'right') {\n            x = plotWidth - bleeding[1] - bbox.width;\n        }\n        else if (positions[1] === 'center') {\n            x = (plotWidth - bbox.width) / 2;\n        }\n        else if (positions[1] === 'left') {\n            x = bleeding[3];\n        }\n        else if (positions[1] === 'right') {\n            x = this.options.plot.width - bleeding[1] - bbox.width;\n        }\n        // 再确定y\n        if (positions[0] === 'bottom') {\n            y = plotHeight - bleeding[2] - bbox.height;\n        }\n        else if (positions[0] === 'top') {\n            y = this.getTopPosition(bleeding);\n        }\n        else if (positions[1] === 'center') {\n            y = (plotHeight - bbox.height) / 2;\n        }\n        else if (positions[1] === 'top') {\n            y = bleeding[0];\n        }\n        else if (positions[1] === 'bottom') {\n            y = plotHeight - bleeding[2] - bbox.height;\n        }\n        this.x = x;\n        this.y = y;\n        this.container.translate(x, y);\n    };\n    HeatmapLegend.prototype.getDefaultOptions = function () {\n        return {\n            text: {\n                style: {\n                    fontSize: 12,\n                    fill: 'rgba(0, 0, 0, 0.45)',\n                },\n            },\n            gridlineStyle: {\n                lineWidth: 1,\n                stroke: 'rgba(0, 0, 0, 0.45)',\n            },\n        };\n    };\n    HeatmapLegend.prototype.getDarkOptions = function () {\n        return {\n            text: {\n                style: {\n                    fontSize: 12,\n                    fill: 'rgba(255, 255, 255, 0.45)',\n                },\n            },\n            gridlineStyle: {\n                lineWidth: 1,\n                stroke: 'rgba(255, 255, 255, 0.25)',\n            },\n        };\n    };\n    HeatmapLegend.prototype.addInteraction = function () {\n        var _this = this;\n        var colorField = this.options.plot.options.colorField;\n        this.container.on('click', function (ev) {\n            var target = ev.target;\n            if (target.get('name') === 'legend') {\n                var appendInfo = target.get('info');\n                var targetInfo = appendInfo.from + \"-\" + appendInfo.to;\n                var relativeData = _this.dataSlides[targetInfo];\n                if (relativeData.mode === 'active') {\n                    relativeData.mode = 'deactive';\n                    target.stopAnimate();\n                    target.animate({\n                        opacity: DEACTIVE_OPACITY,\n                    }, 200);\n                }\n                else {\n                    relativeData.mode = 'active';\n                    target.stopAnimate();\n                    target.animate({\n                        opacity: ACTIVE_OPACITY,\n                    }, 200);\n                }\n                var filteredData = _this.getFilteredData();\n                if (filteredData.length > 0) {\n                    _this.view.changeData(filteredData);\n                    //this.view.set('data', filteredData);\n                    _this.view.scale(colorField, {\n                        min: _this.colorScale.min,\n                        max: _this.colorScale.max,\n                        nice: _this.colorScale.nice,\n                    });\n                    _this.view.render();\n                }\n            }\n        });\n    };\n    HeatmapLegend.prototype.getFilteredData = function () {\n        var filteredData = [];\n        each(this.dataSlides, function (s) {\n            if (s.mode == 'active') {\n                filteredData.push.apply(filteredData, s.data);\n            }\n        });\n        return filteredData;\n    };\n    //预先对数据进行分组\n    HeatmapLegend.prototype.getDataSlide = function (range) {\n        var slide = [];\n        var _a = this.options.plot.options, colorField = _a.colorField, data = _a.data;\n        each(data, function (d) {\n            var value = d[colorField];\n            if (value >= range.from && value < range.to) {\n                slide.push(d);\n            }\n        });\n        return slide;\n    };\n    HeatmapLegend.prototype.getTopPosition = function (bleeding) {\n        if (this.options.plot.description) {\n            var bbox = this.options.plot.description.getBBox();\n            return bbox.maxY + 10;\n        }\n        else if (this.options.plot.title) {\n            var bbox = this.options.plot.title.getBBox();\n            return bbox.maxY + 10;\n        }\n        return bleeding[0];\n    };\n    HeatmapLegend.prototype.getScales = function () {\n        var scales;\n        each(this.view.geometries, function (geom) {\n            if (geom.type === 'heatmap') {\n                scales = geom.scales;\n            }\n        });\n        return scales;\n    };\n    return HeatmapLegend;\n}());\nexport default HeatmapLegend;\n//# sourceMappingURL=legend.js.map"]}]}