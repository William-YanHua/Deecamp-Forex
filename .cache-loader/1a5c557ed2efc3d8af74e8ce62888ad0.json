{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/remark-parse/lib/tokenize/delete.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/remark-parse/lib/tokenize/delete.js","mtime":1516191690000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["'use strict';\nvar whitespace = require('is-whitespace-character');\nvar locate = require('../locate/delete');\nmodule.exports = strikethrough;\nstrikethrough.locator = locate;\nvar C_TILDE = '~';\nvar DOUBLE = '~~';\nfunction strikethrough(eat, value, silent) {\n    var self = this;\n    var character = '';\n    var previous = '';\n    var preceding = '';\n    var subvalue = '';\n    var index;\n    var length;\n    var now;\n    if (!self.options.gfm ||\n        value.charAt(0) !== C_TILDE ||\n        value.charAt(1) !== C_TILDE ||\n        whitespace(value.charAt(2))) {\n        return;\n    }\n    index = 1;\n    length = value.length;\n    now = eat.now();\n    now.column += 2;\n    now.offset += 2;\n    while (++index < length) {\n        character = value.charAt(index);\n        if (character === C_TILDE &&\n            previous === C_TILDE &&\n            (!preceding || !whitespace(preceding))) {\n            if (silent) {\n                return true;\n            }\n            return eat(DOUBLE + subvalue + DOUBLE)({\n                type: 'delete',\n                children: self.tokenizeInline(subvalue, now)\n            });\n        }\n        subvalue += previous;\n        preceding = previous;\n        previous = character;\n    }\n}\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/remark-parse/lib/tokenize/delete.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/remark-parse/lib/tokenize/delete.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;AAEb,IAAI,UAAU,GAAG,OAAO,CAAC,yBAAyB,CAAC,CAAC;AACpD,IAAI,MAAM,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAEzC,MAAM,CAAC,OAAO,GAAG,aAAa,CAAC;AAC/B,aAAa,CAAC,OAAO,GAAG,MAAM,CAAC;AAE/B,IAAI,OAAO,GAAG,GAAG,CAAC;AAClB,IAAI,MAAM,GAAG,IAAI,CAAC;AAElB,SAAS,aAAa,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM;IACvC,IAAI,IAAI,GAAG,IAAI,CAAC;IAChB,IAAI,SAAS,GAAG,EAAE,CAAC;IACnB,IAAI,QAAQ,GAAG,EAAE,CAAC;IAClB,IAAI,SAAS,GAAG,EAAE,CAAC;IACnB,IAAI,QAAQ,GAAG,EAAE,CAAC;IAClB,IAAI,KAAK,CAAC;IACV,IAAI,MAAM,CAAC;IACX,IAAI,GAAG,CAAC;IAER,IACE,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG;QACjB,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,OAAO;QAC3B,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,OAAO;QAC3B,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAC3B;QACA,OAAO;KACR;IAED,KAAK,GAAG,CAAC,CAAC;IACV,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;IACtB,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC;IAChB,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC;IAChB,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC;IAEhB,OAAO,EAAE,KAAK,GAAG,MAAM,EAAE;QACvB,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAEhC,IACE,SAAS,KAAK,OAAO;YACrB,QAAQ,KAAK,OAAO;YACpB,CAAC,CAAC,SAAS,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,EACtC;YAEA,IAAI,MAAM,EAAE;gBACV,OAAO,IAAI,CAAC;aACb;YAED,OAAO,GAAG,CAAC,MAAM,GAAG,QAAQ,GAAG,MAAM,CAAC,CAAC;gBACrC,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,GAAG,CAAC;aAC7C,CAAC,CAAC;SACJ;QAED,QAAQ,IAAI,QAAQ,CAAC;QACrB,SAAS,GAAG,QAAQ,CAAC;QACrB,QAAQ,GAAG,SAAS,CAAC;KACtB;AACH,CAAC","sourcesContent":["'use strict';\n\nvar whitespace = require('is-whitespace-character');\nvar locate = require('../locate/delete');\n\nmodule.exports = strikethrough;\nstrikethrough.locator = locate;\n\nvar C_TILDE = '~';\nvar DOUBLE = '~~';\n\nfunction strikethrough(eat, value, silent) {\n  var self = this;\n  var character = '';\n  var previous = '';\n  var preceding = '';\n  var subvalue = '';\n  var index;\n  var length;\n  var now;\n\n  if (\n    !self.options.gfm ||\n    value.charAt(0) !== C_TILDE ||\n    value.charAt(1) !== C_TILDE ||\n    whitespace(value.charAt(2))\n  ) {\n    return;\n  }\n\n  index = 1;\n  length = value.length;\n  now = eat.now();\n  now.column += 2;\n  now.offset += 2;\n\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (\n      character === C_TILDE &&\n      previous === C_TILDE &&\n      (!preceding || !whitespace(preceding))\n    ) {\n      /* istanbul ignore if - never used (yet) */\n      if (silent) {\n        return true;\n      }\n\n      return eat(DOUBLE + subvalue + DOUBLE)({\n        type: 'delete',\n        children: self.tokenizeInline(subvalue, now)\n      });\n    }\n\n    subvalue += previous;\n    preceding = previous;\n    previous = character;\n  }\n}\n"]}]}