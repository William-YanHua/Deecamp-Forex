{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/remark-parse/lib/tokenize/link.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/remark-parse/lib/tokenize/link.js","mtime":1516201759000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["'use strict';\nvar whitespace = require('is-whitespace-character');\nvar locate = require('../locate/link');\nmodule.exports = link;\nlink.locator = locate;\nvar own = {}.hasOwnProperty;\nvar C_BACKSLASH = '\\\\';\nvar C_BRACKET_OPEN = '[';\nvar C_BRACKET_CLOSE = ']';\nvar C_PAREN_OPEN = '(';\nvar C_PAREN_CLOSE = ')';\nvar C_LT = '<';\nvar C_GT = '>';\nvar C_TICK = '`';\nvar C_DOUBLE_QUOTE = '\"';\nvar C_SINGLE_QUOTE = '\\'';\nvar LINK_MARKERS = {};\nLINK_MARKERS[C_DOUBLE_QUOTE] = C_DOUBLE_QUOTE;\nLINK_MARKERS[C_SINGLE_QUOTE] = C_SINGLE_QUOTE;\nvar COMMONMARK_LINK_MARKERS = {};\nCOMMONMARK_LINK_MARKERS[C_DOUBLE_QUOTE] = C_DOUBLE_QUOTE;\nCOMMONMARK_LINK_MARKERS[C_SINGLE_QUOTE] = C_SINGLE_QUOTE;\nCOMMONMARK_LINK_MARKERS[C_PAREN_OPEN] = C_PAREN_CLOSE;\nfunction link(eat, value, silent) {\n    var self = this;\n    var subvalue = '';\n    var index = 0;\n    var character = value.charAt(0);\n    var pedantic = self.options.pedantic;\n    var commonmark = self.options.commonmark;\n    var gfm = self.options.gfm;\n    var closed;\n    var count;\n    var opening;\n    var beforeURL;\n    var beforeTitle;\n    var subqueue;\n    var hasMarker;\n    var markers;\n    var isImage;\n    var content;\n    var marker;\n    var length;\n    var title;\n    var depth;\n    var queue;\n    var url;\n    var now;\n    var exit;\n    var node;\n    if (character === '!') {\n        isImage = true;\n        subvalue = character;\n        character = value.charAt(++index);\n    }\n    if (character !== C_BRACKET_OPEN) {\n        return;\n    }\n    if (!isImage && self.inLink) {\n        return;\n    }\n    subvalue += character;\n    queue = '';\n    index++;\n    length = value.length;\n    now = eat.now();\n    depth = 0;\n    now.column += index;\n    now.offset += index;\n    while (index < length) {\n        character = value.charAt(index);\n        subqueue = character;\n        if (character === C_TICK) {\n            count = 1;\n            while (value.charAt(index + 1) === C_TICK) {\n                subqueue += character;\n                index++;\n                count++;\n            }\n            if (!opening) {\n                opening = count;\n            }\n            else if (count >= opening) {\n                opening = 0;\n            }\n        }\n        else if (character === C_BACKSLASH) {\n            index++;\n            subqueue += value.charAt(index);\n        }\n        else if ((!opening || gfm) && character === C_BRACKET_OPEN) {\n            depth++;\n        }\n        else if ((!opening || gfm) && character === C_BRACKET_CLOSE) {\n            if (depth) {\n                depth--;\n            }\n            else {\n                if (!pedantic) {\n                    while (index < length) {\n                        character = value.charAt(index + 1);\n                        if (!whitespace(character)) {\n                            break;\n                        }\n                        subqueue += character;\n                        index++;\n                    }\n                }\n                if (value.charAt(index + 1) !== C_PAREN_OPEN) {\n                    return;\n                }\n                subqueue += C_PAREN_OPEN;\n                closed = true;\n                index++;\n                break;\n            }\n        }\n        queue += subqueue;\n        subqueue = '';\n        index++;\n    }\n    if (!closed) {\n        return;\n    }\n    content = queue;\n    subvalue += queue + subqueue;\n    index++;\n    while (index < length) {\n        character = value.charAt(index);\n        if (!whitespace(character)) {\n            break;\n        }\n        subvalue += character;\n        index++;\n    }\n    character = value.charAt(index);\n    markers = commonmark ? COMMONMARK_LINK_MARKERS : LINK_MARKERS;\n    queue = '';\n    beforeURL = subvalue;\n    if (character === C_LT) {\n        index++;\n        beforeURL += C_LT;\n        while (index < length) {\n            character = value.charAt(index);\n            if (character === C_GT) {\n                break;\n            }\n            if (commonmark && character === '\\n') {\n                return;\n            }\n            queue += character;\n            index++;\n        }\n        if (value.charAt(index) !== C_GT) {\n            return;\n        }\n        subvalue += C_LT + queue + C_GT;\n        url = queue;\n        index++;\n    }\n    else {\n        character = null;\n        subqueue = '';\n        while (index < length) {\n            character = value.charAt(index);\n            if (subqueue && own.call(markers, character)) {\n                break;\n            }\n            if (whitespace(character)) {\n                if (!pedantic) {\n                    break;\n                }\n                subqueue += character;\n            }\n            else {\n                if (character === C_PAREN_OPEN) {\n                    depth++;\n                }\n                else if (character === C_PAREN_CLOSE) {\n                    if (depth === 0) {\n                        break;\n                    }\n                    depth--;\n                }\n                queue += subqueue;\n                subqueue = '';\n                if (character === C_BACKSLASH) {\n                    queue += C_BACKSLASH;\n                    character = value.charAt(++index);\n                }\n                queue += character;\n            }\n            index++;\n        }\n        subvalue += queue;\n        url = queue;\n        index = subvalue.length;\n    }\n    queue = '';\n    while (index < length) {\n        character = value.charAt(index);\n        if (!whitespace(character)) {\n            break;\n        }\n        queue += character;\n        index++;\n    }\n    character = value.charAt(index);\n    subvalue += queue;\n    if (queue && own.call(markers, character)) {\n        index++;\n        subvalue += character;\n        queue = '';\n        marker = markers[character];\n        beforeTitle = subvalue;\n        if (commonmark) {\n            while (index < length) {\n                character = value.charAt(index);\n                if (character === marker) {\n                    break;\n                }\n                if (character === C_BACKSLASH) {\n                    queue += C_BACKSLASH;\n                    character = value.charAt(++index);\n                }\n                index++;\n                queue += character;\n            }\n            character = value.charAt(index);\n            if (character !== marker) {\n                return;\n            }\n            title = queue;\n            subvalue += queue + character;\n            index++;\n            while (index < length) {\n                character = value.charAt(index);\n                if (!whitespace(character)) {\n                    break;\n                }\n                subvalue += character;\n                index++;\n            }\n        }\n        else {\n            subqueue = '';\n            while (index < length) {\n                character = value.charAt(index);\n                if (character === marker) {\n                    if (hasMarker) {\n                        queue += marker + subqueue;\n                        subqueue = '';\n                    }\n                    hasMarker = true;\n                }\n                else if (!hasMarker) {\n                    queue += character;\n                }\n                else if (character === C_PAREN_CLOSE) {\n                    subvalue += queue + marker + subqueue;\n                    title = queue;\n                    break;\n                }\n                else if (whitespace(character)) {\n                    subqueue += character;\n                }\n                else {\n                    queue += marker + subqueue + character;\n                    subqueue = '';\n                    hasMarker = false;\n                }\n                index++;\n            }\n        }\n    }\n    if (value.charAt(index) !== C_PAREN_CLOSE) {\n        return;\n    }\n    if (silent) {\n        return true;\n    }\n    subvalue += C_PAREN_CLOSE;\n    url = self.decode.raw(self.unescape(url), eat(beforeURL).test().end, { nonTerminated: false });\n    if (title) {\n        beforeTitle = eat(beforeTitle).test().end;\n        title = self.decode.raw(self.unescape(title), beforeTitle);\n    }\n    node = {\n        type: isImage ? 'image' : 'link',\n        title: title || null,\n        url: url\n    };\n    if (isImage) {\n        node.alt = self.decode.raw(self.unescape(content), now) || null;\n    }\n    else {\n        exit = self.enterLink();\n        node.children = self.tokenizeInline(content, now);\n        exit();\n    }\n    return eat(subvalue)(node);\n}\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/remark-parse/lib/tokenize/link.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/remark-parse/lib/tokenize/link.js"],"names":[],"mappings":"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","sourcesContent":["'use strict';\n\nvar whitespace = require('is-whitespace-character');\nvar locate = require('../locate/link');\n\nmodule.exports = link;\nlink.locator = locate;\n\nvar own = {}.hasOwnProperty;\n\nvar C_BACKSLASH = '\\\\';\nvar C_BRACKET_OPEN = '[';\nvar C_BRACKET_CLOSE = ']';\nvar C_PAREN_OPEN = '(';\nvar C_PAREN_CLOSE = ')';\nvar C_LT = '<';\nvar C_GT = '>';\nvar C_TICK = '`';\nvar C_DOUBLE_QUOTE = '\"';\nvar C_SINGLE_QUOTE = '\\'';\n\n/* Map of characters, which can be used to mark link\n * and image titles. */\nvar LINK_MARKERS = {};\n\nLINK_MARKERS[C_DOUBLE_QUOTE] = C_DOUBLE_QUOTE;\nLINK_MARKERS[C_SINGLE_QUOTE] = C_SINGLE_QUOTE;\n\n/* Map of characters, which can be used to mark link\n * and image titles in commonmark-mode. */\nvar COMMONMARK_LINK_MARKERS = {};\n\nCOMMONMARK_LINK_MARKERS[C_DOUBLE_QUOTE] = C_DOUBLE_QUOTE;\nCOMMONMARK_LINK_MARKERS[C_SINGLE_QUOTE] = C_SINGLE_QUOTE;\nCOMMONMARK_LINK_MARKERS[C_PAREN_OPEN] = C_PAREN_CLOSE;\n\nfunction link(eat, value, silent) {\n  var self = this;\n  var subvalue = '';\n  var index = 0;\n  var character = value.charAt(0);\n  var pedantic = self.options.pedantic;\n  var commonmark = self.options.commonmark;\n  var gfm = self.options.gfm;\n  var closed;\n  var count;\n  var opening;\n  var beforeURL;\n  var beforeTitle;\n  var subqueue;\n  var hasMarker;\n  var markers;\n  var isImage;\n  var content;\n  var marker;\n  var length;\n  var title;\n  var depth;\n  var queue;\n  var url;\n  var now;\n  var exit;\n  var node;\n\n  /* Detect whether this is an image. */\n  if (character === '!') {\n    isImage = true;\n    subvalue = character;\n    character = value.charAt(++index);\n  }\n\n  /* Eat the opening. */\n  if (character !== C_BRACKET_OPEN) {\n    return;\n  }\n\n  /* Exit when this is a link and we’re already inside\n   * a link. */\n  if (!isImage && self.inLink) {\n    return;\n  }\n\n  subvalue += character;\n  queue = '';\n  index++;\n\n  /* Eat the content. */\n  length = value.length;\n  now = eat.now();\n  depth = 0;\n\n  now.column += index;\n  now.offset += index;\n\n  while (index < length) {\n    character = value.charAt(index);\n    subqueue = character;\n\n    if (character === C_TICK) {\n      /* Inline-code in link content. */\n      count = 1;\n\n      while (value.charAt(index + 1) === C_TICK) {\n        subqueue += character;\n        index++;\n        count++;\n      }\n\n      if (!opening) {\n        opening = count;\n      } else if (count >= opening) {\n        opening = 0;\n      }\n    } else if (character === C_BACKSLASH) {\n      /* Allow brackets to be escaped. */\n      index++;\n      subqueue += value.charAt(index);\n    /* In GFM mode, brackets in code still count.\n     * In all other modes, they don’t.  This empty\n     * block prevents the next statements are\n     * entered. */\n    } else if ((!opening || gfm) && character === C_BRACKET_OPEN) {\n      depth++;\n    } else if ((!opening || gfm) && character === C_BRACKET_CLOSE) {\n      if (depth) {\n        depth--;\n      } else {\n        /* Allow white-space between content and\n         * url in GFM mode. */\n        if (!pedantic) {\n          while (index < length) {\n            character = value.charAt(index + 1);\n\n            if (!whitespace(character)) {\n              break;\n            }\n\n            subqueue += character;\n            index++;\n          }\n        }\n\n        if (value.charAt(index + 1) !== C_PAREN_OPEN) {\n          return;\n        }\n\n        subqueue += C_PAREN_OPEN;\n        closed = true;\n        index++;\n\n        break;\n      }\n    }\n\n    queue += subqueue;\n    subqueue = '';\n    index++;\n  }\n\n  /* Eat the content closing. */\n  if (!closed) {\n    return;\n  }\n\n  content = queue;\n  subvalue += queue + subqueue;\n  index++;\n\n  /* Eat white-space. */\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (!whitespace(character)) {\n      break;\n    }\n\n    subvalue += character;\n    index++;\n  }\n\n  /* Eat the URL. */\n  character = value.charAt(index);\n  markers = commonmark ? COMMONMARK_LINK_MARKERS : LINK_MARKERS;\n  queue = '';\n  beforeURL = subvalue;\n\n  if (character === C_LT) {\n    index++;\n    beforeURL += C_LT;\n\n    while (index < length) {\n      character = value.charAt(index);\n\n      if (character === C_GT) {\n        break;\n      }\n\n      if (commonmark && character === '\\n') {\n        return;\n      }\n\n      queue += character;\n      index++;\n    }\n\n    if (value.charAt(index) !== C_GT) {\n      return;\n    }\n\n    subvalue += C_LT + queue + C_GT;\n    url = queue;\n    index++;\n  } else {\n    character = null;\n    subqueue = '';\n\n    while (index < length) {\n      character = value.charAt(index);\n\n      if (subqueue && own.call(markers, character)) {\n        break;\n      }\n\n      if (whitespace(character)) {\n        if (!pedantic) {\n          break;\n        }\n\n        subqueue += character;\n      } else {\n        if (character === C_PAREN_OPEN) {\n          depth++;\n        } else if (character === C_PAREN_CLOSE) {\n          if (depth === 0) {\n            break;\n          }\n\n          depth--;\n        }\n\n        queue += subqueue;\n        subqueue = '';\n\n        if (character === C_BACKSLASH) {\n          queue += C_BACKSLASH;\n          character = value.charAt(++index);\n        }\n\n        queue += character;\n      }\n\n      index++;\n    }\n\n    subvalue += queue;\n    url = queue;\n    index = subvalue.length;\n  }\n\n  /* Eat white-space. */\n  queue = '';\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (!whitespace(character)) {\n      break;\n    }\n\n    queue += character;\n    index++;\n  }\n\n  character = value.charAt(index);\n  subvalue += queue;\n\n  /* Eat the title. */\n  if (queue && own.call(markers, character)) {\n    index++;\n    subvalue += character;\n    queue = '';\n    marker = markers[character];\n    beforeTitle = subvalue;\n\n    /* In commonmark-mode, things are pretty easy: the\n     * marker cannot occur inside the title.\n     *\n     * Non-commonmark does, however, support nested\n     * delimiters. */\n    if (commonmark) {\n      while (index < length) {\n        character = value.charAt(index);\n\n        if (character === marker) {\n          break;\n        }\n\n        if (character === C_BACKSLASH) {\n          queue += C_BACKSLASH;\n          character = value.charAt(++index);\n        }\n\n        index++;\n        queue += character;\n      }\n\n      character = value.charAt(index);\n\n      if (character !== marker) {\n        return;\n      }\n\n      title = queue;\n      subvalue += queue + character;\n      index++;\n\n      while (index < length) {\n        character = value.charAt(index);\n\n        if (!whitespace(character)) {\n          break;\n        }\n\n        subvalue += character;\n        index++;\n      }\n    } else {\n      subqueue = '';\n\n      while (index < length) {\n        character = value.charAt(index);\n\n        if (character === marker) {\n          if (hasMarker) {\n            queue += marker + subqueue;\n            subqueue = '';\n          }\n\n          hasMarker = true;\n        } else if (!hasMarker) {\n          queue += character;\n        } else if (character === C_PAREN_CLOSE) {\n          subvalue += queue + marker + subqueue;\n          title = queue;\n          break;\n        } else if (whitespace(character)) {\n          subqueue += character;\n        } else {\n          queue += marker + subqueue + character;\n          subqueue = '';\n          hasMarker = false;\n        }\n\n        index++;\n      }\n    }\n  }\n\n  if (value.charAt(index) !== C_PAREN_CLOSE) {\n    return;\n  }\n\n  /* istanbul ignore if - never used (yet) */\n  if (silent) {\n    return true;\n  }\n\n  subvalue += C_PAREN_CLOSE;\n\n  url = self.decode.raw(self.unescape(url), eat(beforeURL).test().end, {nonTerminated: false});\n\n  if (title) {\n    beforeTitle = eat(beforeTitle).test().end;\n    title = self.decode.raw(self.unescape(title), beforeTitle);\n  }\n\n  node = {\n    type: isImage ? 'image' : 'link',\n    title: title || null,\n    url: url\n  };\n\n  if (isImage) {\n    node.alt = self.decode.raw(self.unescape(content), now) || null;\n  } else {\n    exit = self.enterLink();\n    node.children = self.tokenizeInline(content, now);\n    exit();\n  }\n\n  return eat(subvalue)(node);\n}\n"]}]}