{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\color-util\\node_modules\\@antv\\util\\esm\\group-to-map.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\color-util\\node_modules\\@antv\\util\\esm\\group-to-map.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import isArray from './is-array';\r\nimport isFunction from './is-function';\r\nimport groupBy from './group-by';\r\nvar groupToMap = function (data, condition) {\r\n    if (!condition) {\r\n        return {\r\n            0: data,\r\n        };\r\n    }\r\n    if (!isFunction(condition)) {\r\n        var paramsCondition_1 = isArray(condition) ? condition : condition.replace(/\\s+/g, '').split('*');\r\n        condition = function (row) {\r\n            var unique = '_';\r\n            for (var i = 0, l = paramsCondition_1.length; i < l; i++) {\r\n                unique += row[paramsCondition_1[i]] && row[paramsCondition_1[i]].toString();\r\n            }\r\n            return unique;\r\n        };\r\n    }\r\n    var groups = groupBy(data, condition);\r\n    return groups;\r\n};\r\nexport default groupToMap;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\color-util\\node_modules\\@antv\\util\\esm\\group-to-map.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\color-util\\node_modules\\@antv\\util\\esm\\group-to-map.js"],"names":[],"mappings":"AAAA,OAAO,OAAO,MAAM,YAAY,CAAC;AACjC,OAAO,UAAU,MAAM,eAAe,CAAC;AACvC,OAAO,OAAO,MAAM,YAAY,CAAC;AACjC,IAAI,UAAU,GAAG,UAAU,IAAI,EAAE,SAAS;IACtC,IAAI,CAAC,SAAS,EAAE;QACZ,OAAO;YACH,CAAC,EAAE,IAAI;SACV,CAAC;KACL;IACD,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;QACxB,IAAI,iBAAiB,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAClG,SAAS,GAAG,UAAU,GAAG;YACrB,IAAI,MAAM,GAAG,GAAG,CAAC;YACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,iBAAiB,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACtD,MAAM,IAAI,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;aAC/E;YACD,OAAO,MAAM,CAAC;QAClB,CAAC,CAAC;KACL;IACD,IAAI,MAAM,GAAG,OAAO,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IACtC,OAAO,MAAM,CAAC;AAClB,CAAC,CAAC;AACF,eAAe,UAAU,CAAC","sourcesContent":["import isArray from './is-array';\nimport isFunction from './is-function';\nimport groupBy from './group-by';\nvar groupToMap = function (data, condition) {\n    if (!condition) {\n        return {\n            0: data,\n        };\n    }\n    if (!isFunction(condition)) {\n        var paramsCondition_1 = isArray(condition) ? condition : condition.replace(/\\s+/g, '').split('*');\n        condition = function (row) {\n            var unique = '_'; // 避免出现数字作为Key的情况，会进行按照数字的排序\n            for (var i = 0, l = paramsCondition_1.length; i < l; i++) {\n                unique += row[paramsCondition_1[i]] && row[paramsCondition_1[i]].toString();\n            }\n            return unique;\n        };\n    }\n    var groups = groupBy(data, condition);\n    return groups;\n};\nexport default groupToMap;\n//# sourceMappingURL=group-to-map.js.map"]}]}