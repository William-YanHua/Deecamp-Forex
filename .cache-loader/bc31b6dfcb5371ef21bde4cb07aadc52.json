{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/remark-parse/lib/tokenize/code-indented.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/remark-parse/lib/tokenize/code-indented.js","mtime":1516191690000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["'use strict';\nvar repeat = require('repeat-string');\nvar trim = require('trim-trailing-lines');\nmodule.exports = indentedCode;\nvar C_NEWLINE = '\\n';\nvar C_TAB = '\\t';\nvar C_SPACE = ' ';\nvar CODE_INDENT_COUNT = 4;\nvar CODE_INDENT = repeat(C_SPACE, CODE_INDENT_COUNT);\nfunction indentedCode(eat, value, silent) {\n    var index = -1;\n    var length = value.length;\n    var subvalue = '';\n    var content = '';\n    var subvalueQueue = '';\n    var contentQueue = '';\n    var character;\n    var blankQueue;\n    var indent;\n    while (++index < length) {\n        character = value.charAt(index);\n        if (indent) {\n            indent = false;\n            subvalue += subvalueQueue;\n            content += contentQueue;\n            subvalueQueue = '';\n            contentQueue = '';\n            if (character === C_NEWLINE) {\n                subvalueQueue = character;\n                contentQueue = character;\n            }\n            else {\n                subvalue += character;\n                content += character;\n                while (++index < length) {\n                    character = value.charAt(index);\n                    if (!character || character === C_NEWLINE) {\n                        contentQueue = character;\n                        subvalueQueue = character;\n                        break;\n                    }\n                    subvalue += character;\n                    content += character;\n                }\n            }\n        }\n        else if (character === C_SPACE &&\n            value.charAt(index + 1) === character &&\n            value.charAt(index + 2) === character &&\n            value.charAt(index + 3) === character) {\n            subvalueQueue += CODE_INDENT;\n            index += 3;\n            indent = true;\n        }\n        else if (character === C_TAB) {\n            subvalueQueue += character;\n            indent = true;\n        }\n        else {\n            blankQueue = '';\n            while (character === C_TAB || character === C_SPACE) {\n                blankQueue += character;\n                character = value.charAt(++index);\n            }\n            if (character !== C_NEWLINE) {\n                break;\n            }\n            subvalueQueue += blankQueue + character;\n            contentQueue += character;\n        }\n    }\n    if (content) {\n        if (silent) {\n            return true;\n        }\n        return eat(subvalue)({\n            type: 'code',\n            lang: null,\n            value: trim(content)\n        });\n    }\n}\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/remark-parse/lib/tokenize/code-indented.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/remark-parse/lib/tokenize/code-indented.js"],"names":[],"mappings":"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","sourcesContent":["'use strict';\n\nvar repeat = require('repeat-string');\nvar trim = require('trim-trailing-lines');\n\nmodule.exports = indentedCode;\n\nvar C_NEWLINE = '\\n';\nvar C_TAB = '\\t';\nvar C_SPACE = ' ';\n\nvar CODE_INDENT_COUNT = 4;\nvar CODE_INDENT = repeat(C_SPACE, CODE_INDENT_COUNT);\n\n/* Tokenise indented code. */\nfunction indentedCode(eat, value, silent) {\n  var index = -1;\n  var length = value.length;\n  var subvalue = '';\n  var content = '';\n  var subvalueQueue = '';\n  var contentQueue = '';\n  var character;\n  var blankQueue;\n  var indent;\n\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (indent) {\n      indent = false;\n\n      subvalue += subvalueQueue;\n      content += contentQueue;\n      subvalueQueue = '';\n      contentQueue = '';\n\n      if (character === C_NEWLINE) {\n        subvalueQueue = character;\n        contentQueue = character;\n      } else {\n        subvalue += character;\n        content += character;\n\n        while (++index < length) {\n          character = value.charAt(index);\n\n          if (!character || character === C_NEWLINE) {\n            contentQueue = character;\n            subvalueQueue = character;\n            break;\n          }\n\n          subvalue += character;\n          content += character;\n        }\n      }\n    } else if (\n      character === C_SPACE &&\n      value.charAt(index + 1) === character &&\n      value.charAt(index + 2) === character &&\n      value.charAt(index + 3) === character\n    ) {\n      subvalueQueue += CODE_INDENT;\n      index += 3;\n      indent = true;\n    } else if (character === C_TAB) {\n      subvalueQueue += character;\n      indent = true;\n    } else {\n      blankQueue = '';\n\n      while (character === C_TAB || character === C_SPACE) {\n        blankQueue += character;\n        character = value.charAt(++index);\n      }\n\n      if (character !== C_NEWLINE) {\n        break;\n      }\n\n      subvalueQueue += blankQueue + character;\n      contentQueue += character;\n    }\n  }\n\n  if (content) {\n    if (silent) {\n      return true;\n    }\n\n    return eat(subvalue)({\n      type: 'code',\n      lang: null,\n      value: trim(content)\n    });\n  }\n}\n"]}]}