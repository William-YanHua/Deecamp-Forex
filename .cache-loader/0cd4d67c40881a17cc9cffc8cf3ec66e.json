{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/chart/layout/auto.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/chart/layout/auto.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { each } from '@antv/util';\nimport { COMPONENT_TYPE } from '../../constant';\nimport { BBox } from '../../util/bbox';\nimport { isAutoPadding, parsePadding } from '../../util/padding';\nimport { PaddingCal } from './padding-cal';\nexport function calculatePadding(view) {\n    var padding = view.padding;\n    if (!isAutoPadding(padding)) {\n        return parsePadding(padding);\n    }\n    var viewBBox = view.viewBBox, autoPadding = view.autoPadding;\n    var paddingCal = new PaddingCal();\n    each(view.getComponents(), function (co) {\n        var component = co.component, type = co.type;\n        if (type === COMPONENT_TYPE.GRID || type === COMPONENT_TYPE.TOOLTIP) {\n            return;\n        }\n        var bboxObject = component.getLayoutBBox();\n        var componentBBox = new BBox(bboxObject.x, bboxObject.y, bboxObject.width, bboxObject.height);\n        if (type === COMPONENT_TYPE.AXIS) {\n            var exceed = componentBBox.exceed(viewBBox);\n            paddingCal.shrink(exceed);\n        }\n        else {\n            var direction = co.direction;\n            paddingCal.inc(componentBBox, direction);\n        }\n    });\n    var calculatedPadding = paddingCal.getPadding();\n    if (autoPadding) {\n        var appendPadding = parsePadding(view.appendPadding);\n        return [\n            Math.max(autoPadding[0] - appendPadding[0], calculatedPadding[0]),\n            Math.max(autoPadding[1] - appendPadding[1], calculatedPadding[1]),\n            Math.max(autoPadding[2] - appendPadding[2], calculatedPadding[2]),\n            Math.max(autoPadding[3] - appendPadding[3], calculatedPadding[3]),\n        ];\n    }\n    return calculatedPadding;\n}\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/chart/layout/auto.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/chart/layout/auto.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,YAAY,CAAC;AAClC,OAAO,EAAE,cAAc,EAAE,MAAM,gBAAgB,CAAC;AAChD,OAAO,EAAE,IAAI,EAAE,MAAM,iBAAiB,CAAC;AACvC,OAAO,EAAE,aAAa,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAC;AACjE,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAM3C,MAAM,UAAU,gBAAgB,CAAC,IAAI;IACjC,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;IAE3B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE;QACzB,OAAO,YAAY,CAAC,OAAO,CAAC,CAAC;KAChC;IAED,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;IAC7D,IAAI,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;IAClC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,UAAU,EAAE;QACnC,IAAI,SAAS,GAAG,EAAE,CAAC,SAAS,EAAE,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC;QAE7C,IAAI,IAAI,KAAK,cAAc,CAAC,IAAI,IAAI,IAAI,KAAK,cAAc,CAAC,OAAO,EAAE;YACjE,OAAO;SACV;QACD,IAAI,UAAU,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;QAC3C,IAAI,aAAa,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC;QAC9F,IAAI,IAAI,KAAK,cAAc,CAAC,IAAI,EAAE;YAC9B,IAAI,MAAM,GAAG,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAC5C,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SAC7B;aACI;YAED,IAAI,SAAS,GAAG,EAAE,CAAC,SAAS,CAAC;YAG7B,UAAU,CAAC,GAAG,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;SAC5C;IACL,CAAC,CAAC,CAAC;IACH,IAAI,iBAAiB,GAAG,UAAU,CAAC,UAAU,EAAE,CAAC;IAChD,IAAI,WAAW,EAAE;QACb,IAAI,aAAa,GAAG,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAErD,OAAO;YACH,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAAC,CAAC,CAAC;YACjE,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAAC,CAAC,CAAC;YACjE,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAAC,CAAC,CAAC;YACjE,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAAC,CAAC,CAAC;SACpE,CAAC;KACL;IACD,OAAO,iBAAiB,CAAC;AAC7B,CAAC","sourcesContent":["import { each } from '@antv/util';\nimport { COMPONENT_TYPE } from '../../constant';\nimport { BBox } from '../../util/bbox';\nimport { isAutoPadding, parsePadding } from '../../util/padding';\nimport { PaddingCal } from './padding-cal';\n/**\n * @ignore\n * 根据 view 中的组件，计算实际的 padding 数值\n * @param view\n */\nexport function calculatePadding(view) {\n    var padding = view.padding;\n    // 如果不是 auto padding，那么直接解析之后返回\n    if (!isAutoPadding(padding)) {\n        return parsePadding(padding);\n    }\n    // 是 auto padding，根据组件的情况，来计算 padding\n    var viewBBox = view.viewBBox, autoPadding = view.autoPadding;\n    var paddingCal = new PaddingCal();\n    each(view.getComponents(), function (co) {\n        var component = co.component, type = co.type;\n        // grid, tooltip 不参入 padding 布局\n        if (type === COMPONENT_TYPE.GRID || type === COMPONENT_TYPE.TOOLTIP) {\n            return;\n        }\n        var bboxObject = component.getLayoutBBox();\n        var componentBBox = new BBox(bboxObject.x, bboxObject.y, bboxObject.width, bboxObject.height);\n        if (type === COMPONENT_TYPE.AXIS) {\n            var exceed = componentBBox.exceed(viewBBox);\n            paddingCal.shrink(exceed);\n        }\n        else {\n            // 按照方向计算 padding\n            var direction = co.direction;\n            // const direction =\n            //   type === COMPONENT_TYPE.AXIS ? getTranslateDirection(co.direction, view.getCoordinate()) : co.direction;\n            paddingCal.inc(componentBBox, direction);\n        }\n    });\n    var calculatedPadding = paddingCal.getPadding();\n    if (autoPadding) {\n        var appendPadding = parsePadding(view.appendPadding);\n        // 取上一次以及当前计算结果的最大区间\n        return [\n            Math.max(autoPadding[0] - appendPadding[0], calculatedPadding[0]),\n            Math.max(autoPadding[1] - appendPadding[1], calculatedPadding[1]),\n            Math.max(autoPadding[2] - appendPadding[2], calculatedPadding[2]),\n            Math.max(autoPadding[3] - appendPadding[3], calculatedPadding[3]),\n        ];\n    }\n    return calculatedPadding;\n}\n//# sourceMappingURL=auto.js.map"]}]}