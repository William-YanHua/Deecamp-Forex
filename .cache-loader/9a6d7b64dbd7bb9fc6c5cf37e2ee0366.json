{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\src\\app\\api\\mock\\QuotationServiceMock.ts","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\src\\app\\api\\mock\\QuotationServiceMock.ts","mtime":1596379644455},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { Injectable } from \"react.di\";\r\nimport { QuotationService } from \"../QuotationService\";\r\nimport stockMock from \"./mockStockQuotation.json\";\r\nvar QuotationServiceMock = (function (_super) {\r\n    __extends(QuotationServiceMock, _super);\r\n    function QuotationServiceMock() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    QuotationServiceMock.prototype.getNews = function () {\r\n        return __awaiter(this, void 0, Promise, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2, [\r\n                        { time: \"09-16 17:38\",\r\n                            content: \"英媒称，大学跟大学不一样，毕业生找工作，学历上填哪些学校最能让雇主眼睛一亮？文凭“含金量”谁高谁低？\\n\\n\" +\r\n                                \"据英国广播公司网站9月14日报道，根据新出炉的2019全球大学毕业生“抢手程度”排行榜，美国麻省理工大学毫无悬念位居榜首。\\n\\n\" +\r\n                                \"报道称，中国的清华、北大、复旦和香港大学名列30强。发布排行榜的英国QS集团指出，这体现了中国经济实力的提升。\\n\\n\" +\r\n                                \"报道还称，这个毕业生就业能力排行榜跟QS世界大学排行榜有所不同，更多体现就业市场对大学的青睐程度。\\n\\n\" +\r\n                                \"报道指出，两者主要区别在于前者更多体现了学生毕业后的职业发展前景和学术成就，主要衡量标准包括雇主对学校的评价、校友的职业发展情况、教研团队与雇主的合作关系、雇主与学生的关联程度、毕业生就业率等几个方面。\\n\\n\" +\r\n                                \"排行榜基于42000个雇主的评估编制。\\n\\n\" +\r\n                                \"让雇主回答的问题是：你们从哪里招到那些“能力最强、最有创新力、效率最高的”毕业生？\\n\\n\" +\r\n                                \"报道称，除了应届毕业生，校友的职业发展和成就也是衡量指标之一。比如，世界各行各业的顶级精英毕业于哪些大学，雇主和大学的合作程度多深，等等。\\n\\n\" +\r\n                                \"QS研究部门负责人索特解释，大学学费不断上涨，就业市场竞争不断激烈，所以在选择上哪所大学时，毕业后找工作的难易和职业发展前景便成了重要考虑因素。\\n\\n\" +\r\n                                \"QS的另一份榜单，世界大学排行榜，从2004年开始发表，最初与《泰晤士高等教育》合作编制，2009年分道扬镳，各自发表不同的排名。\\n\\n\" +\r\n                                \"报道称，这个榜单的衡量指标包括学术成就、雇主评估、师生比例、教师论文被引述情况、国际教师和国际学生比例等。麻省理工大学连续7年在这份榜单上名列榜首。\\n\\n\" +\r\n                                \"不过，QS的大学排名评估指标也有客观性不足的争议。\\n\\n\" +\r\n                                \"报道称，比较大学毕业生就业能力排行榜和世界大学排行榜，可以发现耶鲁大学、哥伦比亚大学、南洋理工大学、新加坡国立大学、加州理工学院和洛桑理工学院等大学排行榜上名列前茅的顶级院校，都未能进入就业能力排行榜前30名。\\n\\n\" +\r\n                                \"澳大利亚两所大学，悉尼大学和墨尔本大学，在QS世界大学排行榜上没有进入前30名，但在“文凭含金量”排行榜上分别名列第五和第六。\\n\\n\" +\r\n                                \"QS数据显示，主要原因是这两所大学的毕业生更受雇主和猎头公司欢迎。\\n\\n\" +\r\n                                \"麻省理工大学在两个排行榜上多年来稳居第一，除了科技教研和创新一流，还有诸多著名校友，比如前联合国秘书长安南。斯坦福大学校友群也是明星荟萃。\\n\\n\" +\r\n                                \"报道称，这个排行榜上排名最高的英国大学是剑桥，第七，牛津排第十。跟其他“更受雇主青睐”的大学相比，英国的大学在跟雇主合作关系和毕业生就业前景方面失分较多。\\n\\n\" +\r\n                                \"中国的清华大学排名第九，北京大学排第二十。\\n\\n\" +\r\n                                \"报道称，全球大学毕业生就业能力500强榜单上，美国大学83所（16.6%），西欧大学144所（28.8%），亚洲102所（20.4%）。\\n\\n\" +\r\n                                \"责任编辑：孟行 \\n\\n\",\r\n                            title: \"全球大学文凭\\\"含金量\\\"排名出炉:\\\"北清复\\\"名列30强\" },\r\n                        { time: \"09-16 17:36\",\r\n                            content: \"新浪财经讯 山东黄金公告，根据发行上市的时间安排，\" +\r\n                                \"公司9月14日在香港刊登并派发H股招股说明书。公司H股香港公开发售于9月14日开始，9月20日结束，并预计于9月27日或之前，公布国际发售和香港公开发售的认购情况及香港公开发售股份的分配结果。\" +\r\n                                \"H股预计9月28日在香港联交所挂牌并开始上市交易。\\n\\n\" +\r\n                                \"责任编辑：白仲平 \\n\\n\",\r\n                            title: \"山东黄金：公司H股预计9月28日在香港联交所挂牌上市\" },\r\n                    ]];\r\n            });\r\n        });\r\n    };\r\n    QuotationServiceMock.prototype.getStockQuotationData = function () {\r\n        return __awaiter(this, void 0, Promise, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2, stockMock];\r\n            });\r\n        });\r\n    };\r\n    QuotationServiceMock.prototype.getBondQuotationData = function () {\r\n        return __awaiter(this, void 0, Promise, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2, stockMock];\r\n            });\r\n        });\r\n    };\r\n    QuotationServiceMock.prototype.getDetailStockQuotation = function (quotaId) {\r\n        return __awaiter(this, void 0, Promise, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2, {\r\n                        quotaId: \"HK1810\",\r\n                        quotaName: \"小米集团\",\r\n                        currentVolume: 16.50,\r\n                        rising: -1.79,\r\n                        upAndDown: 0.300,\r\n                        todayPrice: 16.800,\r\n                        yesterdayPrice: 14.24,\r\n                        highest: 16.860,\r\n                        lowest: 16.380,\r\n                        totalVolume: 3.35,\r\n                        totalQuantity: 2024.26,\r\n                        history: stockMock,\r\n                    }];\r\n            });\r\n        });\r\n    };\r\n    QuotationServiceMock.prototype.getGoodsQuotationData = function () {\r\n        return __awaiter(this, void 0, Promise, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2, stockMock];\r\n            });\r\n        });\r\n    };\r\n    QuotationServiceMock = __decorate([\r\n        Injectable\r\n    ], QuotationServiceMock);\r\n    return QuotationServiceMock;\r\n}(QuotationService));\r\nexport { QuotationServiceMock };\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\src\\app\\api\\mock\\QuotationServiceMock.ts","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\src\\app\\api\\mock\\QuotationServiceMock.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAO,EAAE,UAAU,EAAE,MAAM,UAAU,CAAC;AACtC,OAAO,EAAC,gBAAgB,EAAC,MAAM,qBAAqB,CAAC;AAKrD,OAAO,SAAS,MAAM,2BAA2B,CAAC;AAMlD;IAA0C,wCAAgB;IAA1D;;IAuEA,CAAC;IArEO,sCAAO,GAAb;uCAAiB,OAAO;;gBAEtB,WAAO;wBACL,EAAE,IAAI,EAAE,aAAa;4BACnB,OAAO,EAAE,wDAAwD;gCACjE,mEAAmE;gCACnE,6DAA6D;gCAC7D,uDAAuD;gCACvD,2GAA2G;gCAC3G,yBAAyB;gCACzB,+CAA+C;gCAC/C,2EAA2E;gCAC3E,8EAA8E;gCAC9E,uEAAuE;gCACvE,gFAAgF;gCAChF,+BAA+B;gCAC/B,+GAA+G;gCAC/G,qEAAqE;gCACrE,uCAAuC;gCACvC,2EAA2E;gCAC3E,mFAAmF;gCACnF,2BAA2B;gCAC3B,0EAA0E;gCAC1E,cAAc;4BACd,KAAK,EAAE,gCAAgC,EAAE;wBAC3C,EAAE,IAAI,EAAE,aAAa;4BACnB,OAAO,EAAE,2BAA2B;gCACpC,kGAAkG;gCAClG,+BAA+B;gCAC7B,eAAe;4BACjB,KAAK,EAAE,4BAA4B,EAAE;qBACxC,EAAC;;;KACH;IAEK,oDAAqB,GAA3B;uCAA+B,OAAO;;gBACpC,WAAO,SAAS,EAAC;;;KAClB;IAEK,mDAAoB,GAA1B;uCAA8B,OAAO;;gBACnC,WAAO,SAAS,EAAC;;;KAClB;IAOK,sDAAuB,GAA7B,UAA8B,OAAe;uCAAG,OAAO;;gBACrD,WAAO;wBACL,OAAO,EAAE,QAAQ;wBACjB,SAAS,EAAE,MAAM;wBACjB,aAAa,EAAE,KAAK;wBACpB,MAAM,EAAE,CAAC,IAAI;wBACb,SAAS,EAAE,KAAK;wBAChB,UAAU,EAAE,MAAM;wBAClB,cAAc,EAAE,KAAK;wBACrB,OAAO,EAAE,MAAM;wBACf,MAAM,EAAE,MAAM;wBACd,WAAW,EAAE,IAAI;wBACjB,aAAa,EAAE,OAAO;wBAGtB,OAAO,EAAE,SAAS;qBACnB,EAAC;;;KACH;IAEK,oDAAqB,GAA3B;uCAA+B,OAAO;;gBACpC,WAAO,SAAS,EAAC;;;KAClB;IAtEU,oBAAoB;QADhC,UAAU;OACE,oBAAoB,CAuEhC;IAAD,2BAAC;CAAA,AAvED,CAA0C,gBAAgB,GAuEzD;SAvEY,oBAAoB","sourcesContent":["import {StockQuotation} from \"../../models/quotation/stock/StockQuotation\";\r\nimport { Injectable } from \"react.di\";\r\nimport {QuotationService} from \"../QuotationService\";\r\nimport { StockDetailQuotation } from \"../../models/quotation/stock/StockDetailQuotation\";\r\nimport { BondQuotation } from \"../../models/quotation/bond/BondQuotation\";\r\nimport { GoodsQuotation } from \"../../models/quotation/goods/GoodsQuotation\";\r\n\r\nimport stockMock from \"./mockStockQuotation.json\";\r\nimport { News } from \"../../models/quotation/news/News\";\r\nimport { waitForMs } from \"../../../utils/Wait\";\r\nimport { mockComponent } from \"react-dom/test-utils\";\r\n\r\n@Injectable\r\nexport class QuotationServiceMock extends QuotationService {\r\n\r\n  async getNews(): Promise<News[]> {\r\n    // await waitForMs(3000);\r\n    return [\r\n      { time: \"09-16 17:38\",\r\n        content: \"英媒称，大学跟大学不一样，毕业生找工作，学历上填哪些学校最能让雇主眼睛一亮？文凭“含金量”谁高谁低？\\n\\n\" +\r\n        \"据英国广播公司网站9月14日报道，根据新出炉的2019全球大学毕业生“抢手程度”排行榜，美国麻省理工大学毫无悬念位居榜首。\\n\\n\" +\r\n        \"报道称，中国的清华、北大、复旦和香港大学名列30强。发布排行榜的英国QS集团指出，这体现了中国经济实力的提升。\\n\\n\" +\r\n        \"报道还称，这个毕业生就业能力排行榜跟QS世界大学排行榜有所不同，更多体现就业市场对大学的青睐程度。\\n\\n\" +\r\n        \"报道指出，两者主要区别在于前者更多体现了学生毕业后的职业发展前景和学术成就，主要衡量标准包括雇主对学校的评价、校友的职业发展情况、教研团队与雇主的合作关系、雇主与学生的关联程度、毕业生就业率等几个方面。\\n\\n\" +\r\n        \"排行榜基于42000个雇主的评估编制。\\n\\n\" +\r\n        \"让雇主回答的问题是：你们从哪里招到那些“能力最强、最有创新力、效率最高的”毕业生？\\n\\n\" +\r\n        \"报道称，除了应届毕业生，校友的职业发展和成就也是衡量指标之一。比如，世界各行各业的顶级精英毕业于哪些大学，雇主和大学的合作程度多深，等等。\\n\\n\" +\r\n        \"QS研究部门负责人索特解释，大学学费不断上涨，就业市场竞争不断激烈，所以在选择上哪所大学时，毕业后找工作的难易和职业发展前景便成了重要考虑因素。\\n\\n\" +\r\n        \"QS的另一份榜单，世界大学排行榜，从2004年开始发表，最初与《泰晤士高等教育》合作编制，2009年分道扬镳，各自发表不同的排名。\\n\\n\" +\r\n        \"报道称，这个榜单的衡量指标包括学术成就、雇主评估、师生比例、教师论文被引述情况、国际教师和国际学生比例等。麻省理工大学连续7年在这份榜单上名列榜首。\\n\\n\" +\r\n        \"不过，QS的大学排名评估指标也有客观性不足的争议。\\n\\n\" +\r\n        \"报道称，比较大学毕业生就业能力排行榜和世界大学排行榜，可以发现耶鲁大学、哥伦比亚大学、南洋理工大学、新加坡国立大学、加州理工学院和洛桑理工学院等大学排行榜上名列前茅的顶级院校，都未能进入就业能力排行榜前30名。\\n\\n\" +\r\n        \"澳大利亚两所大学，悉尼大学和墨尔本大学，在QS世界大学排行榜上没有进入前30名，但在“文凭含金量”排行榜上分别名列第五和第六。\\n\\n\" +\r\n        \"QS数据显示，主要原因是这两所大学的毕业生更受雇主和猎头公司欢迎。\\n\\n\" +\r\n        \"麻省理工大学在两个排行榜上多年来稳居第一，除了科技教研和创新一流，还有诸多著名校友，比如前联合国秘书长安南。斯坦福大学校友群也是明星荟萃。\\n\\n\" +\r\n        \"报道称，这个排行榜上排名最高的英国大学是剑桥，第七，牛津排第十。跟其他“更受雇主青睐”的大学相比，英国的大学在跟雇主合作关系和毕业生就业前景方面失分较多。\\n\\n\" +\r\n        \"中国的清华大学排名第九，北京大学排第二十。\\n\\n\" +\r\n        \"报道称，全球大学毕业生就业能力500强榜单上，美国大学83所（16.6%），西欧大学144所（28.8%），亚洲102所（20.4%）。\\n\\n\" +\r\n        \"责任编辑：孟行 \\n\\n\",\r\n        title: \"全球大学文凭\\\"含金量\\\"排名出炉:\\\"北清复\\\"名列30强\" },\r\n      { time: \"09-16 17:36\",\r\n        content: \"新浪财经讯 山东黄金公告，根据发行上市的时间安排，\" +\r\n        \"公司9月14日在香港刊登并派发H股招股说明书。公司H股香港公开发售于9月14日开始，9月20日结束，并预计于9月27日或之前，公布国际发售和香港公开发售的认购情况及香港公开发售股份的分配结果。\" +\r\n        \"H股预计9月28日在香港联交所挂牌并开始上市交易。\\n\\n\" +\r\n          \"责任编辑：白仲平 \\n\\n\",\r\n        title: \"山东黄金：公司H股预计9月28日在香港联交所挂牌上市\" },\r\n    ];\r\n  }\r\n\r\n  async getStockQuotationData(): Promise<StockQuotation[]> {\r\n    return stockMock;\r\n  }\r\n\r\n  async getBondQuotationData(): Promise<BondQuotation[]> {\r\n    return stockMock;\r\n  }\r\n\r\n  /**\r\n   * 得到一支股票标的信息\r\n   * @param {string} quotaId 标的id\r\n   * @returns {Promise<StockQuotation>} 标的信息\r\n   */\r\n  async getDetailStockQuotation(quotaId: string): Promise<StockDetailQuotation> {\r\n    return {\r\n      quotaId: \"HK1810\", // 标的合约代码\r\n      quotaName: \"小米集团\", // 标的名称\r\n      currentVolume: 16.50, // 现价\r\n      rising: -1.79, // 涨幅：百分比\r\n      upAndDown: 0.300, // 涨跌幅：百分比\r\n      todayPrice: 16.800, // 今日开幅\r\n      yesterdayPrice: 14.24,\r\n      highest: 16.860, // 今日最高\r\n      lowest: 16.380, // 今日最低\r\n      totalVolume: 3.35, // 总成交额:亿\r\n      totalQuantity: 2024.26, // 总成交量：万\r\n      // totalMarketValue: 3725.31, // 总市值:亿\r\n      // circulatedMarketValue: 3725.31, // 流通市值：亿,\r\n      history: stockMock,\r\n    };\r\n  }\r\n\r\n  async getGoodsQuotationData(): Promise<GoodsQuotation[]> {\r\n    return stockMock;\r\n  }\r\n}\r\n"]}]}