{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\src\\app\\pages\\QuotationPage\\StockQuotation\\StockMarketQuotationPage.tsx","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\src\\app\\pages\\QuotationPage\\StockQuotation\\StockMarketQuotationPage.tsx","mtime":1596379644599},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Inject } from \"react.di\";\r\nimport { QuotationService } from \"../../../api/QuotationService\";\r\nimport moment from 'moment';\r\nimport { Line } from '@antv/g2plot';\r\nimport Slider from \"antd/lib/slider\";\r\nimport \"antd/lib/slider/style/index.js\";\r\nimport Card from \"antd/lib/card\";\r\nimport \"antd/lib/card/style/index.js\";\r\nimport DatePicker from \"antd/lib/date-picker\";\r\nimport \"antd/lib/date-picker/style/index.js\";\r\nimport message from \"antd/lib/message\";\r\nimport \"antd/lib/message/style/index.js\";\r\nimport Icon from \"antd/lib/icon\";\r\nimport \"antd/lib/icon/style/index.js\";\r\nimport Tag from \"antd/lib/tag\";\r\nimport \"antd/lib/tag/style/index.js\";\r\nimport _ from 'lodash';\r\nvar dateFormat = 'YYYY-MM-DD';\r\nvar RangePicker = DatePicker.RangePicker;\r\nvar Prompt = styled.p.withConfig({ displayName: \"Prompt\" })(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  color: #FFFFFF;\\n\"], [\"\\n  color: #FFFFFF;\\n\"])));\r\nvar StockMarketQuotationPage = (function (_super) {\r\n    __extends(StockMarketQuotationPage, _super);\r\n    function StockMarketQuotationPage(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.state = {\r\n            data: null,\r\n            linePlot: null,\r\n            lookingYear: 2001,\r\n            lookingTime: [moment('2001-01-01', dateFormat), moment('2001-01-08', dateFormat)],\r\n            profitRate: { 2001: 1 }\r\n        };\r\n        _this.filterData = function (data) {\r\n            var temp_data = [];\r\n            var lookingTime = _this.state.lookingTime;\r\n            var start_time = lookingTime[0];\r\n            var end_time = lookingTime[1];\r\n            var max_value = -10, min_value = 100;\r\n            var count = 0;\r\n            data.forEach(function (item) {\r\n                if (start_time <= moment(item.time) && moment(item.time) <= end_time) {\r\n                    if (!item.hasOwnProperty('strategy')) {\r\n                        temp_data.push(item);\r\n                    }\r\n                    else {\r\n                        if (item.strategy === 1) {\r\n                            item.strategy = '买入';\r\n                        }\r\n                        else if (item.strategy === 0) {\r\n                            item.strategy = '持有';\r\n                        }\r\n                        else if (item.strategy === -1) {\r\n                            item.strategy = '卖出';\r\n                        }\r\n                        temp_data.push(item);\r\n                    }\r\n                    if (item.bid > max_value) {\r\n                        max_value = item.bid;\r\n                    }\r\n                    if (item.bid < min_value) {\r\n                        min_value = item.bid;\r\n                    }\r\n                }\r\n            });\r\n            return [temp_data, max_value, min_value];\r\n        };\r\n        _this.getInOutData = function (temp_data) {\r\n            var inData = [], outData = [];\r\n            temp_data.forEach(function (item) {\r\n                if (item.hasOwnProperty('strategy')) {\r\n                    if (item.strategy === '买入') {\r\n                        inData.push(item);\r\n                    }\r\n                    else if (item.strategy === '卖出') {\r\n                        outData.push(item);\r\n                    }\r\n                }\r\n            });\r\n            return [inData, outData];\r\n        };\r\n        _this.showLine = function () {\r\n            var data = _this.state.data;\r\n            var filter_result = _this.filterData(data);\r\n            var temp_data = filter_result[0];\r\n            var max_value = filter_result[1];\r\n            var min_value = filter_result[2];\r\n            var markData = _this.getInOutData(temp_data);\r\n            var config = {\r\n                title: {\r\n                    visible: true,\r\n                    text: '买卖策略图'\r\n                },\r\n                label: {\r\n                    visible: false,\r\n                    type: 'point',\r\n                },\r\n                point: {\r\n                    visible: true,\r\n                    size: 2,\r\n                    shape: 'diamond',\r\n                    style: {\r\n                        fill: 'white',\r\n                        stroke: '#2593fc',\r\n                        lineWidth: 2,\r\n                    },\r\n                },\r\n                padding: 'auto',\r\n                forceFit: true,\r\n                data: temp_data,\r\n                xField: 'time',\r\n                yField: 'bid',\r\n                yAxis: {\r\n                    min: min_value,\r\n                    max: max_value\r\n                },\r\n                legend: {\r\n                    position: 'right-top',\r\n                },\r\n                responsive: true,\r\n                tooltip: {\r\n                    custom: {\r\n                        onChange: function (containerDom, cfg) {\r\n                            var items = cfg.items;\r\n                            var data = _.filter(items, { name: 'strategy' });\r\n                            if (data.length !== 0) {\r\n                                return;\r\n                            }\r\n                            var strategy = items[0].data.strategy;\r\n                            var new_item = __assign({}, items[0], { name: 'strategy', value: strategy });\r\n                            items.push(new_item);\r\n                        },\r\n                    },\r\n                },\r\n                animation: {\r\n                    appear: {\r\n                        animation: 'clipingWithData',\r\n                    },\r\n                },\r\n                smooth: true,\r\n                markerPoints: [\r\n                    {\r\n                        visible: true,\r\n                        data: markData[0],\r\n                        symbol: '',\r\n                        label: {\r\n                            visible: true,\r\n                            field: 'strategy',\r\n                            offsetY: -8\r\n                        },\r\n                        style: {\r\n                            big: { stroke: 'rgba(255, 0, 255, 0.7)', lineWidth: 3 }\r\n                        },\r\n                    },\r\n                    {\r\n                        visible: true,\r\n                        data: markData[1],\r\n                        symbol: 'cross',\r\n                        label: {\r\n                            visible: true,\r\n                            field: 'strategy',\r\n                            offsetY: 24\r\n                        },\r\n                        style: {\r\n                            normal: { stroke: 'rgba(255, 0, 0, 0.65)', lineWidth: 3 },\r\n                        },\r\n                    }\r\n                ],\r\n                seriesField: 'type',\r\n            };\r\n            var linePlot = new Line(document.getElementById('graph-container'), config);\r\n            _this.setState({ linePlot: linePlot });\r\n            linePlot.render();\r\n        };\r\n        _this.getData = function (year) { return __awaiter(_this, void 0, void 0, function () {\r\n            var responce;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!(year !== this.state.lookingYear)) return [3, 3];\r\n                        return [4, this.quotationService.getData(year, year + 1)];\r\n                    case 1:\r\n                        responce = _a.sent();\r\n                        return [4, this.setState({ data: responce.data, lookingYear: year })];\r\n                    case 2:\r\n                        _a.sent();\r\n                        _a.label = 3;\r\n                    case 3: return [2, this.state.data];\r\n                }\r\n            });\r\n        }); };\r\n        _this.onRangeChange = function (v) { return __awaiter(_this, void 0, void 0, function () {\r\n            var data, responce, linePlot, filterResult, temp_data, max_value, min_value, markData;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.setState({ lookingTime: [v[0], v[1]] })];\r\n                    case 1:\r\n                        _a.sent();\r\n                        data = null;\r\n                        if (!(v[1].year() - v[0].year() > 1)) return [3, 2];\r\n                        return [2, (message.warning('对不起，您选择的时间范围过长！请选择较短的预测时间查看。', 5))];\r\n                    case 2:\r\n                        if (!(v[1].year() === v[0].year())) return [3, 4];\r\n                        return [4, this.getData(v[1].year())];\r\n                    case 3:\r\n                        data = _a.sent();\r\n                        return [3, 7];\r\n                    case 4:\r\n                        if (!(v[1].year() - v[0].year() === 1)) return [3, 7];\r\n                        return [4, this.quotationService.getData(v[0].year(), v[1].year() + 1)];\r\n                    case 5:\r\n                        responce = _a.sent();\r\n                        return [4, this.setState({ data: responce.data })];\r\n                    case 6:\r\n                        _a.sent();\r\n                        data = this.state.data;\r\n                        _a.label = 7;\r\n                    case 7:\r\n                        linePlot = this.state.linePlot;\r\n                        filterResult = this.filterData(data);\r\n                        temp_data = filterResult[0];\r\n                        max_value = filterResult[1];\r\n                        min_value = filterResult[2];\r\n                        markData = this.getInOutData(temp_data);\r\n                        linePlot.updateConfig({\r\n                            data: temp_data,\r\n                            yAxis: {\r\n                                min: min_value,\r\n                                max: max_value\r\n                            },\r\n                            markerPoints: [\r\n                                {\r\n                                    visible: true,\r\n                                    data: markData[0],\r\n                                    symbol: '',\r\n                                    label: {\r\n                                        visible: true,\r\n                                        field: 'strategy',\r\n                                        offsetY: -8\r\n                                    },\r\n                                    style: {\r\n                                        big: { stroke: 'rgba(255, 0, 255, 0.7)', lineWidth: 3 }\r\n                                    },\r\n                                },\r\n                                {\r\n                                    visible: true,\r\n                                    data: markData[1],\r\n                                    symbol: 'cross',\r\n                                    label: {\r\n                                        visible: true,\r\n                                        field: 'strategy',\r\n                                        offsetY: 24\r\n                                    },\r\n                                    style: {\r\n                                        normal: { stroke: 'rgba(255, 0, 0, 0.65)', lineWidth: 3 },\r\n                                    },\r\n                                }\r\n                            ],\r\n                        });\r\n                        linePlot.render();\r\n                        return [2];\r\n                }\r\n            });\r\n        }); };\r\n        return _this;\r\n    }\r\n    StockMarketQuotationPage.prototype.componentWillMount = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2];\r\n            });\r\n        });\r\n    };\r\n    StockMarketQuotationPage.prototype.componentDidMount = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var data, profitRate;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!!this.state.data) return [3, 3];\r\n                        return [4, this.quotationService.getData(2001, null)];\r\n                    case 1:\r\n                        data = _a.sent();\r\n                        return [4, this.setState({ data: data.data })];\r\n                    case 2:\r\n                        _a.sent();\r\n                        _a.label = 3;\r\n                    case 3: return [4, this.quotationService.getProfit()];\r\n                    case 4:\r\n                        profitRate = _a.sent();\r\n                        return [4, this.setState({ profitRate: profitRate })];\r\n                    case 5:\r\n                        _a.sent();\r\n                        this.showLine();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    StockMarketQuotationPage.prototype.sliderChange = function (value, quotationService) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var data, lookingTime, filter_result, temp_data, max_value, min_value, linePlot, markData;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        value = 2001 + value * 19 / 100;\r\n                        return [4, quotationService.getData(value)];\r\n                    case 1:\r\n                        data = _a.sent();\r\n                        lookingTime = [moment(value + \"-01-01\", dateFormat), moment(value + \"-01-06 \", dateFormat)];\r\n                        return [4, this.setState({ data: data.data, lookingTime: lookingTime, lookingYear: value })];\r\n                    case 2:\r\n                        _a.sent();\r\n                        filter_result = this.filterData(data.data);\r\n                        temp_data = filter_result[0];\r\n                        max_value = filter_result[1];\r\n                        min_value = filter_result[2];\r\n                        linePlot = this.state.linePlot;\r\n                        markData = this.getInOutData(temp_data);\r\n                        linePlot.updateConfig({\r\n                            data: temp_data,\r\n                            yAxis: {\r\n                                min: min_value,\r\n                                max: max_value\r\n                            },\r\n                            markerPoints: [\r\n                                {\r\n                                    visible: true,\r\n                                    data: markData[0],\r\n                                    symbol: '',\r\n                                    label: {\r\n                                        visible: true,\r\n                                        field: 'strategy',\r\n                                        offsetY: -8\r\n                                    },\r\n                                    style: {\r\n                                        big: { stroke: 'rgba(255, 0, 255, 0.7)', lineWidth: 3 }\r\n                                    },\r\n                                },\r\n                                {\r\n                                    visible: true,\r\n                                    data: markData[1],\r\n                                    symbol: 'cross',\r\n                                    label: {\r\n                                        visible: true,\r\n                                        field: 'strategy',\r\n                                        offsetY: 24\r\n                                    },\r\n                                    style: {\r\n                                        normal: { stroke: 'rgba(255, 0, 0, 0.65)', lineWidth: 3 },\r\n                                    },\r\n                                }\r\n                            ],\r\n                        });\r\n                        linePlot.render();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    StockMarketQuotationPage.prototype.render = function () {\r\n        var _a = this.state, profitRate = _a.profitRate, lookingYear = _a.lookingYear;\r\n        var profits = profitRate[lookingYear];\r\n        var color = profits > 0 ? \"green\" : \"red\";\r\n        return (React.createElement(Card, null,\r\n            React.createElement(\"div\", null,\r\n                React.createElement(\"strong\", null, \"\\u9009\\u62E9\\u67E5\\u770B\\u7684\\u65F6\\u95F4\\u6BB5\")),\r\n            React.createElement(RangePicker, { defaultValue: this.state.lookingTime, onChange: this.onRangeChange, renderExtraFooter: function () { return '请选择最长半年的时间查看！'; } }),\r\n            React.createElement(\"br\", null),\r\n            React.createElement(\"br\", null),\r\n            React.createElement(\"div\", null,\r\n                React.createElement(Tag, { color: color },\r\n                    this.state.lookingYear,\r\n                    \"\\u7684\\u5E74\\u6536\\u76CA\\u7387\\uFF1A\",\r\n                    profits)),\r\n            React.createElement(\"div\", { id: 'graph-container' })));\r\n    };\r\n    var _a;\r\n    __decorate([\r\n        Inject,\r\n        __metadata(\"design:type\", typeof (_a = typeof QuotationService !== \"undefined\" && QuotationService) === \"function\" ? _a : Object)\r\n    ], StockMarketQuotationPage.prototype, \"quotationService\", void 0);\r\n    return StockMarketQuotationPage;\r\n}(React.Component));\r\nexport default StockMarketQuotationPage;\r\nvar templateObject_1;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\src\\app\\pages\\QuotationPage\\StockQuotation\\StockMarketQuotationPage.tsx","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\src\\app\\pages\\QuotationPage\\StockQuotation\\StockMarketQuotationPage.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from \"react\";\r\n// import { Row, Col, Card } from \"antd\";\r\n// import { QuotationChart } from \"../QuotationChart\";\r\nimport styled from \"styled-components\";\r\n// import {PriceChangeRatioForm} from \"../PriceChangeRatioForm\";\r\n// import { AsyncComponent } from \"../../../routing/AsyncComponent\";\r\nimport { Inject } from \"react.di\";\r\nimport { QuotationService } from \"../../../api/QuotationService\";\r\nimport moment from 'moment';\r\nimport {Line} from '@antv/g2plot';\r\nimport { Slider, Card, DatePicker, message, Icon, Tag} from \"antd\";\r\nimport Position from \"../../InvReqPage/InvReqDetailPage/Bought/Position\";\r\n// import { StockQuotation } from \"../../../models/quotation/stock/StockQuotation\";\r\nimport _ from 'lodash';\r\nconst dateFormat = 'YYYY-MM-DD';\r\nconst {RangePicker} = DatePicker;\r\n\r\nconst Prompt = styled.p`\r\n  color: #FFFFFF;\r\n`;\r\n\r\ninterface Props {\r\n  // chartData: StockQuotation[];\r\n}\r\nexport default class StockMarketQuotationPage extends React.Component<Props, {}> {\r\n  @Inject quotationService: QuotationService;\r\n\r\n  state = {\r\n    data: null,\r\n    linePlot: null,\r\n    lookingYear: 2001,\r\n    lookingTime: [moment('2001-01-01', dateFormat), moment('2001-01-08', dateFormat)],\r\n    profitRate: {2001: 1}\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  async componentWillMount() {\r\n  }\r\n  \r\n  async componentDidMount() {\r\n    // console.log(this.state.data === null ? 1 : this.state.data)\r\n    if (!this.state.data) {\r\n      let data = await this.quotationService.getData(2001, null);\r\n      await this.setState({data: data.data});\r\n    }\r\n    let profitRate = await this.quotationService.getProfit();\r\n    await this.setState({profitRate});\r\n    \r\n    this.showLine()\r\n  }\r\n\r\n\r\n  filterData = (data) => {\r\n    const temp_data = [];\r\n    const {lookingTime} = this.state;\r\n    const start_time = lookingTime[0];\r\n    const end_time = lookingTime[1];\r\n    let max_value = -10, min_value = 100;\r\n    let count=0;\r\n    data.forEach(item => {\r\n      if (start_time <= moment(item.time) && moment(item.time) <= end_time) {\r\n        if (!item.hasOwnProperty('strategy')) {\r\n          temp_data.push(item);\r\n        }\r\n        else {\r\n          if (item.strategy === 1) {\r\n            item.strategy = '买入';\r\n          } else if (item.strategy === 0) {\r\n            item.strategy = '持有';\r\n          } else if (item.strategy === -1){\r\n            item.strategy = '卖出';\r\n          }\r\n          temp_data.push(item);\r\n        }\r\n        if (item.bid > max_value) {\r\n          max_value = item.bid;\r\n        }\r\n        if (item.bid < min_value) {\r\n          min_value = item.bid;\r\n        }\r\n      }\r\n    });\r\n    return [temp_data, max_value, min_value];\r\n  }\r\n  getInOutData = (temp_data) => {\r\n    let inData = [], outData = [];\r\n    temp_data.forEach(item => {\r\n      if (item.hasOwnProperty('strategy')) {\r\n        if (item.strategy === '买入') {\r\n          inData.push(item);\r\n        } else if (item.strategy === '卖出') {\r\n          outData.push(item);\r\n        }\r\n      }\r\n    });\r\n    return [inData, outData];\r\n  }\r\n  showLine = () => {\r\n    const {data} = this.state;\r\n    const filter_result = this.filterData(data);\r\n    let temp_data = filter_result[0];\r\n    const max_value = filter_result[1];\r\n    const min_value = filter_result[2];\r\n    const markData = this.getInOutData(temp_data);\r\n    // console.log(markData);\r\n    const config = {\r\n      title: {\r\n        visible: true,\r\n        text:'买卖策略图'\r\n      },\r\n      label: {\r\n        visible: false,\r\n        type: 'point',\r\n      },\r\n      point: {\r\n        visible: true,\r\n        size: 2,\r\n        shape: 'diamond',\r\n        style: {\r\n          fill: 'white',\r\n          stroke: '#2593fc',\r\n          lineWidth: 2,\r\n        },\r\n      },\r\n      padding: 'auto',\r\n      forceFit: true,\r\n      data: temp_data,\r\n      xField: 'time',\r\n      yField: 'bid',\r\n      yAxis: {\r\n        min: min_value,\r\n        max: max_value\r\n      },\r\n      legend: {\r\n        position: 'right-top',\r\n      },\r\n      responsive: true,\r\n      tooltip: {\r\n        custom: {\r\n          onChange: (containerDom, cfg) => {\r\n            const { items } = cfg;\r\n            const data = _.filter(items, {name: 'strategy'});\r\n            if (data.length !== 0) {\r\n              return;\r\n            }\r\n            const {strategy} = items[0].data;\r\n            const new_item = {\r\n              ...items[0],\r\n              name: 'strategy',\r\n              value: strategy\r\n            };\r\n            items.push(new_item);\r\n          },\r\n        },\r\n      },\r\n      animation: {\r\n        appear: {\r\n          animation: 'clipingWithData',\r\n        },\r\n      },\r\n      smooth: true,\r\n      markerPoints: [\r\n        {\r\n          visible: true,\r\n          data: markData[0],\r\n          symbol: '',\r\n          label: {\r\n            visible: true,\r\n            field: 'strategy',\r\n            offsetY: -8\r\n          },\r\n          style: {\r\n            big: {stroke: 'rgba(255, 0, 255, 0.7)', lineWidth: 3}\r\n          },\r\n        },\r\n        {\r\n          visible: true,\r\n          data: markData[1],\r\n          symbol: 'cross',\r\n          label: {\r\n            visible: true,\r\n            field: 'strategy',\r\n            offsetY: 24\r\n          },\r\n          style: {\r\n            normal: { stroke: 'rgba(255, 0, 0, 0.65)', lineWidth: 3},\r\n          },\r\n        }\r\n      ],\r\n      seriesField: 'type',\r\n    };\r\n    const linePlot = new Line(document.getElementById('graph-container'), config);\r\n    this.setState({linePlot});\r\n    linePlot.render();\r\n  }\r\n  async sliderChange(value, quotationService) {\r\n    value = 2001 + value * 19 /100;\r\n    let data = await quotationService.getData(value);\r\n    const lookingTime = [moment(`${value}-01-01`, dateFormat), moment(`${value}-01-06 `, dateFormat)]\r\n    await this.setState({data: data.data, lookingTime, lookingYear: value});\r\n    // const temp_data = this.filterData(data.data);\r\n    const filter_result = this.filterData(data.data);\r\n    let temp_data = filter_result[0];\r\n    const max_value = filter_result[1];\r\n    const min_value = filter_result[2];\r\n    const {linePlot} = this.state;\r\n    const markData = this.getInOutData(temp_data);\r\n    linePlot.updateConfig({\r\n      data: temp_data,\r\n      yAxis: {\r\n        min: min_value,\r\n        max: max_value\r\n      },\r\n      markerPoints: [\r\n        {\r\n          visible: true,\r\n          data: markData[0],\r\n          symbol: '',\r\n          label: {\r\n            visible: true,\r\n            field: 'strategy',\r\n            offsetY: -8\r\n          },\r\n          style: {\r\n            big: {stroke: 'rgba(255, 0, 255, 0.7)', lineWidth: 3}\r\n          },\r\n        },\r\n        {\r\n          visible: true,\r\n          data: markData[1],\r\n          symbol: 'cross',\r\n          label: {\r\n            visible: true,\r\n            field: 'strategy',\r\n            offsetY: 24\r\n          },\r\n          style: {\r\n            normal: { stroke: 'rgba(255, 0, 0, 0.65)', lineWidth: 3},\r\n          },\r\n        }\r\n      ],\r\n    });\r\n    linePlot.render();\r\n  }\r\n  getData = async (year) => {\r\n    if (year !== this.state.lookingYear) {\r\n      // await this.setState({lookingYear: year});\r\n      const responce = await this.quotationService.getData(year, year+1);\r\n      await this.setState({data: responce.data, lookingYear: year});\r\n      // return this.state.data;\r\n    }\r\n    return this.state.data;\r\n  }\r\n\r\n  onRangeChange = async (v) => {\r\n    await this.setState({lookingTime: [v[0], v[1]]});\r\n    let data = null;\r\n    if (v[1].year() - v[0].year() > 1) {\r\n      return (message.warning('对不起，您选择的时间范围过长！请选择较短的预测时间查看。', 5));\r\n    } else if (v[1].year() === v[0].year() ) {\r\n      data = await this.getData(v[1].year());\r\n    } \r\n    else if (v[1].year() - v[0].year() === 1) {\r\n      const responce = await this.quotationService.getData(v[0].year(), v[1].year() + 1);\r\n      await this.setState({data: responce.data});\r\n      data = this.state.data;\r\n    }\r\n    const {linePlot} = this.state;\r\n    const filterResult = this.filterData(data);\r\n    const temp_data = filterResult[0];\r\n    const max_value = filterResult[1];\r\n    const min_value = filterResult[2];\r\n    const markData = this.getInOutData(temp_data);\r\n    linePlot.updateConfig({\r\n      data: temp_data,\r\n      yAxis: {\r\n        min: min_value,\r\n        max: max_value\r\n      },\r\n      markerPoints: [\r\n        {\r\n          visible: true,\r\n          data: markData[0],\r\n          symbol: '',\r\n          label: {\r\n            visible: true,\r\n            field: 'strategy',\r\n            offsetY: -8\r\n          },\r\n          style: {\r\n            big: {stroke: 'rgba(255, 0, 255, 0.7)', lineWidth: 3}\r\n          },\r\n        },\r\n        {\r\n          visible: true,\r\n          data: markData[1],\r\n          symbol: 'cross',\r\n          label: {\r\n            visible: true,\r\n            field: 'strategy',\r\n            offsetY: 24\r\n          },\r\n          style: {\r\n            normal: { stroke: 'rgba(255, 0, 0, 0.65)', lineWidth: 3},\r\n          },\r\n        }\r\n      ],\r\n    });\r\n    linePlot.render();\r\n    return;\r\n  }\r\n\r\n  render() {  \r\n    // const marks = {\r\n    //   0: {\r\n    //     label: <strong>2001</strong>\r\n    //   },\r\n    //   100:{\r\n    //     label: <strong>2020</strong>,\r\n    //   }\r\n    // }\r\n    const {profitRate, lookingYear} = this.state;\r\n    const profits = profitRate[lookingYear];\r\n    const color = profits > 0 ? \"green\" : \"red\";\r\n    // console.log(profits);\r\n    return (\r\n    <Card>\r\n      {/* <Icon type='warning' /> \r\n      查看年份\r\n      <div>\r\n      <Slider\r\n        marks={marks} \r\n        step={100/19} \r\n        tipFormatter= {(v) => `${2001 + v * 19 / 100}`} \r\n        onAfterChange={(v) => this.sliderChange(v, this.quotationService)}\r\n      /> */}\r\n      <div><strong>选择查看的时间段</strong></div>\r\n      <RangePicker \r\n        defaultValue={this.state.lookingTime}\r\n        onChange={this.onRangeChange}\r\n        renderExtraFooter={() => '请选择最长半年的时间查看！'}\r\n      />\r\n      {/* </div> */}\r\n      <br />\r\n      <br />\r\n      <div>\r\n        <Tag color={color}>{this.state.lookingYear}的年收益率：{profits}</Tag>\r\n      </div>\r\n      <div id='graph-container' />\r\n    </Card>\r\n  ); \r\n  }\r\n}\r\n"]}]}