{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\chart\\controller\\index.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\chart\\controller\\index.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["var LOAD_COMPONENT_CONTROLLERS = {};\r\nexport function registerComponentController(name, plugin) {\r\n    LOAD_COMPONENT_CONTROLLERS[name] = plugin;\r\n}\r\nexport function unregisterComponentController(name) {\r\n    delete LOAD_COMPONENT_CONTROLLERS[name];\r\n}\r\nexport function getComponentControllerNames() {\r\n    return Object.keys(LOAD_COMPONENT_CONTROLLERS);\r\n}\r\nexport function getComponentController(name) {\r\n    return LOAD_COMPONENT_CONTROLLERS[name];\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\chart\\controller\\index.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\chart\\controller\\index.js"],"names":[],"mappings":"AAAA,IAAI,0BAA0B,GAAG,EAAE,CAAC;AAOpC,MAAM,UAAU,2BAA2B,CAAC,IAAI,EAAE,MAAM;IACpD,0BAA0B,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AAC9C,CAAC;AAMD,MAAM,UAAU,6BAA6B,CAAC,IAAI;IAC9C,OAAO,0BAA0B,CAAC,IAAI,CAAC,CAAC;AAC5C,CAAC;AAKD,MAAM,UAAU,2BAA2B;IACvC,OAAO,MAAM,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;AACnD,CAAC;AAMD,MAAM,UAAU,sBAAsB,CAAC,IAAI;IACvC,OAAO,0BAA0B,CAAC,IAAI,CAAC,CAAC;AAC5C,CAAC","sourcesContent":["var LOAD_COMPONENT_CONTROLLERS = {};\n/**\n * 全局注册组件。\n * @param name 组件名称\n * @param plugin 注册的组件类\n * @returns void\n */\nexport function registerComponentController(name, plugin) {\n    LOAD_COMPONENT_CONTROLLERS[name] = plugin;\n}\n/**\n * 删除全局组件。\n * @param name 组件名\n * @returns void\n */\nexport function unregisterComponentController(name) {\n    delete LOAD_COMPONENT_CONTROLLERS[name];\n}\n/**\n * 获取以注册的组件名。\n * @returns string[] 返回已注册的组件名称\n */\nexport function getComponentControllerNames() {\n    return Object.keys(LOAD_COMPONENT_CONTROLLERS);\n}\n/**\n * 根据组件名获取组件类。\n * @param name 组件名\n * @returns 返回组件类\n */\nexport function getComponentController(name) {\n    return LOAD_COMPONENT_CONTROLLERS[name];\n}\n//# sourceMappingURL=index.js.map"]}]}