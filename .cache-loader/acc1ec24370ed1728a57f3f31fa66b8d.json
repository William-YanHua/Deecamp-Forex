{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\scale\\esm\\util\\d3-linear.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\scale\\esm\\util\\d3-linear.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["export default function d3Linear(cfg) {\r\n    var min = cfg.min, max = cfg.max, nice = cfg.nice, tickCount = cfg.tickCount;\r\n    var linear = new D3Linear();\r\n    linear.domain([min, max]);\r\n    if (nice) {\r\n        linear.nice(tickCount);\r\n    }\r\n    return linear.ticks(tickCount);\r\n}\r\nvar DEFAULT_COUNT = 5;\r\nvar e10 = Math.sqrt(50);\r\nvar e5 = Math.sqrt(10);\r\nvar e2 = Math.sqrt(2);\r\nvar D3Linear = (function () {\r\n    function D3Linear() {\r\n        this._domain = [0, 1];\r\n    }\r\n    D3Linear.prototype.domain = function (domain) {\r\n        if (domain) {\r\n            this._domain = Array.from(domain, Number);\r\n            return this;\r\n        }\r\n        return this._domain.slice();\r\n    };\r\n    D3Linear.prototype.nice = function (count) {\r\n        var _a, _b;\r\n        if (count === void 0) {\r\n            count = DEFAULT_COUNT;\r\n        }\r\n        var d = this._domain.slice();\r\n        var i0 = 0;\r\n        var i1 = this._domain.length - 1;\r\n        var start = this._domain[i0];\r\n        var stop = this._domain[i1];\r\n        var step;\r\n        if (stop < start) {\r\n            _a = [stop, start], start = _a[0], stop = _a[1];\r\n            _b = [i1, i0], i0 = _b[0], i1 = _b[1];\r\n        }\r\n        step = tickIncrement(start, stop, count);\r\n        if (step > 0) {\r\n            start = Math.floor(start / step) * step;\r\n            stop = Math.ceil(stop / step) * step;\r\n            step = tickIncrement(start, stop, count);\r\n        }\r\n        else if (step < 0) {\r\n            start = Math.ceil(start * step) / step;\r\n            stop = Math.floor(stop * step) / step;\r\n            step = tickIncrement(start, stop, count);\r\n        }\r\n        if (step > 0) {\r\n            d[i0] = Math.floor(start / step) * step;\r\n            d[i1] = Math.ceil(stop / step) * step;\r\n            this.domain(d);\r\n        }\r\n        else if (step < 0) {\r\n            d[i0] = Math.ceil(start * step) / step;\r\n            d[i1] = Math.floor(stop * step) / step;\r\n            this.domain(d);\r\n        }\r\n        return this;\r\n    };\r\n    D3Linear.prototype.ticks = function (count) {\r\n        if (count === void 0) {\r\n            count = DEFAULT_COUNT;\r\n        }\r\n        return d3ArrayTicks(this._domain[0], this._domain[this._domain.length - 1], count || DEFAULT_COUNT);\r\n    };\r\n    return D3Linear;\r\n}());\r\nexport { D3Linear };\r\nfunction d3ArrayTicks(start, stop, count) {\r\n    var reverse;\r\n    var i = -1;\r\n    var n;\r\n    var ticks;\r\n    var step;\r\n    (stop = +stop), (start = +start), (count = +count);\r\n    if (start === stop && count > 0) {\r\n        return [start];\r\n    }\r\n    if ((reverse = stop < start)) {\r\n        (n = start), (start = stop), (stop = n);\r\n    }\r\n    if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) {\r\n        return [];\r\n    }\r\n    if (step > 0) {\r\n        start = Math.ceil(start / step);\r\n        stop = Math.floor(stop / step);\r\n        ticks = new Array((n = Math.ceil(stop - start + 1)));\r\n        while (++i < n) {\r\n            ticks[i] = (start + i) * step;\r\n        }\r\n    }\r\n    else {\r\n        start = Math.floor(start * step);\r\n        stop = Math.ceil(stop * step);\r\n        ticks = new Array((n = Math.ceil(start - stop + 1)));\r\n        while (++i < n) {\r\n            ticks[i] = (start - i) / step;\r\n        }\r\n    }\r\n    if (reverse) {\r\n        ticks.reverse();\r\n    }\r\n    return ticks;\r\n}\r\nfunction tickIncrement(start, stop, count) {\r\n    var step = (stop - start) / Math.max(0, count);\r\n    var power = Math.floor(Math.log(step) / Math.LN10);\r\n    var error = step / Math.pow(10, power);\r\n    return power >= 0\r\n        ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\r\n        : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\scale\\esm\\util\\d3-linear.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\scale\\esm\\util\\d3-linear.js"],"names":[],"mappings":"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","sourcesContent":["export default function d3Linear(cfg) {\n    var min = cfg.min, max = cfg.max, nice = cfg.nice, tickCount = cfg.tickCount;\n    var linear = new D3Linear();\n    linear.domain([min, max]);\n    if (nice) {\n        linear.nice(tickCount);\n    }\n    return linear.ticks(tickCount);\n}\nvar DEFAULT_COUNT = 5;\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n// https://github.com/d3/d3-scale\nvar D3Linear = /** @class */ (function () {\n    function D3Linear() {\n        this._domain = [0, 1];\n    }\n    D3Linear.prototype.domain = function (domain) {\n        if (domain) {\n            this._domain = Array.from(domain, Number);\n            return this;\n        }\n        return this._domain.slice();\n    };\n    D3Linear.prototype.nice = function (count) {\n        var _a, _b;\n        if (count === void 0) { count = DEFAULT_COUNT; }\n        var d = this._domain.slice();\n        var i0 = 0;\n        var i1 = this._domain.length - 1;\n        var start = this._domain[i0];\n        var stop = this._domain[i1];\n        var step;\n        if (stop < start) {\n            _a = [stop, start], start = _a[0], stop = _a[1];\n            _b = [i1, i0], i0 = _b[0], i1 = _b[1];\n        }\n        step = tickIncrement(start, stop, count);\n        if (step > 0) {\n            start = Math.floor(start / step) * step;\n            stop = Math.ceil(stop / step) * step;\n            step = tickIncrement(start, stop, count);\n        }\n        else if (step < 0) {\n            start = Math.ceil(start * step) / step;\n            stop = Math.floor(stop * step) / step;\n            step = tickIncrement(start, stop, count);\n        }\n        if (step > 0) {\n            d[i0] = Math.floor(start / step) * step;\n            d[i1] = Math.ceil(stop / step) * step;\n            this.domain(d);\n        }\n        else if (step < 0) {\n            d[i0] = Math.ceil(start * step) / step;\n            d[i1] = Math.floor(stop * step) / step;\n            this.domain(d);\n        }\n        return this;\n    };\n    D3Linear.prototype.ticks = function (count) {\n        if (count === void 0) { count = DEFAULT_COUNT; }\n        return d3ArrayTicks(this._domain[0], this._domain[this._domain.length - 1], count || DEFAULT_COUNT);\n    };\n    return D3Linear;\n}());\nexport { D3Linear };\nfunction d3ArrayTicks(start, stop, count) {\n    var reverse;\n    var i = -1;\n    var n;\n    var ticks;\n    var step;\n    (stop = +stop), (start = +start), (count = +count);\n    if (start === stop && count > 0) {\n        return [start];\n    }\n    // tslint:disable-next-line\n    if ((reverse = stop < start)) {\n        (n = start), (start = stop), (stop = n);\n    }\n    // tslint:disable-next-line\n    if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) {\n        return [];\n    }\n    if (step > 0) {\n        start = Math.ceil(start / step);\n        stop = Math.floor(stop / step);\n        ticks = new Array((n = Math.ceil(stop - start + 1)));\n        while (++i < n) {\n            ticks[i] = (start + i) * step;\n        }\n    }\n    else {\n        start = Math.floor(start * step);\n        stop = Math.ceil(stop * step);\n        ticks = new Array((n = Math.ceil(start - stop + 1)));\n        while (++i < n) {\n            ticks[i] = (start - i) / step;\n        }\n    }\n    if (reverse) {\n        ticks.reverse();\n    }\n    return ticks;\n}\nfunction tickIncrement(start, stop, count) {\n    var step = (stop - start) / Math.max(0, count);\n    var power = Math.floor(Math.log(step) / Math.LN10);\n    var error = step / Math.pow(10, power);\n    return power >= 0\n        ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n        : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n//# sourceMappingURL=d3-linear.js.map"]}]}