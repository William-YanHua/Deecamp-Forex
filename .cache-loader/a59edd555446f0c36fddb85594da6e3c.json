{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/interaction/action/component/list-state.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/interaction/action/component/list-state.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport Action from '../base';\nimport { getComponents } from '../util';\nimport { getCurrentElement, getDelegationObject, getElementValue, isList, getScaleByField } from '../util';\nvar ListState = (function (_super) {\n    __extends(ListState, _super);\n    function ListState() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.stateName = '';\n        _this.ignoreItemStates = [];\n        return _this;\n    }\n    ListState.prototype.getTriggerListInfo = function () {\n        var delegateObject = getDelegationObject(this.context);\n        var info = null;\n        if (isList(delegateObject)) {\n            info = {\n                item: delegateObject.item,\n                list: delegateObject.component,\n            };\n        }\n        return info;\n    };\n    ListState.prototype.getAllowComponents = function () {\n        var _this = this;\n        var view = this.context.view;\n        var components = getComponents(view);\n        var rst = [];\n        each(components, function (component) {\n            if (component.isList() && _this.allowSetStateByElement(component)) {\n                rst.push(component);\n            }\n        });\n        return rst;\n    };\n    ListState.prototype.hasState = function (list, item) {\n        return list.hasState(item, this.stateName);\n    };\n    ListState.prototype.clearAllComponentsState = function () {\n        var _this = this;\n        var components = this.getAllowComponents();\n        each(components, function (component) {\n            component.clearItemsState(_this.stateName);\n        });\n    };\n    ListState.prototype.allowSetStateByElement = function (component) {\n        var field = component.get('field');\n        if (!field) {\n            return false;\n        }\n        if (this.cfg && this.cfg.componentNames) {\n            var name_1 = component.get('name');\n            if (this.cfg.componentNames.indexOf(name_1) === -1) {\n                return false;\n            }\n        }\n        var view = this.context.view;\n        var scale = getScaleByField(view, field);\n        return scale && scale.isCategory;\n    };\n    ListState.prototype.allowSetStateByItem = function (item, list) {\n        var ignoreStates = this.ignoreItemStates;\n        if (ignoreStates.length) {\n            var filterStates = ignoreStates.filter(function (state) {\n                return list.hasState(item, state);\n            });\n            return filterStates.length === 0;\n        }\n        return true;\n    };\n    ListState.prototype.setStateByElement = function (component, element, enable) {\n        var field = component.get('field');\n        var view = this.context.view;\n        var scale = getScaleByField(view, field);\n        var value = getElementValue(element, field);\n        var text = scale.getText(value);\n        this.setItemsState(component, text, enable);\n    };\n    ListState.prototype.setStateEnable = function (enable) {\n        var _this = this;\n        var element = getCurrentElement(this.context);\n        if (element) {\n            var components = this.getAllowComponents();\n            each(components, function (component) {\n                _this.setStateByElement(component, element, enable);\n            });\n        }\n        else {\n            var delegateObject = getDelegationObject(this.context);\n            if (isList(delegateObject)) {\n                var item = delegateObject.item, component = delegateObject.component;\n                if (this.allowSetStateByElement(component) && this.allowSetStateByItem(item, component)) {\n                    this.setItemState(component, item, enable);\n                }\n            }\n        }\n    };\n    ListState.prototype.setItemsState = function (list, name, enable) {\n        var _this = this;\n        var items = list.getItems();\n        each(items, function (item) {\n            if (item.name === name) {\n                _this.setItemState(list, item, enable);\n            }\n        });\n    };\n    ListState.prototype.setItemState = function (list, item, enable) {\n        list.setItemState(item, this.stateName, enable);\n    };\n    ListState.prototype.setState = function () {\n        this.setStateEnable(true);\n    };\n    ListState.prototype.reset = function () {\n        this.setStateEnable(false);\n    };\n    ListState.prototype.toggle = function () {\n        var triggerInfo = this.getTriggerListInfo();\n        if (triggerInfo && triggerInfo.item) {\n            var list = triggerInfo.list, item = triggerInfo.item;\n            var enable = this.hasState(list, item);\n            this.setItemState(list, item, !enable);\n        }\n    };\n    ListState.prototype.clear = function () {\n        var triggerInfo = this.getTriggerListInfo();\n        if (triggerInfo) {\n            triggerInfo.list.clearItemsState(this.stateName);\n        }\n        else {\n            this.clearAllComponentsState();\n        }\n    };\n    return ListState;\n}(Action));\nexport default ListState;\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/interaction/action/component/list-state.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/interaction/action/component/list-state.js"],"names":[],"mappings":"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","sourcesContent":["import { __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport Action from '../base';\nimport { getComponents } from '../util';\nimport { getCurrentElement, getDelegationObject, getElementValue, isList, getScaleByField } from '../util';\n/**\n * 列表项状态 Action 的基础类\n * @class\n * @ignore\n */\nvar ListState = /** @class */ (function (_super) {\n    __extends(ListState, _super);\n    function ListState() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.stateName = '';\n        _this.ignoreItemStates = [];\n        return _this;\n    }\n    /** 获取触发的列表组件 */\n    ListState.prototype.getTriggerListInfo = function () {\n        var delegateObject = getDelegationObject(this.context);\n        var info = null;\n        if (isList(delegateObject)) {\n            info = {\n                item: delegateObject.item,\n                list: delegateObject.component,\n            };\n        }\n        return info;\n    };\n    // 获取所有允许执行 Action 的组件\n    ListState.prototype.getAllowComponents = function () {\n        var _this = this;\n        var view = this.context.view;\n        var components = getComponents(view);\n        var rst = [];\n        each(components, function (component) {\n            if (component.isList() && _this.allowSetStateByElement(component)) {\n                rst.push(component);\n            }\n        });\n        return rst;\n    };\n    /** 是否存在指定的状态 */\n    ListState.prototype.hasState = function (list, item) {\n        return list.hasState(item, this.stateName);\n    };\n    /** 清理组件的状态 */\n    ListState.prototype.clearAllComponentsState = function () {\n        var _this = this;\n        var components = this.getAllowComponents();\n        each(components, function (component) {\n            component.clearItemsState(_this.stateName);\n        });\n    };\n    // 不是所有的 component 都能进行 active，目前仅支持分类 scale 对应的组件\n    ListState.prototype.allowSetStateByElement = function (component) {\n        var field = component.get('field');\n        if (!field) {\n            return false;\n        }\n        if (this.cfg && this.cfg.componentNames) {\n            var name_1 = component.get('name');\n            // 如果配置了限制的 component name，则要进行检测\n            if (this.cfg.componentNames.indexOf(name_1) === -1) {\n                return false;\n            }\n        }\n        var view = this.context.view;\n        var scale = getScaleByField(view, field);\n        return scale && scale.isCategory;\n    };\n    // 检测是否允许触发对应的状态改变事件\n    ListState.prototype.allowSetStateByItem = function (item, list) {\n        var ignoreStates = this.ignoreItemStates;\n        if (ignoreStates.length) {\n            var filterStates = ignoreStates.filter(function (state) {\n                return list.hasState(item, state);\n            });\n            return filterStates.length === 0;\n        }\n        return true; // 没有定义忽略的状态时，允许\n    };\n    // 设置组件的 item active\n    ListState.prototype.setStateByElement = function (component, element, enable) {\n        var field = component.get('field');\n        var view = this.context.view;\n        var scale = getScaleByField(view, field);\n        var value = getElementValue(element, field);\n        var text = scale.getText(value);\n        this.setItemsState(component, text, enable);\n    };\n    // 设置状态\n    ListState.prototype.setStateEnable = function (enable) {\n        var _this = this;\n        var element = getCurrentElement(this.context);\n        if (element) {\n            // trigger by element\n            var components = this.getAllowComponents();\n            each(components, function (component) {\n                _this.setStateByElement(component, element, enable);\n            });\n        }\n        else {\n            // 被组件触发\n            var delegateObject = getDelegationObject(this.context);\n            if (isList(delegateObject)) {\n                var item = delegateObject.item, component = delegateObject.component;\n                if (this.allowSetStateByElement(component) && this.allowSetStateByItem(item, component)) {\n                    this.setItemState(component, item, enable);\n                }\n            }\n        }\n    };\n    // 多个 item 设置状态\n    ListState.prototype.setItemsState = function (list, name, enable) {\n        var _this = this;\n        var items = list.getItems();\n        each(items, function (item) {\n            if (item.name === name) {\n                _this.setItemState(list, item, enable);\n            }\n        });\n    };\n    // 单个 item 设置状态\n    ListState.prototype.setItemState = function (list, item, enable) {\n        list.setItemState(item, this.stateName, enable);\n    };\n    /**\n     * 设置状态\n     */\n    ListState.prototype.setState = function () {\n        this.setStateEnable(true);\n    };\n    /**\n     * 取消状态\n     */\n    ListState.prototype.reset = function () {\n        this.setStateEnable(false);\n    };\n    /**\n     * 切换状态\n     */\n    ListState.prototype.toggle = function () {\n        var triggerInfo = this.getTriggerListInfo();\n        if (triggerInfo && triggerInfo.item) {\n            var list = triggerInfo.list, item = triggerInfo.item;\n            var enable = this.hasState(list, item);\n            this.setItemState(list, item, !enable);\n        }\n    };\n    /**\n     * 取消状态\n     */\n    ListState.prototype.clear = function () {\n        var triggerInfo = this.getTriggerListInfo();\n        if (triggerInfo) {\n            triggerInfo.list.clearItemsState(this.stateName);\n        }\n        else {\n            this.clearAllComponentsState();\n        }\n    };\n    return ListState;\n}(Action));\nexport default ListState;\n//# sourceMappingURL=list-state.js.map"]}]}