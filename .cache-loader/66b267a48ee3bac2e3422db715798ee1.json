{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\node_modules\\@antv\\component\\lib\\legend\\color.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\node_modules\\@antv\\component\\lib\\legend\\color.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\r\nvar _require = require('@antv/attr/lib'), ColorUtil = _require.ColorUtil;\r\nvar Util = require('../util');\r\nvar Continuous = require('./continuous');\r\nvar Color = function (_Continuous) {\r\n    _inheritsLoose(Color, _Continuous);\r\n    function Color() {\r\n        return _Continuous.apply(this, arguments) || this;\r\n    }\r\n    var _proto = Color.prototype;\r\n    _proto.getDefaultCfg = function getDefaultCfg() {\r\n        var cfg = _Continuous.prototype.getDefaultCfg.call(this);\r\n        return Util.mix({}, cfg, {\r\n            type: 'color-legend',\r\n            layout: 'vertical',\r\n            triggerAttr: {\r\n                fill: '#fff',\r\n                shadowOffsetX: -2,\r\n                shadowOffsetY: 2,\r\n                shadowBlur: 10,\r\n                shadowColor: '#ccc',\r\n                radius: 3\r\n            },\r\n            isSegment: false\r\n        });\r\n    };\r\n    _proto._setPercentage = function _setPercentage() {\r\n        var items = this.get('items');\r\n        if (items[0].percentage)\r\n            return;\r\n        var min = items[0].value;\r\n        var max = items[items.length - 1].value;\r\n        Util.each(items, function (it) {\r\n            it.percentage = (it.value - min) / (max - min);\r\n        });\r\n        return;\r\n    };\r\n    _proto._renderSliderShape = function _renderSliderShape() {\r\n        this._setPercentage();\r\n        var slider = this.get('slider');\r\n        var backgroundElement = slider.get('backgroundElement');\r\n        var width = this.get('width');\r\n        var height = this.get('height');\r\n        var layout = this.get('layout');\r\n        var items = this.get('items');\r\n        var fill = '';\r\n        var rgbColor;\r\n        if (layout === 'vertical') {\r\n            fill += 'l (90) ';\r\n            Util.each(items, function (v) {\r\n                rgbColor = ColorUtil.toRGB(v.color);\r\n                fill += 1 - v.percentage + ':' + rgbColor + ' ';\r\n            });\r\n        }\r\n        else {\r\n            fill += 'l (0) ';\r\n            Util.each(items, function (v) {\r\n                rgbColor = ColorUtil.toRGB(v.color);\r\n                fill += v.percentage + ':' + rgbColor + ' ';\r\n            });\r\n        }\r\n        return this._addMiddleBar(backgroundElement, 'Rect', {\r\n            x: 0,\r\n            y: 0,\r\n            width: width,\r\n            height: height,\r\n            fill: fill,\r\n            strokeOpacity: 0\r\n        });\r\n    };\r\n    _proto._renderUnslidable = function _renderUnslidable() {\r\n        this._setPercentage();\r\n        var titleShape = this.get('titleShape');\r\n        var titleGap = this.get('titleGap');\r\n        titleGap = titleShape ? titleShape.getBBox().height + titleGap : titleGap;\r\n        var width = this.get('width');\r\n        var height = this.get('height');\r\n        var layout = this.get('layout');\r\n        var items = this.get('items');\r\n        var fill = '';\r\n        var rgbColor;\r\n        var path = [];\r\n        var group = this.get('group');\r\n        var bgGroup = group.addGroup();\r\n        var isize = items.length;\r\n        if (layout === 'vertical') {\r\n            fill += 'l (90) ';\r\n            for (var i = 0; i < isize; i += 1) {\r\n                if (i !== 0 && i !== isize - 1) {\r\n                    path.push(['M', 0, height - items[i].percentage * height]);\r\n                    path.push(['L', width, height - items[i].percentage * height]);\r\n                }\r\n                rgbColor = ColorUtil.toRGB(items[i].color);\r\n                fill += 1 - items[i].percentage + ':' + rgbColor + ' ';\r\n                if (this.get('isSegment') && i > 0) {\r\n                    var preRgbColor = ColorUtil.toRGB(items[i - 1].color);\r\n                    fill += 1 - items[i].percentage + ':' + preRgbColor + ' ';\r\n                }\r\n                bgGroup.addShape('text', {\r\n                    attrs: Util.mix({}, {\r\n                        x: width + this.get('textOffset') / 2,\r\n                        y: height - items[i].percentage * height,\r\n                        text: this._formatItemValue(items[i].value) + ''\r\n                    }, this.get('textStyle'), {\r\n                        textAlign: 'start'\r\n                    })\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            fill += 'l (0) ';\r\n            for (var _i = 0; _i < isize; _i += 1) {\r\n                if (_i !== 0 && _i !== isize - 1) {\r\n                    path.push(['M', items[_i].percentage * width, 0]);\r\n                    path.push(['L', items[_i].percentage * width, height]);\r\n                }\r\n                rgbColor = ColorUtil.toRGB(items[_i].color);\r\n                if (this.get('isSegment') && _i > 0) {\r\n                    var _preRgbColor = ColorUtil.toRGB(items[_i - 1].color);\r\n                    fill += items[_i].percentage + ':' + _preRgbColor + ' ';\r\n                }\r\n                fill += items[_i].percentage + ':' + rgbColor + ' ';\r\n                bgGroup.addShape('text', {\r\n                    attrs: Util.mix({}, {\r\n                        x: items[_i].percentage * width,\r\n                        y: height + 5 + this.get('textOffset'),\r\n                        text: this._formatItemValue(items[_i].value) + ''\r\n                    }, this.get('textStyle'))\r\n                });\r\n            }\r\n        }\r\n        bgGroup.addShape('rect', {\r\n            attrs: {\r\n                x: 0,\r\n                y: 0,\r\n                width: width,\r\n                height: height,\r\n                fill: fill,\r\n                strokeOpacity: 0\r\n            }\r\n        });\r\n        bgGroup.addShape('path', {\r\n            attrs: Util.mix({\r\n                path: path\r\n            }, this.get('lineStyle'))\r\n        });\r\n        bgGroup.move(0, titleGap);\r\n    };\r\n    return Color;\r\n}(Continuous);\r\nmodule.exports = Color;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\node_modules\\@antv\\component\\lib\\legend\\color.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\node_modules\\@antv\\component\\lib\\legend\\color.js"],"names":[],"mappings":"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","sourcesContent":["function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * @fileOverview The class of the gradient color legend\n * @author sima.zhang\n */\nvar _require = require('@antv/attr/lib'),\n    ColorUtil = _require.ColorUtil; // TODO：ColorUtil 包需要从 attr 包中抽离\n\n\nvar Util = require('../util');\n\nvar Continuous = require('./continuous');\n\nvar Color =\n/*#__PURE__*/\nfunction (_Continuous) {\n  _inheritsLoose(Color, _Continuous);\n\n  function Color() {\n    return _Continuous.apply(this, arguments) || this;\n  }\n\n  var _proto = Color.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Continuous.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      /**\n       * 类型\n       * @type {String}\n       */\n      type: 'color-legend',\n\n      /**\n       * 布局方式\n       * horizontal 水平\n       * vertical 垂直\n       * @type {String}\n       */\n      layout: 'vertical',\n\n      /**\n       * 两头滑块的样式\n       * @type {object}\n       */\n      triggerAttr: {\n        fill: '#fff',\n        shadowOffsetX: -2,\n        shadowOffsetY: 2,\n        shadowBlur: 10,\n        shadowColor: '#ccc',\n        radius: 3\n      },\n\n      /**\n       * 同一分段是否使用相同颜色而不使用渐变色，在 slidable = false 时生效\n       * @type {boolean}\n       */\n      isSegment: false\n    });\n  };\n\n  _proto._setPercentage = function _setPercentage() {\n    var items = this.get('items');\n    if (items[0].percentage) return;\n    var min = items[0].value;\n    var max = items[items.length - 1].value;\n    Util.each(items, function (it) {\n      it.percentage = (it.value - min) / (max - min);\n    });\n    return;\n  }; // render the slider while slidable === true\n\n\n  _proto._renderSliderShape = function _renderSliderShape() {\n    this._setPercentage();\n\n    var slider = this.get('slider');\n    var backgroundElement = slider.get('backgroundElement');\n    var width = this.get('width');\n    var height = this.get('height');\n    var layout = this.get('layout');\n    var items = this.get('items');\n    var fill = '';\n    var rgbColor; // gradient color distributed according to the percentage\n\n    if (layout === 'vertical') {\n      fill += 'l (90) ';\n      Util.each(items, function (v) {\n        rgbColor = ColorUtil.toRGB(v.color);\n        fill += 1 - v.percentage + ':' + rgbColor + ' ';\n      });\n    } else {\n      fill += 'l (0) ';\n      Util.each(items, function (v) {\n        rgbColor = ColorUtil.toRGB(v.color);\n        fill += v.percentage + ':' + rgbColor + ' ';\n      });\n    }\n\n    return this._addMiddleBar(backgroundElement, 'Rect', {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      fill: fill,\n      strokeOpacity: 0\n    });\n  }; // render the silder while slidable === false\n\n\n  _proto._renderUnslidable = function _renderUnslidable() {\n    this._setPercentage();\n\n    var titleShape = this.get('titleShape');\n    var titleGap = this.get('titleGap');\n    titleGap = titleShape ? titleShape.getBBox().height + titleGap : titleGap;\n    var width = this.get('width');\n    var height = this.get('height');\n    var layout = this.get('layout');\n    var items = this.get('items');\n    var fill = '';\n    var rgbColor;\n    var path = [];\n    var group = this.get('group');\n    var bgGroup = group.addGroup();\n    var isize = items.length; // gradient color distributed according to the percentage\n\n    if (layout === 'vertical') {\n      fill += 'l (90) ';\n\n      for (var i = 0; i < isize; i += 1) {\n        if (i !== 0 && i !== isize - 1) {\n          path.push(['M', 0, height - items[i].percentage * height]);\n          path.push(['L', width, height - items[i].percentage * height]);\n        }\n\n        rgbColor = ColorUtil.toRGB(items[i].color);\n        fill += 1 - items[i].percentage + ':' + rgbColor + ' ';\n\n        if (this.get('isSegment') && i > 0) {\n          // one color instead of gradient color for a block while isSegment === true\n          var preRgbColor = ColorUtil.toRGB(items[i - 1].color);\n          fill += 1 - items[i].percentage + ':' + preRgbColor + ' ';\n        }\n\n        bgGroup.addShape('text', {\n          attrs: Util.mix({}, {\n            x: width + this.get('textOffset') / 2,\n            y: height - items[i].percentage * height,\n            text: this._formatItemValue(items[i].value) + '' // 以字符串格式展示\n\n          }, this.get('textStyle'), {\n            textAlign: 'start'\n          })\n        });\n      }\n    } else {\n      // horizontal\n      fill += 'l (0) ';\n\n      for (var _i = 0; _i < isize; _i += 1) {\n        if (_i !== 0 && _i !== isize - 1) {\n          path.push(['M', items[_i].percentage * width, 0]);\n          path.push(['L', items[_i].percentage * width, height]);\n        }\n\n        rgbColor = ColorUtil.toRGB(items[_i].color);\n\n        if (this.get('isSegment') && _i > 0) {\n          var _preRgbColor = ColorUtil.toRGB(items[_i - 1].color);\n\n          fill += items[_i].percentage + ':' + _preRgbColor + ' ';\n        }\n\n        fill += items[_i].percentage + ':' + rgbColor + ' ';\n        bgGroup.addShape('text', {\n          attrs: Util.mix({}, {\n            x: items[_i].percentage * width,\n            y: height + 5 + this.get('textOffset'),\n            text: this._formatItemValue(items[_i].value) + '' // 以字符串格式展示\n\n          }, this.get('textStyle'))\n        });\n      }\n    }\n\n    bgGroup.addShape('rect', {\n      attrs: {\n        x: 0,\n        y: 0,\n        width: width,\n        height: height,\n        fill: fill,\n        strokeOpacity: 0\n      }\n    }); // the white line segment to seperate color blocks\n\n    bgGroup.addShape('path', {\n      attrs: Util.mix({\n        path: path\n      }, this.get('lineStyle'))\n    });\n    bgGroup.move(0, titleGap);\n  };\n\n  return Color;\n}(Continuous);\n\nmodule.exports = Color;"]}]}