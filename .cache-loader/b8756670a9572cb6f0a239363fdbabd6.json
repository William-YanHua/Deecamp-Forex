{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/src/transform/rename.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/src/transform/rename.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var forIn = require('@antv/util/lib/each');\nvar isPlainObject = require('@antv/util/lib/type/is-plain-object');\nvar isString = require('@antv/util/lib/type/is-string');\nvar registerTransform = require('../data-set').registerTransform;\nfunction transform(dataView, options) {\n    if (options === void 0) { options = {}; }\n    var map = options.map || {};\n    var cleanMap = {};\n    if (isPlainObject(map)) {\n        forIn(map, function (value, key) {\n            if (isString(value) && isString(key)) {\n                cleanMap[key] = value;\n            }\n        });\n    }\n    dataView.rows.forEach(function (row) {\n        forIn(map, function (newKey, key) {\n            var temp = row[key];\n            delete row[key];\n            row[newKey] = temp;\n        });\n    });\n}\nregisterTransform('rename', transform);\nregisterTransform('rename-fields', transform);\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/src/transform/rename.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/src/transform/rename.js"],"names":[],"mappings":"AAAA,IAAM,KAAK,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;AAC7C,IAAM,aAAa,GAAG,OAAO,CAAC,qCAAqC,CAAC,CAAC;AACrE,IAAM,QAAQ,GAAG,OAAO,CAAC,+BAA+B,CAAC,CAAC;AAExD,IAAA,iBAAiB,GACf,OAAO,CAAC,aAAa,CAAC,kBADP,CACQ;AAS3B,SAAS,SAAS,CAAC,QAAQ,EAAE,OAAY;IAAZ,wBAAA,EAAA,YAAY;IACvC,IAAM,GAAG,GAAG,OAAO,CAAC,GAAG,IAAI,EAAE,CAAC;IAC9B,IAAM,QAAQ,GAAG,EAAE,CAAC;IACpB,IAAI,aAAa,CAAC,GAAG,CAAC,EAAE;QACtB,KAAK,CAAC,GAAG,EAAE,UAAC,KAAK,EAAE,GAAG;YACpB,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAE;gBACpC,QAAQ,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;aACvB;QACH,CAAC,CAAC,CAAC;KACJ;IACD,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,UAAA,GAAG;QACvB,KAAK,CAAC,GAAG,EAAE,UAAC,MAAM,EAAE,GAAG;YACrB,IAAM,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YACtB,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;YAChB,GAAG,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC;AAED,iBAAiB,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;AACvC,iBAAiB,CAAC,eAAe,EAAE,SAAS,CAAC,CAAC","sourcesContent":["const forIn = require('@antv/util/lib/each');\nconst isPlainObject = require('@antv/util/lib/type/is-plain-object');\nconst isString = require('@antv/util/lib/type/is-string');\nconst {\n  registerTransform\n} = require('../data-set');\n\n/*\n * options: {\n *   type: 'pick',\n *   fields: [],\n * }\n */\n\nfunction transform(dataView, options = {}) {\n  const map = options.map || {};\n  const cleanMap = {};\n  if (isPlainObject(map)) {\n    forIn(map, (value, key) => {\n      if (isString(value) && isString(key)) {\n        cleanMap[key] = value;\n      }\n    });\n  }\n  dataView.rows.forEach(row => {\n    forIn(map, (newKey, key) => {\n      const temp = row[key];\n      delete row[key];\n      row[newKey] = temp;\n    });\n  });\n}\n\nregisterTransform('rename', transform);\nregisterTransform('rename-fields', transform);\n"]}]}