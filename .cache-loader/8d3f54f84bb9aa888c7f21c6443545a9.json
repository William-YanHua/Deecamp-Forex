{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\util\\responsive\\responsive.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\util\\responsive\\responsive.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { assign } from '@antv/util';\r\nimport { constraintsLib } from './constraints/index';\r\nimport { rulesLib } from './rules/index';\r\nvar Responsive = (function () {\r\n    function Responsive(cfg) {\r\n        this.iterationTime = 10;\r\n        this.iterationIndex = 0;\r\n        this.rulesLocker = [];\r\n        this.constraintIndex = 0;\r\n        assign(this, cfg);\r\n        this.currentConstraint = this.constraints[0];\r\n        if (this.rules) {\r\n            this.iterationTime = this.rules[this.currentConstraint.name].length;\r\n        }\r\n        this._start();\r\n        this._run();\r\n        this._end();\r\n    }\r\n    Responsive.prototype._start = function () {\r\n        if (this.onStart) {\r\n            this.onStart(this.nodes);\r\n        }\r\n    };\r\n    Responsive.prototype._iteration = function () {\r\n        var nodes;\r\n        if (this.nodes.type === 'shape') {\r\n            nodes = this.nodes;\r\n        }\r\n        else {\r\n            nodes = this.nodes;\r\n        }\r\n        if (nodes.type === 'shape') {\r\n            nodes.measureNodes();\r\n        }\r\n        if (this.rules) {\r\n            this._applyRules();\r\n        }\r\n        if (nodes.type === 'shape') {\r\n            nodes.measureNodes();\r\n        }\r\n        if (this.onIteration) {\r\n            this.onIteration(this.nodes);\r\n        }\r\n    };\r\n    Responsive.prototype._end = function () {\r\n        if (this.onEnd) {\r\n            this.onEnd(this.nodes);\r\n        }\r\n    };\r\n    Responsive.prototype._run = function () {\r\n        var constraintPassed = this._constraintsTest();\r\n        while (!constraintPassed) {\r\n            if (this.iterationIndex > this.iterationTime - 1) {\r\n                break;\r\n            }\r\n            this._iteration();\r\n            constraintPassed = this._constraintsTest();\r\n            this.iterationIndex++;\r\n        }\r\n        if (this.constraintIndex < this.constraints.length - 1) {\r\n            this.constraintIndex++;\r\n            this.currentConstraint = this.constraints[this.constraintIndex];\r\n            this.iterationTime = this.rules ? this.rules[this.currentConstraint.name].length : 1;\r\n            this.iterationIndex = 0;\r\n            this._run();\r\n        }\r\n    };\r\n    Responsive.prototype._constraintsTest = function () {\r\n        var constraint = constraintsLib[this.currentConstraint.name];\r\n        var constraintOption = this.currentConstraint.option;\r\n        if (constraint.usage === 'compare') {\r\n            return this._constraintCompare(constraint, constraintOption);\r\n        }\r\n        return this._constraintAssignment(constraint, constraintOption);\r\n    };\r\n    Responsive.prototype._constraintCompare = function (constraint, option) {\r\n        var type = constraint.type, expression = constraint.expression;\r\n        var nodes = this.nodes.nodes;\r\n        if (type === 'chain') {\r\n            return this._chainConstraintCompare(expression, nodes, option);\r\n        }\r\n        if (type === 'padding') {\r\n            return this._paddingConstraintCompare(expression, this.region, nodes, option);\r\n        }\r\n        if (type === 'group') {\r\n            return this._groupConstraintCompare(expression, nodes, option);\r\n        }\r\n    };\r\n    Responsive.prototype._chainConstraintCompare = function (expression, nodes, option) {\r\n        for (var i = 0; i < nodes.length - 1; i++) {\r\n            var a = nodes[i];\r\n            var b = nodes[i + 1];\r\n            if (expression(a, b, option) === false) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    Responsive.prototype._paddingConstraintCompare = function (expression, region, nodes, option) {\r\n        if (region) {\r\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\r\n                var node = nodes_1[_i];\r\n                if (expression(node, region, option) === false) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    Responsive.prototype._groupConstraintCompare = function (expression, nodes, option) {\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            var a = nodes[i];\r\n            for (var j = 0; j < nodes.length; j++) {\r\n                if (j !== i) {\r\n                    var b = nodes[j];\r\n                    if (expression(a, b, option) === false) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    Responsive.prototype._constraintAssignment = function (constraint, option) {\r\n        var type = constraint.type, expression = constraint.expression;\r\n        var nodes = this.nodes.nodes;\r\n        if (type === 'chain') {\r\n            return this._chainConstraintAssign();\r\n        }\r\n        if (type === 'padding') {\r\n            return this._paddingConstraintAssign(expression, this.region, nodes, option);\r\n        }\r\n    };\r\n    Responsive.prototype._chainConstraintAssign = function () {\r\n        return true;\r\n    };\r\n    Responsive.prototype._paddingConstraintAssign = function (expression, region, nodes, option) {\r\n        if (region) {\r\n            for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\r\n                var node = nodes_2[_i];\r\n                var value = expression(node, region, option);\r\n                node.value = value;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    Responsive.prototype._applyRules = function () {\r\n        var ruleCfg = this.rules[this.currentConstraint.name][this.iterationIndex];\r\n        var rule = rulesLib[ruleCfg.name];\r\n        var option = ruleCfg.option ? ruleCfg.option : {};\r\n        var nodes = this.nodes.nodes;\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            var node = nodes[i];\r\n            this._applyRule(node.shape, rule, option, i);\r\n        }\r\n    };\r\n    Responsive.prototype._applyRule = function (shape, rule, option, index) {\r\n        var cfg = {\r\n            nodes: this.nodes,\r\n            region: this.region,\r\n            plot: this.plot,\r\n        };\r\n        rule(shape, option, index, cfg);\r\n    };\r\n    return Responsive;\r\n}());\r\nexport default Responsive;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\util\\responsive\\responsive.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\util\\responsive\\responsive.js"],"names":[],"mappings":"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","sourcesContent":["import { assign } from '@antv/util';\nimport { constraintsLib } from './constraints/index';\nimport { rulesLib } from './rules/index';\nvar Responsive = /** @class */ (function () {\n    function Responsive(cfg) {\n        this.iterationTime = 10;\n        this.iterationIndex = 0;\n        this.rulesLocker = [];\n        this.constraintIndex = 0;\n        assign(this, cfg);\n        this.currentConstraint = this.constraints[0];\n        if (this.rules) {\n            this.iterationTime = this.rules[this.currentConstraint.name].length;\n        }\n        this._start();\n        this._run();\n        this._end();\n    }\n    Responsive.prototype._start = function () {\n        if (this.onStart) {\n            this.onStart(this.nodes);\n        }\n    };\n    Responsive.prototype._iteration = function () {\n        var nodes;\n        if (this.nodes.type === 'shape') {\n            nodes = this.nodes;\n        }\n        else {\n            nodes = this.nodes;\n        }\n        if (nodes.type === 'shape') {\n            nodes.measureNodes();\n        }\n        if (this.rules) {\n            this._applyRules();\n        }\n        if (nodes.type === 'shape') {\n            nodes.measureNodes();\n        }\n        if (this.onIteration) {\n            this.onIteration(this.nodes);\n        }\n    };\n    Responsive.prototype._end = function () {\n        if (this.onEnd) {\n            this.onEnd(this.nodes);\n        }\n    };\n    Responsive.prototype._run = function () {\n        var constraintPassed = this._constraintsTest();\n        while (!constraintPassed) {\n            if (this.iterationIndex > this.iterationTime - 1) {\n                break;\n            }\n            this._iteration();\n            constraintPassed = this._constraintsTest();\n            this.iterationIndex++;\n        }\n        if (this.constraintIndex < this.constraints.length - 1) {\n            this.constraintIndex++;\n            this.currentConstraint = this.constraints[this.constraintIndex];\n            this.iterationTime = this.rules ? this.rules[this.currentConstraint.name].length : 1;\n            this.iterationIndex = 0;\n            this._run();\n        }\n    };\n    Responsive.prototype._constraintsTest = function () {\n        var constraint = constraintsLib[this.currentConstraint.name];\n        var constraintOption = this.currentConstraint.option;\n        if (constraint.usage === 'compare') {\n            return this._constraintCompare(constraint, constraintOption);\n        }\n        return this._constraintAssignment(constraint, constraintOption);\n    };\n    Responsive.prototype._constraintCompare = function (constraint, option) {\n        var type = constraint.type, expression = constraint.expression;\n        var nodes = this.nodes.nodes;\n        if (type === 'chain') {\n            return this._chainConstraintCompare(expression, nodes, option);\n        }\n        if (type === 'padding') {\n            return this._paddingConstraintCompare(expression, this.region, nodes, option);\n        }\n        if (type === 'group') {\n            return this._groupConstraintCompare(expression, nodes, option);\n        }\n    };\n    Responsive.prototype._chainConstraintCompare = function (expression, nodes, option) {\n        for (var i = 0; i < nodes.length - 1; i++) {\n            var a = nodes[i];\n            var b = nodes[i + 1];\n            if (expression(a, b, option) === false) {\n                return false;\n            }\n        }\n        return true;\n    };\n    Responsive.prototype._paddingConstraintCompare = function (expression, region, nodes, option) {\n        if (region) {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (expression(node, region, option) === false) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    };\n    Responsive.prototype._groupConstraintCompare = function (expression, nodes, option) {\n        for (var i = 0; i < nodes.length; i++) {\n            var a = nodes[i];\n            for (var j = 0; j < nodes.length; j++) {\n                if (j !== i) {\n                    var b = nodes[j];\n                    if (expression(a, b, option) === false) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    };\n    Responsive.prototype._constraintAssignment = function (constraint, option) {\n        var type = constraint.type, expression = constraint.expression;\n        var nodes = this.nodes.nodes;\n        if (type === 'chain') {\n            return this._chainConstraintAssign();\n        }\n        if (type === 'padding') {\n            return this._paddingConstraintAssign(expression, this.region, nodes, option);\n        }\n    };\n    Responsive.prototype._chainConstraintAssign = function () {\n        return true;\n    };\n    Responsive.prototype._paddingConstraintAssign = function (expression, region, nodes, option) {\n        if (region) {\n            for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n                var node = nodes_2[_i];\n                var value = expression(node, region, option);\n                node.value = value;\n            }\n        }\n        return true;\n    };\n    Responsive.prototype._applyRules = function () {\n        var ruleCfg = this.rules[this.currentConstraint.name][this.iterationIndex];\n        // if (this.rulesLocker.indexOf(ruleCfg) < 0) {\n        var rule = rulesLib[ruleCfg.name];\n        var option = ruleCfg.option ? ruleCfg.option : {};\n        var nodes = this.nodes.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            /** apply rule上下文 */\n            this._applyRule(node.shape, rule, option, i);\n        }\n        // this.rulesLocker.push(ruleCfg);\n        // }\n    };\n    Responsive.prototype._applyRule = function (shape, rule, option, index) {\n        var cfg = {\n            nodes: this.nodes,\n            region: this.region,\n            plot: this.plot,\n        };\n        // rule(shape, option, index, this);\n        rule(shape, option, index, cfg);\n    };\n    return Responsive;\n}());\nexport default Responsive;\n//# sourceMappingURL=responsive.js.map"]}]}