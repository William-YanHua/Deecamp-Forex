{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\remark-parse\\lib\\tokenize\\html-inline.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\remark-parse\\lib\\tokenize\\html-inline.js","mtime":1516191690000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["'use strict';\r\nvar alphabetical = require('is-alphabetical');\r\nvar locate = require('../locate/tag');\r\nvar tag = require('../util/html').tag;\r\nmodule.exports = inlineHTML;\r\ninlineHTML.locator = locate;\r\nvar EXPRESSION_HTML_LINK_OPEN = /^<a /i;\r\nvar EXPRESSION_HTML_LINK_CLOSE = /^<\\/a>/i;\r\nfunction inlineHTML(eat, value, silent) {\r\n    var self = this;\r\n    var length = value.length;\r\n    var character;\r\n    var subvalue;\r\n    if (value.charAt(0) !== '<' || length < 3) {\r\n        return;\r\n    }\r\n    character = value.charAt(1);\r\n    if (!alphabetical(character) &&\r\n        character !== '?' &&\r\n        character !== '!' &&\r\n        character !== '/') {\r\n        return;\r\n    }\r\n    subvalue = value.match(tag);\r\n    if (!subvalue) {\r\n        return;\r\n    }\r\n    if (silent) {\r\n        return true;\r\n    }\r\n    subvalue = subvalue[0];\r\n    if (!self.inLink && EXPRESSION_HTML_LINK_OPEN.test(subvalue)) {\r\n        self.inLink = true;\r\n    }\r\n    else if (self.inLink && EXPRESSION_HTML_LINK_CLOSE.test(subvalue)) {\r\n        self.inLink = false;\r\n    }\r\n    return eat(subvalue)({ type: 'html', value: subvalue });\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\remark-parse\\lib\\tokenize\\html-inline.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\remark-parse\\lib\\tokenize\\html-inline.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;AAEb,IAAI,YAAY,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAC9C,IAAI,MAAM,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AACtC,IAAI,GAAG,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC;AAEtC,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC;AAC5B,UAAU,CAAC,OAAO,GAAG,MAAM,CAAC;AAE5B,IAAI,yBAAyB,GAAG,OAAO,CAAC;AACxC,IAAI,0BAA0B,GAAG,SAAS,CAAC;AAE3C,SAAS,UAAU,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM;IACpC,IAAI,IAAI,GAAG,IAAI,CAAC;IAChB,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;IAC1B,IAAI,SAAS,CAAC;IACd,IAAI,QAAQ,CAAC;IAEb,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,MAAM,GAAG,CAAC,EAAE;QACzC,OAAO;KACR;IAED,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAE5B,IACE,CAAC,YAAY,CAAC,SAAS,CAAC;QACxB,SAAS,KAAK,GAAG;QACjB,SAAS,KAAK,GAAG;QACjB,SAAS,KAAK,GAAG,EACjB;QACA,OAAO;KACR;IAED,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAE5B,IAAI,CAAC,QAAQ,EAAE;QACb,OAAO;KACR;IAGD,IAAI,MAAM,EAAE;QACV,OAAO,IAAI,CAAC;KACb;IAED,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;IAEvB,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,yBAAyB,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;QAC5D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;KACpB;SAAM,IAAI,IAAI,CAAC,MAAM,IAAI,0BAA0B,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;QACnE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;IAED,OAAO,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAC,CAAC,CAAC;AACxD,CAAC","sourcesContent":["'use strict';\n\nvar alphabetical = require('is-alphabetical');\nvar locate = require('../locate/tag');\nvar tag = require('../util/html').tag;\n\nmodule.exports = inlineHTML;\ninlineHTML.locator = locate;\n\nvar EXPRESSION_HTML_LINK_OPEN = /^<a /i;\nvar EXPRESSION_HTML_LINK_CLOSE = /^<\\/a>/i;\n\nfunction inlineHTML(eat, value, silent) {\n  var self = this;\n  var length = value.length;\n  var character;\n  var subvalue;\n\n  if (value.charAt(0) !== '<' || length < 3) {\n    return;\n  }\n\n  character = value.charAt(1);\n\n  if (\n    !alphabetical(character) &&\n    character !== '?' &&\n    character !== '!' &&\n    character !== '/'\n  ) {\n    return;\n  }\n\n  subvalue = value.match(tag);\n\n  if (!subvalue) {\n    return;\n  }\n\n  /* istanbul ignore if - not used yet. */\n  if (silent) {\n    return true;\n  }\n\n  subvalue = subvalue[0];\n\n  if (!self.inLink && EXPRESSION_HTML_LINK_OPEN.test(subvalue)) {\n    self.inLink = true;\n  } else if (self.inLink && EXPRESSION_HTML_LINK_CLOSE.test(subvalue)) {\n    self.inLink = false;\n  }\n\n  return eat(subvalue)({type: 'html', value: subvalue});\n}\n"]}]}