{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\lodash\\_castPath.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\lodash\\_castPath.js","mtime":1517704209000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["var isArray = require('./isArray'), isKey = require('./_isKey'), stringToPath = require('./_stringToPath'), toString = require('./toString');\r\nfunction castPath(value, object) {\r\n    if (isArray(value)) {\r\n        return value;\r\n    }\r\n    return isKey(value, object) ? [value] : stringToPath(toString(value));\r\n}\r\nmodule.exports = castPath;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\lodash\\_castPath.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\lodash\\_castPath.js"],"names":[],"mappings":"AAAA,IAAI,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC,EAC9B,KAAK,GAAG,OAAO,CAAC,UAAU,CAAC,EAC3B,YAAY,GAAG,OAAO,CAAC,iBAAiB,CAAC,EACzC,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AAUrC,SAAS,QAAQ,CAAC,KAAK,EAAE,MAAM;IAC7B,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;QAClB,OAAO,KAAK,CAAC;KACd;IACD,OAAO,KAAK,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;AACxE,CAAC;AAED,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC","sourcesContent":["var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n"]}]}