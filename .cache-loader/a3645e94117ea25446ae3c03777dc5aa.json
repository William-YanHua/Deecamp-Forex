{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\component\\esm\\annotation\\line.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\component\\esm\\annotation\\line.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __assign, __extends } from \"tslib\";\r\nimport { isNumber, isString } from '@antv/util';\r\nimport GroupComponent from '../abstract/group-component';\r\nimport { getMatrixByAngle } from '../util/matrix';\r\nimport Theme from '../util/theme';\r\nimport { getValueByPercent } from '../util/util';\r\nvar LineAnnotation = (function (_super) {\r\n    __extends(LineAnnotation, _super);\r\n    function LineAnnotation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    LineAnnotation.prototype.getDefaultCfg = function () {\r\n        var cfg = _super.prototype.getDefaultCfg.call(this);\r\n        return __assign(__assign({}, cfg), { name: 'annotation', type: 'line', locationType: 'region', start: null, end: null, style: {}, text: null, defaultCfg: {\r\n                style: {\r\n                    fill: Theme.textColor,\r\n                    fontSize: 12,\r\n                    textAlign: 'center',\r\n                    textBaseline: 'bottom',\r\n                    fontFamily: Theme.fontFamily,\r\n                },\r\n                text: {\r\n                    position: 'center',\r\n                    autoRotate: true,\r\n                    content: null,\r\n                    offsetX: 0,\r\n                    offsetY: 0,\r\n                    style: {\r\n                        stroke: Theme.lineColor,\r\n                        lineWidth: 1,\r\n                    },\r\n                },\r\n            } });\r\n    };\r\n    LineAnnotation.prototype.renderInner = function (group) {\r\n        this.renderLine(group);\r\n        if (this.get('text')) {\r\n            this.renderLabel(group);\r\n        }\r\n    };\r\n    LineAnnotation.prototype.renderLine = function (group) {\r\n        var start = this.get('start');\r\n        var end = this.get('end');\r\n        var style = this.get('style');\r\n        this.addShape(group, {\r\n            type: 'line',\r\n            id: this.getElementId('line'),\r\n            name: 'annotation-line',\r\n            attrs: __assign({ x1: start.x, y1: start.y, x2: end.x, y2: end.y }, style),\r\n        });\r\n    };\r\n    LineAnnotation.prototype.getLabelPoint = function (start, end, position) {\r\n        var percent;\r\n        if (position === 'start') {\r\n            percent = 0;\r\n        }\r\n        else if (position === 'center') {\r\n            percent = 0.5;\r\n        }\r\n        else if (isString(position) && position.indexOf('%') !== -1) {\r\n            percent = parseInt(position, 10) / 100;\r\n        }\r\n        else if (isNumber(position)) {\r\n            percent = position;\r\n        }\r\n        else {\r\n            percent = 1;\r\n        }\r\n        if (percent > 1 || percent < 0) {\r\n            percent = 1;\r\n        }\r\n        return {\r\n            x: getValueByPercent(start.x, end.x, percent),\r\n            y: getValueByPercent(start.y, end.y, percent),\r\n        };\r\n    };\r\n    LineAnnotation.prototype.renderLabel = function (group) {\r\n        var text = this.get('text');\r\n        var start = this.get('start');\r\n        var end = this.get('end');\r\n        var position = text.position, content = text.content, style = text.style, offsetX = text.offsetX, offsetY = text.offsetY, autoRotate = text.autoRotate;\r\n        var point = this.getLabelPoint(start, end, position);\r\n        var attrs = __assign({ x: point.x + offsetX, y: point.y + offsetY, text: content }, style);\r\n        if (autoRotate) {\r\n            var vector = [end.x - start.x, end.y - start.y];\r\n            var angle = Math.atan2(vector[1], vector[0]);\r\n            var matrix = getMatrixByAngle(point, angle);\r\n            attrs.matrix = matrix;\r\n        }\r\n        this.addShape(group, {\r\n            type: 'text',\r\n            id: this.getElementId('line-text'),\r\n            name: 'annotation-line-text',\r\n            attrs: attrs,\r\n        });\r\n    };\r\n    return LineAnnotation;\r\n}(GroupComponent));\r\nexport default LineAnnotation;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\component\\esm\\annotation\\line.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\component\\esm\\annotation\\line.js"],"names":[],"mappings":"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","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { isNumber, isString } from '@antv/util';\nimport GroupComponent from '../abstract/group-component';\nimport { getMatrixByAngle } from '../util/matrix';\nimport Theme from '../util/theme';\nimport { getValueByPercent } from '../util/util';\nvar LineAnnotation = /** @class */ (function (_super) {\n    __extends(LineAnnotation, _super);\n    function LineAnnotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @protected\n     * 默认的配置项\n     * @returns {object} 默认的配置项\n     */\n    LineAnnotation.prototype.getDefaultCfg = function () {\n        var cfg = _super.prototype.getDefaultCfg.call(this);\n        return __assign(__assign({}, cfg), { name: 'annotation', type: 'line', locationType: 'region', start: null, end: null, style: {}, text: null, defaultCfg: {\n                style: {\n                    fill: Theme.textColor,\n                    fontSize: 12,\n                    textAlign: 'center',\n                    textBaseline: 'bottom',\n                    fontFamily: Theme.fontFamily,\n                },\n                text: {\n                    position: 'center',\n                    autoRotate: true,\n                    content: null,\n                    offsetX: 0,\n                    offsetY: 0,\n                    style: {\n                        stroke: Theme.lineColor,\n                        lineWidth: 1,\n                    },\n                },\n            } });\n    };\n    LineAnnotation.prototype.renderInner = function (group) {\n        this.renderLine(group);\n        if (this.get('text')) {\n            this.renderLabel(group);\n        }\n    };\n    // 绘制线\n    LineAnnotation.prototype.renderLine = function (group) {\n        var start = this.get('start');\n        var end = this.get('end');\n        var style = this.get('style');\n        this.addShape(group, {\n            type: 'line',\n            id: this.getElementId('line'),\n            name: 'annotation-line',\n            attrs: __assign({ x1: start.x, y1: start.y, x2: end.x, y2: end.y }, style),\n        });\n    };\n    // 获取 label 的位置\n    LineAnnotation.prototype.getLabelPoint = function (start, end, position) {\n        var percent;\n        if (position === 'start') {\n            percent = 0;\n        }\n        else if (position === 'center') {\n            percent = 0.5;\n        }\n        else if (isString(position) && position.indexOf('%') !== -1) {\n            percent = parseInt(position, 10) / 100;\n        }\n        else if (isNumber(position)) {\n            percent = position;\n        }\n        else {\n            percent = 1;\n        }\n        if (percent > 1 || percent < 0) {\n            percent = 1;\n        }\n        return {\n            x: getValueByPercent(start.x, end.x, percent),\n            y: getValueByPercent(start.y, end.y, percent),\n        };\n    };\n    // 绘制 label\n    LineAnnotation.prototype.renderLabel = function (group) {\n        var text = this.get('text');\n        var start = this.get('start');\n        var end = this.get('end');\n        var position = text.position, content = text.content, style = text.style, offsetX = text.offsetX, offsetY = text.offsetY, autoRotate = text.autoRotate;\n        var point = this.getLabelPoint(start, end, position);\n        var attrs = __assign({ x: point.x + offsetX, y: point.y + offsetY, text: content }, style);\n        // 如果自动旋转，需要计算矩阵\n        if (autoRotate) {\n            var vector = [end.x - start.x, end.y - start.y];\n            var angle = Math.atan2(vector[1], vector[0]);\n            var matrix = getMatrixByAngle(point, angle);\n            attrs.matrix = matrix;\n        }\n        this.addShape(group, {\n            type: 'text',\n            id: this.getElementId('line-text'),\n            name: 'annotation-line-text',\n            attrs: attrs,\n        });\n    };\n    return LineAnnotation;\n}(GroupComponent));\nexport default LineAnnotation;\n//# sourceMappingURL=line.js.map"]}]}