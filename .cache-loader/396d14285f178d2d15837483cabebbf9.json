{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\geom\\path.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\geom\\path.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\r\nfunction _assertThisInitialized(self) { if (self === void 0) {\r\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\r\n} return self; }\r\nvar GeomBase = require('./base');\r\nvar SplitMixin = require('./mixin/split');\r\nvar Util = require('../util');\r\nvar Path = function (_GeomBase) {\r\n    _inheritsLoose(Path, _GeomBase);\r\n    var _proto = Path.prototype;\r\n    _proto.getDefaultCfg = function getDefaultCfg() {\r\n        var cfg = _GeomBase.prototype.getDefaultCfg.call(this);\r\n        cfg.type = 'path';\r\n        cfg.shapeType = 'line';\r\n        return cfg;\r\n    };\r\n    function Path(cfg) {\r\n        var _this;\r\n        _this = _GeomBase.call(this, cfg) || this;\r\n        Util.assign(_assertThisInitialized(_assertThisInitialized(_this)), SplitMixin);\r\n        return _this;\r\n    }\r\n    _proto.getDrawCfg = function getDrawCfg(obj) {\r\n        var cfg = _GeomBase.prototype.getDrawCfg.call(this, obj);\r\n        cfg.isStack = this.hasStack();\r\n        return cfg;\r\n    };\r\n    _proto.draw = function draw(data, container, shapeFactory, index) {\r\n        var self = this;\r\n        var splitArray = this.splitData(data);\r\n        var cfg = this.getDrawCfg(data[0]);\r\n        cfg.origin = data;\r\n        Util.each(splitArray, function (subData, splitedIndex) {\r\n            if (!Util.isEmpty(subData)) {\r\n                cfg.splitedIndex = splitedIndex;\r\n                cfg.points = subData;\r\n                var geomShape = shapeFactory.drawShape(cfg.shape, cfg, container);\r\n                self.appendShapeInfo(geomShape, index + splitedIndex);\r\n            }\r\n        });\r\n    };\r\n    return Path;\r\n}(GeomBase);\r\nGeomBase.Path = Path;\r\nmodule.exports = Path;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\geom\\path.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\geom\\path.js"],"names":[],"mappings":"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","sourcesContent":["function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n/**\n * @fileOverview 路径图，无序的线图\n * @author dxq613@gmail.com\n */\nvar GeomBase = require('./base');\n\nvar SplitMixin = require('./mixin/split');\n\nvar Util = require('../util');\n\nvar Path =\n/*#__PURE__*/\nfunction (_GeomBase) {\n  _inheritsLoose(Path, _GeomBase);\n\n  var _proto = Path.prototype;\n\n  /**\n   * 获取默认的配置属性\n   * @protected\n   * @return {Object} 默认属性\n   */\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _GeomBase.prototype.getDefaultCfg.call(this);\n\n    cfg.type = 'path';\n    cfg.shapeType = 'line';\n    return cfg;\n  };\n\n  function Path(cfg) {\n    var _this;\n\n    _this = _GeomBase.call(this, cfg) || this;\n    Util.assign(_assertThisInitialized(_assertThisInitialized(_this)), SplitMixin);\n    return _this;\n  }\n\n  _proto.getDrawCfg = function getDrawCfg(obj) {\n    var cfg = _GeomBase.prototype.getDrawCfg.call(this, obj);\n\n    cfg.isStack = this.hasStack();\n    return cfg;\n  };\n\n  _proto.draw = function draw(data, container, shapeFactory, index) {\n    var self = this;\n    var splitArray = this.splitData(data);\n    var cfg = this.getDrawCfg(data[0]);\n    cfg.origin = data; // path,line 等图的origin 是整个序列\n\n    Util.each(splitArray, function (subData, splitedIndex) {\n      if (!Util.isEmpty(subData)) {\n        cfg.splitedIndex = splitedIndex; // 传入分割片段索引 用于生成id\n\n        cfg.points = subData;\n        var geomShape = shapeFactory.drawShape(cfg.shape, cfg, container);\n        self.appendShapeInfo(geomShape, index + splitedIndex);\n      }\n    });\n  };\n\n  return Path;\n}(GeomBase);\n\nGeomBase.Path = Path;\nmodule.exports = Path;"]}]}