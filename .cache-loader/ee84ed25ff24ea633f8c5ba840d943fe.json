{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/component/esm/crosshair/circle.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/component/esm/crosshair/circle.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { __assign, __extends } from \"tslib\";\nimport { getCirclePoint } from '../util/util';\nimport CrosshairBase from './base';\nvar LineCrosshair = (function (_super) {\n    __extends(LineCrosshair, _super);\n    function LineCrosshair() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    LineCrosshair.prototype.getDefaultCfg = function () {\n        var cfg = _super.prototype.getDefaultCfg.call(this);\n        return __assign(__assign({}, cfg), { type: 'circle', locationType: 'circle', center: null, radius: 100, startAngle: -Math.PI / 2, endAngle: (Math.PI * 3) / 2 });\n    };\n    LineCrosshair.prototype.getRotateAngle = function () {\n        var _a = this.getLocation(), startAngle = _a.startAngle, endAngle = _a.endAngle;\n        var position = this.get('text').position;\n        var tangentAngle = position === 'start' ? startAngle + Math.PI / 2 : endAngle - Math.PI / 2;\n        return tangentAngle;\n    };\n    LineCrosshair.prototype.getTextPoint = function () {\n        var text = this.get('text');\n        var position = text.position, offset = text.offset;\n        var _a = this.getLocation(), center = _a.center, radius = _a.radius, startAngle = _a.startAngle, endAngle = _a.endAngle;\n        var angle = position === 'start' ? startAngle : endAngle;\n        var tangentAngle = this.getRotateAngle() - Math.PI;\n        var point = getCirclePoint(center, radius, angle);\n        var offsetX = Math.cos(tangentAngle) * offset;\n        var offsetY = Math.sin(tangentAngle) * offset;\n        return {\n            x: point.x + offsetX,\n            y: point.y + offsetY,\n        };\n    };\n    LineCrosshair.prototype.getLinePath = function () {\n        var _a = this.getLocation(), center = _a.center, radius = _a.radius, startAngle = _a.startAngle, endAngle = _a.endAngle;\n        var path = null;\n        if (endAngle - startAngle === Math.PI * 2) {\n            var x = center.x, y = center.y;\n            path = [\n                ['M', x, y - radius],\n                ['A', radius, radius, 0, 1, 1, x, y + radius],\n                ['A', radius, radius, 0, 1, 1, x, y - radius],\n                ['Z'],\n            ];\n        }\n        else {\n            var startPoint = getCirclePoint(center, radius, startAngle);\n            var endPoint = getCirclePoint(center, radius, endAngle);\n            var large = Math.abs(endAngle - startAngle) > Math.PI ? 1 : 0;\n            var sweep = startAngle > endAngle ? 0 : 1;\n            path = [\n                ['M', startPoint.x, startPoint.y],\n                ['A', radius, radius, 0, large, sweep, endPoint.x, endPoint.y],\n            ];\n        }\n        return path;\n    };\n    return LineCrosshair;\n}(CrosshairBase));\nexport default LineCrosshair;\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/component/esm/crosshair/circle.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/component/esm/crosshair/circle.js"],"names":[],"mappings":"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","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { getCirclePoint } from '../util/util';\nimport CrosshairBase from './base';\nvar LineCrosshair = /** @class */ (function (_super) {\n    __extends(LineCrosshair, _super);\n    function LineCrosshair() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    LineCrosshair.prototype.getDefaultCfg = function () {\n        var cfg = _super.prototype.getDefaultCfg.call(this);\n        return __assign(__assign({}, cfg), { type: 'circle', locationType: 'circle', center: null, radius: 100, startAngle: -Math.PI / 2, endAngle: (Math.PI * 3) / 2 });\n    };\n    LineCrosshair.prototype.getRotateAngle = function () {\n        var _a = this.getLocation(), startAngle = _a.startAngle, endAngle = _a.endAngle;\n        var position = this.get('text').position;\n        var tangentAngle = position === 'start' ? startAngle + Math.PI / 2 : endAngle - Math.PI / 2;\n        return tangentAngle;\n    };\n    LineCrosshair.prototype.getTextPoint = function () {\n        var text = this.get('text');\n        var position = text.position, offset = text.offset;\n        var _a = this.getLocation(), center = _a.center, radius = _a.radius, startAngle = _a.startAngle, endAngle = _a.endAngle;\n        var angle = position === 'start' ? startAngle : endAngle;\n        var tangentAngle = this.getRotateAngle() - Math.PI;\n        var point = getCirclePoint(center, radius, angle);\n        // 这个地方其实应该求切线向量然后在乘以 offset，但是太啰嗦了，直接给出结果\n        // const tangent = [Math.cos(tangentAngle), Math.sin(tangentAngle)];\n        // const offsetVector = vec2.scale([], tangent, offset);\n        var offsetX = Math.cos(tangentAngle) * offset;\n        var offsetY = Math.sin(tangentAngle) * offset;\n        return {\n            x: point.x + offsetX,\n            y: point.y + offsetY,\n        };\n    };\n    LineCrosshair.prototype.getLinePath = function () {\n        var _a = this.getLocation(), center = _a.center, radius = _a.radius, startAngle = _a.startAngle, endAngle = _a.endAngle;\n        var path = null;\n        if (endAngle - startAngle === Math.PI * 2) {\n            // 整圆\n            var x = center.x, y = center.y;\n            path = [\n                ['M', x, y - radius],\n                ['A', radius, radius, 0, 1, 1, x, y + radius],\n                ['A', radius, radius, 0, 1, 1, x, y - radius],\n                ['Z'],\n            ];\n        }\n        else {\n            var startPoint = getCirclePoint(center, radius, startAngle);\n            var endPoint = getCirclePoint(center, radius, endAngle);\n            var large = Math.abs(endAngle - startAngle) > Math.PI ? 1 : 0;\n            var sweep = startAngle > endAngle ? 0 : 1;\n            path = [\n                ['M', startPoint.x, startPoint.y],\n                ['A', radius, radius, 0, large, sweep, endPoint.x, endPoint.y],\n            ];\n        }\n        return path;\n    };\n    return LineCrosshair;\n}(CrosshairBase));\nexport default LineCrosshair;\n//# sourceMappingURL=circle.js.map"]}]}