{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/component/esm/axis/base.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/component/esm/axis/base.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { __assign, __extends } from \"tslib\";\nimport { ext } from '@antv/matrix-util';\nimport { each, filter, isNil, isNumberEqual, mix } from '@antv/util';\nimport GroupComponent from '../abstract/group-component';\nimport { getMatrixByAngle } from '../util/matrix';\nimport { getStatesStyle } from '../util/state';\nimport Theme from '../util/theme';\nvar AxisBase = (function (_super) {\n    __extends(AxisBase, _super);\n    function AxisBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AxisBase.prototype.getDefaultCfg = function () {\n        var cfg = _super.prototype.getDefaultCfg.call(this);\n        return __assign(__assign({}, cfg), { name: 'axis', ticks: [], line: {}, tickLine: {}, subTickLine: null, title: null,\n            label: {},\n            verticalFactor: 1,\n            verticalLimitLength: null, overlapOrder: ['autoRotate', 'autoEllipsis', 'autoHide'], tickStates: {}, defaultCfg: {\n                line: {\n                    style: {\n                        lineWidth: 1,\n                        stroke: Theme.lineColor,\n                    },\n                },\n                tickLine: {\n                    style: {\n                        lineWidth: 1,\n                        stroke: Theme.lineColor,\n                    },\n                    alignTick: true,\n                    length: 5,\n                    displayWithLabel: true,\n                },\n                subTickLine: {\n                    style: {\n                        lineWidth: 1,\n                        stroke: Theme.lineColor,\n                    },\n                    count: 4,\n                    length: 2,\n                },\n                label: {\n                    autoRotate: true,\n                    autoHide: false,\n                    autoEllipsis: false,\n                    style: {\n                        fontSize: 12,\n                        fill: Theme.textColor,\n                        textBaseline: 'middle',\n                        fontFamily: Theme.fontFamily,\n                        fontWeight: 'normal',\n                    },\n                    offset: 10,\n                },\n                title: {\n                    autoRotate: true,\n                    spacing: 5,\n                    position: 'center',\n                    style: {\n                        fontSize: 12,\n                        fill: Theme.textColor,\n                        textBaseline: 'middle',\n                        fontFamily: Theme.fontFamily,\n                        textAlign: 'center',\n                    },\n                },\n                tickStates: {\n                    active: {\n                        labelStyle: {\n                            fontWeight: 500,\n                        },\n                        tickLineStyle: {\n                            lineWidth: 2,\n                        },\n                    },\n                    inactive: {\n                        labelStyle: {\n                            fill: Theme.uncheckedColor,\n                        },\n                    },\n                },\n            } });\n    };\n    AxisBase.prototype.renderInner = function (group) {\n        if (this.get('line')) {\n            this.drawLine(group);\n        }\n        this.drawTicks(group);\n        if (this.get('title')) {\n            this.drawTitle(group);\n        }\n    };\n    AxisBase.prototype.isList = function () {\n        return true;\n    };\n    AxisBase.prototype.getItems = function () {\n        return this.get('ticks');\n    };\n    AxisBase.prototype.setItems = function (items) {\n        this.update({\n            ticks: items,\n        });\n    };\n    AxisBase.prototype.updateItem = function (item, cfg) {\n        mix(item, cfg);\n        this.clear();\n        this.render();\n    };\n    AxisBase.prototype.clearItems = function () {\n        var itemGroup = this.getElementByLocalId('label-group');\n        itemGroup && itemGroup.clear();\n    };\n    AxisBase.prototype.setItemState = function (item, state, value) {\n        item[state] = value;\n        this.updateTickStates(item);\n    };\n    AxisBase.prototype.hasState = function (item, state) {\n        return !!item[state];\n    };\n    AxisBase.prototype.getItemStates = function (item) {\n        var tickStates = this.get('tickStates');\n        var rst = [];\n        each(tickStates, function (v, k) {\n            if (item[k]) {\n                rst.push(k);\n            }\n        });\n        return rst;\n    };\n    AxisBase.prototype.clearItemsState = function (state) {\n        var _this = this;\n        var items = this.getItemsByState(state);\n        each(items, function (item) {\n            _this.setItemState(item, state, false);\n        });\n    };\n    AxisBase.prototype.getItemsByState = function (state) {\n        var _this = this;\n        var items = this.getItems();\n        return filter(items, function (item) {\n            return _this.hasState(item, state);\n        });\n    };\n    AxisBase.prototype.getSidePoint = function (point, offset) {\n        var self = this;\n        var vector = self.getSideVector(offset, point);\n        return {\n            x: point.x + vector[0],\n            y: point.y + vector[1],\n        };\n    };\n    AxisBase.prototype.getTextAnchor = function (vector) {\n        var align;\n        if (isNumberEqual(vector[0], 0)) {\n            align = 'center';\n        }\n        else if (vector[0] > 0) {\n            align = 'start';\n        }\n        else if (vector[0] < 0) {\n            align = 'end';\n        }\n        return align;\n    };\n    AxisBase.prototype.processOverlap = function (labelGroup) { };\n    AxisBase.prototype.drawLine = function (group) {\n        var path = this.getLinePath();\n        var line = this.get('line');\n        this.addShape(group, {\n            type: 'path',\n            id: this.getElementId('line'),\n            name: 'axis-line',\n            attrs: mix({\n                path: path,\n            }, line.style),\n        });\n    };\n    AxisBase.prototype.getTickLineItems = function (ticks) {\n        var _this = this;\n        var tickLineItems = [];\n        var tickLine = this.get('tickLine');\n        var alignTick = tickLine.alignTick;\n        var tickLineLength = tickLine.length;\n        var tickSegment = 1;\n        var tickCount = ticks.length;\n        if (tickCount >= 2) {\n            tickSegment = ticks[1].value - ticks[0].value;\n        }\n        each(ticks, function (tick) {\n            var point = tick.point;\n            if (!alignTick) {\n                point = _this.getTickPoint(tick.value - tickSegment / 2);\n            }\n            var endPoint = _this.getSidePoint(point, tickLineLength);\n            tickLineItems.push({\n                startPoint: point,\n                tickValue: tick.value,\n                endPoint: endPoint,\n                tickId: tick.id,\n                id: \"tickline-\" + tick.id,\n            });\n        });\n        return tickLineItems;\n    };\n    AxisBase.prototype.getSubTickLineItems = function (tickLineItems) {\n        var subTickLineItems = [];\n        var subTickLine = this.get('subTickLine');\n        var subCount = subTickLine.count;\n        var tickLineCount = tickLineItems.length;\n        if (tickLineCount >= 2) {\n            for (var i = 0; i < tickLineCount - 1; i++) {\n                var pre = tickLineItems[i];\n                var next = tickLineItems[i + 1];\n                for (var j = 0; j < subCount; j++) {\n                    var percent = (j + 1) / (subCount + 1);\n                    var tickValue = (1 - percent) * pre.tickValue + percent * next.tickValue;\n                    var point = this.getTickPoint(tickValue);\n                    var endPoint = this.getSidePoint(point, subTickLine.length);\n                    subTickLineItems.push({\n                        startPoint: point,\n                        endPoint: endPoint,\n                        tickValue: tickValue,\n                        id: \"sub-\" + pre.id + \"-\" + j,\n                    });\n                }\n            }\n        }\n        return subTickLineItems;\n    };\n    AxisBase.prototype.getTickLineAttrs = function (tickItem, type) {\n        var tickLineStyle = this.get(type).style;\n        var startPoint = tickItem.startPoint, endPoint = tickItem.endPoint;\n        var attrs = mix({\n            x1: startPoint.x,\n            y1: startPoint.y,\n            x2: endPoint.x,\n            y2: endPoint.y,\n        }, tickLineStyle);\n        return attrs;\n    };\n    AxisBase.prototype.drawTick = function (tickItem, tickLineGroup, type) {\n        this.addShape(tickLineGroup, {\n            type: 'line',\n            id: this.getElementId(tickItem.id),\n            name: \"axis-\" + type,\n            attrs: this.getTickLineAttrs(tickItem, type),\n        });\n    };\n    AxisBase.prototype.drawTickLines = function (group) {\n        var _this = this;\n        var ticks = this.get('ticks');\n        var subTickLine = this.get('subTickLine');\n        var tickLineItems = this.getTickLineItems(ticks);\n        var tickLineGroup = this.addGroup(group, {\n            name: 'axis-tickline-group',\n            id: this.getElementId('tickline-group'),\n        });\n        var tickCfg = this.get('tickLine');\n        each(tickLineItems, function (item) {\n            if (tickCfg.displayWithLabel) {\n                var labelId = _this.getElementId(\"label-\" + item.tickId);\n                if (group.findById(labelId)) {\n                    _this.drawTick(item, tickLineGroup, 'tickLine');\n                }\n            }\n            else {\n                _this.drawTick(item, tickLineGroup, 'tickLine');\n            }\n        });\n        if (subTickLine) {\n            var subTickLineItems = this.getSubTickLineItems(tickLineItems);\n            each(subTickLineItems, function (item) {\n                _this.drawTick(item, tickLineGroup, 'subTickLine');\n            });\n        }\n    };\n    AxisBase.prototype.processTicks = function () {\n        var _this = this;\n        var ticks = this.get('ticks');\n        each(ticks, function (tick) {\n            tick.point = _this.getTickPoint(tick.value);\n            if (isNil(tick.id)) {\n                tick.id = tick.name;\n            }\n        });\n    };\n    AxisBase.prototype.drawTicks = function (group) {\n        var _this = this;\n        this.processTicks();\n        if (this.get('label')) {\n            this.drawLabels(group);\n        }\n        if (this.get('tickLine')) {\n            this.drawTickLines(group);\n        }\n        var ticks = this.get('ticks');\n        each(ticks, function (tick) {\n            _this.applyTickStates(tick, group);\n        });\n    };\n    AxisBase.prototype.getLabelAttrs = function (tick, index) {\n        var labelCfg = this.get('label');\n        var offset = labelCfg.offset, style = labelCfg.style, rotate = labelCfg.rotate, formatter = labelCfg.formatter;\n        var point = this.getSidePoint(tick.point, offset);\n        var vector = this.getSideVector(offset, point);\n        var text = formatter ? formatter(tick.name, tick, index) : tick.name;\n        var attrs = mix({\n            x: point.x,\n            y: point.y,\n            text: text,\n            textAlign: this.getTextAnchor(vector),\n        }, style);\n        if (rotate) {\n            attrs.matrix = getMatrixByAngle(point, rotate);\n        }\n        return attrs;\n    };\n    AxisBase.prototype.drawLabels = function (group) {\n        var _this = this;\n        var ticks = this.get('ticks');\n        var labelGroup = this.addGroup(group, {\n            name: 'axis-label-group',\n            id: this.getElementId('label-group'),\n        });\n        each(ticks, function (tick, index) {\n            _this.addShape(labelGroup, {\n                type: 'text',\n                name: 'axis-label',\n                id: _this.getElementId(\"label-\" + tick.id),\n                attrs: _this.getLabelAttrs(tick, index),\n                delegateObject: {\n                    tick: tick,\n                    item: tick,\n                    index: index,\n                },\n            });\n        });\n        this.processOverlap(labelGroup);\n    };\n    AxisBase.prototype.getTitleAttrs = function () {\n        var titleCfg = this.get('title');\n        var style = titleCfg.style, position = titleCfg.position, offset = titleCfg.offset, _a = titleCfg.spacing, spacing = _a === void 0 ? 0 : _a, autoRotate = titleCfg.autoRotate;\n        var titleHeight = style.fontSize;\n        var percent = 0.5;\n        if (position === 'start') {\n            percent = 0;\n        }\n        else if (position === 'end') {\n            percent = 1;\n        }\n        var point = this.getTickPoint(percent);\n        var titlePoint = this.getSidePoint(point, offset || spacing + titleHeight / 2);\n        var attrs = mix({\n            x: titlePoint.x,\n            y: titlePoint.y,\n            text: titleCfg.text,\n        }, style);\n        var rotate = titleCfg.rotate;\n        var angle = rotate;\n        if (isNil(rotate) && autoRotate) {\n            var vector = this.getAxisVector(point);\n            var v1 = [1, 0];\n            angle = ext.angleTo(vector, v1, true);\n        }\n        if (angle) {\n            var matrix = getMatrixByAngle(titlePoint, angle);\n            attrs.matrix = matrix;\n        }\n        return attrs;\n    };\n    AxisBase.prototype.drawTitle = function (group) {\n        this.addShape(group, {\n            type: 'text',\n            id: this.getElementId('title'),\n            name: 'axis-title',\n            attrs: this.getTitleAttrs(),\n        });\n    };\n    AxisBase.prototype.applyTickStates = function (tick, group) {\n        var states = this.getItemStates(tick);\n        if (states.length) {\n            var tickStates = this.get('tickStates');\n            var labelId = this.getElementId(\"label-\" + tick.id);\n            var labelShape = group.findById(labelId);\n            if (labelShape) {\n                var labelStateStyle = getStatesStyle(tick, 'label', tickStates);\n                labelStateStyle && labelShape.attr(labelStateStyle);\n            }\n            var tickLineId = this.getElementId(\"tickline-\" + tick.id);\n            var tickLineShape = group.findById(tickLineId);\n            if (tickLineShape) {\n                var tickLineStateStyle = getStatesStyle(tick, 'tickLine', tickStates);\n                tickLineStateStyle && tickLineShape.attr(tickLineStateStyle);\n            }\n        }\n    };\n    AxisBase.prototype.updateTickStates = function (tick) {\n        var states = this.getItemStates(tick);\n        var tickStates = this.get('tickStates');\n        var labelCfg = this.get('label');\n        var labelShape = this.getElementByLocalId(\"label-\" + tick.id);\n        var tickLineCfg = this.get('tickLine');\n        var tickLineShape = this.getElementByLocalId(\"tickline-\" + tick.id);\n        if (states.length) {\n            if (labelShape) {\n                var labelStateStyle = getStatesStyle(tick, 'label', tickStates);\n                labelStateStyle && labelShape.attr(labelStateStyle);\n            }\n            if (tickLineShape) {\n                var tickLineStateStyle = getStatesStyle(tick, 'tickLine', tickStates);\n                tickLineStateStyle && tickLineShape.attr(tickLineStateStyle);\n            }\n        }\n        else {\n            if (labelShape) {\n                labelShape.attr(labelCfg.style);\n            }\n            if (tickLineShape) {\n                tickLineShape.attr(tickLineCfg.style);\n            }\n        }\n    };\n    return AxisBase;\n}(GroupComponent));\nexport default AxisBase;\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/component/esm/axis/base.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/component/esm/axis/base.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAC5C,OAAO,EAAE,GAAG,EAAE,MAAM,mBAAmB,CAAC;AACxC,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG,EAAE,MAAM,YAAY,CAAC;AACrE,OAAO,cAAc,MAAM,6BAA6B,CAAC;AACzD,OAAO,EAAE,gBAAgB,EAAE,MAAM,gBAAgB,CAAC;AAClD,OAAO,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AAC/C,OAAO,KAAK,MAAM,eAAe,CAAC;AAClC,IAAI,QAAQ,GAAiB,CAAC,UAAU,MAAM;IAC1C,SAAS,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC5B,SAAS,QAAQ;QACb,OAAO,MAAM,KAAK,IAAI,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,IAAI,CAAC;IACpE,CAAC;IACD,QAAQ,CAAC,SAAS,CAAC,aAAa,GAAG;QAC/B,IAAI,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpD,OAAO,QAAQ,CAAC,QAAQ,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI;YAIhH,KAAK,EAAE,EAAE;YAIT,cAAc,EAAE,CAAC;YAEjB,mBAAmB,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,YAAY,EAAE,cAAc,EAAE,UAAU,CAAC,EAAE,UAAU,EAAE,EAAE,EAAE,UAAU,EAAE;gBAC7G,IAAI,EAAE;oBAEF,KAAK,EAAE;wBACH,SAAS,EAAE,CAAC;wBACZ,MAAM,EAAE,KAAK,CAAC,SAAS;qBAC1B;iBACJ;gBACD,QAAQ,EAAE;oBAEN,KAAK,EAAE;wBACH,SAAS,EAAE,CAAC;wBACZ,MAAM,EAAE,KAAK,CAAC,SAAS;qBAC1B;oBACD,SAAS,EAAE,IAAI;oBACf,MAAM,EAAE,CAAC;oBACT,gBAAgB,EAAE,IAAI;iBACzB;gBACD,WAAW,EAAE;oBAET,KAAK,EAAE;wBACH,SAAS,EAAE,CAAC;wBACZ,MAAM,EAAE,KAAK,CAAC,SAAS;qBAC1B;oBACD,KAAK,EAAE,CAAC;oBACR,MAAM,EAAE,CAAC;iBACZ;gBACD,KAAK,EAAE;oBACH,UAAU,EAAE,IAAI;oBAChB,QAAQ,EAAE,KAAK;oBACf,YAAY,EAAE,KAAK;oBACnB,KAAK,EAAE;wBACH,QAAQ,EAAE,EAAE;wBACZ,IAAI,EAAE,KAAK,CAAC,SAAS;wBACrB,YAAY,EAAE,QAAQ;wBACtB,UAAU,EAAE,KAAK,CAAC,UAAU;wBAC5B,UAAU,EAAE,QAAQ;qBACvB;oBACD,MAAM,EAAE,EAAE;iBACb;gBACD,KAAK,EAAE;oBACH,UAAU,EAAE,IAAI;oBAChB,OAAO,EAAE,CAAC;oBACV,QAAQ,EAAE,QAAQ;oBAClB,KAAK,EAAE;wBACH,QAAQ,EAAE,EAAE;wBACZ,IAAI,EAAE,KAAK,CAAC,SAAS;wBACrB,YAAY,EAAE,QAAQ;wBACtB,UAAU,EAAE,KAAK,CAAC,UAAU;wBAC5B,SAAS,EAAE,QAAQ;qBACtB;iBACJ;gBACD,UAAU,EAAE;oBACR,MAAM,EAAE;wBACJ,UAAU,EAAE;4BACR,UAAU,EAAE,GAAG;yBAClB;wBACD,aAAa,EAAE;4BACX,SAAS,EAAE,CAAC;yBACf;qBACJ;oBACD,QAAQ,EAAE;wBACN,UAAU,EAAE;4BACR,IAAI,EAAE,KAAK,CAAC,cAAc;yBAC7B;qBACJ;iBACJ;aACJ,EAAE,CAAC,CAAC;IACb,CAAC,CAAC;IAIF,QAAQ,CAAC,SAAS,CAAC,WAAW,GAAG,UAAU,KAAK;QAC5C,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;YAClB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SACxB;QAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACtB,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;YACnB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SACzB;IACL,CAAC,CAAC;IAEF,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG;QACxB,OAAO,IAAI,CAAC;IAChB,CAAC,CAAC;IAKF,QAAQ,CAAC,SAAS,CAAC,QAAQ,GAAG;QAC1B,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IAC7B,CAAC,CAAC;IAKF,QAAQ,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,KAAK;QACzC,IAAI,CAAC,MAAM,CAAC;YACR,KAAK,EAAE,KAAK;SACf,CAAC,CAAC;IACP,CAAC,CAAC;IAMF,QAAQ,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,IAAI,EAAE,GAAG;QAC/C,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC,CAAC;IAIF,QAAQ,CAAC,SAAS,CAAC,UAAU,GAAG;QAC5B,IAAI,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC;QACxD,SAAS,IAAI,SAAS,CAAC,KAAK,EAAE,CAAC;IACnC,CAAC,CAAC;IAOF,QAAQ,CAAC,SAAS,CAAC,YAAY,GAAG,UAAU,IAAI,EAAE,KAAK,EAAE,KAAK;QAC1D,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC,CAAC;IAMF,QAAQ,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,IAAI,EAAE,KAAK;QAC/C,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACzB,CAAC,CAAC;IACF,QAAQ,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,IAAI;QAC7C,IAAI,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QACxC,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,CAAC;YAC3B,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE;gBAET,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACf;QACL,CAAC,CAAC,CAAC;QACH,OAAO,GAAG,CAAC;IACf,CAAC,CAAC;IAKF,QAAQ,CAAC,SAAS,CAAC,eAAe,GAAG,UAAU,KAAK;QAChD,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QACxC,IAAI,CAAC,KAAK,EAAE,UAAU,IAAI;YACtB,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;IAMF,QAAQ,CAAC,SAAS,CAAC,eAAe,GAAG,UAAU,KAAK;QAChD,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC5B,OAAO,MAAM,CAAC,KAAK,EAAE,UAAU,IAAI;YAC/B,OAAO,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;IACF,QAAQ,CAAC,SAAS,CAAC,YAAY,GAAG,UAAU,KAAK,EAAE,MAAM;QACrD,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAC/C,OAAO;YACH,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;YACtB,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;SACzB,CAAC;IACN,CAAC,CAAC;IACF,QAAQ,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,MAAM;QAC/C,IAAI,KAAK,CAAC;QACV,IAAI,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;YAC7B,KAAK,GAAG,QAAQ,CAAC;SACpB;aACI,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YACpB,KAAK,GAAG,OAAO,CAAC;SACnB;aACI,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YACpB,KAAK,GAAG,KAAK,CAAC;SACjB;QACD,OAAO,KAAK,CAAC;IACjB,CAAC,CAAC;IACF,QAAQ,CAAC,SAAS,CAAC,cAAc,GAAG,UAAU,UAAU,IAAI,CAAC,CAAC;IAE9D,QAAQ,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,KAAK;QACzC,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAC9B,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC5B,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;YACjB,IAAI,EAAE,MAAM;YACZ,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;YAC7B,IAAI,EAAE,WAAW;YACjB,KAAK,EAAE,GAAG,CAAC;gBACP,IAAI,EAAE,IAAI;aACb,EAAE,IAAI,CAAC,KAAK,CAAC;SACjB,CAAC,CAAC;IACP,CAAC,CAAC;IACF,QAAQ,CAAC,SAAS,CAAC,gBAAgB,GAAG,UAAU,KAAK;QACjD,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,aAAa,GAAG,EAAE,CAAC;QACvB,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACpC,IAAI,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;QACnC,IAAI,cAAc,GAAG,QAAQ,CAAC,MAAM,CAAC;QACrC,IAAI,WAAW,GAAG,CAAC,CAAC;QACpB,IAAI,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC;QAC7B,IAAI,SAAS,IAAI,CAAC,EAAE;YAChB,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;SACjD;QACD,IAAI,CAAC,KAAK,EAAE,UAAU,IAAI;YACtB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACvB,IAAI,CAAC,SAAS,EAAE;gBAEZ,KAAK,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,GAAG,WAAW,GAAG,CAAC,CAAC,CAAC;aAC5D;YACD,IAAI,QAAQ,GAAG,KAAK,CAAC,YAAY,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;YACzD,aAAa,CAAC,IAAI,CAAC;gBACf,UAAU,EAAE,KAAK;gBACjB,SAAS,EAAE,IAAI,CAAC,KAAK;gBACrB,QAAQ,EAAE,QAAQ;gBAClB,MAAM,EAAE,IAAI,CAAC,EAAE;gBACf,EAAE,EAAE,WAAW,GAAG,IAAI,CAAC,EAAE;aAC5B,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAMH,OAAO,aAAa,CAAC;IACzB,CAAC,CAAC;IACF,QAAQ,CAAC,SAAS,CAAC,mBAAmB,GAAG,UAAU,aAAa;QAC5D,IAAI,gBAAgB,GAAG,EAAE,CAAC;QAC1B,IAAI,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC1C,IAAI,QAAQ,GAAG,WAAW,CAAC,KAAK,CAAC;QACjC,IAAI,aAAa,GAAG,aAAa,CAAC,MAAM,CAAC;QAEzC,IAAI,aAAa,IAAI,CAAC,EAAE;YACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACxC,IAAI,GAAG,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;gBAC3B,IAAI,IAAI,GAAG,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;oBAC/B,IAAI,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;oBACvC,IAAI,SAAS,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,GAAG,CAAC,SAAS,GAAG,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;oBACzE,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;oBACzC,IAAI,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC;oBAC5D,gBAAgB,CAAC,IAAI,CAAC;wBAClB,UAAU,EAAE,KAAK;wBACjB,QAAQ,EAAE,QAAQ;wBAClB,SAAS,EAAE,SAAS;wBACpB,EAAE,EAAE,MAAM,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC;qBAChC,CAAC,CAAC;iBACN;aACJ;SACJ;QACD,OAAO,gBAAgB,CAAC;IAC5B,CAAC,CAAC;IACF,QAAQ,CAAC,SAAS,CAAC,gBAAgB,GAAG,UAAU,QAAQ,EAAE,IAAI;QAC1D,IAAI,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;QACzC,IAAI,UAAU,GAAG,QAAQ,CAAC,UAAU,EAAE,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;QACnE,IAAI,KAAK,GAAG,GAAG,CAAC;YACZ,EAAE,EAAE,UAAU,CAAC,CAAC;YAChB,EAAE,EAAE,UAAU,CAAC,CAAC;YAChB,EAAE,EAAE,QAAQ,CAAC,CAAC;YACd,EAAE,EAAE,QAAQ,CAAC,CAAC;SACjB,EAAE,aAAa,CAAC,CAAC;QAClB,OAAO,KAAK,CAAC;IACjB,CAAC,CAAC;IAEF,QAAQ,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,QAAQ,EAAE,aAAa,EAAE,IAAI;QACjE,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE;YACzB,IAAI,EAAE,MAAM;YACZ,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAC;YAClC,IAAI,EAAE,OAAO,GAAG,IAAI;YACpB,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC;SAC/C,CAAC,CAAC;IACP,CAAC,CAAC;IAEF,QAAQ,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,KAAK;QAC9C,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAC9B,IAAI,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC1C,IAAI,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QACjD,IAAI,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;YACrC,IAAI,EAAE,qBAAqB;YAC3B,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC;SAC1C,CAAC,CAAC;QACH,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACnC,IAAI,CAAC,aAAa,EAAE,UAAU,IAAI;YAC9B,IAAI,OAAO,CAAC,gBAAgB,EAAE;gBAE1B,IAAI,OAAO,GAAG,KAAK,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;gBACzD,IAAI,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;oBACzB,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,aAAa,EAAE,UAAU,CAAC,CAAC;iBACnD;aACJ;iBACI;gBACD,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,aAAa,EAAE,UAAU,CAAC,CAAC;aACnD;QACL,CAAC,CAAC,CAAC;QACH,IAAI,WAAW,EAAE;YACb,IAAI,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC;YAC/D,IAAI,CAAC,gBAAgB,EAAE,UAAU,IAAI;gBACjC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,aAAa,EAAE,aAAa,CAAC,CAAC;YACvD,CAAC,CAAC,CAAC;SACN;IACL,CAAC,CAAC;IAEF,QAAQ,CAAC,SAAS,CAAC,YAAY,GAAG;QAC9B,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAC9B,IAAI,CAAC,KAAK,EAAE,UAAU,IAAI;YACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAE5C,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;gBAEhB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC;aACvB;QACL,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;IAEF,QAAQ,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,KAAK;QAC1C,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;YACnB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SAC1B;QACD,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;YACtB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SAC7B;QACD,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAC9B,IAAI,CAAC,KAAK,EAAE,UAAU,IAAI;YACtB,KAAK,CAAC,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;IAEF,QAAQ,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,IAAI,EAAE,KAAK;QACpD,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACjC,IAAI,MAAM,GAAG,QAAQ,CAAC,MAAM,EAAE,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE,MAAM,GAAG,QAAQ,CAAC,MAAM,EAAE,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;QAC/G,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAClD,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAC/C,IAAI,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;QACrE,IAAI,KAAK,GAAG,GAAG,CAAC;YACZ,CAAC,EAAE,KAAK,CAAC,CAAC;YACV,CAAC,EAAE,KAAK,CAAC,CAAC;YACV,IAAI,EAAE,IAAI;YACV,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;SACxC,EAAE,KAAK,CAAC,CAAC;QACV,IAAI,MAAM,EAAE;YACR,KAAK,CAAC,MAAM,GAAG,gBAAgB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;SAClD;QACD,OAAO,KAAK,CAAC;IACjB,CAAC,CAAC;IAEF,QAAQ,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,KAAK;QAC3C,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAC9B,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;YAClC,IAAI,EAAE,kBAAkB;YACxB,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC;SACvC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,EAAE,UAAU,IAAI,EAAE,KAAK;YAC7B,KAAK,CAAC,QAAQ,CAAC,UAAU,EAAE;gBACvB,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,YAAY;gBAClB,EAAE,EAAE,KAAK,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC;gBAC1C,KAAK,EAAE,KAAK,CAAC,aAAa,CAAC,IAAI,EAAE,KAAK,CAAC;gBACvC,cAAc,EAAE;oBACZ,IAAI,EAAE,IAAI;oBACV,IAAI,EAAE,IAAI;oBACV,KAAK,EAAE,KAAK;iBACf;aACJ,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;IACpC,CAAC,CAAC;IAEF,QAAQ,CAAC,SAAS,CAAC,aAAa,GAAG;QAC/B,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACjC,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE,QAAQ,GAAG,QAAQ,CAAC,QAAQ,EAAE,MAAM,GAAG,QAAQ,CAAC,MAAM,EAAE,EAAE,GAAG,QAAQ,CAAC,OAAO,EAAE,OAAO,GAAG,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;QAC9K,IAAI,WAAW,GAAG,KAAK,CAAC,QAAQ,CAAC;QACjC,IAAI,OAAO,GAAG,GAAG,CAAC;QAClB,IAAI,QAAQ,KAAK,OAAO,EAAE;YACtB,OAAO,GAAG,CAAC,CAAC;SACf;aACI,IAAI,QAAQ,KAAK,KAAK,EAAE;YACzB,OAAO,GAAG,CAAC,CAAC;SACf;QACD,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QAEvC,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,IAAI,OAAO,GAAG,WAAW,GAAG,CAAC,CAAC,CAAC;QAC/E,IAAI,KAAK,GAAG,GAAG,CAAC;YACZ,CAAC,EAAE,UAAU,CAAC,CAAC;YACf,CAAC,EAAE,UAAU,CAAC,CAAC;YACf,IAAI,EAAE,QAAQ,CAAC,IAAI;SACtB,EAAE,KAAK,CAAC,CAAC;QACV,IAAI,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC7B,IAAI,KAAK,GAAG,MAAM,CAAC;QACnB,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,UAAU,EAAE;YAE7B,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACvC,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAChB,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;SACzC;QACD,IAAI,KAAK,EAAE;YACP,IAAI,MAAM,GAAG,gBAAgB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;YACjD,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;SACzB;QACD,OAAO,KAAK,CAAC;IACjB,CAAC,CAAC;IAEF,QAAQ,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,KAAK;QAC1C,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;YACjB,IAAI,EAAE,MAAM;YACZ,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;YAC9B,IAAI,EAAE,YAAY;YAClB,KAAK,EAAE,IAAI,CAAC,aAAa,EAAE;SAC9B,CAAC,CAAC;IACP,CAAC,CAAC;IACF,QAAQ,CAAC,SAAS,CAAC,eAAe,GAAG,UAAU,IAAI,EAAE,KAAK;QACtD,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACtC,IAAI,MAAM,CAAC,MAAM,EAAE;YACf,IAAI,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YAExC,IAAI,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;YACpD,IAAI,UAAU,GAAG,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YACzC,IAAI,UAAU,EAAE;gBACZ,IAAI,eAAe,GAAG,cAAc,CAAC,IAAI,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;gBAChE,eAAe,IAAI,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;aACvD;YACD,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;YAC1D,IAAI,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;YAC/C,IAAI,aAAa,EAAE;gBACf,IAAI,kBAAkB,GAAG,cAAc,CAAC,IAAI,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;gBACtE,kBAAkB,IAAI,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;aAChE;SACJ;IACL,CAAC,CAAC;IACF,QAAQ,CAAC,SAAS,CAAC,gBAAgB,GAAG,UAAU,IAAI;QAChD,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACtC,IAAI,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QACxC,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACjC,IAAI,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;QAC9D,IAAI,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACvC,IAAI,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;QACpE,IAAI,MAAM,CAAC,MAAM,EAAE;YACf,IAAI,UAAU,EAAE;gBACZ,IAAI,eAAe,GAAG,cAAc,CAAC,IAAI,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;gBAChE,eAAe,IAAI,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;aACvD;YACD,IAAI,aAAa,EAAE;gBACf,IAAI,kBAAkB,GAAG,cAAc,CAAC,IAAI,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;gBACtE,kBAAkB,IAAI,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;aAChE;SACJ;aACI;YACD,IAAI,UAAU,EAAE;gBACZ,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aACnC;YACD,IAAI,aAAa,EAAE;gBACf,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;aACzC;SACJ;IACL,CAAC,CAAC;IACF,OAAO,QAAQ,CAAC;AACpB,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;AACnB,eAAe,QAAQ,CAAC","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { ext } from '@antv/matrix-util';\nimport { each, filter, isNil, isNumberEqual, mix } from '@antv/util';\nimport GroupComponent from '../abstract/group-component';\nimport { getMatrixByAngle } from '../util/matrix';\nimport { getStatesStyle } from '../util/state';\nimport Theme from '../util/theme';\nvar AxisBase = /** @class */ (function (_super) {\n    __extends(AxisBase, _super);\n    function AxisBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AxisBase.prototype.getDefaultCfg = function () {\n        var cfg = _super.prototype.getDefaultCfg.call(this);\n        return __assign(__assign({}, cfg), { name: 'axis', ticks: [], line: {}, tickLine: {}, subTickLine: null, title: null, \n            /**\n             * 文本标签的配置项\n             */\n            label: {}, \n            /**\n             * 垂直于坐标轴方向的因子，决定文本、title、tickLine 在坐标轴的哪一侧\n             */\n            verticalFactor: 1, \n            // 垂直方向限制的长度，对文本自适应有很大影响\n            verticalLimitLength: null, overlapOrder: ['autoRotate', 'autoEllipsis', 'autoHide'], tickStates: {}, defaultCfg: {\n                line: {\n                    // @type {Attrs} 坐标轴线的图形属性,如果设置成null，则不显示轴线\n                    style: {\n                        lineWidth: 1,\n                        stroke: Theme.lineColor,\n                    },\n                },\n                tickLine: {\n                    // @type {Attrs} 标注坐标线的图形属性\n                    style: {\n                        lineWidth: 1,\n                        stroke: Theme.lineColor,\n                    },\n                    alignTick: true,\n                    length: 5,\n                    displayWithLabel: true,\n                },\n                subTickLine: {\n                    // @type {Attrs} 标注坐标线的图形属性\n                    style: {\n                        lineWidth: 1,\n                        stroke: Theme.lineColor,\n                    },\n                    count: 4,\n                    length: 2,\n                },\n                label: {\n                    autoRotate: true,\n                    autoHide: false,\n                    autoEllipsis: false,\n                    style: {\n                        fontSize: 12,\n                        fill: Theme.textColor,\n                        textBaseline: 'middle',\n                        fontFamily: Theme.fontFamily,\n                        fontWeight: 'normal',\n                    },\n                    offset: 10,\n                },\n                title: {\n                    autoRotate: true,\n                    spacing: 5,\n                    position: 'center',\n                    style: {\n                        fontSize: 12,\n                        fill: Theme.textColor,\n                        textBaseline: 'middle',\n                        fontFamily: Theme.fontFamily,\n                        textAlign: 'center',\n                    },\n                },\n                tickStates: {\n                    active: {\n                        labelStyle: {\n                            fontWeight: 500,\n                        },\n                        tickLineStyle: {\n                            lineWidth: 2,\n                        },\n                    },\n                    inactive: {\n                        labelStyle: {\n                            fill: Theme.uncheckedColor,\n                        },\n                    },\n                },\n            } });\n    };\n    /**\n     * 绘制组件\n     */\n    AxisBase.prototype.renderInner = function (group) {\n        if (this.get('line')) {\n            this.drawLine(group);\n        }\n        // drawTicks 包括 drawLabels 和 drawTickLines\n        this.drawTicks(group);\n        if (this.get('title')) {\n            this.drawTitle(group);\n        }\n    };\n    // 实现 IList 接口\n    AxisBase.prototype.isList = function () {\n        return true;\n    };\n    /**\n     * 获取图例项\n     * @return {ListItem[]} 列表项集合\n     */\n    AxisBase.prototype.getItems = function () {\n        return this.get('ticks');\n    };\n    /**\n     * 设置列表项\n     * @param {ListItem[]} items 列表项集合\n     */\n    AxisBase.prototype.setItems = function (items) {\n        this.update({\n            ticks: items,\n        });\n    };\n    /**\n     * 更新列表项\n     * @param {ListItem} item 列表项\n     * @param {object}   cfg  列表项\n     */\n    AxisBase.prototype.updateItem = function (item, cfg) {\n        mix(item, cfg);\n        this.clear(); // 由于单个图例项变化，会引起全局变化，所以全部更新\n        this.render();\n    };\n    /**\n     * 清空列表\n     */\n    AxisBase.prototype.clearItems = function () {\n        var itemGroup = this.getElementByLocalId('label-group');\n        itemGroup && itemGroup.clear();\n    };\n    /**\n     * 设置列表项的状态\n     * @param {ListItem} item  列表项\n     * @param {string}   state 状态名\n     * @param {boolean}  value 状态值, true, false\n     */\n    AxisBase.prototype.setItemState = function (item, state, value) {\n        item[state] = value;\n        this.updateTickStates(item); // 应用状态样式\n    };\n    /**\n     * 是否存在指定的状态\n     * @param {ListItem} item  列表项\n     * @param {boolean} state 状态名\n     */\n    AxisBase.prototype.hasState = function (item, state) {\n        return !!item[state];\n    };\n    AxisBase.prototype.getItemStates = function (item) {\n        var tickStates = this.get('tickStates');\n        var rst = [];\n        each(tickStates, function (v, k) {\n            if (item[k]) {\n                // item.selected\n                rst.push(k);\n            }\n        });\n        return rst;\n    };\n    /**\n     * 清楚所有列表项的状态\n     * @param {string} state 状态值\n     */\n    AxisBase.prototype.clearItemsState = function (state) {\n        var _this = this;\n        var items = this.getItemsByState(state);\n        each(items, function (item) {\n            _this.setItemState(item, state, false);\n        });\n    };\n    /**\n     * 根据状态获取图例项\n     * @param  {string}     state [description]\n     * @return {ListItem[]}       [description]\n     */\n    AxisBase.prototype.getItemsByState = function (state) {\n        var _this = this;\n        var items = this.getItems();\n        return filter(items, function (item) {\n            return _this.hasState(item, state);\n        });\n    };\n    AxisBase.prototype.getSidePoint = function (point, offset) {\n        var self = this;\n        var vector = self.getSideVector(offset, point);\n        return {\n            x: point.x + vector[0],\n            y: point.y + vector[1],\n        };\n    };\n    AxisBase.prototype.getTextAnchor = function (vector) {\n        var align;\n        if (isNumberEqual(vector[0], 0)) {\n            align = 'center';\n        }\n        else if (vector[0] > 0) {\n            align = 'start';\n        }\n        else if (vector[0] < 0) {\n            align = 'end';\n        }\n        return align;\n    };\n    AxisBase.prototype.processOverlap = function (labelGroup) { };\n    // 绘制坐标轴线\n    AxisBase.prototype.drawLine = function (group) {\n        var path = this.getLinePath();\n        var line = this.get('line'); // line 的判空在调用 drawLine 之前，不在这里判定\n        this.addShape(group, {\n            type: 'path',\n            id: this.getElementId('line'),\n            name: 'axis-line',\n            attrs: mix({\n                path: path,\n            }, line.style),\n        });\n    };\n    AxisBase.prototype.getTickLineItems = function (ticks) {\n        var _this = this;\n        var tickLineItems = [];\n        var tickLine = this.get('tickLine');\n        var alignTick = tickLine.alignTick;\n        var tickLineLength = tickLine.length;\n        var tickSegment = 1;\n        var tickCount = ticks.length;\n        if (tickCount >= 2) {\n            tickSegment = ticks[1].value - ticks[0].value;\n        }\n        each(ticks, function (tick) {\n            var point = tick.point;\n            if (!alignTick) {\n                // tickLine 不同 tick 对齐时需要调整 point\n                point = _this.getTickPoint(tick.value - tickSegment / 2);\n            }\n            var endPoint = _this.getSidePoint(point, tickLineLength);\n            tickLineItems.push({\n                startPoint: point,\n                tickValue: tick.value,\n                endPoint: endPoint,\n                tickId: tick.id,\n                id: \"tickline-\" + tick.id,\n            });\n        });\n        // 如果 tickLine 不居中对齐，则需要在最后面补充一个 tickLine\n        // if (!alignTick && tickCount > 0) {\n        //   const tick = ticks[tickCount - 1];\n        //   const point = this.getTickPoint(tick.value + tickSegment / 2);\n        // }\n        return tickLineItems;\n    };\n    AxisBase.prototype.getSubTickLineItems = function (tickLineItems) {\n        var subTickLineItems = [];\n        var subTickLine = this.get('subTickLine');\n        var subCount = subTickLine.count;\n        var tickLineCount = tickLineItems.length;\n        // 刻度线的数量大于 2 时，才绘制子刻度\n        if (tickLineCount >= 2) {\n            for (var i = 0; i < tickLineCount - 1; i++) {\n                var pre = tickLineItems[i];\n                var next = tickLineItems[i + 1];\n                for (var j = 0; j < subCount; j++) {\n                    var percent = (j + 1) / (subCount + 1);\n                    var tickValue = (1 - percent) * pre.tickValue + percent * next.tickValue;\n                    var point = this.getTickPoint(tickValue);\n                    var endPoint = this.getSidePoint(point, subTickLine.length);\n                    subTickLineItems.push({\n                        startPoint: point,\n                        endPoint: endPoint,\n                        tickValue: tickValue,\n                        id: \"sub-\" + pre.id + \"-\" + j,\n                    });\n                }\n            }\n        }\n        return subTickLineItems;\n    };\n    AxisBase.prototype.getTickLineAttrs = function (tickItem, type) {\n        var tickLineStyle = this.get(type).style;\n        var startPoint = tickItem.startPoint, endPoint = tickItem.endPoint;\n        var attrs = mix({\n            x1: startPoint.x,\n            y1: startPoint.y,\n            x2: endPoint.x,\n            y2: endPoint.y,\n        }, tickLineStyle);\n        return attrs;\n    };\n    // 绘制坐标轴刻度线\n    AxisBase.prototype.drawTick = function (tickItem, tickLineGroup, type) {\n        this.addShape(tickLineGroup, {\n            type: 'line',\n            id: this.getElementId(tickItem.id),\n            name: \"axis-\" + type,\n            attrs: this.getTickLineAttrs(tickItem, type),\n        });\n    };\n    // 绘制坐标轴刻度线，包括子刻度线\n    AxisBase.prototype.drawTickLines = function (group) {\n        var _this = this;\n        var ticks = this.get('ticks');\n        var subTickLine = this.get('subTickLine');\n        var tickLineItems = this.getTickLineItems(ticks);\n        var tickLineGroup = this.addGroup(group, {\n            name: 'axis-tickline-group',\n            id: this.getElementId('tickline-group'),\n        });\n        var tickCfg = this.get('tickLine');\n        each(tickLineItems, function (item) {\n            if (tickCfg.displayWithLabel) {\n                // 如果跟随 label 显示，则检测是否存在对应的 label\n                var labelId = _this.getElementId(\"label-\" + item.tickId);\n                if (group.findById(labelId)) {\n                    _this.drawTick(item, tickLineGroup, 'tickLine');\n                }\n            }\n            else {\n                _this.drawTick(item, tickLineGroup, 'tickLine');\n            }\n        });\n        if (subTickLine) {\n            var subTickLineItems = this.getSubTickLineItems(tickLineItems);\n            each(subTickLineItems, function (item) {\n                _this.drawTick(item, tickLineGroup, 'subTickLine');\n            });\n        }\n    };\n    // 预处理 ticks 确定位置和补充 id\n    AxisBase.prototype.processTicks = function () {\n        var _this = this;\n        var ticks = this.get('ticks');\n        each(ticks, function (tick) {\n            tick.point = _this.getTickPoint(tick.value);\n            // 补充 tick 的 id，为动画和更新做准备\n            if (isNil(tick.id)) {\n                // 默认使用 tick.name 作为id\n                tick.id = tick.name;\n            }\n        });\n    };\n    // 绘制 ticks 包括文本和 tickLine\n    AxisBase.prototype.drawTicks = function (group) {\n        var _this = this;\n        this.processTicks();\n        if (this.get('label')) {\n            this.drawLabels(group);\n        }\n        if (this.get('tickLine')) {\n            this.drawTickLines(group);\n        }\n        var ticks = this.get('ticks');\n        each(ticks, function (tick) {\n            _this.applyTickStates(tick, group);\n        });\n    };\n    // 获取 label 的配置项\n    AxisBase.prototype.getLabelAttrs = function (tick, index) {\n        var labelCfg = this.get('label');\n        var offset = labelCfg.offset, style = labelCfg.style, rotate = labelCfg.rotate, formatter = labelCfg.formatter;\n        var point = this.getSidePoint(tick.point, offset);\n        var vector = this.getSideVector(offset, point);\n        var text = formatter ? formatter(tick.name, tick, index) : tick.name;\n        var attrs = mix({\n            x: point.x,\n            y: point.y,\n            text: text,\n            textAlign: this.getTextAnchor(vector),\n        }, style);\n        if (rotate) {\n            attrs.matrix = getMatrixByAngle(point, rotate);\n        }\n        return attrs;\n    };\n    // 绘制文本\n    AxisBase.prototype.drawLabels = function (group) {\n        var _this = this;\n        var ticks = this.get('ticks');\n        var labelGroup = this.addGroup(group, {\n            name: 'axis-label-group',\n            id: this.getElementId('label-group'),\n        });\n        each(ticks, function (tick, index) {\n            _this.addShape(labelGroup, {\n                type: 'text',\n                name: 'axis-label',\n                id: _this.getElementId(\"label-\" + tick.id),\n                attrs: _this.getLabelAttrs(tick, index),\n                delegateObject: {\n                    tick: tick,\n                    item: tick,\n                    index: index,\n                },\n            });\n        });\n        this.processOverlap(labelGroup);\n    };\n    // 标题的属性\n    AxisBase.prototype.getTitleAttrs = function () {\n        var titleCfg = this.get('title');\n        var style = titleCfg.style, position = titleCfg.position, offset = titleCfg.offset, _a = titleCfg.spacing, spacing = _a === void 0 ? 0 : _a, autoRotate = titleCfg.autoRotate;\n        var titleHeight = style.fontSize;\n        var percent = 0.5;\n        if (position === 'start') {\n            percent = 0;\n        }\n        else if (position === 'end') {\n            percent = 1;\n        }\n        var point = this.getTickPoint(percent); // 标题对应的坐标轴上的点\n        // 如果没有指定 titleOffset 也没有渲染 label，这里需要自动计算 offset\n        var titlePoint = this.getSidePoint(point, offset || spacing + titleHeight / 2); // 标题的点\n        var attrs = mix({\n            x: titlePoint.x,\n            y: titlePoint.y,\n            text: titleCfg.text,\n        }, style);\n        var rotate = titleCfg.rotate; // rotate 是角度值\n        var angle = rotate;\n        if (isNil(rotate) && autoRotate) {\n            // 用户没有设定旋转角度，同时设置自动旋转\n            var vector = this.getAxisVector(point);\n            var v1 = [1, 0]; // 水平方向的向量\n            angle = ext.angleTo(vector, v1, true);\n        }\n        if (angle) {\n            var matrix = getMatrixByAngle(titlePoint, angle);\n            attrs.matrix = matrix;\n        }\n        return attrs;\n    };\n    // 绘制标题\n    AxisBase.prototype.drawTitle = function (group) {\n        this.addShape(group, {\n            type: 'text',\n            id: this.getElementId('title'),\n            name: 'axis-title',\n            attrs: this.getTitleAttrs(),\n        });\n    };\n    AxisBase.prototype.applyTickStates = function (tick, group) {\n        var states = this.getItemStates(tick);\n        if (states.length) {\n            var tickStates = this.get('tickStates');\n            // 分别更新 label 和 tickLine\n            var labelId = this.getElementId(\"label-\" + tick.id);\n            var labelShape = group.findById(labelId);\n            if (labelShape) {\n                var labelStateStyle = getStatesStyle(tick, 'label', tickStates);\n                labelStateStyle && labelShape.attr(labelStateStyle);\n            }\n            var tickLineId = this.getElementId(\"tickline-\" + tick.id);\n            var tickLineShape = group.findById(tickLineId);\n            if (tickLineShape) {\n                var tickLineStateStyle = getStatesStyle(tick, 'tickLine', tickStates);\n                tickLineStateStyle && tickLineShape.attr(tickLineStateStyle);\n            }\n        }\n    };\n    AxisBase.prototype.updateTickStates = function (tick) {\n        var states = this.getItemStates(tick);\n        var tickStates = this.get('tickStates');\n        var labelCfg = this.get('label');\n        var labelShape = this.getElementByLocalId(\"label-\" + tick.id);\n        var tickLineCfg = this.get('tickLine');\n        var tickLineShape = this.getElementByLocalId(\"tickline-\" + tick.id);\n        if (states.length) {\n            if (labelShape) {\n                var labelStateStyle = getStatesStyle(tick, 'label', tickStates);\n                labelStateStyle && labelShape.attr(labelStateStyle);\n            }\n            if (tickLineShape) {\n                var tickLineStateStyle = getStatesStyle(tick, 'tickLine', tickStates);\n                tickLineStateStyle && tickLineShape.attr(tickLineStateStyle);\n            }\n        }\n        else {\n            if (labelShape) {\n                labelShape.attr(labelCfg.style);\n            }\n            if (tickLineShape) {\n                tickLineShape.attr(tickLineCfg.style);\n            }\n        }\n    };\n    return AxisBase;\n}(GroupComponent));\nexport default AxisBase;\n//# sourceMappingURL=base.js.map"]}]}