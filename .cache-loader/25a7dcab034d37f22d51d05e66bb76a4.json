{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\remark-parse\\lib\\tokenize\\footnote-definition.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\remark-parse\\lib\\tokenize\\footnote-definition.js","mtime":1516191690000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["'use strict';\r\nvar whitespace = require('is-whitespace-character');\r\nvar normalize = require('../util/normalize');\r\nmodule.exports = footnoteDefinition;\r\nfootnoteDefinition.notInList = true;\r\nfootnoteDefinition.notInBlock = true;\r\nvar C_BACKSLASH = '\\\\';\r\nvar C_NEWLINE = '\\n';\r\nvar C_TAB = '\\t';\r\nvar C_SPACE = ' ';\r\nvar C_BRACKET_OPEN = '[';\r\nvar C_BRACKET_CLOSE = ']';\r\nvar C_CARET = '^';\r\nvar C_COLON = ':';\r\nvar EXPRESSION_INITIAL_TAB = /^( {4}|\\t)?/gm;\r\nfunction footnoteDefinition(eat, value, silent) {\r\n    var self = this;\r\n    var offsets = self.offset;\r\n    var index;\r\n    var length;\r\n    var subvalue;\r\n    var now;\r\n    var currentLine;\r\n    var content;\r\n    var queue;\r\n    var subqueue;\r\n    var character;\r\n    var identifier;\r\n    var add;\r\n    var exit;\r\n    if (!self.options.footnotes) {\r\n        return;\r\n    }\r\n    index = 0;\r\n    length = value.length;\r\n    subvalue = '';\r\n    now = eat.now();\r\n    currentLine = now.line;\r\n    while (index < length) {\r\n        character = value.charAt(index);\r\n        if (!whitespace(character)) {\r\n            break;\r\n        }\r\n        subvalue += character;\r\n        index++;\r\n    }\r\n    if (value.charAt(index) !== C_BRACKET_OPEN ||\r\n        value.charAt(index + 1) !== C_CARET) {\r\n        return;\r\n    }\r\n    subvalue += C_BRACKET_OPEN + C_CARET;\r\n    index = subvalue.length;\r\n    queue = '';\r\n    while (index < length) {\r\n        character = value.charAt(index);\r\n        if (character === C_BRACKET_CLOSE) {\r\n            break;\r\n        }\r\n        else if (character === C_BACKSLASH) {\r\n            queue += character;\r\n            index++;\r\n            character = value.charAt(index);\r\n        }\r\n        queue += character;\r\n        index++;\r\n    }\r\n    if (!queue ||\r\n        value.charAt(index) !== C_BRACKET_CLOSE ||\r\n        value.charAt(index + 1) !== C_COLON) {\r\n        return;\r\n    }\r\n    if (silent) {\r\n        return true;\r\n    }\r\n    identifier = normalize(queue);\r\n    subvalue += queue + C_BRACKET_CLOSE + C_COLON;\r\n    index = subvalue.length;\r\n    while (index < length) {\r\n        character = value.charAt(index);\r\n        if (character !== C_TAB && character !== C_SPACE) {\r\n            break;\r\n        }\r\n        subvalue += character;\r\n        index++;\r\n    }\r\n    now.column += subvalue.length;\r\n    now.offset += subvalue.length;\r\n    queue = '';\r\n    content = '';\r\n    subqueue = '';\r\n    while (index < length) {\r\n        character = value.charAt(index);\r\n        if (character === C_NEWLINE) {\r\n            subqueue = character;\r\n            index++;\r\n            while (index < length) {\r\n                character = value.charAt(index);\r\n                if (character !== C_NEWLINE) {\r\n                    break;\r\n                }\r\n                subqueue += character;\r\n                index++;\r\n            }\r\n            queue += subqueue;\r\n            subqueue = '';\r\n            while (index < length) {\r\n                character = value.charAt(index);\r\n                if (character !== C_SPACE) {\r\n                    break;\r\n                }\r\n                subqueue += character;\r\n                index++;\r\n            }\r\n            if (subqueue.length === 0) {\r\n                break;\r\n            }\r\n            queue += subqueue;\r\n        }\r\n        if (queue) {\r\n            content += queue;\r\n            queue = '';\r\n        }\r\n        content += character;\r\n        index++;\r\n    }\r\n    subvalue += content;\r\n    content = content.replace(EXPRESSION_INITIAL_TAB, function (line) {\r\n        offsets[currentLine] = (offsets[currentLine] || 0) + line.length;\r\n        currentLine++;\r\n        return '';\r\n    });\r\n    add = eat(subvalue);\r\n    exit = self.enterBlock();\r\n    content = self.tokenizeBlock(content, now);\r\n    exit();\r\n    return add({\r\n        type: 'footnoteDefinition',\r\n        identifier: identifier,\r\n        children: content\r\n    });\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\remark-parse\\lib\\tokenize\\footnote-definition.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\remark-parse\\lib\\tokenize\\footnote-definition.js"],"names":[],"mappings":"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","sourcesContent":["'use strict';\n\nvar whitespace = require('is-whitespace-character');\nvar normalize = require('../util/normalize');\n\nmodule.exports = footnoteDefinition;\nfootnoteDefinition.notInList = true;\nfootnoteDefinition.notInBlock = true;\n\nvar C_BACKSLASH = '\\\\';\nvar C_NEWLINE = '\\n';\nvar C_TAB = '\\t';\nvar C_SPACE = ' ';\nvar C_BRACKET_OPEN = '[';\nvar C_BRACKET_CLOSE = ']';\nvar C_CARET = '^';\nvar C_COLON = ':';\n\nvar EXPRESSION_INITIAL_TAB = /^( {4}|\\t)?/gm;\n\nfunction footnoteDefinition(eat, value, silent) {\n  var self = this;\n  var offsets = self.offset;\n  var index;\n  var length;\n  var subvalue;\n  var now;\n  var currentLine;\n  var content;\n  var queue;\n  var subqueue;\n  var character;\n  var identifier;\n  var add;\n  var exit;\n\n  if (!self.options.footnotes) {\n    return;\n  }\n\n  index = 0;\n  length = value.length;\n  subvalue = '';\n  now = eat.now();\n  currentLine = now.line;\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (!whitespace(character)) {\n      break;\n    }\n\n    subvalue += character;\n    index++;\n  }\n\n  if (\n    value.charAt(index) !== C_BRACKET_OPEN ||\n    value.charAt(index + 1) !== C_CARET\n  ) {\n    return;\n  }\n\n  subvalue += C_BRACKET_OPEN + C_CARET;\n  index = subvalue.length;\n  queue = '';\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character === C_BRACKET_CLOSE) {\n      break;\n    } else if (character === C_BACKSLASH) {\n      queue += character;\n      index++;\n      character = value.charAt(index);\n    }\n\n    queue += character;\n    index++;\n  }\n\n  if (\n    !queue ||\n    value.charAt(index) !== C_BRACKET_CLOSE ||\n    value.charAt(index + 1) !== C_COLON\n  ) {\n    return;\n  }\n\n  if (silent) {\n    return true;\n  }\n\n  identifier = normalize(queue);\n  subvalue += queue + C_BRACKET_CLOSE + C_COLON;\n  index = subvalue.length;\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character !== C_TAB && character !== C_SPACE) {\n      break;\n    }\n\n    subvalue += character;\n    index++;\n  }\n\n  now.column += subvalue.length;\n  now.offset += subvalue.length;\n  queue = '';\n  content = '';\n  subqueue = '';\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character === C_NEWLINE) {\n      subqueue = character;\n      index++;\n\n      while (index < length) {\n        character = value.charAt(index);\n\n        if (character !== C_NEWLINE) {\n          break;\n        }\n\n        subqueue += character;\n        index++;\n      }\n\n      queue += subqueue;\n      subqueue = '';\n\n      while (index < length) {\n        character = value.charAt(index);\n\n        if (character !== C_SPACE) {\n          break;\n        }\n\n        subqueue += character;\n        index++;\n      }\n\n      if (subqueue.length === 0) {\n        break;\n      }\n\n      queue += subqueue;\n    }\n\n    if (queue) {\n      content += queue;\n      queue = '';\n    }\n\n    content += character;\n    index++;\n  }\n\n  subvalue += content;\n\n  content = content.replace(EXPRESSION_INITIAL_TAB, function (line) {\n    offsets[currentLine] = (offsets[currentLine] || 0) + line.length;\n    currentLine++;\n\n    return '';\n  });\n\n  add = eat(subvalue);\n\n  exit = self.enterBlock();\n  content = self.tokenizeBlock(content, now);\n  exit();\n\n  return add({\n    type: 'footnoteDefinition',\n    identifier: identifier,\n    children: content\n  });\n}\n"]}]}