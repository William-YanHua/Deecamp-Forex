{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-geo\\src\\projection\\azimuthalEqualArea.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-geo\\src\\projection\\azimuthalEqualArea.js","mtime":1467896378000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { asin, sqrt } from \"../math\";\r\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal\";\r\nimport projection from \"./index\";\r\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function (cxcy) {\r\n    return sqrt(2 / (1 + cxcy));\r\n});\r\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function (z) {\r\n    return 2 * asin(z / 2);\r\n});\r\nexport default function () {\r\n    return projection(azimuthalEqualAreaRaw)\r\n        .scale(124.75)\r\n        .clipAngle(180 - 1e-3);\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-geo\\src\\projection\\azimuthalEqualArea.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-geo\\src\\projection\\azimuthalEqualArea.js"],"names":[],"mappings":"AAAA,OAAO,EAAC,IAAI,EAAE,IAAI,EAAC,MAAM,SAAS,CAAC;AACnC,OAAO,EAAC,YAAY,EAAE,eAAe,EAAC,MAAM,aAAa,CAAC;AAC1D,OAAO,UAAU,MAAM,SAAS,CAAC;AAEjC,MAAM,CAAC,IAAI,qBAAqB,GAAG,YAAY,CAAC,UAAS,IAAI;IAC3D,OAAO,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC;AAEH,qBAAqB,CAAC,MAAM,GAAG,eAAe,CAAC,UAAS,CAAC;IACvD,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,OAAO;IACZ,OAAO,UAAU,CAAC,qBAAqB,CAAC;SACnC,KAAK,CAAC,MAAM,CAAC;SACb,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC;AAC7B,CAAC","sourcesContent":["import {asin, sqrt} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n"]}]}