{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\animate\\animation\\wave-in.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\animate\\animation\\wave-in.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __assign } from \"tslib\";\r\nimport { getCoordinateClipCfg } from '../../util/coordinate';\r\nexport function waveIn(element, animateCfg, cfg) {\r\n    var _a = getCoordinateClipCfg(cfg.coordinate, 20), type = _a.type, startState = _a.startState, endState = _a.endState;\r\n    var clipShape = element.setClip({\r\n        type: type,\r\n        attrs: startState,\r\n    });\r\n    clipShape.animate(endState, __assign(__assign({}, animateCfg), { callback: function () {\r\n            if (element && !element.get('destroyed')) {\r\n                element.set('clipShape', null);\r\n            }\r\n            clipShape.remove(true);\r\n        } }));\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\animate\\animation\\wave-in.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\animate\\animation\\wave-in.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACjC,OAAO,EAAE,oBAAoB,EAAE,MAAM,uBAAuB,CAAC;AAU7D,MAAM,UAAU,MAAM,CAAC,OAAO,EAAE,UAAU,EAAE,GAAG;IAC3C,IAAI,EAAE,GAAG,oBAAoB,CAAC,GAAG,CAAC,UAAU,EAAE,EAAE,CAAC,EAAE,IAAI,GAAG,EAAE,CAAC,IAAI,EAAE,UAAU,GAAG,EAAE,CAAC,UAAU,EAAE,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC;IACtH,IAAI,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC;QAC5B,IAAI,EAAE,IAAI;QACV,KAAK,EAAE,UAAU;KACpB,CAAC,CAAC;IAEH,SAAS,CAAC,OAAO,CAAC,QAAQ,EAAE,QAAQ,CAAC,QAAQ,CAAC,EAAE,EAAE,UAAU,CAAC,EAAE,EAAE,QAAQ,EAAE;YACnE,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE;gBACtC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;aAClC;YACD,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,EAAE,CAAC,CAAC,CAAC;AACd,CAAC","sourcesContent":["import { __assign } from \"tslib\";\nimport { getCoordinateClipCfg } from '../../util/coordinate';\n/**\n * @ignore\n * 整体动画\n * 划入入场动画效果\n * @todo 放两张直角坐标系和极坐标系的图\n * @param element 参与动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function waveIn(element, animateCfg, cfg) {\n    var _a = getCoordinateClipCfg(cfg.coordinate, 20), type = _a.type, startState = _a.startState, endState = _a.endState; // 根据坐标系类型获取整体的剪切区域配置信息\n    var clipShape = element.setClip({\n        type: type,\n        attrs: startState,\n    }); // 为 shape 设置剪切区域\n    // \b对剪切图形做动画\n    clipShape.animate(endState, __assign(__assign({}, animateCfg), { callback: function () {\n            if (element && !element.get('destroyed')) {\n                element.set('clipShape', null);\n            }\n            clipShape.remove(true); // 动画结束需要将剪切图形销毁\n        } }));\n}\n//# sourceMappingURL=wave-in.js.map"]}]}