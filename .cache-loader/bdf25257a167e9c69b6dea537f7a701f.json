{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/g2/lib/interaction/scroll-bar.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/g2/lib/interaction/scroll-bar.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\nvar Util = require('../util');\nvar Interaction = require('./base');\nvar getFieldRange = require('./helper/get-field-range');\nvar getLimitRange = require('./helper/get-limit-range');\nvar DEFAULT_TYPE = 'X';\nvar ScrollBar = function (_Interaction) {\n    _inheritsLoose(ScrollBar, _Interaction);\n    var _proto = ScrollBar.prototype;\n    _proto.getDefaultCfg = function getDefaultCfg() {\n        var cfg = _Interaction.prototype.getDefaultCfg.call(this);\n        return Util.mix({}, cfg, {\n            startEvent: null,\n            processEvent: null,\n            endEvent: null,\n            resetEvent: null,\n            type: DEFAULT_TYPE,\n            xStyle: {\n                backgroundColor: 'rgba(202, 215, 239, .2)',\n                fillerColor: 'rgba(202, 215, 239, .75)',\n                size: 4,\n                lineCap: 'round',\n                offsetX: 0,\n                offsetY: -10\n            },\n            yStyle: {\n                backgroundColor: 'rgba(202, 215, 239, .2)',\n                fillerColor: 'rgba(202, 215, 239, .75)',\n                size: 4,\n                lineCap: 'round',\n                offsetX: 8,\n                offsetY: 0\n            }\n        });\n    };\n    _proto._renderScrollBars = function _renderScrollBars() {\n        var chart = this.chart;\n        var scrollBarCfg = chart.get('_scrollBarCfg');\n        if (!scrollBarCfg)\n            return;\n        var data = chart.get('data');\n        var plotRange = chart.get('plotRange');\n        plotRange.width = Math.abs(plotRange.br.x - plotRange.bl.x);\n        plotRange.height = Math.abs(plotRange.tl.y - plotRange.bl.y);\n        var backPlot = chart.get('backPlot');\n        var canvas = chart.get('canvas');\n        var canvasHeight = canvas.get('height');\n        var limitRange = chart.get('_limitRange');\n        var type = scrollBarCfg.type;\n        if (type.indexOf('X') > -1) {\n            var _scrollBarCfg$xStyle = scrollBarCfg.xStyle, offsetX = _scrollBarCfg$xStyle.offsetX, offsetY = _scrollBarCfg$xStyle.offsetY, lineCap = _scrollBarCfg$xStyle.lineCap, backgroundColor = _scrollBarCfg$xStyle.backgroundColor, fillerColor = _scrollBarCfg$xStyle.fillerColor, size = _scrollBarCfg$xStyle.size;\n            var xScale = chart.getXScale();\n            var xLimitRange = limitRange[xScale.field];\n            if (!xLimitRange) {\n                xLimitRange = getLimitRange(data, xScale);\n                limitRange[xScale.field] = xLimitRange;\n            }\n            var currentRange = getFieldRange(xScale, xLimitRange, xScale.type);\n            var horizontalBar = chart.get('_horizontalBar');\n            var yPos = canvasHeight - size / 2 + offsetY;\n            if (horizontalBar) {\n                var progressLine = horizontalBar.get('children')[1];\n                progressLine.attr({\n                    x1: Math.max(plotRange.bl.x + plotRange.width * currentRange[0] + offsetX, plotRange.bl.x),\n                    x2: Math.min(plotRange.bl.x + plotRange.width * currentRange[1] + offsetX, plotRange.br.x)\n                });\n            }\n            else {\n                horizontalBar = backPlot.addGroup({\n                    className: 'horizontalBar'\n                });\n                horizontalBar.addShape('line', {\n                    attrs: {\n                        x1: plotRange.bl.x + offsetX,\n                        y1: yPos,\n                        x2: plotRange.br.x + offsetX,\n                        y2: yPos,\n                        lineWidth: size,\n                        stroke: backgroundColor,\n                        lineCap: lineCap\n                    }\n                });\n                horizontalBar.addShape('line', {\n                    attrs: {\n                        x1: Math.max(plotRange.bl.x + plotRange.width * currentRange[0] + offsetX, plotRange.bl.x),\n                        y1: yPos,\n                        x2: Math.min(plotRange.bl.x + plotRange.width * currentRange[1] + offsetX, plotRange.br.x),\n                        y2: yPos,\n                        lineWidth: size,\n                        stroke: fillerColor,\n                        lineCap: lineCap\n                    }\n                });\n                chart.set('_horizontalBar', horizontalBar);\n            }\n        }\n        if (type.indexOf('Y') > -1) {\n            var _scrollBarCfg$yStyle = scrollBarCfg.yStyle, _offsetX = _scrollBarCfg$yStyle.offsetX, _offsetY = _scrollBarCfg$yStyle.offsetY, _lineCap = _scrollBarCfg$yStyle.lineCap, _backgroundColor = _scrollBarCfg$yStyle.backgroundColor, _fillerColor = _scrollBarCfg$yStyle.fillerColor, _size = _scrollBarCfg$yStyle.size;\n            var yScale = chart.getYScales()[0];\n            var yLimitRange = limitRange[yScale.field];\n            if (!yLimitRange) {\n                yLimitRange = getLimitRange(data, yScale);\n                limitRange[yScale.field] = yLimitRange;\n            }\n            var _currentRange = getFieldRange(yScale, yLimitRange, yScale.type);\n            var verticalBar = chart.get('_verticalBar');\n            var xPos = _size / 2 + _offsetX;\n            if (verticalBar) {\n                var _progressLine = verticalBar.get('children')[1];\n                _progressLine.attr({\n                    y1: Math.max(plotRange.tl.y + plotRange.height * _currentRange[0] + _offsetY, plotRange.tl.y),\n                    y2: Math.min(plotRange.tl.y + plotRange.height * _currentRange[1] + _offsetY, plotRange.bl.y)\n                });\n            }\n            else {\n                verticalBar = backPlot.addGroup({\n                    className: 'verticalBar'\n                });\n                verticalBar.addShape('line', {\n                    attrs: {\n                        x1: xPos,\n                        y1: plotRange.tl.y + _offsetY,\n                        x2: xPos,\n                        y2: plotRange.bl.y + _offsetY,\n                        lineWidth: _size,\n                        stroke: _backgroundColor,\n                        lineCap: _lineCap\n                    }\n                });\n                verticalBar.addShape('line', {\n                    attrs: {\n                        x1: xPos,\n                        y1: Math.max(plotRange.tl.y + plotRange.height * _currentRange[0] + _offsetY, plotRange.tl.y),\n                        x2: xPos,\n                        y2: Math.min(plotRange.tl.y + plotRange.height * _currentRange[1] + _offsetY, plotRange.bl.y),\n                        lineWidth: _size,\n                        stroke: _fillerColor,\n                        lineCap: _lineCap\n                    }\n                });\n                chart.set('_verticalBar', verticalBar);\n            }\n        }\n    };\n    function ScrollBar(cfg, chart) {\n        var _this;\n        _this = _Interaction.call(this, cfg, chart) || this;\n        var defaultCfg = _this.getDefaultCfg();\n        chart.set('_scrollBarCfg', Util.deepMix({}, defaultCfg, cfg));\n        chart.set('_limitRange', {});\n        if (!chart.get('_horizontalBar') && !chart.get('_verticalBar')) {\n            _this._renderScrollBars();\n        }\n        return _this;\n    }\n    _proto._clear = function _clear() {\n        var chart = this.chart;\n        if (chart) {\n            var hBar = chart.get('_horizontalBar');\n            var vBar = chart.get('_verticalBar');\n            hBar && hBar.remove(true);\n            vBar && vBar.remove(true);\n            chart.set('_horizontalBar', null);\n            chart.set('_verticalBar', null);\n        }\n    };\n    _proto._bindEvents = function _bindEvents() {\n        this._onAfterclearOrBeforechangedata = this._onAfterclearOrBeforechangedata.bind(this);\n        this._onAfterclearinner = this._onAfterclearinner.bind(this);\n        this._onAfterdrawgeoms = this._onAfterdrawgeoms.bind(this);\n        var chart = this.chart;\n        chart.on('afterclear', this._onAfterclearOrBeforechangedata);\n        chart.on('beforechangedata', this._onAfterclearOrBeforechangedata);\n        chart.on('afterclearinner', this._onAfterclearinner);\n        chart.on('afterdrawgeoms', this._onAfterdrawgeoms);\n    };\n    _proto._onAfterclearOrBeforechangedata = function _onAfterclearOrBeforechangedata() {\n        this.chart && this.chart.set('_limitRange', {});\n    };\n    _proto._onAfterclearinner = function _onAfterclearinner() {\n        this._clear();\n    };\n    _proto._onAfterdrawgeoms = function _onAfterdrawgeoms() {\n        this._renderScrollBars();\n    };\n    _proto._clearEvents = function _clearEvents() {\n        var chart = this.chart;\n        if (chart) {\n            chart.off('afterclear', this._onAfterclearOrBeforechangedata);\n            chart.off('beforechangedata', this._onAfterclearOrBeforechangedata);\n            chart.off('afterclearinner', this._onAfterclearinner);\n            chart.off('afterdrawgeoms', this._onAfterdrawgeoms);\n        }\n    };\n    _proto.destroy = function destroy() {\n        this._clearEvents();\n        this._clear();\n        this.canvas.draw();\n    };\n    return ScrollBar;\n}(Interaction);\nmodule.exports = ScrollBar;\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/g2/lib/interaction/scroll-bar.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/g2/lib/interaction/scroll-bar.js"],"names":[],"mappings":"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","sourcesContent":["function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar Util = require('../util');\n\nvar Interaction = require('./base');\n\nvar getFieldRange = require('./helper/get-field-range');\n\nvar getLimitRange = require('./helper/get-limit-range');\n\nvar DEFAULT_TYPE = 'X';\n\nvar ScrollBar = /*#__PURE__*/function (_Interaction) {\n  _inheritsLoose(ScrollBar, _Interaction);\n\n  var _proto = ScrollBar.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Interaction.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      startEvent: null,\n      processEvent: null,\n      endEvent: null,\n      resetEvent: null,\n      type: DEFAULT_TYPE,\n      xStyle: {\n        backgroundColor: 'rgba(202, 215, 239, .2)',\n        fillerColor: 'rgba(202, 215, 239, .75)',\n        size: 4,\n        lineCap: 'round',\n        offsetX: 0,\n        offsetY: -10\n      },\n      yStyle: {\n        backgroundColor: 'rgba(202, 215, 239, .2)',\n        fillerColor: 'rgba(202, 215, 239, .75)',\n        size: 4,\n        lineCap: 'round',\n        offsetX: 8,\n        offsetY: 0\n      }\n    });\n  };\n\n  _proto._renderScrollBars = function _renderScrollBars() {\n    var chart = this.chart;\n    var scrollBarCfg = chart.get('_scrollBarCfg');\n    if (!scrollBarCfg) return;\n    var data = chart.get('data');\n    var plotRange = chart.get('plotRange');\n    plotRange.width = Math.abs(plotRange.br.x - plotRange.bl.x);\n    plotRange.height = Math.abs(plotRange.tl.y - plotRange.bl.y);\n    var backPlot = chart.get('backPlot');\n    var canvas = chart.get('canvas');\n    var canvasHeight = canvas.get('height');\n    var limitRange = chart.get('_limitRange');\n    var type = scrollBarCfg.type;\n\n    if (type.indexOf('X') > -1) {\n      var _scrollBarCfg$xStyle = scrollBarCfg.xStyle,\n          offsetX = _scrollBarCfg$xStyle.offsetX,\n          offsetY = _scrollBarCfg$xStyle.offsetY,\n          lineCap = _scrollBarCfg$xStyle.lineCap,\n          backgroundColor = _scrollBarCfg$xStyle.backgroundColor,\n          fillerColor = _scrollBarCfg$xStyle.fillerColor,\n          size = _scrollBarCfg$xStyle.size;\n      var xScale = chart.getXScale();\n      var xLimitRange = limitRange[xScale.field];\n\n      if (!xLimitRange) {\n        xLimitRange = getLimitRange(data, xScale);\n        limitRange[xScale.field] = xLimitRange;\n      }\n\n      var currentRange = getFieldRange(xScale, xLimitRange, xScale.type);\n      var horizontalBar = chart.get('_horizontalBar');\n      var yPos = canvasHeight - size / 2 + offsetY;\n\n      if (horizontalBar) {\n        var progressLine = horizontalBar.get('children')[1];\n        progressLine.attr({\n          x1: Math.max(plotRange.bl.x + plotRange.width * currentRange[0] + offsetX, plotRange.bl.x),\n          x2: Math.min(plotRange.bl.x + plotRange.width * currentRange[1] + offsetX, plotRange.br.x)\n        });\n      } else {\n        horizontalBar = backPlot.addGroup({\n          className: 'horizontalBar'\n        });\n        horizontalBar.addShape('line', {\n          attrs: {\n            x1: plotRange.bl.x + offsetX,\n            y1: yPos,\n            x2: plotRange.br.x + offsetX,\n            y2: yPos,\n            lineWidth: size,\n            stroke: backgroundColor,\n            lineCap: lineCap\n          }\n        });\n        horizontalBar.addShape('line', {\n          attrs: {\n            x1: Math.max(plotRange.bl.x + plotRange.width * currentRange[0] + offsetX, plotRange.bl.x),\n            y1: yPos,\n            x2: Math.min(plotRange.bl.x + plotRange.width * currentRange[1] + offsetX, plotRange.br.x),\n            y2: yPos,\n            lineWidth: size,\n            stroke: fillerColor,\n            lineCap: lineCap\n          }\n        });\n        chart.set('_horizontalBar', horizontalBar);\n      }\n    }\n\n    if (type.indexOf('Y') > -1) {\n      var _scrollBarCfg$yStyle = scrollBarCfg.yStyle,\n          _offsetX = _scrollBarCfg$yStyle.offsetX,\n          _offsetY = _scrollBarCfg$yStyle.offsetY,\n          _lineCap = _scrollBarCfg$yStyle.lineCap,\n          _backgroundColor = _scrollBarCfg$yStyle.backgroundColor,\n          _fillerColor = _scrollBarCfg$yStyle.fillerColor,\n          _size = _scrollBarCfg$yStyle.size;\n      var yScale = chart.getYScales()[0];\n      var yLimitRange = limitRange[yScale.field];\n\n      if (!yLimitRange) {\n        yLimitRange = getLimitRange(data, yScale);\n        limitRange[yScale.field] = yLimitRange;\n      }\n\n      var _currentRange = getFieldRange(yScale, yLimitRange, yScale.type);\n\n      var verticalBar = chart.get('_verticalBar');\n      var xPos = _size / 2 + _offsetX;\n\n      if (verticalBar) {\n        var _progressLine = verticalBar.get('children')[1];\n\n        _progressLine.attr({\n          y1: Math.max(plotRange.tl.y + plotRange.height * _currentRange[0] + _offsetY, plotRange.tl.y),\n          y2: Math.min(plotRange.tl.y + plotRange.height * _currentRange[1] + _offsetY, plotRange.bl.y)\n        });\n      } else {\n        verticalBar = backPlot.addGroup({\n          className: 'verticalBar'\n        });\n        verticalBar.addShape('line', {\n          attrs: {\n            x1: xPos,\n            y1: plotRange.tl.y + _offsetY,\n            x2: xPos,\n            y2: plotRange.bl.y + _offsetY,\n            lineWidth: _size,\n            stroke: _backgroundColor,\n            lineCap: _lineCap\n          }\n        });\n        verticalBar.addShape('line', {\n          attrs: {\n            x1: xPos,\n            y1: Math.max(plotRange.tl.y + plotRange.height * _currentRange[0] + _offsetY, plotRange.tl.y),\n            x2: xPos,\n            y2: Math.min(plotRange.tl.y + plotRange.height * _currentRange[1] + _offsetY, plotRange.bl.y),\n            lineWidth: _size,\n            stroke: _fillerColor,\n            lineCap: _lineCap\n          }\n        });\n        chart.set('_verticalBar', verticalBar);\n      }\n    }\n  };\n\n  function ScrollBar(cfg, chart) {\n    var _this;\n\n    _this = _Interaction.call(this, cfg, chart) || this;\n\n    var defaultCfg = _this.getDefaultCfg();\n\n    chart.set('_scrollBarCfg', Util.deepMix({}, defaultCfg, cfg));\n    chart.set('_limitRange', {});\n\n    if (!chart.get('_horizontalBar') && !chart.get('_verticalBar')) {\n      _this._renderScrollBars();\n    }\n\n    return _this;\n  }\n\n  _proto._clear = function _clear() {\n    var chart = this.chart;\n\n    if (chart) {\n      var hBar = chart.get('_horizontalBar');\n      var vBar = chart.get('_verticalBar');\n      hBar && hBar.remove(true);\n      vBar && vBar.remove(true);\n      chart.set('_horizontalBar', null);\n      chart.set('_verticalBar', null);\n    }\n  };\n\n  _proto._bindEvents = function _bindEvents() {\n    this._onAfterclearOrBeforechangedata = this._onAfterclearOrBeforechangedata.bind(this);\n    this._onAfterclearinner = this._onAfterclearinner.bind(this);\n    this._onAfterdrawgeoms = this._onAfterdrawgeoms.bind(this);\n    var chart = this.chart;\n    chart.on('afterclear', this._onAfterclearOrBeforechangedata);\n    chart.on('beforechangedata', this._onAfterclearOrBeforechangedata);\n    chart.on('afterclearinner', this._onAfterclearinner);\n    chart.on('afterdrawgeoms', this._onAfterdrawgeoms);\n  };\n\n  _proto._onAfterclearOrBeforechangedata = function _onAfterclearOrBeforechangedata() {\n    this.chart && this.chart.set('_limitRange', {});\n  };\n\n  _proto._onAfterclearinner = function _onAfterclearinner() {\n    this._clear();\n  };\n\n  _proto._onAfterdrawgeoms = function _onAfterdrawgeoms() {\n    this._renderScrollBars();\n  };\n\n  _proto._clearEvents = function _clearEvents() {\n    var chart = this.chart;\n\n    if (chart) {\n      chart.off('afterclear', this._onAfterclearOrBeforechangedata);\n      chart.off('beforechangedata', this._onAfterclearOrBeforechangedata);\n      chart.off('afterclearinner', this._onAfterclearinner);\n      chart.off('afterdrawgeoms', this._onAfterdrawgeoms);\n    }\n  };\n\n  _proto.destroy = function destroy() {\n    this._clearEvents();\n\n    this._clear();\n\n    this.canvas.draw();\n  };\n\n  return ScrollBar;\n}(Interaction);\n\nmodule.exports = ScrollBar;"]}]}