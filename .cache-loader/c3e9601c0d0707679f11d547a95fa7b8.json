{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/g2/lib/geom/shape/point.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/g2/lib/geom/shape/point.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var Util = require('../../util');\nvar ShapeUtil = require('../util/shape');\nvar Global = require('../../global');\nvar Shape = require('./shape');\nvar _require = require('../../renderer'), Marker = _require.Marker;\nvar PathUtil = Util.PathUtil;\nvar SHAPES = ['circle', 'square', 'bowtie', 'diamond', 'hexagon', 'triangle', 'triangle-down'];\nvar HOLLOW_SHAPES = ['cross', 'tick', 'plus', 'hyphen', 'line', 'pointerLine', 'pointerArrow'];\nvar SQRT_3 = Math.sqrt(3);\nUtil.mix(Marker.Symbols, {\n    hexagon: function hexagon(x, y, r) {\n        var diffX = r / 2 * SQRT_3;\n        return [['M', x, y - r], ['L', x + diffX, y - r / 2], ['L', x + diffX, y + r / 2], ['L', x, y + r], ['L', x - diffX, y + r / 2], ['L', x - diffX, y - r / 2], ['Z']];\n    },\n    bowtie: function bowtie(x, y, r) {\n        var diffY = r - 1.5;\n        return [['M', x - r, y - diffY], ['L', x + r, y + diffY], ['L', x + r, y - diffY], ['L', x - r, y + diffY], ['Z']];\n    },\n    cross: function cross(x, y, r) {\n        return [['M', x - r, y - r], ['L', x + r, y + r], ['M', x + r, y - r], ['L', x - r, y + r]];\n    },\n    tick: function tick(x, y, r) {\n        return [['M', x - r / 2, y - r], ['L', x + r / 2, y - r], ['M', x, y - r], ['L', x, y + r], ['M', x - r / 2, y + r], ['L', x + r / 2, y + r]];\n    },\n    plus: function plus(x, y, r) {\n        return [['M', x - r, y], ['L', x + r, y], ['M', x, y - r], ['L', x, y + r]];\n    },\n    hyphen: function hyphen(x, y, r) {\n        return [['M', x - r, y], ['L', x + r, y]];\n    },\n    line: function line(x, y, r) {\n        return [['M', x, y - r], ['L', x, y + r]];\n    }\n});\nfunction getFillAttrs(cfg) {\n    var defaultAttrs = Global.shape.point;\n    var pointAttrs = Util.mix({}, defaultAttrs, cfg.style);\n    ShapeUtil.addFillAttrs(pointAttrs, cfg);\n    if (Util.isNumber(cfg.size)) {\n        pointAttrs.radius = cfg.size;\n    }\n    return pointAttrs;\n}\nfunction getLineAttrs(cfg) {\n    var defaultAttrs = Global.shape.hollowPoint;\n    var pointAttrs = Util.mix({}, defaultAttrs, cfg.style);\n    ShapeUtil.addStrokeAttrs(pointAttrs, cfg);\n    if (Util.isNumber(cfg.size)) {\n        pointAttrs.radius = cfg.size;\n    }\n    return pointAttrs;\n}\nvar Point = Shape.registerFactory('point', {\n    defaultShapeType: 'hollowCircle',\n    getActiveCfg: function getActiveCfg(type, cfg) {\n        var radius = cfg.radius;\n        var color;\n        if (type && (type.indexOf('hollow') === 0 || Util.indexOf(HOLLOW_SHAPES, type) !== -1) || !type) {\n            color = cfg.stroke || cfg.strokeStyle;\n        }\n        else {\n            color = cfg.fill || cfg.fillStyle;\n        }\n        return {\n            radius: radius + 1,\n            shadowBlur: radius,\n            shadowColor: color,\n            stroke: color,\n            strokeOpacity: 1,\n            lineWidth: 1\n        };\n    },\n    getDefaultPoints: function getDefaultPoints(pointInfo) {\n        return ShapeUtil.splitPoints(pointInfo);\n    }\n});\nfunction getRectPath(cfg) {\n    var x = cfg.points[0].x;\n    var y = cfg.points[0].y;\n    var w = cfg.size[0];\n    var h = cfg.size[1];\n    var path = [['M', x - 0.5 * w, y - 0.5 * h], ['L', x + 0.5 * w, y - 0.5 * h], ['L', x + 0.5 * w, y + 0.5 * h], ['L', x - 0.5 * w, y + 0.5 * h], ['z']];\n    return path;\n}\nShape.registerShape('point', 'rect', {\n    draw: function draw(cfg, container) {\n        var rectAttrs = getFillAttrs(cfg);\n        var path = getRectPath(cfg);\n        path = this.parsePath(path);\n        var gShape = container.addShape('path', {\n            attrs: Util.mix(rectAttrs, {\n                path: path\n            })\n        });\n        return gShape;\n    },\n    getMarkerCfg: function getMarkerCfg(cfg) {\n        var attrs = getFillAttrs(cfg);\n        attrs.symbol = 'rect';\n        attrs.radius = 4.5;\n        return attrs;\n    }\n});\nUtil.each(SHAPES, function (shape) {\n    Shape.registerShape('point', shape, {\n        draw: function draw(cfg, container) {\n            var attrs = getFillAttrs(cfg);\n            return container.addShape('Marker', {\n                attrs: Util.mix(attrs, {\n                    symbol: shape,\n                    x: cfg.x,\n                    y: cfg.y\n                })\n            });\n        },\n        getMarkerCfg: function getMarkerCfg(cfg) {\n            var attrs = getFillAttrs(cfg);\n            attrs.symbol = shape;\n            attrs.radius = 4.5;\n            return attrs;\n        }\n    });\n    Shape.registerShape('point', 'hollow' + Util.upperFirst(shape), {\n        draw: function draw(cfg, container) {\n            var attrs = getLineAttrs(cfg);\n            return container.addShape('Marker', {\n                attrs: Util.mix(attrs, {\n                    symbol: shape,\n                    x: cfg.x,\n                    y: cfg.y\n                })\n            });\n        },\n        getMarkerCfg: function getMarkerCfg(cfg) {\n            var attrs = getLineAttrs(cfg);\n            attrs.symbol = shape;\n            attrs.radius = 4.5;\n            return attrs;\n        }\n    });\n});\nUtil.each(HOLLOW_SHAPES, function (shape) {\n    Shape.registerShape('point', shape, {\n        draw: function draw(cfg, container) {\n            var attrs = getLineAttrs(cfg);\n            return container.addShape('Marker', {\n                attrs: Util.mix(attrs, {\n                    symbol: shape,\n                    x: cfg.x,\n                    y: cfg.y\n                })\n            });\n        },\n        getMarkerCfg: function getMarkerCfg(cfg) {\n            var attrs = getLineAttrs(cfg);\n            attrs.symbol = shape;\n            attrs.radius = 4.5;\n            return attrs;\n        }\n    });\n});\nShape.registerShape('point', 'image', {\n    draw: function draw(cfg, container) {\n        cfg.points = this.parsePoints(cfg.points);\n        return container.addShape('image', {\n            attrs: {\n                x: cfg.points[0].x - cfg.size / 2,\n                y: cfg.points[0].y - cfg.size,\n                width: cfg.size,\n                height: cfg.size,\n                img: cfg.shape[1]\n            }\n        });\n    }\n});\nvar pathMetaCache = {};\nShape.registerShape('point', 'path', {\n    draw: function draw(cfg, container) {\n        var attrs = Util.mix({}, getLineAttrs(cfg), getFillAttrs(cfg));\n        var path = cfg.shape[1];\n        var size = cfg.size || 10;\n        var pathMeta;\n        if (pathMetaCache[path]) {\n            pathMeta = pathMetaCache[path];\n        }\n        else {\n            var segments = PathUtil.parsePathString(path);\n            var nums = Util.flatten(segments).filter(function (num) {\n                return Util.isNumber(num);\n            });\n            pathMetaCache[path] = pathMeta = {\n                range: Math.max.apply(null, nums) - Math.min.apply(null, nums),\n                segments: segments\n            };\n        }\n        var scale = size / pathMeta.range;\n        var transform = [];\n        if (attrs.rotate) {\n            transform.push(['r', attrs.rotate / 180 * Math.PI]);\n            delete attrs.rotate;\n        }\n        var shape = container.addShape('path', {\n            attrs: Util.mix(attrs, {\n                path: pathMeta.segments\n            })\n        });\n        transform.push(['s', scale, scale], ['t', cfg.x, cfg.y]);\n        shape.transform(transform);\n        return shape;\n    }\n});\nmodule.exports = Point;\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/g2/lib/geom/shape/point.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/g2/lib/geom/shape/point.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * @fileOverview point shapes\n * @author dxq613@gmail.com\n * @author sima.zhang1990@gmail.com\n * @author huangtonger@aliyun.com\n */\nvar Util = require('../../util');\n\nvar ShapeUtil = require('../util/shape');\n\nvar Global = require('../../global');\n\nvar Shape = require('./shape'); // const svgpath = require('svgpath');\n\n\nvar _require = require('../../renderer'),\n    Marker = _require.Marker;\n\nvar PathUtil = Util.PathUtil;\nvar SHAPES = ['circle', 'square', 'bowtie', 'diamond', 'hexagon', 'triangle', 'triangle-down'];\nvar HOLLOW_SHAPES = ['cross', 'tick', 'plus', 'hyphen', 'line', 'pointerLine', 'pointerArrow'];\nvar SQRT_3 = Math.sqrt(3); // 增加marker\n\nUtil.mix(Marker.Symbols, {\n  hexagon: function hexagon(x, y, r) {\n    var diffX = r / 2 * SQRT_3;\n    return [['M', x, y - r], ['L', x + diffX, y - r / 2], ['L', x + diffX, y + r / 2], ['L', x, y + r], ['L', x - diffX, y + r / 2], ['L', x - diffX, y - r / 2], ['Z']];\n  },\n  bowtie: function bowtie(x, y, r) {\n    var diffY = r - 1.5;\n    return [['M', x - r, y - diffY], ['L', x + r, y + diffY], ['L', x + r, y - diffY], ['L', x - r, y + diffY], ['Z']];\n  },\n  cross: function cross(x, y, r) {\n    return [['M', x - r, y - r], ['L', x + r, y + r], ['M', x + r, y - r], ['L', x - r, y + r]];\n  },\n  tick: function tick(x, y, r) {\n    return [['M', x - r / 2, y - r], ['L', x + r / 2, y - r], ['M', x, y - r], ['L', x, y + r], ['M', x - r / 2, y + r], ['L', x + r / 2, y + r]];\n  },\n  plus: function plus(x, y, r) {\n    return [['M', x - r, y], ['L', x + r, y], ['M', x, y - r], ['L', x, y + r]];\n  },\n  hyphen: function hyphen(x, y, r) {\n    return [['M', x - r, y], ['L', x + r, y]];\n  },\n  line: function line(x, y, r) {\n    return [['M', x, y - r], ['L', x, y + r]];\n  }\n});\n\nfunction getFillAttrs(cfg) {\n  var defaultAttrs = Global.shape.point;\n  var pointAttrs = Util.mix({}, defaultAttrs, cfg.style);\n  ShapeUtil.addFillAttrs(pointAttrs, cfg);\n\n  if (Util.isNumber(cfg.size)) {\n    pointAttrs.radius = cfg.size;\n  }\n\n  return pointAttrs;\n}\n\nfunction getLineAttrs(cfg) {\n  var defaultAttrs = Global.shape.hollowPoint;\n  var pointAttrs = Util.mix({}, defaultAttrs, cfg.style);\n  ShapeUtil.addStrokeAttrs(pointAttrs, cfg);\n\n  if (Util.isNumber(cfg.size)) {\n    pointAttrs.radius = cfg.size;\n  }\n\n  return pointAttrs;\n}\n\nvar Point = Shape.registerFactory('point', {\n  defaultShapeType: 'hollowCircle',\n  getActiveCfg: function getActiveCfg(type, cfg) {\n    // 点放大 + 颜色加亮\n    var radius = cfg.radius;\n    var color;\n\n    if (type && (type.indexOf('hollow') === 0 || Util.indexOf(HOLLOW_SHAPES, type) !== -1) || !type) {\n      color = cfg.stroke || cfg.strokeStyle;\n    } else {\n      color = cfg.fill || cfg.fillStyle;\n    }\n\n    return {\n      radius: radius + 1,\n      shadowBlur: radius,\n      shadowColor: color,\n      stroke: color,\n      strokeOpacity: 1,\n      lineWidth: 1\n    };\n  },\n  getDefaultPoints: function getDefaultPoints(pointInfo) {\n    return ShapeUtil.splitPoints(pointInfo);\n  }\n});\n\nfunction getRectPath(cfg) {\n  var x = cfg.points[0].x;\n  var y = cfg.points[0].y;\n  var w = cfg.size[0];\n  var h = cfg.size[1];\n  var path = [['M', x - 0.5 * w, y - 0.5 * h], ['L', x + 0.5 * w, y - 0.5 * h], ['L', x + 0.5 * w, y + 0.5 * h], ['L', x - 0.5 * w, y + 0.5 * h], ['z']];\n  return path;\n} // 用于桑基图的节点\n\n\nShape.registerShape('point', 'rect', {\n  draw: function draw(cfg, container) {\n    var rectAttrs = getFillAttrs(cfg);\n    var path = getRectPath(cfg);\n    path = this.parsePath(path);\n    var gShape = container.addShape('path', {\n      attrs: Util.mix(rectAttrs, {\n        path: path\n      })\n    });\n    return gShape;\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    var attrs = getFillAttrs(cfg);\n    attrs.symbol = 'rect';\n    attrs.radius = 4.5;\n    return attrs;\n  }\n}); // 添加shapes\n\nUtil.each(SHAPES, function (shape) {\n  Shape.registerShape('point', shape, {\n    draw: function draw(cfg, container) {\n      // cfg.points = this.parsePoints(cfg.points);\n      var attrs = getFillAttrs(cfg);\n      return container.addShape('Marker', {\n        attrs: Util.mix(attrs, {\n          symbol: shape,\n          x: cfg.x,\n          y: cfg.y\n        })\n      });\n    },\n    getMarkerCfg: function getMarkerCfg(cfg) {\n      var attrs = getFillAttrs(cfg);\n      attrs.symbol = shape;\n      attrs.radius = 4.5;\n      return attrs;\n    }\n  }); // 添加该 shape 对应的 hollowShape\n\n  Shape.registerShape('point', 'hollow' + Util.upperFirst(shape), {\n    draw: function draw(cfg, container) {\n      // cfg.points = this.parsePoints(cfg.points);\n      var attrs = getLineAttrs(cfg);\n      return container.addShape('Marker', {\n        attrs: Util.mix(attrs, {\n          symbol: shape,\n          x: cfg.x,\n          y: cfg.y\n        })\n      });\n    },\n    getMarkerCfg: function getMarkerCfg(cfg) {\n      var attrs = getLineAttrs(cfg);\n      attrs.symbol = shape;\n      attrs.radius = 4.5;\n      return attrs;\n    }\n  });\n}); // 添加 hollowShapes\n\nUtil.each(HOLLOW_SHAPES, function (shape) {\n  Shape.registerShape('point', shape, {\n    draw: function draw(cfg, container) {\n      var attrs = getLineAttrs(cfg);\n      return container.addShape('Marker', {\n        attrs: Util.mix(attrs, {\n          symbol: shape,\n          x: cfg.x,\n          y: cfg.y\n        })\n      });\n    },\n    getMarkerCfg: function getMarkerCfg(cfg) {\n      var attrs = getLineAttrs(cfg);\n      attrs.symbol = shape;\n      attrs.radius = 4.5;\n      return attrs;\n    }\n  });\n}); // image\n\nShape.registerShape('point', 'image', {\n  draw: function draw(cfg, container) {\n    cfg.points = this.parsePoints(cfg.points);\n    return container.addShape('image', {\n      attrs: {\n        x: cfg.points[0].x - cfg.size / 2,\n        y: cfg.points[0].y - cfg.size,\n        width: cfg.size,\n        height: cfg.size,\n        img: cfg.shape[1]\n      }\n    });\n  }\n}); // path\n\nvar pathMetaCache = {};\nShape.registerShape('point', 'path', {\n  draw: function draw(cfg, container) {\n    var attrs = Util.mix({}, getLineAttrs(cfg), getFillAttrs(cfg));\n    var path = cfg.shape[1];\n    var size = cfg.size || 10;\n    var pathMeta;\n\n    if (pathMetaCache[path]) {\n      pathMeta = pathMetaCache[path];\n    } else {\n      var segments = PathUtil.parsePathString(path);\n      var nums = Util.flatten(segments).filter(function (num) {\n        return Util.isNumber(num);\n      });\n      pathMetaCache[path] = pathMeta = {\n        range: Math.max.apply(null, nums) - Math.min.apply(null, nums),\n        segments: segments\n      };\n    }\n\n    var scale = size / pathMeta.range;\n    var transform = [];\n\n    if (attrs.rotate) {\n      transform.push(['r', attrs.rotate / 180 * Math.PI]);\n      delete attrs.rotate;\n    }\n\n    var shape = container.addShape('path', {\n      attrs: Util.mix(attrs, {\n        path: pathMeta.segments\n      })\n    });\n    transform.push(['s', scale, scale], ['t', cfg.x, cfg.y]);\n    shape.transform(transform);\n    return shape;\n  }\n});\nmodule.exports = Point;"]}]}