{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\unherit\\index.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\unherit\\index.js","mtime":1524912140000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["'use strict';\r\nvar xtend = require('xtend');\r\nvar inherits = require('inherits');\r\nmodule.exports = unherit;\r\nfunction unherit(Super) {\r\n    var result;\r\n    var key;\r\n    var value;\r\n    inherits(Of, Super);\r\n    inherits(From, Of);\r\n    result = Of.prototype;\r\n    for (key in result) {\r\n        value = result[key];\r\n        if (value && typeof value === 'object') {\r\n            result[key] = 'concat' in value ? value.concat() : xtend(value);\r\n        }\r\n    }\r\n    return Of;\r\n    function From(parameters) {\r\n        return Super.apply(this, parameters);\r\n    }\r\n    function Of() {\r\n        if (!(this instanceof Of)) {\r\n            return new From(arguments);\r\n        }\r\n        return Super.apply(this, arguments);\r\n    }\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\unherit\\index.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\unherit\\index.js"],"names":[],"mappings":"AAAA,YAAY,CAAA;AAEZ,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAA;AAC5B,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAA;AAElC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAA;AAIxB,SAAS,OAAO,CAAC,KAAK;IACpB,IAAI,MAAM,CAAA;IACV,IAAI,GAAG,CAAA;IACP,IAAI,KAAK,CAAA;IAET,QAAQ,CAAC,EAAE,EAAE,KAAK,CAAC,CAAA;IACnB,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAA;IAGlB,MAAM,GAAG,EAAE,CAAC,SAAS,CAAA;IAErB,KAAK,GAAG,IAAI,MAAM,EAAE;QAClB,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAA;QAEnB,IAAI,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YACtC,MAAM,CAAC,GAAG,CAAC,GAAG,QAAQ,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;SAChE;KACF;IAED,OAAO,EAAE,CAAA;IAIT,SAAS,IAAI,CAAC,UAAU;QACtB,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,UAAU,CAAC,CAAA;IACtC,CAAC;IAGD,SAAS,EAAE;QACT,IAAI,CAAC,CAAC,IAAI,YAAY,EAAE,CAAC,EAAE;YACzB,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,CAAA;SAC3B;QAED,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAA;IACrC,CAAC;AACH,CAAC","sourcesContent":["'use strict'\n\nvar xtend = require('xtend')\nvar inherits = require('inherits')\n\nmodule.exports = unherit\n\n/* Create a custom constructor which can be modified\n * without affecting the original class. */\nfunction unherit(Super) {\n  var result\n  var key\n  var value\n\n  inherits(Of, Super)\n  inherits(From, Of)\n\n  /* Clone values. */\n  result = Of.prototype\n\n  for (key in result) {\n    value = result[key]\n\n    if (value && typeof value === 'object') {\n      result[key] = 'concat' in value ? value.concat() : xtend(value)\n    }\n  }\n\n  return Of\n\n  /* Constructor accepting a single argument,\n   * which itself is an `arguments` object. */\n  function From(parameters) {\n    return Super.apply(this, parameters)\n  }\n\n  /* Constructor accepting variadic arguments. */\n  function Of() {\n    if (!(this instanceof Of)) {\n      return new From(arguments)\n    }\n\n    return Super.apply(this, arguments)\n  }\n}\n"]}]}