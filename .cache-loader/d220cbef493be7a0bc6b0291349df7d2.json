{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-gesture\\esm\\gestures\\swipe.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-gesture\\esm\\gestures\\swipe.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\r\nimport { clock } from '../utils/clock';\r\nimport { Gesture } from './gesture';\r\nvar SWIPE_TIME_GAP = 100;\r\nvar Swipe = (function (_super) {\r\n    __extends(Swipe, _super);\r\n    function Swipe() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.EVENT = 'swipe';\r\n        _this.latestMoveTime = 0;\r\n        _this.ms = 0;\r\n        _this.speedX = 0;\r\n        _this.speedY = 0;\r\n        _this.preX = 0;\r\n        _this.preY = 0;\r\n        return _this;\r\n    }\r\n    Swipe.prototype.onTouchCancel = function (ev) { };\r\n    Swipe.prototype.onTouchEnd = function (ev) {\r\n        var speedX = this.speedX;\r\n        var speedY = this.speedY;\r\n        if (clock.now() - this.latestMoveTime < SWIPE_TIME_GAP) {\r\n            var x = ev.x, y = ev.y;\r\n            this.emit({ x: x, y: y, speedX: speedX, speedY: speedY, event: ev });\r\n        }\r\n    };\r\n    Swipe.prototype.onTouchMove = function (ev) {\r\n        var x = ev.x, y = ev.y;\r\n        var ms = clock.now();\r\n        var deltaX = x - this.preX;\r\n        var deltaY = y - this.preY;\r\n        var deltaTime = ms - this.ms;\r\n        this.speedX = deltaX / deltaTime;\r\n        this.speedY = deltaY / deltaTime;\r\n        this.latestMoveTime = ms;\r\n    };\r\n    Swipe.prototype.onTouchStart = function (ev) {\r\n        var x = ev.x, y = ev.y;\r\n        this.speedX = this.speedY = 0;\r\n        this.preX = x;\r\n        this.preY = y;\r\n        this.ms = clock.now();\r\n    };\r\n    return Swipe;\r\n}(Gesture));\r\nexport { Swipe };\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-gesture\\esm\\gestures\\swipe.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-gesture\\esm\\gestures\\swipe.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAClC,OAAO,EAAE,KAAK,EAAE,MAAM,gBAAgB,CAAC;AACvC,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AACpC,IAAI,cAAc,GAAG,GAAG,CAAC;AACzB,IAAI,KAAK,GAAiB,CAAC,UAAU,MAAM;IACvC,SAAS,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACzB,SAAS,KAAK;QACV,IAAI,KAAK,GAAG,MAAM,KAAK,IAAI,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,IAAI,CAAC;QACrE,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC;QAEtB,KAAK,CAAC,cAAc,GAAG,CAAC,CAAC;QAEzB,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;QAEb,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;QACjB,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;QAEjB,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;QACf,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;QACf,OAAO,KAAK,CAAC;IACjB,CAAC;IACD,KAAK,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,EAAE,IAAI,CAAC,CAAC;IAClD,KAAK,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,EAAE;QACrC,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QACzB,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QACzB,IAAI,KAAK,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,cAAc,GAAG,cAAc,EAAE;YACpD,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YAEvB,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC;SACxE;IACL,CAAC,CAAC;IACF,KAAK,CAAC,SAAS,CAAC,WAAW,GAAG,UAAU,EAAE;QACtC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACvB,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;QAErB,IAAI,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;QAC3B,IAAI,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;QAC3B,IAAI,SAAS,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QAE7B,IAAI,CAAC,MAAM,GAAG,MAAM,GAAG,SAAS,CAAC;QACjC,IAAI,CAAC,MAAM,GAAG,MAAM,GAAG,SAAS,CAAC;QAEjC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;IAC7B,CAAC,CAAC;IACF,KAAK,CAAC,SAAS,CAAC,YAAY,GAAG,UAAU,EAAE;QACvC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QAEvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAC9B,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IAC1B,CAAC,CAAC;IACF,OAAO,KAAK,CAAC;AACjB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;AACZ,OAAO,EAAE,KAAK,EAAE,CAAC","sourcesContent":["import { __extends } from \"tslib\";\nimport { clock } from '../utils/clock';\nimport { Gesture } from './gesture';\nvar SWIPE_TIME_GAP = 100;\nvar Swipe = /** @class */ (function (_super) {\n    __extends(Swipe, _super);\n    function Swipe() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.EVENT = 'swipe';\n        // 最后一次 move 的事件，用于区分 swipe 和 pan\n        _this.latestMoveTime = 0;\n        // 最后交互的时间，用于计算速度\n        _this.ms = 0;\n        // 最后的 move 速度，用于touchend 之后做惯性\n        _this.speedX = 0;\n        _this.speedY = 0;\n        // 最后 move 的 x，y 位置\n        _this.preX = 0;\n        _this.preY = 0;\n        return _this;\n    }\n    Swipe.prototype.onTouchCancel = function (ev) { };\n    Swipe.prototype.onTouchEnd = function (ev) {\n        var speedX = this.speedX;\n        var speedY = this.speedY;\n        if (clock.now() - this.latestMoveTime < SWIPE_TIME_GAP) {\n            var x = ev.x, y = ev.y;\n            // 抛出事件\n            this.emit({ x: x, y: y, speedX: speedX, speedY: speedY, event: ev });\n        }\n    };\n    Swipe.prototype.onTouchMove = function (ev) {\n        var x = ev.x, y = ev.y;\n        var ms = clock.now();\n        // 1. 计算 wheel 偏移\n        var deltaX = x - this.preX;\n        var deltaY = y - this.preY;\n        var deltaTime = ms - this.ms;\n        // 2. 计算速度（简版吧）\n        this.speedX = deltaX / deltaTime;\n        this.speedY = deltaY / deltaTime;\n        // 记录最后一次移动事件\n        this.latestMoveTime = ms;\n    };\n    Swipe.prototype.onTouchStart = function (ev) {\n        var x = ev.x, y = ev.y;\n        // 初始化\n        this.speedX = this.speedY = 0;\n        this.preX = x;\n        this.preY = y;\n        this.ms = clock.now();\n    };\n    return Swipe;\n}(Gesture));\nexport { Swipe };\n//# sourceMappingURL=swipe.js.map"]}]}