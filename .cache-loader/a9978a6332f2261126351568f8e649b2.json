{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/components/connected-area.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/components/connected-area.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { each, assign, mix, find } from '@antv/util';\nimport { compare } from '../base/controller/state';\nfunction parsePoints(shape, coord) {\n    var parsedPoints = [];\n    var points = shape.get('origin').points;\n    each(points, function (p) {\n        parsedPoints.push(coord.convertPoint(p));\n    });\n    return parsedPoints;\n}\nfunction getDefaultStyle() {\n    return {\n        areaStyle: {\n            opacity: 0.2,\n        },\n        lineStyle: {\n            lineWidth: 2,\n            opacity: 0.1,\n        },\n    };\n}\nvar ConnectedArea = (function () {\n    function ConnectedArea(cfg) {\n        this.areas = [];\n        this.lines = [];\n        this._areaStyle = {};\n        this._lineStyle = {};\n        assign(this, cfg);\n        this._init();\n    }\n    ConnectedArea.prototype.draw = function () {\n        var _this = this;\n        var groupedShapes = this._getGroupedShapes();\n        each(groupedShapes, function (shapes, name) {\n            if (shapes.length > 0) {\n                _this._drawConnection(shapes, name);\n            }\n        });\n        if (this.triggerOn) {\n            this._addInteraction();\n        }\n        else if (this.animation) {\n            this._initialAnimation();\n        }\n    };\n    ConnectedArea.prototype.clear = function () {\n        if (this.container) {\n            this.container.clear();\n        }\n        this.areas = [];\n        this.lines = [];\n    };\n    ConnectedArea.prototype.destroy = function () {\n        if (this.container) {\n            this.container.remove();\n        }\n    };\n    ConnectedArea.prototype.setState = function (state, condition) {\n        if (state === 'active') {\n            this._onActive(condition);\n        }\n        if (state === 'disabled') {\n            this._onDisabled(condition);\n        }\n        if (state === 'selected') {\n            this._onSelected(condition);\n        }\n    };\n    ConnectedArea.prototype._init = function () {\n        var _this = this;\n        var layer = this.view.backgroundGroup;\n        this.container = layer.addGroup();\n        this.draw();\n        this.view.on('beforerender', function () {\n            _this.clear();\n        });\n    };\n    ConnectedArea.prototype._getGroupedShapes = function () {\n        var _this = this;\n        var values = this.view.getScaleByField(this.field).values;\n        var geometry = this.view.geometries[0];\n        var shapes = geometry.getShapes();\n        var groups = {};\n        each(values, function (v) {\n            groups[v] = [];\n        });\n        each(shapes, function (shape) {\n            var origin = shape.get('origin').data;\n            var key = origin[_this.field];\n            groups[key].push(shape);\n        });\n        return groups;\n    };\n    ConnectedArea.prototype._drawConnection = function (shapes, name) {\n        var originColor = shapes[0].attr('fill');\n        this._areaStyle[name] = this._getShapeStyle(originColor, 'area');\n        this._lineStyle[name] = this._getShapeStyle(originColor, 'line');\n        var coord = this.view.geometries[0].coordinate;\n        for (var i = 0; i < shapes.length - 1; i++) {\n            var current = parsePoints(shapes[i], coord);\n            var next = parsePoints(shapes[i + 1], coord);\n            var areaStyle = mix({}, this._areaStyle[name]);\n            var lineStyle = mix({}, this._lineStyle[name]);\n            if (this.triggerOn) {\n                areaStyle.opacity = 0;\n                lineStyle.opacity = 0;\n            }\n            var area = this.container.addShape('path', {\n                attrs: mix({}, areaStyle, {\n                    path: [\n                        ['M', current[2].x, current[2].y],\n                        ['L', next[1].x, next[1].y],\n                        ['L', next[0].x, next[0].y],\n                        ['L', current[3].x, current[3].y],\n                    ],\n                }),\n                name: 'connectedArea',\n            });\n            var line = this.container.addShape('path', {\n                attrs: mix({}, lineStyle, {\n                    path: [\n                        ['M', current[2].x, current[2].y],\n                        ['L', next[1].x, next[1].y],\n                    ],\n                }),\n                name: 'connectedArea',\n            });\n            var originData = shapes[i].get('origin').data;\n            area.set('data', originData);\n            line.set('data', originData);\n            this.areas.push(area);\n            this.lines.push(line);\n        }\n    };\n    ConnectedArea.prototype._getShapeStyle = function (originColor, shapeType) {\n        var styleName = shapeType + \"Style\";\n        if (this[styleName]) {\n            return this[styleName];\n        }\n        var defaultStyle = getDefaultStyle()[styleName];\n        var mappedStyle = { fill: originColor };\n        if (shapeType === 'line') {\n            mappedStyle = { stroke: originColor };\n        }\n        return mix(defaultStyle, mappedStyle);\n    };\n    ConnectedArea.prototype._addInteraction = function () {\n        var _this = this;\n        var eventName = this.triggerOn;\n        this.view.on(\"interval:\" + eventName, function (e) {\n            var origin = e.target.get('origin').data[_this.field];\n            _this.setState('active', {\n                name: _this.field,\n                exp: origin,\n            });\n            _this.setState('disabled', {\n                name: _this.field,\n                exp: function (d) {\n                    return d !== origin;\n                },\n            });\n            _this.view.canvas.draw();\n        });\n        this.view.on('mousemove', function (e) {\n            if (e.gEvent.target.get('name') !== 'interval') {\n                _this.setState('disabled', {\n                    name: _this.field,\n                    exp: function () {\n                        return true;\n                    },\n                });\n            }\n        });\n    };\n    ConnectedArea.prototype._initialAnimation = function () {\n        var _a = this.view.coordinateBBox, x = _a.x, y = _a.y, width = _a.width, height = _a.height;\n        this.container.setClip({\n            type: 'rect',\n            attrs: {\n                x: x,\n                y: y,\n                width: 0,\n                height: height,\n            },\n        });\n        this.container.set('animating', true);\n        this.container.getClip().animate({\n            width: width,\n        }, 600, 'easeQuadOut', function () { }, 400);\n    };\n    ConnectedArea.prototype._onActive = function (condition) {\n        var _this = this;\n        each(this.areas, function (area) {\n            var shapeData = area.get('data');\n            var styleField = shapeData[_this.field];\n            if (compare(shapeData, condition)) {\n                var opacity = _this._areaStyle[styleField].opacity || 1;\n                area.stopAnimate();\n                area.animate({ opacity: opacity }, 400, 'easeQuadOut');\n            }\n        });\n        each(this.lines, function (line) {\n            var shapeData = line.get('data');\n            var styleField = shapeData[_this.field];\n            if (compare(shapeData, condition)) {\n                var opacity = _this._lineStyle[styleField].opacity || 1;\n                line.stopAnimate();\n                line.animate({ opacity: opacity }, 400, 'easeQuadOut');\n            }\n        });\n    };\n    ConnectedArea.prototype._onDisabled = function (condition) {\n        each(this.areas, function (area) {\n            var shapeData = area.get('data');\n            if (compare(shapeData, condition)) {\n                area.stopAnimate();\n                area.animate({\n                    opacity: 0,\n                }, 400, 'easeQuadOut');\n            }\n        });\n        each(this.lines, function (line) {\n            var shapeData = line.get('data');\n            if (compare(shapeData, condition)) {\n                line.stopAnimate();\n                line.animate({\n                    opacity: 0,\n                }, 400, 'easeQuadOut');\n            }\n        });\n    };\n    ConnectedArea.prototype._onSelected = function (condition) {\n        this._onActive(condition);\n    };\n    ConnectedArea.prototype.getGeometry = function () {\n        return find(this.view.geometries, function (geom) { return geom.type === 'interval'; });\n    };\n    return ConnectedArea;\n}());\nexport default ConnectedArea;\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/components/connected-area.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/components/connected-area.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * 区域连接组件，用于堆叠柱状图和堆叠条形图\n */\nimport { each, assign, mix, find } from '@antv/util';\nimport { compare } from '../base/controller/state';\nfunction parsePoints(shape, coord) {\n    var parsedPoints = [];\n    var points = shape.get('origin').points;\n    each(points, function (p) {\n        parsedPoints.push(coord.convertPoint(p));\n    });\n    return parsedPoints;\n}\nfunction getDefaultStyle() {\n    return {\n        areaStyle: {\n            opacity: 0.2,\n        },\n        lineStyle: {\n            lineWidth: 2,\n            opacity: 0.1,\n        },\n    };\n}\nvar ConnectedArea = /** @class */ (function () {\n    function ConnectedArea(cfg) {\n        this.areas = [];\n        this.lines = [];\n        this._areaStyle = {};\n        this._lineStyle = {};\n        assign(this, cfg);\n        this._init();\n    }\n    ConnectedArea.prototype.draw = function () {\n        var _this = this;\n        var groupedShapes = this._getGroupedShapes();\n        each(groupedShapes, function (shapes, name) {\n            if (shapes.length > 0) {\n                _this._drawConnection(shapes, name);\n            }\n        });\n        if (this.triggerOn) {\n            this._addInteraction();\n        }\n        else if (this.animation) {\n            // 如果定义了triggerOn的方式，则组件是响应交互的，初始化为不可见状态，因此无需动画\n            this._initialAnimation();\n        }\n    };\n    ConnectedArea.prototype.clear = function () {\n        if (this.container) {\n            this.container.clear();\n        }\n        this.areas = [];\n        this.lines = [];\n    };\n    ConnectedArea.prototype.destroy = function () {\n        if (this.container) {\n            this.container.remove();\n        }\n    };\n    ConnectedArea.prototype.setState = function (state, condition) {\n        if (state === 'active') {\n            this._onActive(condition);\n        }\n        if (state === 'disabled') {\n            this._onDisabled(condition);\n        }\n        if (state === 'selected') {\n            this._onSelected(condition);\n        }\n    };\n    ConnectedArea.prototype._init = function () {\n        var _this = this;\n        var layer = this.view.backgroundGroup;\n        this.container = layer.addGroup();\n        this.draw();\n        this.view.on('beforerender', function () {\n            _this.clear();\n        });\n    };\n    ConnectedArea.prototype._getGroupedShapes = function () {\n        var _this = this;\n        // 根据堆叠字段对shape进行分组\n        var values = this.view.getScaleByField(this.field).values;\n        var geometry = this.view.geometries[0];\n        var shapes = geometry.getShapes();\n        // 创建分组\n        var groups = {};\n        each(values, function (v) {\n            groups[v] = [];\n        });\n        // 执行分组\n        each(shapes, function (shape) {\n            var origin = shape.get('origin').data;\n            var key = origin[_this.field];\n            groups[key].push(shape);\n        });\n        return groups;\n    };\n    ConnectedArea.prototype._drawConnection = function (shapes, name) {\n        // tslint:disable-next-line: prefer-for-of\n        var originColor = shapes[0].attr('fill');\n        this._areaStyle[name] = this._getShapeStyle(originColor, 'area');\n        this._lineStyle[name] = this._getShapeStyle(originColor, 'line');\n        var coord = this.view.geometries[0].coordinate;\n        for (var i = 0; i < shapes.length - 1; i++) {\n            var current = parsePoints(shapes[i], coord);\n            var next = parsePoints(shapes[i + 1], coord);\n            var areaStyle = mix({}, this._areaStyle[name]);\n            var lineStyle = mix({}, this._lineStyle[name]);\n            if (this.triggerOn) {\n                areaStyle.opacity = 0;\n                lineStyle.opacity = 0;\n            }\n            var area = this.container.addShape('path', {\n                attrs: mix({}, areaStyle, {\n                    path: [\n                        ['M', current[2].x, current[2].y],\n                        ['L', next[1].x, next[1].y],\n                        ['L', next[0].x, next[0].y],\n                        ['L', current[3].x, current[3].y],\n                    ],\n                }),\n                name: 'connectedArea',\n            });\n            var line = this.container.addShape('path', {\n                attrs: mix({}, lineStyle, {\n                    path: [\n                        ['M', current[2].x, current[2].y],\n                        ['L', next[1].x, next[1].y],\n                    ],\n                }),\n                name: 'connectedArea',\n            });\n            // 在辅助图形上记录数据，用以交互和响应状态量\n            var originData = shapes[i].get('origin').data;\n            area.set('data', originData);\n            line.set('data', originData);\n            this.areas.push(area);\n            this.lines.push(line);\n        }\n    };\n    ConnectedArea.prototype._getShapeStyle = function (originColor, shapeType) {\n        var styleName = shapeType + \"Style\";\n        // 如果用户自己指定了样式，则不采用默认颜色映射\n        if (this[styleName]) {\n            return this[styleName];\n        }\n        var defaultStyle = getDefaultStyle()[styleName];\n        var mappedStyle = { fill: originColor };\n        if (shapeType === 'line') {\n            mappedStyle = { stroke: originColor };\n        }\n        return mix(defaultStyle, mappedStyle);\n    };\n    ConnectedArea.prototype._addInteraction = function () {\n        var _this = this;\n        var eventName = this.triggerOn;\n        this.view.on(\"interval:\" + eventName, function (e) {\n            var origin = e.target.get('origin').data[_this.field];\n            _this.setState('active', {\n                name: _this.field,\n                exp: origin,\n            });\n            _this.setState('disabled', {\n                name: _this.field,\n                exp: function (d) {\n                    return d !== origin;\n                },\n            });\n            _this.view.canvas.draw();\n        });\n        // 当鼠标移动到其他区域时取消显示\n        this.view.on('mousemove', function (e) {\n            if (e.gEvent.target.get('name') !== 'interval') {\n                _this.setState('disabled', {\n                    name: _this.field,\n                    exp: function () {\n                        return true;\n                    },\n                });\n            }\n        });\n    };\n    ConnectedArea.prototype._initialAnimation = function () {\n        // clipIn动画\n        var _a = this.view.coordinateBBox, x = _a.x, y = _a.y, width = _a.width, height = _a.height;\n        this.container.setClip({\n            type: 'rect',\n            attrs: {\n                x: x,\n                y: y,\n                width: 0,\n                height: height,\n            },\n        });\n        this.container.set('animating', true);\n        this.container.getClip().animate({\n            width: width,\n        }, 600, 'easeQuadOut', function () { }, // eslint-disable-line @typescript-eslint/no-empty-function\n        400);\n    };\n    ConnectedArea.prototype._onActive = function (condition) {\n        var _this = this;\n        each(this.areas, function (area) {\n            var shapeData = area.get('data');\n            var styleField = shapeData[_this.field];\n            if (compare(shapeData, condition)) {\n                var opacity = _this._areaStyle[styleField].opacity || 1;\n                // area.attr('opacity',this._areaStyle[styleField].opacity || 1);\n                area.stopAnimate();\n                area.animate({ opacity: opacity }, 400, 'easeQuadOut');\n            }\n        });\n        each(this.lines, function (line) {\n            var shapeData = line.get('data');\n            var styleField = shapeData[_this.field];\n            if (compare(shapeData, condition)) {\n                var opacity = _this._lineStyle[styleField].opacity || 1;\n                // line.attr('opacity',this._lineStyle[styleField].opacity || 1);\n                line.stopAnimate();\n                line.animate({ opacity: opacity }, 400, 'easeQuadOut');\n            }\n        });\n    };\n    ConnectedArea.prototype._onDisabled = function (condition) {\n        each(this.areas, function (area) {\n            var shapeData = area.get('data');\n            if (compare(shapeData, condition)) {\n                // area.attr('opacity',0);\n                area.stopAnimate();\n                area.animate({\n                    opacity: 0,\n                }, 400, 'easeQuadOut');\n            }\n        });\n        each(this.lines, function (line) {\n            var shapeData = line.get('data');\n            if (compare(shapeData, condition)) {\n                // line.attr('opacity',0);\n                line.stopAnimate();\n                line.animate({\n                    opacity: 0,\n                }, 400, 'easeQuadOut');\n            }\n        });\n    };\n    ConnectedArea.prototype._onSelected = function (condition) {\n        this._onActive(condition);\n    };\n    ConnectedArea.prototype.getGeometry = function () {\n        return find(this.view.geometries, function (geom) { return geom.type === 'interval'; });\n    };\n    return ConnectedArea;\n}());\nexport default ConnectedArea;\n//# sourceMappingURL=connected-area.js.map"]}]}