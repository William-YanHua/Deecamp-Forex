{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\scale\\esm\\tick-method\\time-pretty.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\scale\\esm\\tick-method\\time-pretty.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { DAY, HOUR, MINUTE, MONTH, SECOND, YEAR } from '../util/time';\r\nfunction getYear(date) {\r\n    return new Date(date).getFullYear();\r\n}\r\nfunction createYear(year) {\r\n    return new Date(year, 0, 1).getTime();\r\n}\r\nfunction getMonth(date) {\r\n    return new Date(date).getMonth();\r\n}\r\nfunction diffMonth(min, max) {\r\n    var minYear = getYear(min);\r\n    var maxYear = getYear(max);\r\n    var minMonth = getMonth(min);\r\n    var maxMonth = getMonth(max);\r\n    return (maxYear - minYear) * 12 + ((maxMonth - minMonth) % 12);\r\n}\r\nfunction creatMonth(year, month) {\r\n    return new Date(year, month, 1).getTime();\r\n}\r\nfunction diffDay(min, max) {\r\n    return Math.ceil((max - min) / DAY);\r\n}\r\nfunction diffHour(min, max) {\r\n    return Math.ceil((max - min) / HOUR);\r\n}\r\nfunction diffMinus(min, max) {\r\n    return Math.ceil((max - min) / (60 * 1000));\r\n}\r\nexport default function timePretty(cfg) {\r\n    var min = cfg.min, max = cfg.max, minTickInterval = cfg.minTickInterval;\r\n    var tickInterval = cfg.tickInterval;\r\n    var tickCount = cfg.tickCount;\r\n    var ticks = [];\r\n    if (!tickInterval) {\r\n        tickInterval = (max - min) / tickCount;\r\n        if (minTickInterval && tickInterval < minTickInterval) {\r\n            tickInterval = minTickInterval;\r\n        }\r\n    }\r\n    var minYear = getYear(min);\r\n    if (tickInterval > YEAR) {\r\n        var maxYear = getYear(max);\r\n        var yearInterval = Math.ceil(tickInterval / YEAR);\r\n        for (var i = minYear; i <= maxYear + yearInterval; i = i + yearInterval) {\r\n            ticks.push(createYear(i));\r\n        }\r\n    }\r\n    else if (tickInterval > MONTH) {\r\n        var monthInterval = Math.ceil(tickInterval / MONTH);\r\n        var mmMoth = getMonth(min);\r\n        var dMonths = diffMonth(min, max);\r\n        for (var i = 0; i <= dMonths + monthInterval; i = i + monthInterval) {\r\n            ticks.push(creatMonth(minYear, i + mmMoth));\r\n        }\r\n    }\r\n    else if (tickInterval > DAY) {\r\n        var date = new Date(min);\r\n        var year = date.getFullYear();\r\n        var month = date.getMonth();\r\n        var mday = date.getDate();\r\n        var day = Math.ceil(tickInterval / DAY);\r\n        var ddays = diffDay(min, max);\r\n        for (var i = 0; i < ddays + day; i = i + day) {\r\n            ticks.push(new Date(year, month, mday + i).getTime());\r\n        }\r\n    }\r\n    else if (tickInterval > HOUR) {\r\n        var date = new Date(min);\r\n        var year = date.getFullYear();\r\n        var month = date.getMonth();\r\n        var day = date.getDate();\r\n        var hour = date.getHours();\r\n        var hours = Math.ceil(tickInterval / HOUR);\r\n        var dHours = diffHour(min, max);\r\n        for (var i = 0; i <= dHours + hours; i = i + hours) {\r\n            ticks.push(new Date(year, month, day, hour + i).getTime());\r\n        }\r\n    }\r\n    else if (tickInterval > MINUTE) {\r\n        var dMinus = diffMinus(min, max);\r\n        var minutes = Math.ceil(tickInterval / MINUTE);\r\n        for (var i = 0; i <= dMinus + minutes; i = i + minutes) {\r\n            ticks.push(min + i * MINUTE);\r\n        }\r\n    }\r\n    else {\r\n        var interval = tickInterval;\r\n        if (interval < SECOND) {\r\n            interval = SECOND;\r\n        }\r\n        var minSecond = Math.floor(min / SECOND) * SECOND;\r\n        var dSeconds = Math.ceil((max - min) / SECOND);\r\n        var seconds = Math.ceil(interval / SECOND);\r\n        for (var i = 0; i < dSeconds + seconds; i = i + seconds) {\r\n            ticks.push(minSecond + i * SECOND);\r\n        }\r\n    }\r\n    return ticks;\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\scale\\esm\\tick-method\\time-pretty.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\scale\\esm\\tick-method\\time-pretty.js"],"names":[],"mappings":"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","sourcesContent":["import { DAY, HOUR, MINUTE, MONTH, SECOND, YEAR } from '../util/time';\nfunction getYear(date) {\n    return new Date(date).getFullYear();\n}\nfunction createYear(year) {\n    return new Date(year, 0, 1).getTime();\n}\nfunction getMonth(date) {\n    return new Date(date).getMonth();\n}\nfunction diffMonth(min, max) {\n    var minYear = getYear(min);\n    var maxYear = getYear(max);\n    var minMonth = getMonth(min);\n    var maxMonth = getMonth(max);\n    return (maxYear - minYear) * 12 + ((maxMonth - minMonth) % 12);\n}\nfunction creatMonth(year, month) {\n    return new Date(year, month, 1).getTime();\n}\nfunction diffDay(min, max) {\n    return Math.ceil((max - min) / DAY);\n}\nfunction diffHour(min, max) {\n    return Math.ceil((max - min) / HOUR);\n}\nfunction diffMinus(min, max) {\n    return Math.ceil((max - min) / (60 * 1000));\n}\n/**\n * 计算 time 的 ticks，对 month, year 进行 pretty 处理\n * @param cfg 度量的配置项\n * @returns 计算后的 ticks\n */\nexport default function timePretty(cfg) {\n    var min = cfg.min, max = cfg.max, minTickInterval = cfg.minTickInterval;\n    var tickInterval = cfg.tickInterval;\n    var tickCount = cfg.tickCount;\n    var ticks = [];\n    // 指定 tickInterval 后 tickCount 不生效，需要重新计算\n    if (!tickInterval) {\n        tickInterval = (max - min) / tickCount;\n        // 如果设置了最小间距，则使用最小间距\n        if (minTickInterval && tickInterval < minTickInterval) {\n            tickInterval = minTickInterval;\n        }\n    }\n    var minYear = getYear(min);\n    // 如果间距大于 1 年，则将开始日期从整年开始\n    if (tickInterval > YEAR) {\n        var maxYear = getYear(max);\n        var yearInterval = Math.ceil(tickInterval / YEAR);\n        for (var i = minYear; i <= maxYear + yearInterval; i = i + yearInterval) {\n            ticks.push(createYear(i));\n        }\n    }\n    else if (tickInterval > MONTH) {\n        // 大于月时\n        var monthInterval = Math.ceil(tickInterval / MONTH);\n        var mmMoth = getMonth(min);\n        var dMonths = diffMonth(min, max);\n        for (var i = 0; i <= dMonths + monthInterval; i = i + monthInterval) {\n            ticks.push(creatMonth(minYear, i + mmMoth));\n        }\n    }\n    else if (tickInterval > DAY) {\n        // 大于天\n        var date = new Date(min);\n        var year = date.getFullYear();\n        var month = date.getMonth();\n        var mday = date.getDate();\n        var day = Math.ceil(tickInterval / DAY);\n        var ddays = diffDay(min, max);\n        for (var i = 0; i < ddays + day; i = i + day) {\n            ticks.push(new Date(year, month, mday + i).getTime());\n        }\n    }\n    else if (tickInterval > HOUR) {\n        // 大于小时\n        var date = new Date(min);\n        var year = date.getFullYear();\n        var month = date.getMonth();\n        var day = date.getDate();\n        var hour = date.getHours();\n        var hours = Math.ceil(tickInterval / HOUR);\n        var dHours = diffHour(min, max);\n        for (var i = 0; i <= dHours + hours; i = i + hours) {\n            ticks.push(new Date(year, month, day, hour + i).getTime());\n        }\n    }\n    else if (tickInterval > MINUTE) {\n        // 大于分钟\n        var dMinus = diffMinus(min, max);\n        var minutes = Math.ceil(tickInterval / MINUTE);\n        for (var i = 0; i <= dMinus + minutes; i = i + minutes) {\n            ticks.push(min + i * MINUTE);\n        }\n    }\n    else {\n        // 小于分钟\n        var interval = tickInterval;\n        if (interval < SECOND) {\n            interval = SECOND;\n        }\n        var minSecond = Math.floor(min / SECOND) * SECOND;\n        var dSeconds = Math.ceil((max - min) / SECOND);\n        var seconds = Math.ceil(interval / SECOND);\n        for (var i = 0; i < dSeconds + seconds; i = i + seconds) {\n            ticks.push(minSecond + i * SECOND);\n        }\n    }\n    return ticks;\n}\n//# sourceMappingURL=time-pretty.js.map"]}]}