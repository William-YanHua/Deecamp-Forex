{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\src\\app\\api\\mock\\BondAnalysisServiceMock.ts","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\src\\app\\api\\mock\\BondAnalysisServiceMock.ts","mtime":1596379644447},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { Injectable } from \"react.di\";\r\nimport { BondAnalysisService } from \"../BondAnalysisService\";\r\nimport { waitForMs } from \"../../../utils/Wait\";\r\nvar BondAnalysisServiceMock = (function (_super) {\r\n    __extends(BondAnalysisServiceMock, _super);\r\n    function BondAnalysisServiceMock() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BondAnalysisServiceMock.prototype.getCredictBond = function (invreqId) {\r\n        return __awaiter(this, void 0, Promise, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, waitForMs(1000)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2, {\r\n                                predictValue: [\r\n                                    {\r\n                                        date: \"2017-01-01\",\r\n                                        predictValue: 3452.14,\r\n                                    },\r\n                                    {\r\n                                        date: \"2017-02-01\",\r\n                                        predictValue: 3711.22,\r\n                                    },\r\n                                    {\r\n                                        date: \"2017-03-01\",\r\n                                        predictValue: 3111.14,\r\n                                    },\r\n                                    {\r\n                                        date: \"2017-04-01\",\r\n                                        predictValue: 2215.14,\r\n                                    },\r\n                                    {\r\n                                        date: \"2017-05-01\",\r\n                                        predictValue: 2672.14,\r\n                                    },\r\n                                ],\r\n                                riskIndicator: [\r\n                                    {\r\n                                        season: \"2017Q1\",\r\n                                        fixedDuration: 145,\r\n                                        liability: 18.10,\r\n                                        cashFlow: 89.11,\r\n                                        creditRate: \"A\",\r\n                                    },\r\n                                    {\r\n                                        season: \"2017Q2\",\r\n                                        fixedDuration: 188,\r\n                                        liability: 39.22,\r\n                                        cashFlow: 74.22,\r\n                                        creditRate: \"A\",\r\n                                    },\r\n                                    {\r\n                                        season: \"2017Q3\",\r\n                                        fixedDuration: 156,\r\n                                        liability: 34.22,\r\n                                        cashFlow: 80.33,\r\n                                        creditRate: \"A\",\r\n                                    },\r\n                                    {\r\n                                        season: \"2017Q4\",\r\n                                        fixedDuration: 122,\r\n                                        liability: 48.10,\r\n                                        cashFlow: 89.11,\r\n                                        creditRate: \"A\",\r\n                                    },\r\n                                    {\r\n                                        season: \"2018Q1\",\r\n                                        fixedDuration: 80,\r\n                                        liability: 49.22,\r\n                                        cashFlow: 74.22,\r\n                                        creditRate: \"A\",\r\n                                    },\r\n                                    {\r\n                                        season: \"2018Q2\",\r\n                                        fixedDuration: 55,\r\n                                        liability: 54.22,\r\n                                        cashFlow: 80.33,\r\n                                        creditRate: \"A\",\r\n                                    },\r\n                                ],\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    BondAnalysisServiceMock.prototype.getRatetBondData = function (invreqId) {\r\n        return __awaiter(this, void 0, Promise, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2, {\r\n                        predictValue: [\r\n                            {\r\n                                date: \"2017-01-01\",\r\n                                predictValue: 3452.14,\r\n                            },\r\n                            {\r\n                                date: \"2017-02-01\",\r\n                                predictValue: 3711.22,\r\n                            },\r\n                            {\r\n                                date: \"2017-03-01\",\r\n                                predictValue: 3111.14,\r\n                            },\r\n                            {\r\n                                date: \"2017-04-01\",\r\n                                predictValue: 2215.14,\r\n                            },\r\n                            {\r\n                                date: \"2017-05-01\",\r\n                                predictValue: 2672.14,\r\n                            },\r\n                        ],\r\n                        duration: [\r\n                            {\r\n                                season: \"2017Q1\",\r\n                                fixedDuration: 145,\r\n                            },\r\n                            {\r\n                                season: \"2017Q2\",\r\n                                fixedDuration: 188,\r\n                            },\r\n                            {\r\n                                season: \"2017Q3\",\r\n                                fixedDuration: 156,\r\n                            },\r\n                        ],\r\n                    }];\r\n            });\r\n        });\r\n    };\r\n    BondAnalysisServiceMock.prototype.getBondOverviewData = function (invreqId) {\r\n        return __awaiter(this, void 0, Promise, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2, {\r\n                        creditOverview: {\r\n                            startDate: \"2018-09-10\",\r\n                            currentVolume: 4938.00,\r\n                            currentRatio: 12.70,\r\n                            profit: 1.22,\r\n                            duration: 2.53,\r\n                            quotationId: \"019037.SH\",\r\n                            name: \"10国债37\",\r\n                            price: 24.69,\r\n                            quantity: 200,\r\n                        },\r\n                        rateOverview: {\r\n                            startDate: \"2018-09-10\",\r\n                            currentVolume: 6727.00,\r\n                            currentRatio: 17.3,\r\n                            profit: 0.91,\r\n                            duration: 1.89,\r\n                            quotationId: \"122268.SH\",\r\n                            name: \"12国航02\",\r\n                            price: 67.27,\r\n                            quantity: 100,\r\n                        },\r\n                    }];\r\n            });\r\n        });\r\n    };\r\n    BondAnalysisServiceMock = __decorate([\r\n        Injectable\r\n    ], BondAnalysisServiceMock);\r\n    return BondAnalysisServiceMock;\r\n}(BondAnalysisService));\r\nexport { BondAnalysisServiceMock };\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\src\\app\\api\\mock\\BondAnalysisServiceMock.ts","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\src\\app\\api\\mock\\BondAnalysisServiceMock.ts"],"names":[],"mappings":"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","sourcesContent":["import { Inject, Injectable } from \"react.di\";\r\nimport {CreditBondData, PredictValueList, RateBondData} from \"../../models/invreq/Bought/Bond/BondAnalysis\";\r\nimport {BondAnalysisService} from \"../BondAnalysisService\";\r\nimport {BondOverviewData, BondOverviewDatas} from \"../../models/invreq/Bought/Bond/BondOverviewData\";\r\nimport { waitForMs } from \"../../../utils/Wait\";\r\n\r\n@Injectable\r\nexport class BondAnalysisServiceMock extends BondAnalysisService {\r\n\r\n  /**\r\n   * 得到信用债的深度分析数据\r\n   * @param {string} invreqId 投资配置ID\r\n   * @returns {Promise<CreditBondData>}\r\n   */\r\n  async getCredictBond(invreqId: string): Promise<CreditBondData> {\r\n    await waitForMs(1000);\r\n\r\n    return {\r\n      predictValue: [\r\n        {\r\n          date: \"2017-01-01\",\r\n          predictValue: 3452.14,\r\n        },\r\n        {\r\n          date: \"2017-02-01\",\r\n          predictValue: 3711.22,\r\n        },\r\n        {\r\n          date: \"2017-03-01\",\r\n          predictValue: 3111.14,\r\n        },\r\n        {\r\n          date: \"2017-04-01\",\r\n          predictValue: 2215.14,\r\n        },\r\n        {\r\n          date: \"2017-05-01\",\r\n          predictValue: 2672.14,\r\n        },\r\n      ],\r\n      riskIndicator: [\r\n        {\r\n          season: \"2017Q1\",\r\n          fixedDuration: 145,\r\n          liability: 18.10,\r\n          cashFlow: 89.11,\r\n          creditRate: \"A\",\r\n        },\r\n        {\r\n          season: \"2017Q2\",\r\n          fixedDuration: 188,\r\n          liability: 39.22,\r\n          cashFlow: 74.22,\r\n          creditRate: \"A\",\r\n        },\r\n        {\r\n          season: \"2017Q3\",\r\n          fixedDuration: 156,\r\n          liability: 34.22,\r\n          cashFlow: 80.33,\r\n          creditRate: \"A\",\r\n        },\r\n        {\r\n          season: \"2017Q4\",\r\n          fixedDuration: 122,\r\n          liability: 48.10,\r\n          cashFlow: 89.11,\r\n          creditRate: \"A\",\r\n        },\r\n        {\r\n          season: \"2018Q1\",\r\n          fixedDuration: 80,\r\n          liability: 49.22,\r\n          cashFlow: 74.22,\r\n          creditRate: \"A\",\r\n        },\r\n        {\r\n          season: \"2018Q2\",\r\n          fixedDuration: 55,\r\n          liability: 54.22,\r\n          cashFlow: 80.33,\r\n          creditRate: \"A\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 得到利率债的深度分析数据\r\n   * @param {string} invreqId 投资配置ID\r\n   * @returns {Promise<CreditBondData>}\r\n   */\r\n  async getRatetBondData(invreqId: string): Promise<RateBondData> {\r\n    return {\r\n      predictValue: [\r\n        {\r\n          date: \"2017-01-01\",\r\n          predictValue: 3452.14,\r\n        },\r\n        {\r\n          date: \"2017-02-01\",\r\n          predictValue: 3711.22,\r\n        },\r\n        {\r\n          date: \"2017-03-01\",\r\n          predictValue: 3111.14,\r\n        },\r\n        {\r\n          date: \"2017-04-01\",\r\n          predictValue: 2215.14,\r\n        },\r\n        {\r\n          date: \"2017-05-01\",\r\n          predictValue: 2672.14,\r\n        },\r\n      ],\r\n      duration: [\r\n        {\r\n          season: \"2017Q1\",\r\n          fixedDuration: 145,\r\n        },\r\n        {\r\n          season: \"2017Q2\",\r\n          fixedDuration: 188,\r\n        },\r\n        {\r\n          season: \"2017Q3\",\r\n          fixedDuration: 156,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 得到债券的总览信息\r\n   * @param {string} invreqId 需求id\r\n   * @returns {Promise<BondOverviewData>}\r\n   */\r\n  async getBondOverviewData(invreqId: string): Promise<BondOverviewDatas> {\r\n    return{\r\n      creditOverview: {\r\n        startDate: \"2018-09-10\",\r\n        currentVolume: 4938.00,\r\n        currentRatio: 12.70,\r\n        profit: 1.22,\r\n        duration: 2.53,\r\n        quotationId: \"019037.SH\",\r\n        name: \"10国债37\",\r\n        price: 24.69,\r\n        quantity: 200,\r\n      },\r\n      rateOverview: {\r\n        startDate: \"2018-09-10\",\r\n        currentVolume: 6727.00,\r\n        currentRatio: 17.3,\r\n        profit: 0.91,\r\n        duration: 1.89,\r\n        quotationId: \"122268.SH\",\r\n        name: \"12国航02\",\r\n        price: 67.27,\r\n        quantity: 100,\r\n      },\r\n    };\r\n  }\r\n}\r\n"]}]}