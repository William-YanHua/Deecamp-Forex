{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\chart\\controller\\scale.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\chart\\controller\\scale.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["var Scale = require('@antv/scale/lib');\r\nvar Util = require('../../util');\r\nvar dateRegex = /^(?:(?!0000)[0-9]{4}([-/.]+)(?:(?:0?[1-9]|1[0-2])\\1(?:0?[1-9]|1[0-9]|2[0-8])|(?:0?[13-9]|1[0-2])\\1(?:29|30)|(?:0?[13578]|1[02])\\1(?:31))|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)([-/.]?)0?2\\2(?:29))(\\s+([01]|([01][0-9]|2[0-3])):([0-9]|[0-5][0-9]):([0-9]|[0-5][0-9]))?$/;\r\nvar TYPES = {\r\n    LINEAR: 'linear',\r\n    CAT: 'cat',\r\n    TIME: 'time'\r\n};\r\nvar ScaleController = function () {\r\n    function ScaleController(cfg) {\r\n        this.defs = {};\r\n        this.viewTheme = {\r\n            scales: {}\r\n        };\r\n        Util.assign(this, cfg);\r\n    }\r\n    var _proto = ScaleController.prototype;\r\n    _proto._getDef = function _getDef(field) {\r\n        var defs = this.defs;\r\n        var viewTheme = this.viewTheme;\r\n        var def = null;\r\n        if (viewTheme.scales[field] || defs[field]) {\r\n            def = Util.mix({}, viewTheme.scales[field]);\r\n            Util.each(defs[field], function (v, k) {\r\n                if (Util.isNil(v)) {\r\n                    delete def[k];\r\n                }\r\n                else {\r\n                    def[k] = v;\r\n                }\r\n            });\r\n        }\r\n        return def;\r\n    };\r\n    _proto._getDefaultType = function _getDefaultType(field, data) {\r\n        var type = TYPES.LINEAR;\r\n        var value = Util.Array.firstValue(data, field);\r\n        if (Util.isArray(value)) {\r\n            value = value[0];\r\n        }\r\n        if (dateRegex.test(value)) {\r\n            type = TYPES.TIME;\r\n        }\r\n        else if (Util.isString(value)) {\r\n            type = TYPES.CAT;\r\n        }\r\n        return type;\r\n    };\r\n    _proto._getScaleCfg = function _getScaleCfg(type, field, data) {\r\n        var cfg = {\r\n            field: field\r\n        };\r\n        var values = Util.Array.values(data, field);\r\n        cfg.values = values;\r\n        if (!Scale.isCategory(type) && type !== 'time') {\r\n            var range = Util.Array.getRange(values);\r\n            cfg.min = range.min;\r\n            cfg.max = range.max;\r\n            cfg.nice = true;\r\n        }\r\n        if (type === 'time') {\r\n            cfg.nice = false;\r\n        }\r\n        return cfg;\r\n    };\r\n    _proto.createScale = function createScale(field, data) {\r\n        var self = this;\r\n        var def = self._getDef(field);\r\n        var scale;\r\n        if (!data || !data.length) {\r\n            if (def && def.type) {\r\n                scale = Scale[def.type](def);\r\n            }\r\n            else {\r\n                scale = Scale.identity({\r\n                    value: field,\r\n                    field: field.toString(),\r\n                    values: [field]\r\n                });\r\n            }\r\n            return scale;\r\n        }\r\n        var firstValue = Util.Array.firstValue(data, field);\r\n        if (Util.isNumber(field) || Util.isNil(firstValue) && !def) {\r\n            scale = Scale.identity({\r\n                value: field,\r\n                field: field.toString(),\r\n                values: [field]\r\n            });\r\n        }\r\n        else {\r\n            var type;\r\n            if (def) {\r\n                type = def.type;\r\n            }\r\n            type = type || self._getDefaultType(field, data);\r\n            var cfg = self._getScaleCfg(type, field, data);\r\n            if (def) {\r\n                Util.mix(cfg, def);\r\n            }\r\n            scale = Scale[type](cfg);\r\n        }\r\n        return scale;\r\n    };\r\n    return ScaleController;\r\n}();\r\nmodule.exports = ScaleController;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\chart\\controller\\scale.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\chart\\controller\\scale.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * @fileOverview 度量的控制器\n * @author dxq613@gmail.com\n */\nvar Scale = require('@antv/scale/lib');\n\nvar Util = require('../../util');\n\nvar dateRegex = /^(?:(?!0000)[0-9]{4}([-/.]+)(?:(?:0?[1-9]|1[0-2])\\1(?:0?[1-9]|1[0-9]|2[0-8])|(?:0?[13-9]|1[0-2])\\1(?:29|30)|(?:0?[13578]|1[02])\\1(?:31))|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)([-/.]?)0?2\\2(?:29))(\\s+([01]|([01][0-9]|2[0-3])):([0-9]|[0-5][0-9]):([0-9]|[0-5][0-9]))?$/;\nvar TYPES = {\n  LINEAR: 'linear',\n  CAT: 'cat',\n  TIME: 'time'\n};\n\nvar ScaleController =\n/*#__PURE__*/\nfunction () {\n  function ScaleController(cfg) {\n    // defs 列定义\n    this.defs = {};\n    this.viewTheme = {\n      scales: {}\n    };\n    Util.assign(this, cfg);\n  }\n\n  var _proto = ScaleController.prototype;\n\n  _proto._getDef = function _getDef(field) {\n    var defs = this.defs;\n    var viewTheme = this.viewTheme;\n    var def = null;\n\n    if (viewTheme.scales[field] || defs[field]) {\n      def = Util.mix({}, viewTheme.scales[field]); // 处理覆盖属性的问题\n\n      Util.each(defs[field], function (v, k) {\n        if (Util.isNil(v)) {\n          delete def[k];\n        } else {\n          def[k] = v;\n        }\n      });\n    }\n\n    return def;\n  };\n\n  _proto._getDefaultType = function _getDefaultType(field, data) {\n    var type = TYPES.LINEAR;\n    var value = Util.Array.firstValue(data, field);\n\n    if (Util.isArray(value)) {\n      value = value[0];\n    }\n\n    if (dateRegex.test(value)) {\n      type = TYPES.TIME;\n    } else if (Util.isString(value)) {\n      type = TYPES.CAT;\n    }\n\n    return type;\n  };\n\n  _proto._getScaleCfg = function _getScaleCfg(type, field, data) {\n    var cfg = {\n      field: field\n    };\n    var values = Util.Array.values(data, field);\n    cfg.values = values;\n\n    if (!Scale.isCategory(type) && type !== 'time') {\n      var range = Util.Array.getRange(values);\n      cfg.min = range.min;\n      cfg.max = range.max;\n      cfg.nice = true;\n    }\n\n    if (type === 'time') {\n      cfg.nice = false;\n    }\n\n    return cfg;\n  };\n\n  _proto.createScale = function createScale(field, data) {\n    var self = this;\n\n    var def = self._getDef(field);\n\n    var scale; // 如果数据为空直接返回常量度量\n\n    if (!data || !data.length) {\n      if (def && def.type) {\n        scale = Scale[def.type](def);\n      } else {\n        scale = Scale.identity({\n          value: field,\n          field: field.toString(),\n          values: [field]\n        });\n      }\n\n      return scale;\n    }\n\n    var firstValue = Util.Array.firstValue(data, field);\n\n    if (Util.isNumber(field) || Util.isNil(firstValue) && !def) {\n      scale = Scale.identity({\n        value: field,\n        field: field.toString(),\n        values: [field]\n      });\n    } else {\n      // 如果已经定义过这个度量\n      var type;\n\n      if (def) {\n        type = def.type;\n      }\n\n      type = type || self._getDefaultType(field, data);\n\n      var cfg = self._getScaleCfg(type, field, data);\n\n      if (def) {\n        Util.mix(cfg, def);\n      }\n\n      scale = Scale[type](cfg);\n    }\n\n    return scale;\n  };\n\n  return ScaleController;\n}();\n\nmodule.exports = ScaleController;"]}]}