{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\trough\\index.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\trough\\index.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["'use strict';\r\nvar wrap = require('./wrap.js');\r\nmodule.exports = trough;\r\ntrough.wrap = wrap;\r\nvar slice = [].slice;\r\nfunction trough() {\r\n    var fns = [];\r\n    var middleware = {};\r\n    middleware.run = run;\r\n    middleware.use = use;\r\n    return middleware;\r\n    function run() {\r\n        var index = -1;\r\n        var input = slice.call(arguments, 0, -1);\r\n        var done = arguments[arguments.length - 1];\r\n        if (typeof done !== 'function') {\r\n            throw new Error('Expected function as last argument, not ' + done);\r\n        }\r\n        next.apply(null, [null].concat(input));\r\n        function next(err) {\r\n            var fn = fns[++index];\r\n            var params = slice.call(arguments, 0);\r\n            var values = params.slice(1);\r\n            var length = input.length;\r\n            var pos = -1;\r\n            if (err) {\r\n                done(err);\r\n                return;\r\n            }\r\n            while (++pos < length) {\r\n                if (values[pos] === null || values[pos] === undefined) {\r\n                    values[pos] = input[pos];\r\n                }\r\n            }\r\n            input = values;\r\n            if (fn) {\r\n                wrap(fn, next).apply(null, input);\r\n            }\r\n            else {\r\n                done.apply(null, [null].concat(input));\r\n            }\r\n        }\r\n    }\r\n    function use(fn) {\r\n        if (typeof fn !== 'function') {\r\n            throw new Error('Expected `fn` to be a function, not ' + fn);\r\n        }\r\n        fns.push(fn);\r\n        return middleware;\r\n    }\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\trough\\index.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\trough\\index.js"],"names":[],"mappings":"AAAA,YAAY,CAAA;AAEZ,IAAI,IAAI,GAAG,OAAO,CAAC,WAAW,CAAC,CAAA;AAE/B,MAAM,CAAC,OAAO,GAAG,MAAM,CAAA;AAEvB,MAAM,CAAC,IAAI,GAAG,IAAI,CAAA;AAElB,IAAI,KAAK,GAAG,EAAE,CAAC,KAAK,CAAA;AAGpB,SAAS,MAAM;IACb,IAAI,GAAG,GAAG,EAAE,CAAA;IACZ,IAAI,UAAU,GAAG,EAAE,CAAA;IAEnB,UAAU,CAAC,GAAG,GAAG,GAAG,CAAA;IACpB,UAAU,CAAC,GAAG,GAAG,GAAG,CAAA;IAEpB,OAAO,UAAU,CAAA;IAIjB,SAAS,GAAG;QACV,IAAI,KAAK,GAAG,CAAC,CAAC,CAAA;QACd,IAAI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;QACxC,IAAI,IAAI,GAAG,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;QAE1C,IAAI,OAAO,IAAI,KAAK,UAAU,EAAE;YAC9B,MAAM,IAAI,KAAK,CAAC,0CAA0C,GAAG,IAAI,CAAC,CAAA;SACnE;QAED,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAA;QAGtC,SAAS,IAAI,CAAC,GAAG;YACf,IAAI,EAAE,GAAG,GAAG,CAAC,EAAE,KAAK,CAAC,CAAA;YACrB,IAAI,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAA;YACrC,IAAI,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;YAC5B,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAA;YACzB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAA;YAEZ,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,GAAG,CAAC,CAAA;gBACT,OAAM;aACP;YAGD,OAAO,EAAE,GAAG,GAAG,MAAM,EAAE;gBACrB,IAAI,MAAM,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,MAAM,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE;oBACrD,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAA;iBACzB;aACF;YAED,KAAK,GAAG,MAAM,CAAA;YAGd,IAAI,EAAE,EAAE;gBACN,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAA;aAClC;iBAAM;gBACL,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAA;aACvC;QACH,CAAC;IACH,CAAC;IAGD,SAAS,GAAG,CAAC,EAAE;QACb,IAAI,OAAO,EAAE,KAAK,UAAU,EAAE;YAC5B,MAAM,IAAI,KAAK,CAAC,sCAAsC,GAAG,EAAE,CAAC,CAAA;SAC7D;QAED,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;QAEZ,OAAO,UAAU,CAAA;IACnB,CAAC;AACH,CAAC","sourcesContent":["'use strict'\n\nvar wrap = require('./wrap.js')\n\nmodule.exports = trough\n\ntrough.wrap = wrap\n\nvar slice = [].slice\n\n/* Create new middleware. */\nfunction trough() {\n  var fns = []\n  var middleware = {}\n\n  middleware.run = run\n  middleware.use = use\n\n  return middleware\n\n  /* Run `fns`.  Last argument must be\n   * a completion handler. */\n  function run() {\n    var index = -1\n    var input = slice.call(arguments, 0, -1)\n    var done = arguments[arguments.length - 1]\n\n    if (typeof done !== 'function') {\n      throw new Error('Expected function as last argument, not ' + done)\n    }\n\n    next.apply(null, [null].concat(input))\n\n    /* Run the next `fn`, if any. */\n    function next(err) {\n      var fn = fns[++index]\n      var params = slice.call(arguments, 0)\n      var values = params.slice(1)\n      var length = input.length\n      var pos = -1\n\n      if (err) {\n        done(err)\n        return\n      }\n\n      /* Copy non-nully input into values. */\n      while (++pos < length) {\n        if (values[pos] === null || values[pos] === undefined) {\n          values[pos] = input[pos]\n        }\n      }\n\n      input = values\n\n      /* Next or done. */\n      if (fn) {\n        wrap(fn, next).apply(null, input)\n      } else {\n        done.apply(null, [null].concat(input))\n      }\n    }\n  }\n\n  /* Add `fn` to the list. */\n  function use(fn) {\n    if (typeof fn !== 'function') {\n      throw new Error('Expected `fn` to be a function, not ' + fn)\n    }\n\n    fns.push(fn)\n\n    return middleware\n  }\n}\n"]}]}