{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/topojson-client/src/mesh.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/topojson-client/src/mesh.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { object } from \"./feature\";\nimport stitch from \"./stitch\";\nexport default function (topology) {\n    return object(topology, meshArcs.apply(this, arguments));\n}\nexport function meshArcs(topology, object, filter) {\n    var arcs, i, n;\n    if (arguments.length > 1)\n        arcs = extractArcs(topology, object, filter);\n    else\n        for (i = 0, arcs = new Array(n = topology.arcs.length); i < n; ++i)\n            arcs[i] = i;\n    return { type: \"MultiLineString\", arcs: stitch(topology, arcs) };\n}\nfunction extractArcs(topology, object, filter) {\n    var arcs = [], geomsByArc = [], geom;\n    function extract0(i) {\n        var j = i < 0 ? ~i : i;\n        (geomsByArc[j] || (geomsByArc[j] = [])).push({ i: i, g: geom });\n    }\n    function extract1(arcs) {\n        arcs.forEach(extract0);\n    }\n    function extract2(arcs) {\n        arcs.forEach(extract1);\n    }\n    function extract3(arcs) {\n        arcs.forEach(extract2);\n    }\n    function geometry(o) {\n        switch (geom = o, o.type) {\n            case \"GeometryCollection\":\n                o.geometries.forEach(geometry);\n                break;\n            case \"LineString\":\n                extract1(o.arcs);\n                break;\n            case \"MultiLineString\":\n            case \"Polygon\":\n                extract2(o.arcs);\n                break;\n            case \"MultiPolygon\":\n                extract3(o.arcs);\n                break;\n        }\n    }\n    geometry(object);\n    geomsByArc.forEach(filter == null\n        ? function (geoms) { arcs.push(geoms[0].i); }\n        : function (geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g))\n            arcs.push(geoms[0].i); });\n    return arcs;\n}\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/topojson-client/src/mesh.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/topojson-client/src/mesh.js"],"names":[],"mappings":"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","sourcesContent":["import {object} from \"./feature\";\nimport stitch from \"./stitch\";\n\nexport default function(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\n\nexport function meshArcs(topology, object, filter) {\n  var arcs, i, n;\n  if (arguments.length > 1) arcs = extractArcs(topology, object, filter);\n  else for (i = 0, arcs = new Array(n = topology.arcs.length); i < n; ++i) arcs[i] = i;\n  return {type: \"MultiLineString\", arcs: stitch(topology, arcs)};\n}\n\nfunction extractArcs(topology, object, filter) {\n  var arcs = [],\n      geomsByArc = [],\n      geom;\n\n  function extract0(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function extract1(arcs) {\n    arcs.forEach(extract0);\n  }\n\n  function extract2(arcs) {\n    arcs.forEach(extract1);\n  }\n\n  function extract3(arcs) {\n    arcs.forEach(extract2);\n  }\n\n  function geometry(o) {\n    switch (geom = o, o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"LineString\": extract1(o.arcs); break;\n      case \"MultiLineString\": case \"Polygon\": extract2(o.arcs); break;\n      case \"MultiPolygon\": extract3(o.arcs); break;\n    }\n  }\n\n  geometry(object);\n\n  geomsByArc.forEach(filter == null\n      ? function(geoms) { arcs.push(geoms[0].i); }\n      : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n\n  return arcs;\n}\n"]}]}