{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/d3-geo-projection/src/twoPointAzimuthal.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/d3-geo-projection/src/twoPointAzimuthal.js","mtime":1467686469000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { geoGnomonicRaw as gnomonicRaw } from \"d3-geo\";\nimport { cos } from \"./math\";\nimport twoPoint from \"./twoPoint\";\nexport function twoPointAzimuthalRaw(d) {\n    var cosd = cos(d);\n    function forward(lambda, phi) {\n        var coordinates = gnomonicRaw(lambda, phi);\n        coordinates[0] *= cosd;\n        return coordinates;\n    }\n    forward.invert = function (x, y) {\n        return gnomonicRaw.invert(x / cosd, y);\n    };\n    return forward;\n}\nexport function twoPointAzimuthalUsa() {\n    return twoPointAzimuthal([-158, 21.5], [-77, 39])\n        .clipAngle(60)\n        .scale(400);\n}\nexport default function twoPointAzimuthal(p0, p1) {\n    return twoPoint(twoPointAzimuthalRaw, p0, p1);\n}\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/d3-geo-projection/src/twoPointAzimuthal.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/d3-geo-projection/src/twoPointAzimuthal.js"],"names":[],"mappings":"AAAA,OAAO,EAAC,cAAc,IAAI,WAAW,EAAC,MAAM,QAAQ,CAAC;AACrD,OAAO,EAAC,GAAG,EAAC,MAAM,QAAQ,CAAC;AAC3B,OAAO,QAAQ,MAAM,YAAY,CAAC;AAElC,MAAM,UAAU,oBAAoB,CAAC,CAAC;IACpC,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAElB,SAAS,OAAO,CAAC,MAAM,EAAE,GAAG;QAC1B,IAAI,WAAW,GAAG,WAAW,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAC3C,WAAW,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;QACvB,OAAO,WAAW,CAAC;IACrB,CAAC;IAED,OAAO,CAAC,MAAM,GAAG,UAAS,CAAC,EAAE,CAAC;QAC5B,OAAO,WAAW,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC;IAEF,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,MAAM,UAAU,oBAAoB;IAClC,OAAO,iBAAiB,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;SAC5C,SAAS,CAAC,EAAE,CAAC;SACb,KAAK,CAAC,GAAG,CAAC,CAAC;AAClB,CAAC;AAED,MAAM,CAAC,OAAO,UAAU,iBAAiB,CAAC,EAAE,EAAE,EAAE;IAC9C,OAAO,QAAQ,CAAC,oBAAoB,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AAChD,CAAC","sourcesContent":["import {geoGnomonicRaw as gnomonicRaw} from \"d3-geo\";\nimport {cos} from \"./math\";\nimport twoPoint from \"./twoPoint\";\n\nexport function twoPointAzimuthalRaw(d) {\n  var cosd = cos(d);\n\n  function forward(lambda, phi) {\n    var coordinates = gnomonicRaw(lambda, phi);\n    coordinates[0] *= cosd;\n    return coordinates;\n  }\n\n  forward.invert = function(x, y) {\n    return gnomonicRaw.invert(x / cosd, y);\n  };\n\n  return forward;\n}\n\nexport function twoPointAzimuthalUsa() {\n  return twoPointAzimuthal([-158, 21.5], [-77, 39])\n      .clipAngle(60)\n      .scale(400);\n}\n\nexport default function twoPointAzimuthal(p0, p1) {\n  return twoPoint(twoPointAzimuthalRaw, p0, p1);\n}\n"]}]}