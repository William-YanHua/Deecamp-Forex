{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-geo\\src\\transform.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-geo\\src\\transform.js","mtime":1477599606000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["export default function (methods) {\r\n    return {\r\n        stream: transformer(methods)\r\n    };\r\n}\r\nexport function transformer(methods) {\r\n    return function (stream) {\r\n        var s = new TransformStream;\r\n        for (var key in methods)\r\n            s[key] = methods[key];\r\n        s.stream = stream;\r\n        return s;\r\n    };\r\n}\r\nfunction TransformStream() { }\r\nTransformStream.prototype = {\r\n    constructor: TransformStream,\r\n    point: function (x, y) { this.stream.point(x, y); },\r\n    sphere: function () { this.stream.sphere(); },\r\n    lineStart: function () { this.stream.lineStart(); },\r\n    lineEnd: function () { this.stream.lineEnd(); },\r\n    polygonStart: function () { this.stream.polygonStart(); },\r\n    polygonEnd: function () { this.stream.polygonEnd(); }\r\n};\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-geo\\src\\transform.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-geo\\src\\transform.js"],"names":[],"mappings":"AAAA,MAAM,CAAC,OAAO,WAAU,OAAO;IAC7B,OAAO;QACL,MAAM,EAAE,WAAW,CAAC,OAAO,CAAC;KAC7B,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,WAAW,CAAC,OAAO;IACjC,OAAO,UAAS,MAAM;QACpB,IAAI,CAAC,GAAG,IAAI,eAAe,CAAC;QAC5B,KAAK,IAAI,GAAG,IAAI,OAAO;YAAE,CAAC,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;QAC/C,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC;QAClB,OAAO,CAAC,CAAC;IACX,CAAC,CAAC;AACJ,CAAC;AAED,SAAS,eAAe,KAAI,CAAC;AAE7B,eAAe,CAAC,SAAS,GAAG;IAC1B,WAAW,EAAE,eAAe;IAC5B,KAAK,EAAE,UAAS,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAClD,MAAM,EAAE,cAAa,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAC5C,SAAS,EAAE,cAAa,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IAClD,OAAO,EAAE,cAAa,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IAC9C,YAAY,EAAE,cAAa,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;IACxD,UAAU,EAAE,cAAa,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;CACrD,CAAC","sourcesContent":["export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n"]}]}