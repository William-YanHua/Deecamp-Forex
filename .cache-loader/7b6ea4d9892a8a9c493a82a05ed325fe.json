{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/bar/component/label-auto.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/bar/component/label-auto.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\nimport { every, each, groupBy, findIndex, uniq, map, size } from '@antv/util';\nimport { registerLabelComponent } from '../../../components/label/base';\nimport { ORIGIN, FIELD_ORIGIN } from '../../../dependents';\nimport BarLabel from './label';\nimport { getOverlapArea, moveInPanel, checkShapeOverlap } from '../../../util/view';\nimport BBox from '../../../util/bbox';\nimport { isContrastColorWhite } from '../../../util/color';\nvar BarAutoLabel = (function (_super) {\n    __extends(BarAutoLabel, _super);\n    function BarAutoLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    BarAutoLabel.prototype.getPosition = function (element) {\n        var offset = this.getDefaultOffset();\n        var value = this.getValue(element);\n        var bbox = this.getElementShapeBBox(element);\n        var minX = bbox.minX, maxX = bbox.maxX, minY = bbox.minY, height = bbox.height;\n        var _a = this.options, offsetX = _a.offsetX, offsetY = _a.offsetY;\n        var y = minY + height / 2 + offsetY;\n        var dir = value < 0 ? -1 : 1;\n        var root = value > 0 ? maxX : minX;\n        var x = root + offset * dir + offsetX;\n        return { x: x, y: y };\n    };\n    BarAutoLabel.prototype.getTextAlign = function (element) {\n        var value = this.getValue(element);\n        return value > 0 ? 'left' : 'right';\n    };\n    BarAutoLabel.prototype.getTextFill = function (element) {\n        var style = this.options.style;\n        return style.fill;\n    };\n    BarAutoLabel.prototype.getTextStroke = function (element) {\n        return undefined;\n    };\n    BarAutoLabel.prototype.adjustLabel = function (label, element) {\n    };\n    BarAutoLabel.prototype.layoutLabels = function (geometry, labels) {\n        if (this.shouldInShapeLabels(labels)) {\n            this.inShapeLabels(geometry, labels);\n        }\n        this.autoHideLabels(geometry, labels);\n    };\n    BarAutoLabel.prototype.shouldInShapeLabels = function (labels) {\n        var _this = this;\n        return every(labels, function (label) {\n            var labelBBox = label.getBBox();\n            var element = label.get('element');\n            var bbox = _this.getElementShapeBBox(element);\n            return bbox.height >= labelBBox.height;\n        });\n    };\n    BarAutoLabel.prototype.inShapeLabels = function (geometry, labels) {\n        var _this = this;\n        var coordinateBBox = this.getCoordinateBBox();\n        var xField = geometry.getXYFields()[0];\n        var _a = this.options, darkStyle = _a.darkStyle, lightStyle = _a.lightStyle;\n        var groupedLabels = groupBy(labels, function (label) { return label.get(ORIGIN)[FIELD_ORIGIN][xField]; });\n        each(labels, function (label) {\n            var curGroup = groupedLabels[label.get(ORIGIN)[FIELD_ORIGIN][xField]] || [];\n            var element = label.get('element');\n            var shape = element.shape;\n            var fillWhite = isContrastColorWhite(shape.attr('fill'));\n            var shapeBBox = _this.getElementShapeBBox(element);\n            var labelBBox = BBox.fromBBoxObject(label.getBBox());\n            if (getOverlapArea(coordinateBBox, shapeBBox) <= 0) {\n                label.set('visible', false);\n            }\n            if (labelBBox.width > shapeBBox.width) {\n                var idx = findIndex(curGroup, function (item) { return item === label; });\n                if (idx !== curGroup.length - 1) {\n                    label.set('visible', false);\n                }\n            }\n            else {\n                label.attr({\n                    x: shapeBBox.x + shapeBBox.width / 2,\n                    textAlign: 'center',\n                });\n                var overflow = labelBBox.width > shapeBBox.width || labelBBox.height > shapeBBox.height;\n                if (overflow) {\n                    label.attr({\n                        stroke: lightStyle === null || lightStyle === void 0 ? void 0 : lightStyle.stroke,\n                    });\n                }\n                else {\n                    label.attr({\n                        fill: fillWhite ? lightStyle === null || lightStyle === void 0 ? void 0 : lightStyle.fill : darkStyle === null || darkStyle === void 0 ? void 0 : darkStyle.fill,\n                        fillOpacity: fillWhite ? lightStyle === null || lightStyle === void 0 ? void 0 : lightStyle.fillOpacity : darkStyle === null || darkStyle === void 0 ? void 0 : darkStyle.fillOpacity,\n                        stroke: undefined,\n                    });\n                }\n            }\n        });\n    };\n    BarAutoLabel.prototype.autoHideLabels = function (geometry, labels) {\n        var coordinateBBox = this.getCoordinateBBox();\n        var filteredLabels = this.filterLabels(labels);\n        var xField = geometry.getXYFields()[0];\n        var dones = [];\n        var todo = [];\n        var groupedLabels = groupBy(filteredLabels, function (label) { return label.get(ORIGIN)[FIELD_ORIGIN][xField]; });\n        var xValues = uniq(map(filteredLabels, function (label) { return label.get(ORIGIN)[FIELD_ORIGIN][xField]; }));\n        var xValue;\n        if (size(xValues) > 0) {\n            xValue = xValues.shift();\n            each(groupedLabels[xValue], function (label) { return todo.push(label); });\n        }\n        if (size(xValues) > 0) {\n            xValue = xValues.pop();\n            each(groupedLabels[xValue], function (label) { return todo.push(label); });\n        }\n        each(xValues.reverse(), function (val) {\n            each(groupedLabels[val], function (label) { return todo.push(label); });\n        });\n        while (todo.length > 0) {\n            var cur = todo.shift();\n            if (cur.get('visible')) {\n                moveInPanel(cur, coordinateBBox);\n                if (checkShapeOverlap(cur, dones)) {\n                    cur.set('visible', false);\n                }\n                else {\n                    dones.push(cur);\n                }\n            }\n        }\n    };\n    BarAutoLabel.prototype.filterLabels = function (labels) {\n        var MAX_CNT = 500;\n        var filteredLabels = [];\n        var pages = Math.max(Math.floor(labels.length / MAX_CNT), 1);\n        each(labels, function (label, idx) {\n            if (idx % pages === 0) {\n                filteredLabels.push(label);\n            }\n            else {\n                label.set('visible', false);\n            }\n        });\n        return filteredLabels;\n    };\n    return BarAutoLabel;\n}(BarLabel));\nexport default BarAutoLabel;\nregisterLabelComponent('bar-auto', BarAutoLabel);\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/bar/component/label-auto.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/bar/component/label-auto.js"],"names":[],"mappings":"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","sourcesContent":["import { __extends } from \"tslib\";\nimport { every, each, groupBy, findIndex, uniq, map, size } from '@antv/util';\nimport { registerLabelComponent } from '../../../components/label/base';\nimport { ORIGIN, FIELD_ORIGIN } from '../../../dependents';\nimport BarLabel from './label';\nimport { getOverlapArea, moveInPanel, checkShapeOverlap } from '../../../util/view';\nimport BBox from '../../../util/bbox';\nimport { isContrastColorWhite } from '../../../util/color';\n/** 自动模式的 Column 数据标签，会根据图形和数据标签自动优化数据标签布局和样式等 */\nvar BarAutoLabel = /** @class */ (function (_super) {\n    __extends(BarAutoLabel, _super);\n    function BarAutoLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    BarAutoLabel.prototype.getPosition = function (element) {\n        var offset = this.getDefaultOffset();\n        var value = this.getValue(element);\n        var bbox = this.getElementShapeBBox(element);\n        var minX = bbox.minX, maxX = bbox.maxX, minY = bbox.minY, height = bbox.height;\n        var _a = this.options, offsetX = _a.offsetX, offsetY = _a.offsetY;\n        var y = minY + height / 2 + offsetY;\n        var dir = value < 0 ? -1 : 1;\n        var root = value > 0 ? maxX : minX;\n        var x = root + offset * dir + offsetX;\n        // 统一先设置为 right\n        return { x: x, y: y };\n    };\n    BarAutoLabel.prototype.getTextAlign = function (element) {\n        var value = this.getValue(element);\n        return value > 0 ? 'left' : 'right';\n    };\n    /** 默认的 fill 取自用户配置或主题配置 */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    BarAutoLabel.prototype.getTextFill = function (element) {\n        var style = this.options.style;\n        return style.fill;\n    };\n    /** 默认不描边 */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    BarAutoLabel.prototype.getTextStroke = function (element) {\n        return undefined;\n    };\n    /** 默认无处理：在 layout 阶段处理 */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    BarAutoLabel.prototype.adjustLabel = function (label, element) {\n        // empty\n    };\n    /** 自动布局所有的数据标签 */\n    BarAutoLabel.prototype.layoutLabels = function (geometry, labels) {\n        if (this.shouldInShapeLabels(labels)) {\n            this.inShapeLabels(geometry, labels);\n        }\n        this.autoHideLabels(geometry, labels);\n    };\n    /** 判断是否可以把数据标签放置在柱子内部 */\n    BarAutoLabel.prototype.shouldInShapeLabels = function (labels) {\n        var _this = this;\n        return every(labels, function (label) {\n            var labelBBox = label.getBBox();\n            var element = label.get('element');\n            var bbox = _this.getElementShapeBBox(element);\n            return bbox.height >= labelBBox.height;\n        });\n    };\n    /** 内置数据标签，并自动设置颜色描边等属性 */\n    BarAutoLabel.prototype.inShapeLabels = function (geometry, labels) {\n        var _this = this;\n        var coordinateBBox = this.getCoordinateBBox();\n        var xField = geometry.getXYFields()[0];\n        var _a = this.options, darkStyle = _a.darkStyle, lightStyle = _a.lightStyle;\n        var groupedLabels = groupBy(labels, function (label) { return label.get(ORIGIN)[FIELD_ORIGIN][xField]; });\n        each(labels, function (label) {\n            var curGroup = groupedLabels[label.get(ORIGIN)[FIELD_ORIGIN][xField]] || [];\n            var element = label.get('element');\n            var shape = element.shape;\n            var fillWhite = isContrastColorWhite(shape.attr('fill'));\n            var shapeBBox = _this.getElementShapeBBox(element);\n            var labelBBox = BBox.fromBBoxObject(label.getBBox());\n            // 如果 Column 本身就不可见，直接隐藏对应的 label\n            if (getOverlapArea(coordinateBBox, shapeBBox) <= 0) {\n                label.set('visible', false);\n            }\n            if (labelBBox.width > shapeBBox.width) {\n                // 处理放不下的情况\n                var idx = findIndex(curGroup, function (item) { return item === label; });\n                if (idx !== curGroup.length - 1) {\n                    label.set('visible', false);\n                }\n            }\n            else {\n                // 数据标签展示在图形中央\n                label.attr({\n                    x: shapeBBox.x + shapeBBox.width / 2,\n                    textAlign: 'center',\n                });\n                var overflow = labelBBox.width > shapeBBox.width || labelBBox.height > shapeBBox.height;\n                if (overflow) {\n                    // 出现了溢出情况，添加描边\n                    label.attr({\n                        stroke: lightStyle === null || lightStyle === void 0 ? void 0 : lightStyle.stroke,\n                    });\n                }\n                else {\n                    // 放置在柱形内部，颜色取反\n                    label.attr({\n                        fill: fillWhite ? lightStyle === null || lightStyle === void 0 ? void 0 : lightStyle.fill : darkStyle === null || darkStyle === void 0 ? void 0 : darkStyle.fill,\n                        fillOpacity: fillWhite ? lightStyle === null || lightStyle === void 0 ? void 0 : lightStyle.fillOpacity : darkStyle === null || darkStyle === void 0 ? void 0 : darkStyle.fillOpacity,\n                        stroke: undefined,\n                    });\n                }\n            }\n        });\n    };\n    /** 数据标签防重叠抽样 */\n    BarAutoLabel.prototype.autoHideLabels = function (geometry, labels) {\n        var coordinateBBox = this.getCoordinateBBox();\n        var filteredLabels = this.filterLabels(labels);\n        var xField = geometry.getXYFields()[0];\n        var dones = [];\n        var todo = [];\n        var groupedLabels = groupBy(filteredLabels, function (label) { return label.get(ORIGIN)[FIELD_ORIGIN][xField]; });\n        var xValues = uniq(map(filteredLabels, function (label) { return label.get(ORIGIN)[FIELD_ORIGIN][xField]; }));\n        var xValue;\n        if (size(xValues) > 0) {\n            // 第一组\n            xValue = xValues.shift();\n            each(groupedLabels[xValue], function (label) { return todo.push(label); });\n        }\n        if (size(xValues) > 0) {\n            // 最后一组\n            xValue = xValues.pop();\n            each(groupedLabels[xValue], function (label) { return todo.push(label); });\n        }\n        each(xValues.reverse(), function (val) {\n            // 其他组\n            each(groupedLabels[val], function (label) { return todo.push(label); });\n        });\n        while (todo.length > 0) {\n            var cur = todo.shift();\n            if (cur.get('visible')) {\n                moveInPanel(cur, coordinateBBox);\n                if (checkShapeOverlap(cur, dones)) {\n                    cur.set('visible', false);\n                }\n                else {\n                    dones.push(cur);\n                }\n            }\n        }\n    };\n    /** 抽样数据标签，设置最大数量的数据标签，其他的统一隐藏 */\n    BarAutoLabel.prototype.filterLabels = function (labels) {\n        var MAX_CNT = 500; // 最多显示 500 个数据标签\n        var filteredLabels = [];\n        var pages = Math.max(Math.floor(labels.length / MAX_CNT), 1);\n        each(labels, function (label, idx) {\n            if (idx % pages === 0) {\n                filteredLabels.push(label);\n            }\n            else {\n                label.set('visible', false);\n            }\n        });\n        return filteredLabels;\n    };\n    return BarAutoLabel;\n}(BarLabel));\nexport default BarAutoLabel;\nregisterLabelComponent('bar-auto', BarAutoLabel);\n//# sourceMappingURL=label-auto.js.map"]}]}