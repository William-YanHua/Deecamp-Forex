{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\interaction\\action\\element\\highlight-by-color.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\interaction\\action\\element\\highlight-by-color.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\r\nimport { getElements, getElementValue } from '../util';\r\nimport Highlight from './highlight';\r\nvar HighlightColor = (function (_super) {\r\n    __extends(HighlightColor, _super);\r\n    function HighlightColor() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    HighlightColor.prototype.setStateByElement = function (element, enable) {\r\n        var view = this.context.view;\r\n        var colorAttr = element.geometry.getAttribute('color');\r\n        if (!colorAttr) {\r\n            return;\r\n        }\r\n        var scale = view.getScaleByField(colorAttr.getFields()[0]);\r\n        var value = getElementValue(element, scale.field);\r\n        var elements = getElements(view);\r\n        var highlightElements = elements.filter(function (el) {\r\n            return getElementValue(el, scale.field) === value;\r\n        });\r\n        this.setHighlightBy(elements, function (el) { return highlightElements.includes(el); }, enable);\r\n    };\r\n    return HighlightColor;\r\n}(Highlight));\r\nexport default HighlightColor;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\interaction\\action\\element\\highlight-by-color.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\interaction\\action\\element\\highlight-by-color.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAClC,OAAO,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,SAAS,CAAC;AACvD,OAAO,SAAS,MAAM,aAAa,CAAC;AAKpC,IAAI,cAAc,GAAiB,CAAC,UAAU,MAAM;IAChD,SAAS,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;IAClC,SAAS,cAAc;QACnB,OAAO,MAAM,KAAK,IAAI,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,IAAI,CAAC;IACpE,CAAC;IACD,cAAc,CAAC,SAAS,CAAC,iBAAiB,GAAG,UAAU,OAAO,EAAE,MAAM;QAClE,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QAC7B,IAAI,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QACvD,IAAI,CAAC,SAAS,EAAE;YACZ,OAAO;SACV;QACD,IAAI,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3D,IAAI,KAAK,GAAG,eAAe,CAAC,OAAO,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;QAClD,IAAI,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;QACjC,IAAI,iBAAiB,GAAG,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE;YAChD,OAAO,eAAe,CAAC,EAAE,EAAE,KAAK,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC;QACtD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,UAAU,EAAE,IAAI,OAAO,iBAAiB,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;IACpG,CAAC,CAAC;IACF,OAAO,cAAc,CAAC;AAC1B,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;AACd,eAAe,cAAc,CAAC","sourcesContent":["import { __extends } from \"tslib\";\nimport { getElements, getElementValue } from '../util';\nimport Highlight from './highlight';\n/**\n * Highlight color\n * @ignore\n */\nvar HighlightColor = /** @class */ (function (_super) {\n    __extends(HighlightColor, _super);\n    function HighlightColor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    HighlightColor.prototype.setStateByElement = function (element, enable) {\n        var view = this.context.view;\n        var colorAttr = element.geometry.getAttribute('color');\n        if (!colorAttr) {\n            return;\n        }\n        var scale = view.getScaleByField(colorAttr.getFields()[0]);\n        var value = getElementValue(element, scale.field);\n        var elements = getElements(view);\n        var highlightElements = elements.filter(function (el) {\n            return getElementValue(el, scale.field) === value;\n        });\n        this.setHighlightBy(elements, function (el) { return highlightElements.includes(el); }, enable);\n    };\n    return HighlightColor;\n}(Highlight));\nexport default HighlightColor;\n//# sourceMappingURL=highlight-by-color.js.map"]}]}