{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\util\\facet.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\util\\facet.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { DIRECTION } from '../constant';\r\nexport function getFactTitleConfig(direction) {\r\n    if ([DIRECTION.TOP, DIRECTION.BOTTOM].includes(direction)) {\r\n        return {\r\n            offsetX: 0,\r\n            offsetY: direction === DIRECTION.TOP ? -8 : 8,\r\n            style: {\r\n                textAlign: 'center',\r\n                textBaseline: direction === DIRECTION.TOP ? 'bottom' : 'top',\r\n            },\r\n        };\r\n    }\r\n    if ([DIRECTION.LEFT, DIRECTION.RIGHT].includes(direction)) {\r\n        return {\r\n            offsetX: direction === DIRECTION.LEFT ? -8 : 8,\r\n            offsetY: 0,\r\n            style: {\r\n                textAlign: direction === DIRECTION.LEFT ? 'right' : 'left',\r\n                textBaseline: 'middle',\r\n                rotate: Math.PI / 2,\r\n            },\r\n        };\r\n    }\r\n    return {};\r\n}\r\nexport function getAnglePoint(center, r, angle) {\r\n    return {\r\n        x: center.x + r * Math.cos(angle),\r\n        y: center.y + r * Math.sin(angle),\r\n    };\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\util\\facet.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\util\\facet.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AAKxC,MAAM,UAAU,kBAAkB,CAAC,SAAS;IACxC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;QACvD,OAAO;YACH,OAAO,EAAE,CAAC;YACV,OAAO,EAAE,SAAS,KAAK,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7C,KAAK,EAAE;gBACH,SAAS,EAAE,QAAQ;gBACnB,YAAY,EAAE,SAAS,KAAK,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK;aAC/D;SACJ,CAAC;KACL;IACD,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;QACvD,OAAO;YACH,OAAO,EAAE,SAAS,KAAK,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9C,OAAO,EAAE,CAAC;YACV,KAAK,EAAE;gBACH,SAAS,EAAE,SAAS,KAAK,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM;gBAC1D,YAAY,EAAE,QAAQ;gBACtB,MAAM,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC;aACtB;SACJ,CAAC;KACL;IACD,OAAO,EAAE,CAAC;AACd,CAAC;AAQD,MAAM,UAAU,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,KAAK;IAC1C,OAAO;QACH,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;QACjC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;KACpC,CAAC;AACN,CAAC","sourcesContent":["import { DIRECTION } from '../constant';\n/**\n * @ignore\n * 获取 facet title 的最佳默认配置，防止\n */\nexport function getFactTitleConfig(direction) {\n    if ([DIRECTION.TOP, DIRECTION.BOTTOM].includes(direction)) {\n        return {\n            offsetX: 0,\n            offsetY: direction === DIRECTION.TOP ? -8 : 8,\n            style: {\n                textAlign: 'center',\n                textBaseline: direction === DIRECTION.TOP ? 'bottom' : 'top',\n            },\n        };\n    }\n    if ([DIRECTION.LEFT, DIRECTION.RIGHT].includes(direction)) {\n        return {\n            offsetX: direction === DIRECTION.LEFT ? -8 : 8,\n            offsetY: 0,\n            style: {\n                textAlign: direction === DIRECTION.LEFT ? 'right' : 'left',\n                textBaseline: 'middle',\n                rotate: Math.PI / 2,\n            },\n        };\n    }\n    return {};\n}\n/**\n * @ignore\n * 根据角度，获取 ○ 上的点\n * @param center\n * @param r\n * @param angle\n */\nexport function getAnglePoint(center, r, angle) {\n    return {\n        x: center.x + r * Math.cos(angle),\n        y: center.y + r * Math.sin(angle),\n    };\n}\n//# sourceMappingURL=facet.js.map"]}]}