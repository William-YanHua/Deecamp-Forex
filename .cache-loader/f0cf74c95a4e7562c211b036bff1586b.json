{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\component\\labels.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\component\\labels.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __assign } from \"tslib\";\r\nimport { deepMix, each, get, isArray } from '@antv/util';\r\nimport { doAnimate } from '../animate';\r\nimport { getGeometryLabelLayout } from '../geometry/label';\r\nimport { getReplaceAttrs } from '../util/graphics';\r\nimport { rotate, translate } from '../util/transform';\r\nvar Labels = (function () {\r\n    function Labels(cfg) {\r\n        this.shapesMap = {};\r\n        this.lastShapesMap = {};\r\n        var layout = cfg.layout, container = cfg.container;\r\n        this.layout = layout;\r\n        this.container = container;\r\n    }\r\n    Labels.prototype.render = function (items, shapes, isUpdate) {\r\n        var _this = this;\r\n        if (isUpdate === void 0) {\r\n            isUpdate = false;\r\n        }\r\n        this.shapesMap = {};\r\n        var container = this.container;\r\n        var offscreenGroup = this.createOffscreenGroup();\r\n        if (items.length) {\r\n            for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\r\n                var item = items_1[_i];\r\n                if (item) {\r\n                    this.renderLabel(item, offscreenGroup);\r\n                }\r\n            }\r\n            this.doLayout(items, shapes);\r\n            this.renderLabelLine(items);\r\n            this.adjustLabel(items);\r\n        }\r\n        var lastShapesMap = this.lastShapesMap;\r\n        var shapesMap = this.shapesMap;\r\n        each(shapesMap, function (shape, id) {\r\n            if (shape.destroyed) {\r\n                delete shapesMap[id];\r\n            }\r\n            else {\r\n                if (lastShapesMap[id]) {\r\n                    var data_1 = shape.get('data');\r\n                    var origin_1 = shape.get('origin');\r\n                    var coordinate_1 = shape.get('coordinate');\r\n                    var currentShape = lastShapesMap[id];\r\n                    var currentAnimateCfg_1 = shape.get('animateCfg');\r\n                    currentShape.set('data', data_1);\r\n                    currentShape.set('origin', origin_1);\r\n                    currentShape.set('animateCfg', currentAnimateCfg_1);\r\n                    currentShape.set('coordinate', coordinate_1);\r\n                    var updateAnimateCfg_1 = get(currentAnimateCfg_1, 'update');\r\n                    var currentChildren_1 = currentShape.getChildren();\r\n                    shape.getChildren().map(function (child, index) {\r\n                        var currentChild = currentChildren_1[index];\r\n                        currentChild.set('data', data_1);\r\n                        currentChild.set('origin', origin_1);\r\n                        currentChild.set('animateCfg', currentAnimateCfg_1);\r\n                        currentChild.set('coordinate', coordinate_1);\r\n                        var newAttrs = getReplaceAttrs(currentChild, child);\r\n                        if (updateAnimateCfg_1) {\r\n                            doAnimate(currentChild, updateAnimateCfg_1, {\r\n                                toAttrs: newAttrs,\r\n                                coordinate: coordinate_1,\r\n                            });\r\n                        }\r\n                        else {\r\n                            currentChild.attr(newAttrs);\r\n                        }\r\n                    });\r\n                    _this.shapesMap[id] = currentShape;\r\n                }\r\n                else {\r\n                    container.add(shape);\r\n                    var animateCfg = get(shape.get('animateCfg'), isUpdate ? 'enter' : 'appear');\r\n                    if (animateCfg) {\r\n                        doAnimate(shape, animateCfg, {\r\n                            toAttrs: __assign({}, shape.attr()),\r\n                            coordinate: shape.get('coordinate'),\r\n                        });\r\n                    }\r\n                }\r\n                delete lastShapesMap[id];\r\n            }\r\n        });\r\n        each(lastShapesMap, function (deleteShape) {\r\n            var animateCfg = get(deleteShape.get('animateCfg'), 'leave');\r\n            if (animateCfg) {\r\n                doAnimate(deleteShape, animateCfg, {\r\n                    toAttrs: null,\r\n                    coordinate: deleteShape.get('coordinate'),\r\n                });\r\n            }\r\n            else {\r\n                deleteShape.remove(true);\r\n            }\r\n        });\r\n        this.lastShapesMap = shapesMap;\r\n        offscreenGroup.destroy();\r\n    };\r\n    Labels.prototype.clear = function () {\r\n        this.container.clear();\r\n        this.shapesMap = {};\r\n        this.lastShapesMap = {};\r\n    };\r\n    Labels.prototype.destroy = function () {\r\n        this.container.destroy();\r\n        this.shapesMap = null;\r\n        this.lastShapesMap = null;\r\n    };\r\n    Labels.prototype.renderLabel = function (cfg, container) {\r\n        var id = cfg.id, data = cfg.data, mappingData = cfg.mappingData, coordinate = cfg.coordinate, animate = cfg.animate, content = cfg.content;\r\n        var shapeAppendCfg = {\r\n            id: id,\r\n            data: data,\r\n            origin: mappingData,\r\n            coordinate: coordinate,\r\n        };\r\n        var labelGroup = container.addGroup(__assign({ name: 'label',\r\n            animateCfg: this.animate === false || animate === null || animate === false ? false : deepMix({}, this.animate, animate) }, shapeAppendCfg));\r\n        var labelShape;\r\n        if ((content.isGroup && content.isGroup()) || (content.isShape && content.isShape())) {\r\n            var _a = content.getCanvasBBox(), width = _a.width, height = _a.height;\r\n            var textAlign = get(cfg, 'textAlign', 'left');\r\n            var x = cfg.x;\r\n            var y = cfg.y - height / 2;\r\n            if (textAlign === 'center') {\r\n                x = x - width / 2;\r\n            }\r\n            else if (textAlign === 'right' || textAlign === 'end') {\r\n                x = x - width;\r\n            }\r\n            translate(content, x, y);\r\n            labelShape = content;\r\n            labelGroup.add(content);\r\n        }\r\n        else {\r\n            labelShape = labelGroup.addShape('text', __assign({ attrs: __assign({ x: cfg.x, y: cfg.y, textAlign: cfg.textAlign, textBaseline: get(cfg, 'textBaseline', 'middle'), text: cfg.content }, cfg.style) }, shapeAppendCfg));\r\n        }\r\n        if (cfg.rotate) {\r\n            rotate(labelShape, cfg.rotate);\r\n        }\r\n        this.shapesMap[id] = labelGroup;\r\n    };\r\n    Labels.prototype.doLayout = function (items, shapes) {\r\n        var _this = this;\r\n        if (this.layout) {\r\n            var layouts = isArray(this.layout) ? this.layout : [this.layout];\r\n            each(layouts, function (layout) {\r\n                var layoutFn = getGeometryLabelLayout(get(layout, 'type', ''));\r\n                if (layoutFn) {\r\n                    var labelShapes_1 = [];\r\n                    var geometryShapes_1 = [];\r\n                    each(_this.shapesMap, function (labelShape, id) {\r\n                        labelShapes_1.push(labelShape);\r\n                        geometryShapes_1.push(shapes[id]);\r\n                    });\r\n                    layoutFn(items, labelShapes_1, geometryShapes_1, _this.region, layout.cfg);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Labels.prototype.renderLabelLine = function (labelItems) {\r\n        var _this = this;\r\n        each(labelItems, function (labelItem) {\r\n            if (!labelItem) {\r\n                return;\r\n            }\r\n            if (!labelItem.labelLine) {\r\n                return;\r\n            }\r\n            var labelLineCfg = get(labelItem, 'labelLine', {});\r\n            var id = labelItem.id;\r\n            var path = labelLineCfg.path;\r\n            if (!path) {\r\n                var start = labelItem.start;\r\n                path = [\r\n                    ['M', start.x, start.y],\r\n                    ['L', labelItem.x, labelItem.y],\r\n                ];\r\n            }\r\n            var labelGroup = _this.shapesMap[id];\r\n            if (!labelGroup.destroyed) {\r\n                labelGroup.addShape('path', {\r\n                    capture: false,\r\n                    attrs: __assign({ path: path, stroke: labelItem.color ? labelItem.color : get(labelItem, ['style', 'fill'], '#000'), fill: null }, labelLineCfg.style),\r\n                    id: id,\r\n                    origin: labelItem.mappingData,\r\n                    data: labelItem.data,\r\n                    coordinate: labelItem.coordinate,\r\n                });\r\n            }\r\n        });\r\n    };\r\n    Labels.prototype.createOffscreenGroup = function () {\r\n        var container = this.container;\r\n        var GroupClass = container.getGroupBase();\r\n        var newGroup = new GroupClass({});\r\n        return newGroup;\r\n    };\r\n    Labels.prototype.adjustLabel = function (items) {\r\n        var _this = this;\r\n        each(items, function (item) {\r\n            if (item) {\r\n                var id = item.id;\r\n                var labelGroup = _this.shapesMap[id];\r\n                if (!labelGroup.destroyed) {\r\n                    var labelShape = labelGroup.find(function (ele) { return ele.get('type') === 'text'; });\r\n                    if (labelShape) {\r\n                        if (item.offsetX) {\r\n                            labelShape.attr('x', labelShape.attr('x') + item.offsetX);\r\n                        }\r\n                        if (item.offsetY) {\r\n                            labelShape.attr('y', labelShape.attr('y') + item.offsetY);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n    return Labels;\r\n}());\r\nexport default Labels;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\component\\labels.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\component\\labels.js"],"names":[],"mappings":"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","sourcesContent":["import { __assign } from \"tslib\";\nimport { deepMix, each, get, isArray } from '@antv/util';\nimport { doAnimate } from '../animate';\nimport { getGeometryLabelLayout } from '../geometry/label';\nimport { getReplaceAttrs } from '../util/graphics';\nimport { rotate, translate } from '../util/transform';\n/**\n * Geometry labels 渲染组件\n */\nvar Labels = /** @class */ (function () {\n    function Labels(cfg) {\n        /** 存储当前 shape 的映射表，键值为 shape id */\n        this.shapesMap = {};\n        this.lastShapesMap = {};\n        var layout = cfg.layout, container = cfg.container;\n        this.layout = layout;\n        this.container = container;\n    }\n    /**\n     * 渲染文本\n     */\n    Labels.prototype.render = function (items, shapes, isUpdate) {\n        var _this = this;\n        if (isUpdate === void 0) { isUpdate = false; }\n        this.shapesMap = {};\n        var container = this.container;\n        var offscreenGroup = this.createOffscreenGroup(); // 创建虚拟分组\n        if (items.length) {\n            // 如果 items 空的话就不进行绘制调整操作\n            // step 1: 在虚拟 group 中创建 shapes\n            for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n                var item = items_1[_i];\n                if (item) {\n                    this.renderLabel(item, offscreenGroup);\n                }\n            }\n            // step 2: 根据布局，调整 labels\n            this.doLayout(items, shapes);\n            // step 3: 绘制 labelLine\n            this.renderLabelLine(items);\n            // step 4: 根据用户设置的偏移量调整 label\n            this.adjustLabel(items);\n        }\n        // 进行添加、更新、销毁操作\n        var lastShapesMap = this.lastShapesMap;\n        var shapesMap = this.shapesMap;\n        each(shapesMap, function (shape, id) {\n            if (shape.destroyed) {\n                // label 在布局调整环节被删除了（doLayout）\n                delete shapesMap[id];\n            }\n            else {\n                if (lastShapesMap[id]) {\n                    // 图形发生更新\n                    var data_1 = shape.get('data');\n                    var origin_1 = shape.get('origin');\n                    var coordinate_1 = shape.get('coordinate');\n                    var currentShape = lastShapesMap[id]; // 已经在渲染树上的 shape\n                    var currentAnimateCfg_1 = shape.get('animateCfg');\n                    currentShape.set('data', data_1);\n                    currentShape.set('origin', origin_1);\n                    currentShape.set('animateCfg', currentAnimateCfg_1);\n                    currentShape.set('coordinate', coordinate_1);\n                    var updateAnimateCfg_1 = get(currentAnimateCfg_1, 'update');\n                    var currentChildren_1 = currentShape.getChildren();\n                    shape.getChildren().map(function (child, index) {\n                        var currentChild = currentChildren_1[index];\n                        currentChild.set('data', data_1);\n                        currentChild.set('origin', origin_1);\n                        currentChild.set('animateCfg', currentAnimateCfg_1);\n                        currentChild.set('coordinate', coordinate_1);\n                        var newAttrs = getReplaceAttrs(currentChild, child);\n                        if (updateAnimateCfg_1) {\n                            doAnimate(currentChild, updateAnimateCfg_1, {\n                                toAttrs: newAttrs,\n                                coordinate: coordinate_1,\n                            });\n                        }\n                        else {\n                            currentChild.attr(newAttrs);\n                        }\n                    });\n                    _this.shapesMap[id] = currentShape; // 保存引用\n                }\n                else {\n                    // 新生成的 shape\n                    container.add(shape);\n                    var animateCfg = get(shape.get('animateCfg'), isUpdate ? 'enter' : 'appear');\n                    if (animateCfg) {\n                        doAnimate(shape, animateCfg, {\n                            toAttrs: __assign({}, shape.attr()),\n                            coordinate: shape.get('coordinate'),\n                        });\n                    }\n                }\n                delete lastShapesMap[id];\n            }\n        });\n        // 移除\n        each(lastShapesMap, function (deleteShape) {\n            var animateCfg = get(deleteShape.get('animateCfg'), 'leave');\n            if (animateCfg) {\n                doAnimate(deleteShape, animateCfg, {\n                    toAttrs: null,\n                    coordinate: deleteShape.get('coordinate'),\n                });\n            }\n            else {\n                deleteShape.remove(true); // 移除\n            }\n        });\n        this.lastShapesMap = shapesMap;\n        offscreenGroup.destroy();\n    };\n    /** 清楚当前 labels */\n    Labels.prototype.clear = function () {\n        this.container.clear();\n        this.shapesMap = {};\n        this.lastShapesMap = {};\n    };\n    /** 销毁 */\n    Labels.prototype.destroy = function () {\n        this.container.destroy();\n        this.shapesMap = null;\n        this.lastShapesMap = null;\n    };\n    Labels.prototype.renderLabel = function (cfg, container) {\n        var id = cfg.id, data = cfg.data, mappingData = cfg.mappingData, coordinate = cfg.coordinate, animate = cfg.animate, content = cfg.content;\n        var shapeAppendCfg = {\n            id: id,\n            data: data,\n            origin: mappingData,\n            coordinate: coordinate,\n        };\n        var labelGroup = container.addGroup(__assign({ name: 'label', \n            // 如果 this.animate === false 或者 cfg.animate === false/null 则不进行动画，否则进行动画配置的合并\n            animateCfg: this.animate === false || animate === null || animate === false ? false : deepMix({}, this.animate, animate) }, shapeAppendCfg));\n        var labelShape;\n        if ((content.isGroup && content.isGroup()) || (content.isShape && content.isShape())) {\n            // 如果 content 是 Group 或者 Shape，根据 textAlign 调整位置后，直接将其加入 labelGroup\n            var _a = content.getCanvasBBox(), width = _a.width, height = _a.height;\n            var textAlign = get(cfg, 'textAlign', 'left');\n            var x = cfg.x;\n            var y = cfg.y - height / 2;\n            if (textAlign === 'center') {\n                x = x - width / 2;\n            }\n            else if (textAlign === 'right' || textAlign === 'end') {\n                x = x - width;\n            }\n            translate(content, x, y); // 将 label 平移至 x, y 指定的位置\n            labelShape = content;\n            labelGroup.add(content);\n        }\n        else {\n            labelShape = labelGroup.addShape('text', __assign({ attrs: __assign({ x: cfg.x, y: cfg.y, textAlign: cfg.textAlign, textBaseline: get(cfg, 'textBaseline', 'middle'), text: cfg.content }, cfg.style) }, shapeAppendCfg));\n        }\n        if (cfg.rotate) {\n            rotate(labelShape, cfg.rotate);\n        }\n        this.shapesMap[id] = labelGroup;\n    };\n    // 根据type对label布局\n    Labels.prototype.doLayout = function (items, shapes) {\n        var _this = this;\n        if (this.layout) {\n            var layouts = isArray(this.layout) ? this.layout : [this.layout];\n            each(layouts, function (layout) {\n                var layoutFn = getGeometryLabelLayout(get(layout, 'type', ''));\n                if (layoutFn) {\n                    var labelShapes_1 = [];\n                    var geometryShapes_1 = [];\n                    each(_this.shapesMap, function (labelShape, id) {\n                        labelShapes_1.push(labelShape);\n                        geometryShapes_1.push(shapes[id]);\n                    });\n                    layoutFn(items, labelShapes_1, geometryShapes_1, _this.region, layout.cfg);\n                }\n            });\n        }\n    };\n    Labels.prototype.renderLabelLine = function (labelItems) {\n        var _this = this;\n        each(labelItems, function (labelItem) {\n            if (!labelItem) {\n                return;\n            }\n            if (!labelItem.labelLine) {\n                // labelLine: null | false，关闭 label 对应的 labelLine\n                return;\n            }\n            var labelLineCfg = get(labelItem, 'labelLine', {});\n            var id = labelItem.id;\n            var path = labelLineCfg.path;\n            if (!path) {\n                var start = labelItem.start;\n                path = [\n                    ['M', start.x, start.y],\n                    ['L', labelItem.x, labelItem.y],\n                ];\n            }\n            var labelGroup = _this.shapesMap[id];\n            if (!labelGroup.destroyed) {\n                labelGroup.addShape('path', {\n                    capture: false,\n                    attrs: __assign({ path: path, stroke: labelItem.color ? labelItem.color : get(labelItem, ['style', 'fill'], '#000'), fill: null }, labelLineCfg.style),\n                    id: id,\n                    origin: labelItem.mappingData,\n                    data: labelItem.data,\n                    coordinate: labelItem.coordinate,\n                });\n            }\n        });\n    };\n    Labels.prototype.createOffscreenGroup = function () {\n        var container = this.container;\n        var GroupClass = container.getGroupBase(); // 获取分组的构造函数\n        var newGroup = new GroupClass({});\n        return newGroup;\n    };\n    Labels.prototype.adjustLabel = function (items) {\n        var _this = this;\n        each(items, function (item) {\n            if (item) {\n                var id = item.id;\n                var labelGroup = _this.shapesMap[id];\n                if (!labelGroup.destroyed) {\n                    var labelShape = labelGroup.find(function (ele) { return ele.get('type') === 'text'; });\n                    if (labelShape) {\n                        if (item.offsetX) {\n                            labelShape.attr('x', labelShape.attr('x') + item.offsetX);\n                        }\n                        if (item.offsetY) {\n                            labelShape.attr('y', labelShape.attr('y') + item.offsetY);\n                        }\n                    }\n                }\n            }\n        });\n    };\n    return Labels;\n}());\nexport default Labels;\n//# sourceMappingURL=labels.js.map"]}]}