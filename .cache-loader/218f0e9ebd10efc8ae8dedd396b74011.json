{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\base\\plot.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\base\\plot.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\r\nimport EventEmitter from '@antv/event-emitter';\r\nimport { isNil, each, findIndex, deepMix, keys, contains, isFunction } from '@antv/util';\r\nimport CanvasController from './controller/canvas';\r\nimport EventController from './controller/event';\r\nimport { getPlotType } from './global';\r\nimport Layer from './layer';\r\nimport ViewLayer from './view-layer';\r\nimport { CANVAS_EVENT_MAP } from '../util/event';\r\nvar BasePlot = (function (_super) {\r\n    __extends(BasePlot, _super);\r\n    function BasePlot(container, props) {\r\n        var _this = _super.call(this) || this;\r\n        _this.containerDOM = typeof container === 'string' ? document.getElementById(container) : container;\r\n        _this.forceFit = !isNil(props.forceFit) ? props.forceFit : isNil(props.width) && isNil(props.height);\r\n        _this.renderer = props.renderer || 'canvas';\r\n        _this.pixelRatio = props.pixelRatio || null;\r\n        _this.width = props.width;\r\n        _this.height = props.height;\r\n        _this.theme = props.theme;\r\n        _this.localRefresh = props.localRefresh;\r\n        _this.canvasController = new CanvasController({\r\n            containerDOM: _this.containerDOM,\r\n            plot: _this,\r\n        });\r\n        _this.width = _this.canvasController.width;\r\n        _this.height = _this.canvasController.height;\r\n        _this.canvas = _this.canvasController.canvas;\r\n        _this.layers = [];\r\n        _this.destroyed = false;\r\n        _this.createLayers(props);\r\n        _this.eventController = new EventController({\r\n            plot: _this,\r\n            canvas: _this.canvasController.canvas,\r\n        });\r\n        _this.eventController.bindEvents();\r\n        _this.parseEvents(props);\r\n        return _this;\r\n    }\r\n    BasePlot.prototype.destroy = function () {\r\n        this.eachLayer(function (layer) {\r\n            layer.destroy();\r\n        });\r\n        this.canvasController.destroy();\r\n        this.eventController.clearEvents();\r\n        this.layers = [];\r\n        this.destroyed = true;\r\n    };\r\n    BasePlot.prototype.repaint = function () {\r\n        this.canvasController.canvas.draw();\r\n    };\r\n    BasePlot.prototype.updateConfig = function (config, all) {\r\n        if (all === void 0) {\r\n            all = false;\r\n        }\r\n        if (all) {\r\n            this.eachLayer(function (layer) {\r\n                if (layer instanceof ViewLayer) {\r\n                    layer.updateConfig(config);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            var layer = this.layers[0];\r\n            if (layer instanceof Layer) {\r\n                layer.updateConfig(config);\r\n            }\r\n        }\r\n        if (config.width) {\r\n            this.width = config.width;\r\n        }\r\n        if (config.height) {\r\n            this.height = config.height;\r\n        }\r\n        if (config.theme) {\r\n            this.theme = config.theme;\r\n        }\r\n        this.canvasController.updateCanvasSize();\r\n        this.canvasController.updateCanvasTheme();\r\n    };\r\n    BasePlot.prototype.changeData = function (data, all) {\r\n        if (all === void 0) {\r\n            all = false;\r\n        }\r\n        if (all) {\r\n            this.eachLayer(function (layer) {\r\n                if (layer instanceof ViewLayer) {\r\n                    layer.changeData(data);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            var layer = this.layers[0];\r\n            if (layer instanceof ViewLayer) {\r\n                layer.changeData(data);\r\n            }\r\n        }\r\n    };\r\n    BasePlot.prototype.getScaleByField = function (field) {\r\n        return this.layers[0].getScaleByField(field);\r\n    };\r\n    BasePlot.prototype.getXScale = function () {\r\n        return this.layers[0].getXScale();\r\n    };\r\n    BasePlot.prototype.getYScale = function () {\r\n        return this.layers[0].getYScale();\r\n    };\r\n    BasePlot.prototype.getColorScale = function () {\r\n        return this.layers[0].getColorScale();\r\n    };\r\n    BasePlot.prototype.getPlotTheme = function () {\r\n        var layer = this.layers[0];\r\n        return layer.getPlotTheme();\r\n    };\r\n    BasePlot.prototype.getData = function () {\r\n        var layer = this.layers[0];\r\n        return layer.getData();\r\n    };\r\n    BasePlot.prototype.bindStateManager = function (stateManager, cfg) {\r\n        this.eachLayer(function (layer) {\r\n            if (layer instanceof ViewLayer) {\r\n                layer.bindStateManager(stateManager, cfg);\r\n            }\r\n        });\r\n    };\r\n    BasePlot.prototype.setActive = function (condition, style) {\r\n        this.eachLayer(function (layer) {\r\n            if (layer instanceof ViewLayer) {\r\n                layer.setActive(condition, style);\r\n            }\r\n        });\r\n    };\r\n    BasePlot.prototype.setSelected = function (condition, style) {\r\n        this.eachLayer(function (layer) {\r\n            if (layer instanceof ViewLayer) {\r\n                layer.setSelected(condition, style);\r\n            }\r\n        });\r\n    };\r\n    BasePlot.prototype.setDisable = function (condition, style) {\r\n        this.eachLayer(function (layer) {\r\n            if (layer instanceof ViewLayer) {\r\n                layer.setDisable(condition, style);\r\n            }\r\n        });\r\n    };\r\n    BasePlot.prototype.setDefault = function (condition, style) {\r\n        this.eachLayer(function (layer) {\r\n            if (layer instanceof ViewLayer) {\r\n                layer.setDefault(condition, style);\r\n            }\r\n        });\r\n    };\r\n    BasePlot.prototype.getView = function () {\r\n        return this.layers[0].view;\r\n    };\r\n    BasePlot.prototype.getLayer = function (idx) {\r\n        if (idx === void 0) {\r\n            idx = 0;\r\n        }\r\n        return this.layers[idx];\r\n    };\r\n    BasePlot.prototype.getCanvas = function () {\r\n        return this.canvasController.canvas;\r\n    };\r\n    BasePlot.prototype.getLayers = function () {\r\n        return this.layers;\r\n    };\r\n    BasePlot.prototype.render = function () {\r\n        this.eachLayer(function (layer) { return layer.render(); });\r\n    };\r\n    BasePlot.prototype.eachLayer = function (cb) {\r\n        each(this.layers, cb);\r\n    };\r\n    BasePlot.prototype.addLayer = function (layer) {\r\n        var idx = findIndex(this.layers, function (item) { return item === layer; });\r\n        if (idx < 0) {\r\n            this.layers.push(layer);\r\n        }\r\n    };\r\n    BasePlot.prototype.createLayers = function (props) {\r\n        if (props.layers) {\r\n        }\r\n        else if (props.type) {\r\n            var viewLayerCtr = getPlotType(props.type);\r\n            var viewLayerProps = deepMix({}, props, {\r\n                canvas: this.canvasController.canvas,\r\n                x: 0,\r\n                y: 0,\r\n                width: this.width,\r\n                height: this.height,\r\n            });\r\n            var viewLayer = new viewLayerCtr(viewLayerProps);\r\n            this.addLayer(viewLayer);\r\n        }\r\n    };\r\n    BasePlot.prototype.parseEvents = function (props) {\r\n        var _this = this;\r\n        var eventsName = keys(CANVAS_EVENT_MAP);\r\n        if (props.events) {\r\n            each(props.events, function (e, k) {\r\n                if (contains(eventsName, k) && isFunction(e)) {\r\n                    var eventName = CANVAS_EVENT_MAP[k] || k;\r\n                    var handler = e;\r\n                    _this.on(eventName, handler);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    return BasePlot;\r\n}(EventEmitter));\r\nexport default BasePlot;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\base\\plot.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\base\\plot.js"],"names":[],"mappings":"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","sourcesContent":["import { __extends } from \"tslib\";\nimport EventEmitter from '@antv/event-emitter';\nimport { isNil, each, findIndex, deepMix, keys, contains, isFunction } from '@antv/util';\nimport CanvasController from './controller/canvas';\nimport EventController from './controller/event';\nimport { getPlotType } from './global';\nimport Layer from './layer';\nimport ViewLayer from './view-layer';\nimport { CANVAS_EVENT_MAP } from '../util/event';\nvar BasePlot = /** @class */ (function (_super) {\n    __extends(BasePlot, _super);\n    function BasePlot(container, props) {\n        var _this = _super.call(this) || this;\n        _this.containerDOM = typeof container === 'string' ? document.getElementById(container) : container;\n        _this.forceFit = !isNil(props.forceFit) ? props.forceFit : isNil(props.width) && isNil(props.height);\n        _this.renderer = props.renderer || 'canvas';\n        _this.pixelRatio = props.pixelRatio || null;\n        _this.width = props.width;\n        _this.height = props.height;\n        _this.theme = props.theme;\n        _this.localRefresh = props.localRefresh;\n        _this.canvasController = new CanvasController({\n            containerDOM: _this.containerDOM,\n            plot: _this,\n        });\n        /** update layer properties */\n        _this.width = _this.canvasController.width;\n        _this.height = _this.canvasController.height;\n        _this.canvas = _this.canvasController.canvas;\n        _this.layers = [];\n        _this.destroyed = false;\n        _this.createLayers(props);\n        /** bind events */\n        _this.eventController = new EventController({\n            plot: _this,\n            canvas: _this.canvasController.canvas,\n        });\n        _this.eventController.bindEvents();\n        _this.parseEvents(props);\n        return _this;\n    }\n    /** 生命周期 */\n    BasePlot.prototype.destroy = function () {\n        this.eachLayer(function (layer) {\n            layer.destroy();\n        });\n        this.canvasController.destroy();\n        this.eventController.clearEvents();\n        this.layers = [];\n        this.destroyed = true;\n    };\n    /**\n     * 重新绘制图形\n     */\n    BasePlot.prototype.repaint = function () {\n        this.canvasController.canvas.draw();\n    };\n    BasePlot.prototype.updateConfig = function (config, all) {\n        if (all === void 0) { all = false; }\n        if (all) {\n            this.eachLayer(function (layer) {\n                if (layer instanceof ViewLayer) {\n                    layer.updateConfig(config);\n                }\n            });\n        }\n        else {\n            var layer = this.layers[0];\n            if (layer instanceof Layer) {\n                layer.updateConfig(config);\n            }\n        }\n        if (config.width) {\n            this.width = config.width;\n        }\n        if (config.height) {\n            this.height = config.height;\n        }\n        if (config.theme) {\n            this.theme = config.theme;\n        }\n        this.canvasController.updateCanvasSize();\n        this.canvasController.updateCanvasTheme();\n    };\n    BasePlot.prototype.changeData = function (data, all) {\n        if (all === void 0) { all = false; }\n        if (all) {\n            this.eachLayer(function (layer) {\n                if (layer instanceof ViewLayer) {\n                    layer.changeData(data);\n                }\n            });\n        }\n        else {\n            var layer = this.layers[0];\n            if (layer instanceof ViewLayer) {\n                layer.changeData(data);\n            }\n        }\n    };\n    BasePlot.prototype.getScaleByField = function (field) {\n        return this.layers[0].getScaleByField(field);\n    };\n    BasePlot.prototype.getXScale = function () {\n        return this.layers[0].getXScale();\n    };\n    BasePlot.prototype.getYScale = function () {\n        return this.layers[0].getYScale();\n    };\n    BasePlot.prototype.getColorScale = function () {\n        return this.layers[0].getColorScale();\n    };\n    BasePlot.prototype.getPlotTheme = function () {\n        var layer = this.layers[0];\n        return layer.getPlotTheme();\n    };\n    BasePlot.prototype.getData = function () {\n        var layer = this.layers[0];\n        return layer.getData();\n    };\n    /**\n     * 绑定一个外部的stateManager\n     * 先直接传递给各个子 Layer\n     *\n     *  @param stateManager\n     *  @param cfg\n     */\n    BasePlot.prototype.bindStateManager = function (stateManager, cfg) {\n        this.eachLayer(function (layer) {\n            if (layer instanceof ViewLayer) {\n                layer.bindStateManager(stateManager, cfg);\n            }\n        });\n    };\n    /**\n     * 响应状态量更新的快捷方法\n     *\n     *  @param condition\n     * @param style\n     */\n    BasePlot.prototype.setActive = function (condition, style) {\n        this.eachLayer(function (layer) {\n            if (layer instanceof ViewLayer) {\n                layer.setActive(condition, style);\n            }\n        });\n    };\n    BasePlot.prototype.setSelected = function (condition, style) {\n        this.eachLayer(function (layer) {\n            if (layer instanceof ViewLayer) {\n                layer.setSelected(condition, style);\n            }\n        });\n    };\n    BasePlot.prototype.setDisable = function (condition, style) {\n        this.eachLayer(function (layer) {\n            if (layer instanceof ViewLayer) {\n                layer.setDisable(condition, style);\n            }\n        });\n    };\n    BasePlot.prototype.setDefault = function (condition, style) {\n        this.eachLayer(function (layer) {\n            if (layer instanceof ViewLayer) {\n                layer.setDefault(condition, style);\n            }\n        });\n    };\n    /**\n     * 获取 Plot 的 View\n     */\n    BasePlot.prototype.getView = function () {\n        // 临时：避免 getLayer 的类型转换问题\n        return this.layers[0].view;\n    };\n    /**\n     * 获取图形下的图层 Layer，默认第一个 Layer\n     * @param idx\n     */\n    BasePlot.prototype.getLayer = function (idx) {\n        if (idx === void 0) { idx = 0; }\n        return this.layers[idx];\n    };\n    BasePlot.prototype.getCanvas = function () {\n        return this.canvasController.canvas;\n    };\n    BasePlot.prototype.getLayers = function () {\n        return this.layers;\n    };\n    BasePlot.prototype.render = function () {\n        this.eachLayer(function (layer) { return layer.render(); });\n    };\n    BasePlot.prototype.eachLayer = function (cb) {\n        each(this.layers, cb);\n    };\n    /**\n     * add children layer\n     * @param layer\n     */\n    BasePlot.prototype.addLayer = function (layer) {\n        var idx = findIndex(this.layers, function (item) { return item === layer; });\n        if (idx < 0) {\n            this.layers.push(layer);\n        }\n    };\n    BasePlot.prototype.createLayers = function (props) {\n        if (props.layers) {\n            // TODO: combo plot\n        }\n        else if (props.type) {\n            var viewLayerCtr = getPlotType(props.type);\n            var viewLayerProps = deepMix({}, props, {\n                canvas: this.canvasController.canvas,\n                x: 0,\n                y: 0,\n                width: this.width,\n                height: this.height,\n            });\n            var viewLayer = new viewLayerCtr(viewLayerProps);\n            this.addLayer(viewLayer);\n        }\n    };\n    BasePlot.prototype.parseEvents = function (props) {\n        var _this = this;\n        var eventsName = keys(CANVAS_EVENT_MAP);\n        if (props.events) {\n            each(props.events, function (e, k) {\n                if (contains(eventsName, k) && isFunction(e)) {\n                    var eventName = CANVAS_EVENT_MAP[k] || k;\n                    var handler = e;\n                    _this.on(eventName, handler);\n                }\n            });\n        }\n    };\n    return BasePlot;\n}(EventEmitter));\nexport default BasePlot;\n//# sourceMappingURL=plot.js.map"]}]}