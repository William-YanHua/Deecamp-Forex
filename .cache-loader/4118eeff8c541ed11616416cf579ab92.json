{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\chart\\controller\\legend.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\chart\\controller\\legend.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["var Util = require('../../util');\r\nvar _require = require('@antv/component/lib'), Legend = _require.Legend;\r\nvar Tail = require('../../component/legend/tail');\r\nvar Shape = require('../../geom/shape/shape');\r\nvar FIELD_ORIGIN = '_origin';\r\nvar MARKER_SIZE = 4.5;\r\nvar requireAnimationFrameFn = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;\r\nfunction _snapEqual(v1, v2, scale) {\r\n    var isEqual;\r\n    if (Util.isNil(scale)) {\r\n        return false;\r\n    }\r\n    v1 = scale.translate(v1);\r\n    v2 = scale.translate(v2);\r\n    if (scale.isCategory) {\r\n        isEqual = v1 === v2;\r\n    }\r\n    else {\r\n        isEqual = Math.abs(v1 - v2) <= 1;\r\n    }\r\n    return isEqual;\r\n}\r\nfunction findGeom(geoms, value) {\r\n    var rst;\r\n    Util.each(geoms, function (geom) {\r\n        if (geom.get('visible')) {\r\n            var yScale = geom.getYScale();\r\n            if (yScale.field === value) {\r\n                rst = geom;\r\n                return;\r\n            }\r\n        }\r\n    });\r\n    return rst;\r\n}\r\nvar LegendController = function () {\r\n    function LegendController(cfg) {\r\n        var self = this;\r\n        self.options = {};\r\n        Util.mix(self, cfg);\r\n        self.clear();\r\n        var chart = self.chart;\r\n        self.container = chart.get('frontPlot');\r\n        self.plotRange = chart.get('plotRange');\r\n    }\r\n    var _proto = LegendController.prototype;\r\n    _proto.clear = function clear() {\r\n        var legends = this.legends;\r\n        this.backRange = null;\r\n        Util.each(legends, function (legendItems) {\r\n            Util.each(legendItems, function (legend) {\r\n                legend.destroy();\r\n            });\r\n        });\r\n        this.legends = {};\r\n    };\r\n    _proto.getBackRange = function getBackRange() {\r\n        var backRange = this.backRange;\r\n        if (!backRange) {\r\n            backRange = this.chart.get('backPlot').getBBox();\r\n            var plotRange = this.plotRange;\r\n            if (backRange.maxX - backRange.minX < plotRange.br.x - plotRange.tl.x && backRange.maxY - backRange.minY < plotRange.br.y - plotRange.tl.y) {\r\n                backRange = {\r\n                    minX: plotRange.tl.x,\r\n                    minY: plotRange.tl.y,\r\n                    maxX: plotRange.br.x,\r\n                    maxY: plotRange.br.y\r\n                };\r\n            }\r\n            this.backRange = backRange;\r\n        }\r\n        return backRange;\r\n    };\r\n    _proto._isFieldInView = function _isFieldInView(field, value, view) {\r\n        var flag = false;\r\n        var scales = view.get('scales');\r\n        var fieldScale = scales[field];\r\n        if (fieldScale && fieldScale.values) {\r\n            flag = Util.inArray(fieldScale.values, value);\r\n        }\r\n        return flag;\r\n    };\r\n    _proto._bindClickEvent = function _bindClickEvent(legend, scale, filterVals) {\r\n        var self = this;\r\n        var chart = self.chart;\r\n        var views = chart.get('views');\r\n        var field = scale.field;\r\n        var options = self.options;\r\n        legend.on('itemclick', function (ev) {\r\n            if (options.onClick) {\r\n                options.onClick(ev);\r\n            }\r\n            else {\r\n                var item = ev.item;\r\n                var checked = ev.checked;\r\n                var isSingleSelected = legend.get('selectedMode') === 'single';\r\n                var clickedValue = item.dataValue;\r\n                if (checked) {\r\n                    Util.Array.remove(filterVals, clickedValue);\r\n                    if (self._isFieldInView(field, clickedValue, chart)) {\r\n                        chart.filter(field, function (field) {\r\n                            return isSingleSelected ? field === clickedValue : !Util.inArray(filterVals, field);\r\n                        });\r\n                    }\r\n                    Util.each(views, function (view) {\r\n                        if (self._isFieldInView(field, clickedValue, view)) {\r\n                            view.filter(field, function (field) {\r\n                                return isSingleSelected ? field === clickedValue : !Util.inArray(filterVals, field);\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n                else if (!isSingleSelected) {\r\n                    filterVals.push(clickedValue);\r\n                    if (self._isFieldInView(field, clickedValue, chart)) {\r\n                        chart.filter(field, function (field) {\r\n                            return !Util.inArray(filterVals, field);\r\n                        });\r\n                    }\r\n                    Util.each(views, function (view) {\r\n                        if (self._isFieldInView(field, clickedValue, view)) {\r\n                            view.filter(field, function (field) {\r\n                                return !Util.inArray(filterVals, field);\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n                chart.set('keepLegend', true);\r\n                chart.set('keepPadding', true);\r\n                chart.repaint();\r\n                chart.set('keepPadding', false);\r\n                chart.set('keepLegend', false);\r\n            }\r\n        });\r\n    };\r\n    _proto._bindClickEventForMix = function _bindClickEventForMix(legend) {\r\n        var self = this;\r\n        var chart = self.chart;\r\n        var geoms = chart.getAllGeoms();\r\n        legend.on('itemclick', function (ev) {\r\n            var value = ev.item.value;\r\n            var checked = ev.checked;\r\n            if (checked) {\r\n                Util.each(geoms, function (geom) {\r\n                    var field = geom.getYScale().field;\r\n                    if (field === value) {\r\n                        geom.show();\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                Util.each(geoms, function (geom) {\r\n                    var field = geom.getYScale().field;\r\n                    if (field === value) {\r\n                        geom.hide();\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    };\r\n    _proto._filterLabels = function _filterLabels(shape, geom, visible) {\r\n        if (shape.get('gLabel')) {\r\n            shape.get('gLabel').set('visible', visible);\r\n        }\r\n        else {\r\n            var labelCfg = geom.get('labelCfg');\r\n            if (labelCfg && labelCfg.fields && labelCfg.fields.length > 0) {\r\n                var xScale = geom.getXScale();\r\n                var yScale = geom.getYScale();\r\n                var xField = xScale.field;\r\n                var yField = yScale.field;\r\n                var shapeData = shape.get('origin')._origin;\r\n                var labelContainer = geom.get('labelContainer');\r\n                var labels = labelContainer.get('labelsGroup').get('children');\r\n                Util.each(labels, function (label) {\r\n                    var labelData = label.get('origin') || [];\r\n                    if (labelData[xField] === shapeData[xField] && labelData[yField] === shapeData[yField]) {\r\n                        label.set('visible', visible);\r\n                        shape.set('gLabel', label);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n    _proto._bindFilterEvent = function _bindFilterEvent(legend, scale) {\r\n        var self = this;\r\n        var chart = this.chart;\r\n        var field = scale.field;\r\n        legend.on('itemfilter', function (ev) {\r\n            var range = ev.range;\r\n            chart.filterShape(function (obj, shape, geom) {\r\n                if (obj[field]) {\r\n                    var filtered = obj[field] >= range[0] && obj[field] <= range[1];\r\n                    self._filterLabels(shape, geom, filtered);\r\n                    return filtered;\r\n                }\r\n                return true;\r\n            });\r\n            var geoms = chart.getAllGeoms() || [];\r\n            var _loop = function _loop(i) {\r\n                var geom = geoms[i];\r\n                if (geom.get('type') === 'heatmap') {\r\n                    requireAnimationFrameFn(function () {\r\n                        geom.drawWithRange(range);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < geoms.length; i++) {\r\n                _loop(i);\r\n            }\r\n        });\r\n    };\r\n    _proto._getShapeData = function _getShapeData(shape) {\r\n        var originData = shape.get('origin');\r\n        if (Util.isArray(originData)) {\r\n            originData = originData[0];\r\n        }\r\n        return originData[FIELD_ORIGIN];\r\n    };\r\n    _proto._bindHoverEvent = function _bindHoverEvent(legend, field) {\r\n        var self = this;\r\n        var chart = self.chart;\r\n        var geoms = chart.getAllGeoms();\r\n        var options = self.options;\r\n        var canvas = chart.get('canvas');\r\n        legend.on('itemhover', function (ev) {\r\n            var value = ev.item.value;\r\n            var pre = self.pre;\r\n            if (!pre) {\r\n                Util.each(geoms, function (geom) {\r\n                    var shapeContainer = geom.get('shapeContainer');\r\n                    var shapes = geom.getShapes();\r\n                    var activeShapes = [];\r\n                    if (field) {\r\n                        var scale = geom.get('scales')[field];\r\n                        Util.each(shapes, function (shape) {\r\n                            var origin = self._getShapeData(shape);\r\n                            if (origin && _snapEqual(origin[field], value, scale)) {\r\n                                activeShapes.push(shape);\r\n                            }\r\n                        });\r\n                    }\r\n                    else if (geom.getYScale().field === value) {\r\n                        activeShapes = shapes;\r\n                    }\r\n                    if (!Util.isEmpty(activeShapes)) {\r\n                        ev.shapes = activeShapes;\r\n                        ev.geom = geom;\r\n                        if (options.onHover) {\r\n                            options.onHover(ev);\r\n                            shapeContainer.sort();\r\n                            canvas.draw();\r\n                        }\r\n                        else {\r\n                            geom.setShapesActived(activeShapes);\r\n                        }\r\n                    }\r\n                });\r\n                self.pre = value;\r\n            }\r\n            else if (pre === value) {\r\n                return;\r\n            }\r\n        });\r\n        legend.on('itemunhover', function () {\r\n            self.pre = null;\r\n            Util.each(geoms, function (geom) {\r\n                if (geom.get('activeShapes')) {\r\n                    geom.clearActivedShapes();\r\n                    canvas.draw();\r\n                }\r\n            });\r\n        });\r\n    };\r\n    _proto._isFiltered = function _isFiltered(scale, filterVals, scaleValue) {\r\n        if (!scale.isCategory) {\r\n            return true;\r\n        }\r\n        var rst = true;\r\n        scaleValue = scale.invert(scaleValue);\r\n        Util.each(filterVals, function (val) {\r\n            if (scale.getText(val) === scale.getText(scaleValue)) {\r\n                rst = false;\r\n                return false;\r\n            }\r\n        });\r\n        return rst;\r\n    };\r\n    _proto._alignLegend = function _alignLegend(legend, pre, region, position) {\r\n        var self = this;\r\n        var viewTheme = self.viewTheme;\r\n        var container = self.container;\r\n        var canvas = container.get('canvas');\r\n        var width = canvas.get('width');\r\n        var height = canvas.get('height');\r\n        var totalRegion = self.totalRegion;\r\n        var plotRange = self.plotRange;\r\n        var backRange = self.getBackRange();\r\n        var offsetX = legend.get('offset')[0] || 0;\r\n        var offsetY = legend.get('offset')[1] || 0;\r\n        var legendHeight = legend.getHeight();\r\n        var legendWidth = legend.getWidth();\r\n        var borderMargin = viewTheme.legend.margin;\r\n        var innerMargin = viewTheme.legend.legendMargin;\r\n        var legendNum = self.legends[position].length;\r\n        var posArray = position.split('-');\r\n        var x = 0;\r\n        var y = 0;\r\n        var tempoRegion = legendNum > 1 ? totalRegion : region;\r\n        if (posArray[0] === 'left' || posArray[0] === 'right') {\r\n            height = plotRange.br.y;\r\n            x = self._getXAlign(posArray[0], width, region, backRange, legendWidth, borderMargin);\r\n            if (pre) {\r\n                y = pre.get('group').get('y') + pre.getHeight() + innerMargin;\r\n            }\r\n            else {\r\n                y = self._getYAlignVertical(posArray[1], height, tempoRegion, backRange, 0, borderMargin, canvas.get('height'));\r\n            }\r\n        }\r\n        else if (posArray[0] === 'top' || posArray[0] === 'bottom') {\r\n            y = self._getYAlignHorizontal(posArray[0], height, region, backRange, legendHeight, borderMargin);\r\n            if (pre) {\r\n                var preWidth = pre.getWidth();\r\n                x = pre.get('group').get('x') + preWidth + innerMargin;\r\n            }\r\n            else {\r\n                x = self._getXAlign(posArray[1], width, tempoRegion, backRange, 0, borderMargin);\r\n                if (posArray[1] === 'right')\r\n                    x = plotRange.br.x - tempoRegion.totalWidth;\r\n            }\r\n        }\r\n        legend.move(x + offsetX, y + offsetY);\r\n    };\r\n    _proto._getXAlign = function _getXAlign(pos, width, region, backRange, legendWidth, borderMargin) {\r\n        var x = pos === 'left' ? backRange.minX - legendWidth - borderMargin[3] : backRange.maxX + borderMargin[1];\r\n        if (pos === 'center') {\r\n            x = (width - region.totalWidth) / 2;\r\n        }\r\n        return x;\r\n    };\r\n    _proto._getYAlignHorizontal = function _getYAlignHorizontal(pos, height, region, backRange, legendHeight, borderMargin) {\r\n        var y = pos === 'top' ? backRange.minY - legendHeight - borderMargin[0] : backRange.maxY + borderMargin[2];\r\n        return y;\r\n    };\r\n    _proto._getYAlignVertical = function _getYAlignVertical(pos, height, region, backRange, legendHeight, borderMargin, canvasHeight) {\r\n        var y = pos === 'top' ? backRange.minY - legendHeight - borderMargin[0] : height - region.totalHeight;\r\n        if (pos === 'center') {\r\n            y = (canvasHeight - region.totalHeight) / 2;\r\n        }\r\n        return y;\r\n    };\r\n    _proto._getSubRegion = function _getSubRegion(legends) {\r\n        var maxWidth = 0;\r\n        var maxHeight = 0;\r\n        var totalWidth = 0;\r\n        var totalHeight = 0;\r\n        Util.each(legends, function (legend) {\r\n            var width = legend.getWidth();\r\n            var height = legend.getHeight();\r\n            if (maxWidth < width) {\r\n                maxWidth = width;\r\n            }\r\n            totalWidth += width;\r\n            if (maxHeight < height) {\r\n                maxHeight = height;\r\n            }\r\n            totalHeight += height;\r\n        });\r\n        return {\r\n            maxWidth: maxWidth,\r\n            totalWidth: totalWidth,\r\n            maxHeight: maxHeight,\r\n            totalHeight: totalHeight\r\n        };\r\n    };\r\n    _proto._getRegion = function _getRegion() {\r\n        var self = this;\r\n        var viewTheme = self.viewTheme;\r\n        var legends = self.legends;\r\n        var innerMargin = viewTheme.legend.legendMargin;\r\n        var subs = [];\r\n        var totalWidth = 0;\r\n        var totalHeight = 0;\r\n        Util.each(legends, function (legendItems) {\r\n            var subRegion = self._getSubRegion(legendItems);\r\n            subs.push(subRegion);\r\n            totalWidth += subRegion.totalWidth + innerMargin;\r\n            totalHeight += subRegion.totalHeight + innerMargin;\r\n        });\r\n        return {\r\n            totalWidth: totalWidth,\r\n            totalHeight: totalHeight,\r\n            subs: subs\r\n        };\r\n    };\r\n    _proto._addCategoryLegend = function _addCategoryLegend(scale, attr, geom, filterVals, position) {\r\n        var self = this;\r\n        var field = scale.field;\r\n        var legendOptions = self.options;\r\n        var fieldOption = legendOptions[field];\r\n        if (fieldOption) {\r\n            legendOptions = fieldOption;\r\n        }\r\n        var legends = self.legends;\r\n        legends[position] = legends[position] || [];\r\n        var container = self.container;\r\n        var items = [];\r\n        var ticks = scale.getTicks();\r\n        var isByAttr = true;\r\n        var shapeType = geom.get('shapeType') || 'point';\r\n        var shape = geom.getDefaultValue('shape') || 'circle';\r\n        if (legendOptions[field] && legendOptions[field].marker) {\r\n            shape = legendOptions[field].marker;\r\n            shapeType = 'point';\r\n            isByAttr = false;\r\n        }\r\n        else if (legendOptions.marker) {\r\n            shape = legendOptions.marker;\r\n            shapeType = 'point';\r\n            isByAttr = false;\r\n        }\r\n        var chart = self.chart;\r\n        var viewTheme = self.viewTheme;\r\n        var canvas = chart.get('canvas');\r\n        var plotRange = self.plotRange;\r\n        var posArray = position.split('-');\r\n        var maxLength = posArray[0] === 'right' || posArray[0] === 'left' ? plotRange.bl.y - plotRange.tr.y : canvas.get('width');\r\n        Util.each(ticks, function (tick) {\r\n            var text = tick.text;\r\n            var name = text;\r\n            var scaleValue = tick.value;\r\n            var value = scale.invert(scaleValue);\r\n            var cfg = {\r\n                isInCircle: geom.isInCircle()\r\n            };\r\n            var checked = filterVals ? self._isFiltered(scale, filterVals, scaleValue) : true;\r\n            var colorAttr = geom.getAttr('color');\r\n            var shapeAttr = geom.getAttr('shape');\r\n            if (colorAttr) {\r\n                if (colorAttr.callback && colorAttr.callback.length > 1) {\r\n                    var restArgs = Array(colorAttr.callback.length - 1).fill('');\r\n                    cfg.color = colorAttr.mapping.apply(colorAttr, [value].concat(restArgs)).join('') || viewTheme.defaultColor;\r\n                }\r\n                else {\r\n                    cfg.color = colorAttr.mapping(value).join('') || viewTheme.defaultColor;\r\n                }\r\n            }\r\n            if (isByAttr && shapeAttr) {\r\n                if (shapeAttr.callback && shapeAttr.callback.length > 1) {\r\n                    var _restArgs = Array(shapeAttr.callback.length - 1).fill('');\r\n                    shape = shapeAttr.mapping.apply(shapeAttr, [value].concat(_restArgs)).join('');\r\n                }\r\n                else {\r\n                    shape = shapeAttr.mapping(value).join('');\r\n                }\r\n            }\r\n            var shapeObject = Shape.getShapeFactory(shapeType);\r\n            var marker = shapeObject.getMarkerCfg(shape, cfg);\r\n            if (Util.isFunction(shape)) {\r\n                marker.symbol = shape;\r\n            }\r\n            items.push({\r\n                value: name,\r\n                dataValue: value,\r\n                checked: checked,\r\n                marker: marker\r\n            });\r\n        });\r\n        var legendCfg = Util.deepMix({}, viewTheme.legend[posArray[0]], legendOptions[field] || legendOptions, {\r\n            viewId: chart.get('_id'),\r\n            maxLength: maxLength,\r\n            items: items,\r\n            container: container,\r\n            position: [0, 0]\r\n        });\r\n        if (legendCfg.title) {\r\n            Util.deepMix(legendCfg, {\r\n                title: {\r\n                    text: scale.alias || scale.field\r\n                }\r\n            });\r\n        }\r\n        var legend;\r\n        if (self._isTailLegend(legendOptions, geom)) {\r\n            legendCfg.chart = self.chart;\r\n            legendCfg.geom = geom;\r\n            legend = new Tail(legendCfg);\r\n        }\r\n        else {\r\n            if (legendOptions.useHtml) {\r\n                var canvasEle = container.get('canvas').get('el');\r\n                container = legendOptions.container;\r\n                if (Util.isString(container) && /^\\#/.test(container)) {\r\n                    var id = container.replace('#', '');\r\n                    container = document.getElementById(id);\r\n                }\r\n                if (!container) {\r\n                    container = canvasEle.parentNode;\r\n                }\r\n                legendCfg.container = container;\r\n                if (legendCfg.legendStyle === undefined)\r\n                    legendCfg.legendStyle = {};\r\n                legendCfg.legendStyle.CONTAINER_CLASS = {\r\n                    height: posArray[0] === 'right' || posArray[0] === 'left' ? maxLength + 'px' : 'auto',\r\n                    width: !(posArray[0] === 'right' || posArray[0] === 'left') ? maxLength + 'px' : 'auto',\r\n                    position: 'absolute',\r\n                    overflow: 'auto',\r\n                    'z-index': canvasEle.style.zIndex === '' ? 1 : parseInt(canvasEle.style.zIndex, 10) + 1\r\n                };\r\n                if (legendOptions.flipPage) {\r\n                    legend = new Legend.CatPageHtml(legendCfg);\r\n                }\r\n                else {\r\n                    legend = new Legend.CatHtml(legendCfg);\r\n                }\r\n            }\r\n            else {\r\n                legend = new Legend.Category(legendCfg);\r\n            }\r\n        }\r\n        self._bindClickEvent(legend, scale, filterVals);\r\n        legends[position].push(legend);\r\n        return legend;\r\n    };\r\n    _proto._bindChartMove = function _bindChartMove(scale) {\r\n        var chart = this.chart;\r\n        var legends = this.legends;\r\n        chart.on('plotmove', function (ev) {\r\n            var selected = false;\r\n            if (ev.target) {\r\n                var origin = ev.target.get('origin');\r\n                if (origin) {\r\n                    var data = origin[FIELD_ORIGIN] || origin[0][FIELD_ORIGIN];\r\n                    var field = scale.field;\r\n                    if (data) {\r\n                        var value = data[field];\r\n                        Util.each(legends, function (legendItems) {\r\n                            Util.each(legendItems, function (legend) {\r\n                                selected = true;\r\n                                !legend.destroyed && legend.activate(value);\r\n                            });\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            if (!selected) {\r\n                Util.each(legends, function (legendItems) {\r\n                    Util.each(legendItems, function (legend) {\r\n                        !legend.destroyed && legend.unactivate();\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    };\r\n    _proto._addContinuousLegend = function _addContinuousLegend(scale, attr, position) {\r\n        var self = this;\r\n        var legends = self.legends;\r\n        legends[position] = legends[position] || [];\r\n        var container = self.container;\r\n        var field = scale.field;\r\n        var ticks = scale.getTicks();\r\n        var items = [];\r\n        var legend;\r\n        var minValue;\r\n        var maxValue;\r\n        var viewTheme = self.viewTheme;\r\n        Util.each(ticks, function (tick) {\r\n            var scaleValue = tick.value;\r\n            var invertValue = scale.invert(scaleValue);\r\n            var attrValue = attr.mapping(invertValue).join('');\r\n            items.push({\r\n                value: tick.tickValue,\r\n                attrValue: attrValue,\r\n                color: attrValue,\r\n                scaleValue: scaleValue\r\n            });\r\n            if (scaleValue === 0) {\r\n                minValue = true;\r\n            }\r\n            if (scaleValue === 1) {\r\n                maxValue = true;\r\n            }\r\n        });\r\n        if (!minValue) {\r\n            items.push({\r\n                value: scale.min,\r\n                attrValue: attr.mapping(0).join(''),\r\n                color: attr.mapping(0).join(''),\r\n                scaleValue: 0\r\n            });\r\n        }\r\n        if (!maxValue) {\r\n            items.push({\r\n                value: scale.max,\r\n                attrValue: attr.mapping(1).join(''),\r\n                color: attr.mapping(1).join(''),\r\n                scaleValue: 1\r\n            });\r\n        }\r\n        var options = self.options;\r\n        var posArray = position.split('-');\r\n        var defaultCfg = viewTheme.legend[posArray[0]];\r\n        if (options && options.slidable === false || options[field] && options[field].slidable === false) {\r\n            defaultCfg = Util.mix({}, defaultCfg, viewTheme.legend.gradient);\r\n        }\r\n        var legendCfg = Util.deepMix({}, defaultCfg, options[field] || options, {\r\n            items: items,\r\n            attr: attr,\r\n            formatter: scale.formatter,\r\n            container: container,\r\n            position: [0, 0]\r\n        });\r\n        if (legendCfg.title) {\r\n            Util.deepMix(legendCfg, {\r\n                title: {\r\n                    text: scale.alias || scale.field\r\n                }\r\n            });\r\n        }\r\n        if (attr.type === 'color') {\r\n            legend = new Legend.Color(legendCfg);\r\n        }\r\n        else if (attr.type === 'size') {\r\n            if (options && options.sizeType === 'circle')\r\n                legend = new Legend.CircleSize(legendCfg);\r\n            else\r\n                legend = new Legend.Size(legendCfg);\r\n        }\r\n        self._bindFilterEvent(legend, scale);\r\n        legends[position].push(legend);\r\n        return legend;\r\n    };\r\n    _proto._isTailLegend = function _isTailLegend(opt, geom) {\r\n        if (opt.hasOwnProperty('attachLast') && opt.attachLast) {\r\n            var geomType = geom.get('type');\r\n            if (geomType === 'line' || geomType === 'lineStack' || geomType === 'area' || geomType === 'areaStack')\r\n                return true;\r\n        }\r\n        return false;\r\n    };\r\n    _proto._adjustPosition = function _adjustPosition(position, isTailLegend) {\r\n        var pos;\r\n        if (isTailLegend) {\r\n            pos = 'right-top';\r\n        }\r\n        else if (Util.isArray(position)) {\r\n            pos = String(position[0]) + '-' + String(position[1]);\r\n        }\r\n        else {\r\n            var posArr = position.split('-');\r\n            if (posArr.length === 1) {\r\n                if (posArr[0] === 'left')\r\n                    pos = 'left-bottom';\r\n                if (posArr[0] === 'right')\r\n                    pos = 'right-bottom';\r\n                if (posArr[0] === 'top')\r\n                    pos = 'top-center';\r\n                if (posArr[0] === 'bottom')\r\n                    pos = 'bottom-center';\r\n            }\r\n            else {\r\n                pos = position;\r\n            }\r\n        }\r\n        return pos;\r\n    };\r\n    _proto.addLegend = function addLegend(scale, attr, geom, filterVals) {\r\n        var self = this;\r\n        var legendOptions = self.options;\r\n        var field = scale.field;\r\n        var fieldOption = legendOptions[field];\r\n        var viewTheme = self.viewTheme;\r\n        if (fieldOption === false) {\r\n            return null;\r\n        }\r\n        if (fieldOption && fieldOption.custom) {\r\n            self.addCustomLegend(field);\r\n        }\r\n        else {\r\n            var position = legendOptions.position || viewTheme.defaultLegendPosition;\r\n            position = self._adjustPosition(position, self._isTailLegend(legendOptions, geom));\r\n            if (fieldOption && fieldOption.position) {\r\n                position = self._adjustPosition(fieldOption.position, self._isTailLegend(fieldOption, geom));\r\n            }\r\n            var legend;\r\n            if (scale.isLinear) {\r\n                legend = self._addContinuousLegend(scale, attr, position);\r\n            }\r\n            else {\r\n                legend = self._addCategoryLegend(scale, attr, geom, filterVals, position);\r\n            }\r\n            self._bindHoverEvent(legend, field);\r\n            legendOptions.reactive && self._bindChartMove(scale);\r\n        }\r\n    };\r\n    _proto.addCustomLegend = function addCustomLegend(field) {\r\n        var self = this;\r\n        var chart = self.chart;\r\n        var viewTheme = self.viewTheme;\r\n        var container = self.container;\r\n        var legendOptions = self.options;\r\n        if (field) {\r\n            legendOptions = legendOptions[field];\r\n        }\r\n        var position = legendOptions.position || viewTheme.defaultLegendPosition;\r\n        position = self._adjustPosition(position);\r\n        var legends = self.legends;\r\n        legends[position] = legends[position] || [];\r\n        var items = legendOptions.items;\r\n        if (!items) {\r\n            return;\r\n        }\r\n        var geoms = chart.getAllGeoms();\r\n        Util.each(items, function (item) {\r\n            var geom = findGeom(geoms, item.value);\r\n            if (!Util.isObject(item.marker)) {\r\n                item.marker = {\r\n                    symbol: item.marker ? item.marker : 'circle',\r\n                    fill: item.fill,\r\n                    radius: MARKER_SIZE\r\n                };\r\n            }\r\n            else {\r\n                item.marker.radius = item.marker.radius || MARKER_SIZE;\r\n            }\r\n            item.checked = Util.isNil(item.checked) ? true : item.checked;\r\n            item.geom = geom;\r\n        });\r\n        var canvas = chart.get('canvas');\r\n        var plotRange = self.plotRange;\r\n        var posArray = position.split('-');\r\n        var maxLength = posArray[0] === 'right' || posArray[0] === 'left' ? plotRange.bl.y - plotRange.tr.y : canvas.get('width');\r\n        var legendCfg = Util.deepMix({}, viewTheme.legend[posArray[0]], legendOptions, {\r\n            maxLength: maxLength,\r\n            items: items,\r\n            container: container,\r\n            position: [0, 0]\r\n        });\r\n        var legend;\r\n        if (legendOptions.useHtml) {\r\n            var htmlContainer = legendOptions.container;\r\n            if (/^\\#/.test(container)) {\r\n                var id = htmlContainer.replace('#', '');\r\n                htmlContainer = document.getElementById(id);\r\n            }\r\n            else if (!htmlContainer) {\r\n                htmlContainer = container.get('canvas').get('el').parentNode;\r\n            }\r\n            legendCfg.container = htmlContainer;\r\n            if (legendCfg.legendStyle === undefined)\r\n                legendCfg.legendStyle = {};\r\n            if (!legendCfg.legendStyle.CONTAINER_CLASS) {\r\n                legendCfg.legendStyle.CONTAINER_CLASS = {\r\n                    height: posArray[0] === 'right' || posArray[0] === 'left' ? maxLength + 'px' : 'auto',\r\n                    width: !(posArray[0] === 'right' || posArray[0] === 'left') ? maxLength + 'px' : 'auto',\r\n                    position: 'absolute',\r\n                    overflow: 'auto'\r\n                };\r\n            }\r\n            if (legendOptions.flipPage)\r\n                legend = new Legend.CatPageHtml(legendCfg);\r\n            else\r\n                legend = new Legend.CatHtml(legendCfg);\r\n        }\r\n        else\r\n            legend = new Legend.Category(legendCfg);\r\n        legends[position].push(legend);\r\n        legend.on('itemclick', function (ev) {\r\n            if (legendOptions.onClick) {\r\n                legendOptions.onClick(ev);\r\n            }\r\n        });\r\n        self._bindHoverEvent(legend);\r\n        return legend;\r\n    };\r\n    _proto.addMixedLegend = function addMixedLegend(scales, geoms) {\r\n        var self = this;\r\n        var items = [];\r\n        Util.each(scales, function (scale) {\r\n            var value = scale.field;\r\n            Util.each(geoms, function (geom) {\r\n                if (geom.getYScale() === scale && scale.values && scale.values.length > 0) {\r\n                    var shapeType = geom.get('shapeType') || 'point';\r\n                    var shape = geom.getDefaultValue('shape') || 'circle';\r\n                    var shapeObject = Shape.getShapeFactory(shapeType);\r\n                    var cfg = {\r\n                        color: geom.getDefaultValue('color')\r\n                    };\r\n                    var marker = shapeObject.getMarkerCfg(shape, cfg);\r\n                    var item = {\r\n                        value: value,\r\n                        marker: marker\r\n                    };\r\n                    items.push(item);\r\n                }\r\n            });\r\n        });\r\n        var options = {\r\n            custom: true,\r\n            items: items\r\n        };\r\n        self.options = Util.deepMix({}, options, self.options);\r\n        var legend = self.addCustomLegend();\r\n        self._bindClickEventForMix(legend);\r\n    };\r\n    _proto.alignLegends = function alignLegends() {\r\n        var self = this;\r\n        var legends = self.legends;\r\n        var totalRegion = self._getRegion(legends);\r\n        self.totalRegion = totalRegion;\r\n        var i = 0;\r\n        Util.each(legends, function (legendItems, position) {\r\n            var region = totalRegion.subs[i];\r\n            Util.each(legendItems, function (legend, index) {\r\n                var pre = legendItems[index - 1];\r\n                if (!(legend.get('useHtml') && !legend.get('autoPosition'))) {\r\n                    self._alignLegend(legend, pre, region, position);\r\n                }\r\n            });\r\n            i++;\r\n        });\r\n        return this;\r\n    };\r\n    return LegendController;\r\n}();\r\nmodule.exports = LegendController;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\chart\\controller\\legend.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\chart\\controller\\legend.js"],"names":[],"mappings":"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","sourcesContent":["var Util = require('../../util');\n\nvar _require = require('@antv/component/lib'),\n    Legend = _require.Legend;\n\nvar Tail = require('../../component/legend/tail');\n\nvar Shape = require('../../geom/shape/shape');\n\nvar FIELD_ORIGIN = '_origin';\nvar MARKER_SIZE = 4.5;\nvar requireAnimationFrameFn = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;\n\nfunction _snapEqual(v1, v2, scale) {\n  var isEqual;\n\n  if (Util.isNil(scale)) {\n    return false;\n  }\n\n  v1 = scale.translate(v1);\n  v2 = scale.translate(v2);\n\n  if (scale.isCategory) {\n    isEqual = v1 === v2;\n  } else {\n    isEqual = Math.abs(v1 - v2) <= 1;\n  }\n\n  return isEqual;\n}\n\nfunction findGeom(geoms, value) {\n  var rst;\n  Util.each(geoms, function (geom) {\n    if (geom.get('visible')) {\n      var yScale = geom.getYScale();\n\n      if (yScale.field === value) {\n        rst = geom;\n        return;\n      }\n    }\n  });\n  return rst;\n}\n\nvar LegendController =\n/*#__PURE__*/\nfunction () {\n  function LegendController(cfg) {\n    var self = this;\n    self.options = {};\n    Util.mix(self, cfg);\n    self.clear();\n    var chart = self.chart;\n    self.container = chart.get('frontPlot');\n    self.plotRange = chart.get('plotRange');\n  }\n\n  var _proto = LegendController.prototype;\n\n  _proto.clear = function clear() {\n    var legends = this.legends;\n    this.backRange = null;\n    Util.each(legends, function (legendItems) {\n      Util.each(legendItems, function (legend) {\n        legend.destroy();\n      });\n    });\n    this.legends = {};\n  }; // 获取坐标轴等背景元素占的范围，防止遮挡坐标轴\n\n\n  _proto.getBackRange = function getBackRange() {\n    var backRange = this.backRange;\n\n    if (!backRange) {\n      backRange = this.chart.get('backPlot').getBBox();\n      var plotRange = this.plotRange;\n\n      if (backRange.maxX - backRange.minX < plotRange.br.x - plotRange.tl.x && backRange.maxY - backRange.minY < plotRange.br.y - plotRange.tl.y) {\n        // 如果背景小于则直接使用 plotRange\n        backRange = {\n          minX: plotRange.tl.x,\n          minY: plotRange.tl.y,\n          maxX: plotRange.br.x,\n          maxY: plotRange.br.y\n        };\n      }\n\n      this.backRange = backRange;\n    }\n\n    return backRange;\n  };\n\n  _proto._isFieldInView = function _isFieldInView(field, value, view) {\n    var flag = false;\n    var scales = view.get('scales');\n    var fieldScale = scales[field];\n\n    if (fieldScale && fieldScale.values) {\n      flag = Util.inArray(fieldScale.values, value);\n    }\n\n    return flag;\n  };\n\n  _proto._bindClickEvent = function _bindClickEvent(legend, scale, filterVals) {\n    var self = this;\n    var chart = self.chart;\n    var views = chart.get('views');\n    var field = scale.field;\n    var options = self.options;\n    legend.on('itemclick', function (ev) {\n      if (options.onClick) {\n        // 用户自定义了图例点击事件\n        options.onClick(ev);\n      } else {\n        var item = ev.item;\n        var checked = ev.checked;\n        var isSingleSelected = legend.get('selectedMode') === 'single'; // 图例的选中模式\n\n        var clickedValue = item.dataValue; // import: 需要取该图例项原始的数值\n\n        if (checked) {\n          Util.Array.remove(filterVals, clickedValue);\n\n          if (self._isFieldInView(field, clickedValue, chart)) {\n            chart.filter(field, function (field) {\n              return isSingleSelected ? field === clickedValue : !Util.inArray(filterVals, field);\n            });\n          }\n\n          Util.each(views, function (view) {\n            if (self._isFieldInView(field, clickedValue, view)) {\n              view.filter(field, function (field) {\n                return isSingleSelected ? field === clickedValue : !Util.inArray(filterVals, field);\n              });\n            }\n          });\n        } else if (!isSingleSelected) {\n          filterVals.push(clickedValue);\n\n          if (self._isFieldInView(field, clickedValue, chart)) {\n            chart.filter(field, function (field) {\n              return !Util.inArray(filterVals, field);\n            });\n          }\n\n          Util.each(views, function (view) {\n            if (self._isFieldInView(field, clickedValue, view)) {\n              view.filter(field, function (field) {\n                return !Util.inArray(filterVals, field);\n              });\n            }\n          });\n        }\n\n        chart.set('keepLegend', true); // 图例不重新渲染\n\n        chart.set('keepPadding', true); // 边框不重新计算\n\n        chart.repaint();\n        chart.set('keepPadding', false);\n        chart.set('keepLegend', false);\n      }\n    });\n  };\n\n  _proto._bindClickEventForMix = function _bindClickEventForMix(legend) {\n    var self = this;\n    var chart = self.chart;\n    var geoms = chart.getAllGeoms();\n    legend.on('itemclick', function (ev) {\n      var value = ev.item.value;\n      var checked = ev.checked;\n\n      if (checked) {\n        Util.each(geoms, function (geom) {\n          var field = geom.getYScale().field;\n\n          if (field === value) {\n            geom.show();\n          }\n        });\n      } else {\n        Util.each(geoms, function (geom) {\n          var field = geom.getYScale().field;\n\n          if (field === value) {\n            geom.hide();\n          }\n        });\n      }\n    });\n  };\n\n  _proto._filterLabels = function _filterLabels(shape, geom, visible) {\n    if (shape.get('gLabel')) {\n      shape.get('gLabel').set('visible', visible);\n    } else {\n      var labelCfg = geom.get('labelCfg');\n\n      if (labelCfg && labelCfg.fields && labelCfg.fields.length > 0) {\n        var xScale = geom.getXScale();\n        var yScale = geom.getYScale();\n        var xField = xScale.field;\n        var yField = yScale.field;\n\n        var shapeData = shape.get('origin')._origin;\n\n        var labelContainer = geom.get('labelContainer');\n        var labels = labelContainer.get('labelsGroup').get('children');\n        Util.each(labels, function (label) {\n          var labelData = label.get('origin') || [];\n\n          if (labelData[xField] === shapeData[xField] && labelData[yField] === shapeData[yField]) {\n            label.set('visible', visible);\n            shape.set('gLabel', label);\n          }\n        });\n      }\n    }\n  };\n\n  _proto._bindFilterEvent = function _bindFilterEvent(legend, scale) {\n    var self = this;\n    var chart = this.chart;\n    var field = scale.field;\n    legend.on('itemfilter', function (ev) {\n      var range = ev.range;\n      chart.filterShape(function (obj, shape, geom) {\n        if (obj[field]) {\n          var filtered = obj[field] >= range[0] && obj[field] <= range[1]; // shape 带 label，则还需要隐藏 label\n\n          self._filterLabels(shape, geom, filtered);\n\n          return filtered;\n        }\n\n        return true;\n      });\n      var geoms = chart.getAllGeoms() || [];\n\n      var _loop = function _loop(i) {\n        var geom = geoms[i];\n\n        if (geom.get('type') === 'heatmap') {\n          requireAnimationFrameFn(function () {\n            geom.drawWithRange(range);\n          });\n        }\n      };\n\n      for (var i = 0; i < geoms.length; i++) {\n        _loop(i);\n      }\n    });\n  };\n\n  _proto._getShapeData = function _getShapeData(shape) {\n    var originData = shape.get('origin');\n\n    if (Util.isArray(originData)) {\n      originData = originData[0];\n    }\n\n    return originData[FIELD_ORIGIN];\n  };\n\n  _proto._bindHoverEvent = function _bindHoverEvent(legend, field) {\n    var self = this;\n    var chart = self.chart;\n    var geoms = chart.getAllGeoms();\n    var options = self.options;\n    var canvas = chart.get('canvas');\n    legend.on('itemhover', function (ev) {\n      var value = ev.item.value;\n      var pre = self.pre;\n\n      if (!pre) {\n        Util.each(geoms, function (geom) {\n          var shapeContainer = geom.get('shapeContainer');\n          var shapes = geom.getShapes();\n          var activeShapes = [];\n\n          if (field) {\n            var scale = geom.get('scales')[field];\n            Util.each(shapes, function (shape) {\n              var origin = self._getShapeData(shape);\n\n              if (origin && _snapEqual(origin[field], value, scale)) {\n                activeShapes.push(shape);\n              }\n            });\n          } else if (geom.getYScale().field === value) {\n            activeShapes = shapes;\n          }\n\n          if (!Util.isEmpty(activeShapes)) {\n            ev.shapes = activeShapes;\n            ev.geom = geom;\n\n            if (options.onHover) {\n              options.onHover(ev);\n              shapeContainer.sort();\n              canvas.draw();\n            } else {\n              geom.setShapesActived(activeShapes);\n            }\n          }\n        });\n        self.pre = value;\n      } else if (pre === value) {\n        return;\n      }\n    });\n    legend.on('itemunhover', function () {\n      self.pre = null;\n      Util.each(geoms, function (geom) {\n        if (geom.get('activeShapes')) {\n          geom.clearActivedShapes();\n          canvas.draw();\n        }\n      });\n    });\n  };\n\n  _proto._isFiltered = function _isFiltered(scale, filterVals, scaleValue) {\n    if (!scale.isCategory) {\n      return true;\n    }\n\n    var rst = true;\n    scaleValue = scale.invert(scaleValue);\n    Util.each(filterVals, function (val) {\n      if (scale.getText(val) === scale.getText(scaleValue)) {\n        rst = false;\n        return false;\n      }\n    });\n    return rst;\n  };\n\n  _proto._alignLegend = function _alignLegend(legend, pre, region, position) {\n    var self = this;\n    var viewTheme = self.viewTheme;\n    var container = self.container;\n    var canvas = container.get('canvas');\n    var width = canvas.get('width');\n    var height = canvas.get('height');\n    var totalRegion = self.totalRegion;\n    var plotRange = self.plotRange;\n    var backRange = self.getBackRange(); // 背景占得范围\n\n    var offsetX = legend.get('offset')[0] || 0;\n    var offsetY = legend.get('offset')[1] || 0; // const offset = Util.isNil(legend.get('offset')) ? MARGIN : legend.get('offset');\n\n    var legendHeight = legend.getHeight();\n    var legendWidth = legend.getWidth();\n    var borderMargin = viewTheme.legend.margin;\n    var innerMargin = viewTheme.legend.legendMargin;\n    var legendNum = self.legends[position].length;\n    var posArray = position.split('-');\n    var x = 0;\n    var y = 0;\n    var tempoRegion = legendNum > 1 ? totalRegion : region;\n\n    if (posArray[0] === 'left' || posArray[0] === 'right') {\n      height = plotRange.br.y;\n      x = self._getXAlign(posArray[0], width, region, backRange, legendWidth, borderMargin);\n\n      if (pre) {\n        // @2018-10-19 by blue.lb 由于legend中并不存在y属性，这里需要先获取group再获取y值\n        y = pre.get('group').get('y') + pre.getHeight() + innerMargin;\n      } else {\n        y = self._getYAlignVertical(posArray[1], height, tempoRegion, backRange, 0, borderMargin, canvas.get('height'));\n      }\n    } else if (posArray[0] === 'top' || posArray[0] === 'bottom') {\n      y = self._getYAlignHorizontal(posArray[0], height, region, backRange, legendHeight, borderMargin);\n\n      if (pre) {\n        var preWidth = pre.getWidth(); // @2018-10-19 by blue.lb 由于legend中并不存在x属性，这里需要先获取group再获取x值\n\n        x = pre.get('group').get('x') + preWidth + innerMargin;\n      } else {\n        x = self._getXAlign(posArray[1], width, tempoRegion, backRange, 0, borderMargin);\n        if (posArray[1] === 'right') x = plotRange.br.x - tempoRegion.totalWidth;\n      }\n    }\n\n    legend.move(x + offsetX, y + offsetY);\n  };\n\n  _proto._getXAlign = function _getXAlign(pos, width, region, backRange, legendWidth, borderMargin) {\n    var x = pos === 'left' ? backRange.minX - legendWidth - borderMargin[3] : backRange.maxX + borderMargin[1];\n\n    if (pos === 'center') {\n      x = (width - region.totalWidth) / 2;\n    }\n\n    return x;\n  };\n\n  _proto._getYAlignHorizontal = function _getYAlignHorizontal(pos, height, region, backRange, legendHeight, borderMargin) {\n    var y = pos === 'top' ? backRange.minY - legendHeight - borderMargin[0] : backRange.maxY + borderMargin[2];\n    return y;\n  };\n\n  _proto._getYAlignVertical = function _getYAlignVertical(pos, height, region, backRange, legendHeight, borderMargin, canvasHeight) {\n    var y = pos === 'top' ? backRange.minY - legendHeight - borderMargin[0] : height - region.totalHeight;\n\n    if (pos === 'center') {\n      y = (canvasHeight - region.totalHeight) / 2;\n    }\n\n    return y;\n  };\n\n  _proto._getSubRegion = function _getSubRegion(legends) {\n    var maxWidth = 0;\n    var maxHeight = 0;\n    var totalWidth = 0;\n    var totalHeight = 0;\n    Util.each(legends, function (legend) {\n      var width = legend.getWidth();\n      var height = legend.getHeight();\n\n      if (maxWidth < width) {\n        maxWidth = width;\n      }\n\n      totalWidth += width;\n\n      if (maxHeight < height) {\n        maxHeight = height;\n      }\n\n      totalHeight += height;\n    });\n    return {\n      maxWidth: maxWidth,\n      totalWidth: totalWidth,\n      maxHeight: maxHeight,\n      totalHeight: totalHeight\n    };\n  };\n\n  _proto._getRegion = function _getRegion() {\n    var self = this;\n    var viewTheme = self.viewTheme;\n    var legends = self.legends;\n    var innerMargin = viewTheme.legend.legendMargin;\n    var subs = [];\n    var totalWidth = 0;\n    var totalHeight = 0;\n    Util.each(legends, function (legendItems) {\n      var subRegion = self._getSubRegion(legendItems);\n\n      subs.push(subRegion);\n      totalWidth += subRegion.totalWidth + innerMargin;\n      totalHeight += subRegion.totalHeight + innerMargin;\n    });\n    return {\n      totalWidth: totalWidth,\n      totalHeight: totalHeight,\n      subs: subs\n    };\n  };\n\n  _proto._addCategoryLegend = function _addCategoryLegend(scale, attr, geom, filterVals, position) {\n    var self = this;\n    var field = scale.field;\n    var legendOptions = self.options;\n    var fieldOption = legendOptions[field];\n\n    if (fieldOption) {\n      legendOptions = fieldOption;\n    }\n\n    var legends = self.legends;\n    legends[position] = legends[position] || [];\n    var container = self.container;\n    var items = [];\n    var ticks = scale.getTicks();\n    var isByAttr = true;\n    var shapeType = geom.get('shapeType') || 'point';\n    var shape = geom.getDefaultValue('shape') || 'circle';\n\n    if (legendOptions[field] && legendOptions[field].marker) {\n      // 用户为 field 对应的图例定义了 marker\n      shape = legendOptions[field].marker;\n      shapeType = 'point';\n      isByAttr = false;\n    } else if (legendOptions.marker) {\n      shape = legendOptions.marker;\n      shapeType = 'point';\n      isByAttr = false;\n    }\n\n    var chart = self.chart;\n    var viewTheme = self.viewTheme;\n    var canvas = chart.get('canvas');\n    var plotRange = self.plotRange;\n    var posArray = position.split('-');\n    var maxLength = posArray[0] === 'right' || posArray[0] === 'left' ? plotRange.bl.y - plotRange.tr.y : canvas.get('width');\n    Util.each(ticks, function (tick) {\n      var text = tick.text;\n      var name = text;\n      var scaleValue = tick.value;\n      var value = scale.invert(scaleValue);\n      var cfg = {\n        isInCircle: geom.isInCircle()\n      };\n      var checked = filterVals ? self._isFiltered(scale, filterVals, scaleValue) : true;\n      var colorAttr = geom.getAttr('color');\n      var shapeAttr = geom.getAttr('shape');\n\n      if (colorAttr) {\n        // 存在颜色映射\n        if (colorAttr.callback && colorAttr.callback.length > 1) {\n          // 多参数映射，阻止程序报错\n          var restArgs = Array(colorAttr.callback.length - 1).fill('');\n          cfg.color = colorAttr.mapping.apply(colorAttr, [value].concat(restArgs)).join('') || viewTheme.defaultColor;\n        } else {\n          cfg.color = colorAttr.mapping(value).join('') || viewTheme.defaultColor;\n        }\n      }\n\n      if (isByAttr && shapeAttr) {\n        // 存在形状映射\n        if (shapeAttr.callback && shapeAttr.callback.length > 1) {\n          // 多参数映射，阻止程序报错\n          var _restArgs = Array(shapeAttr.callback.length - 1).fill('');\n\n          shape = shapeAttr.mapping.apply(shapeAttr, [value].concat(_restArgs)).join('');\n        } else {\n          shape = shapeAttr.mapping(value).join('');\n        }\n      }\n\n      var shapeObject = Shape.getShapeFactory(shapeType);\n      var marker = shapeObject.getMarkerCfg(shape, cfg);\n\n      if (Util.isFunction(shape)) {\n        marker.symbol = shape;\n      }\n\n      items.push({\n        value: name,\n        // 图例项显示文本的内容\n        dataValue: value,\n        // 图例项对应原始数据中的数值\n        checked: checked,\n        marker: marker\n      });\n    });\n    var legendCfg = Util.deepMix({}, viewTheme.legend[posArray[0]], legendOptions[field] || legendOptions, {\n      viewId: chart.get('_id'),\n      maxLength: maxLength,\n      items: items,\n      container: container,\n      position: [0, 0]\n    });\n\n    if (legendCfg.title) {\n      Util.deepMix(legendCfg, {\n        title: {\n          text: scale.alias || scale.field\n        }\n      });\n    }\n\n    var legend;\n\n    if (self._isTailLegend(legendOptions, geom)) {\n      legendCfg.chart = self.chart;\n      legendCfg.geom = geom;\n      legend = new Tail(legendCfg);\n    } else {\n      if (legendOptions.useHtml) {\n        var canvasEle = container.get('canvas').get('el');\n        container = legendOptions.container;\n\n        if (Util.isString(container) && /^\\#/.test(container)) {\n          // 如果传入 dom 节点的 id\n          var id = container.replace('#', '');\n          container = document.getElementById(id);\n        }\n\n        if (!container) {\n          container = canvasEle.parentNode;\n        }\n\n        legendCfg.container = container;\n        if (legendCfg.legendStyle === undefined) legendCfg.legendStyle = {};\n        legendCfg.legendStyle.CONTAINER_CLASS = {\n          height: posArray[0] === 'right' || posArray[0] === 'left' ? maxLength + 'px' : 'auto',\n          width: !(posArray[0] === 'right' || posArray[0] === 'left') ? maxLength + 'px' : 'auto',\n          position: 'absolute',\n          overflow: 'auto',\n          'z-index': canvasEle.style.zIndex === '' ? 1 : parseInt(canvasEle.style.zIndex, 10) + 1\n        };\n\n        if (legendOptions.flipPage) {\n          legend = new Legend.CatPageHtml(legendCfg);\n        } else {\n          legend = new Legend.CatHtml(legendCfg);\n        }\n      } else {\n        legend = new Legend.Category(legendCfg);\n      }\n    }\n\n    self._bindClickEvent(legend, scale, filterVals);\n\n    legends[position].push(legend);\n    return legend;\n  };\n\n  _proto._bindChartMove = function _bindChartMove(scale) {\n    var chart = this.chart;\n    var legends = this.legends;\n    chart.on('plotmove', function (ev) {\n      var selected = false;\n\n      if (ev.target) {\n        var origin = ev.target.get('origin');\n\n        if (origin) {\n          var data = origin[FIELD_ORIGIN] || origin[0][FIELD_ORIGIN];\n          var field = scale.field;\n\n          if (data) {\n            var value = data[field];\n            Util.each(legends, function (legendItems) {\n              Util.each(legendItems, function (legend) {\n                selected = true;\n                !legend.destroyed && legend.activate(value);\n              });\n            });\n          }\n        }\n      }\n\n      if (!selected) {\n        Util.each(legends, function (legendItems) {\n          Util.each(legendItems, function (legend) {\n            !legend.destroyed && legend.unactivate();\n          });\n        });\n      }\n    });\n  };\n\n  _proto._addContinuousLegend = function _addContinuousLegend(scale, attr, position) {\n    var self = this;\n    var legends = self.legends;\n    legends[position] = legends[position] || [];\n    var container = self.container;\n    var field = scale.field;\n    var ticks = scale.getTicks();\n    var items = [];\n    var legend;\n    var minValue;\n    var maxValue;\n    var viewTheme = self.viewTheme;\n    Util.each(ticks, function (tick) {\n      var scaleValue = tick.value;\n      var invertValue = scale.invert(scaleValue);\n      var attrValue = attr.mapping(invertValue).join('');\n      items.push({\n        value: tick.tickValue,\n        // tick.text\n        attrValue: attrValue,\n        color: attrValue,\n        scaleValue: scaleValue\n      });\n\n      if (scaleValue === 0) {\n        minValue = true;\n      }\n\n      if (scaleValue === 1) {\n        maxValue = true;\n      }\n    });\n\n    if (!minValue) {\n      items.push({\n        value: scale.min,\n        attrValue: attr.mapping(0).join(''),\n        color: attr.mapping(0).join(''),\n        scaleValue: 0\n      });\n    }\n\n    if (!maxValue) {\n      items.push({\n        value: scale.max,\n        attrValue: attr.mapping(1).join(''),\n        color: attr.mapping(1).join(''),\n        scaleValue: 1\n      });\n    }\n\n    var options = self.options;\n    var posArray = position.split('-');\n    var defaultCfg = viewTheme.legend[posArray[0]];\n\n    if (options && options.slidable === false || options[field] && options[field].slidable === false) {\n      defaultCfg = Util.mix({}, defaultCfg, viewTheme.legend.gradient);\n    }\n\n    var legendCfg = Util.deepMix({}, defaultCfg, options[field] || options, {\n      items: items,\n      attr: attr,\n      formatter: scale.formatter,\n      container: container,\n      position: [0, 0]\n    });\n\n    if (legendCfg.title) {\n      Util.deepMix(legendCfg, {\n        title: {\n          text: scale.alias || scale.field\n        }\n      });\n    }\n\n    if (attr.type === 'color') {\n      legend = new Legend.Color(legendCfg);\n    } else if (attr.type === 'size') {\n      if (options && options.sizeType === 'circle') legend = new Legend.CircleSize(legendCfg);else legend = new Legend.Size(legendCfg);\n    }\n\n    self._bindFilterEvent(legend, scale);\n\n    legends[position].push(legend);\n    return legend;\n  };\n\n  _proto._isTailLegend = function _isTailLegend(opt, geom) {\n    if (opt.hasOwnProperty('attachLast') && opt.attachLast) {\n      var geomType = geom.get('type');\n      if (geomType === 'line' || geomType === 'lineStack' || geomType === 'area' || geomType === 'areaStack') return true;\n    }\n\n    return false;\n  };\n\n  _proto._adjustPosition = function _adjustPosition(position, isTailLegend) {\n    var pos;\n\n    if (isTailLegend) {\n      pos = 'right-top';\n    } else if (Util.isArray(position)) {\n      pos = String(position[0]) + '-' + String(position[1]);\n    } else {\n      var posArr = position.split('-');\n\n      if (posArr.length === 1) {\n        // 只用了left/right/bottom/top一个位置定位\n        if (posArr[0] === 'left') pos = 'left-bottom';\n        if (posArr[0] === 'right') pos = 'right-bottom';\n        if (posArr[0] === 'top') pos = 'top-center';\n        if (posArr[0] === 'bottom') pos = 'bottom-center';\n      } else {\n        pos = position;\n      }\n    }\n\n    return pos;\n  };\n\n  _proto.addLegend = function addLegend(scale, attr, geom, filterVals) {\n    var self = this;\n    var legendOptions = self.options;\n    var field = scale.field;\n    var fieldOption = legendOptions[field];\n    var viewTheme = self.viewTheme;\n\n    if (fieldOption === false) {\n      // 如果不显示此图例\n      return null;\n    }\n\n    if (fieldOption && fieldOption.custom) {\n      self.addCustomLegend(field);\n    } else {\n      var position = legendOptions.position || viewTheme.defaultLegendPosition;\n      position = self._adjustPosition(position, self._isTailLegend(legendOptions, geom));\n\n      if (fieldOption && fieldOption.position) {\n        // 如果对某个图例单独设置 position，则对 position 重新赋值\n        position = self._adjustPosition(fieldOption.position, self._isTailLegend(fieldOption, geom));\n      }\n\n      var legend;\n\n      if (scale.isLinear) {\n        legend = self._addContinuousLegend(scale, attr, position);\n      } else {\n        legend = self._addCategoryLegend(scale, attr, geom, filterVals, position);\n      }\n\n      self._bindHoverEvent(legend, field);\n\n      legendOptions.reactive && self._bindChartMove(scale);\n    }\n  };\n  /**\n   * 自定义图例\n   * @param {string} field 自定义图例的数据字段名，可以为空\n   * @return {object} legend 自定义图例实例\n   */\n\n\n  _proto.addCustomLegend = function addCustomLegend(field) {\n    var self = this;\n    var chart = self.chart;\n    var viewTheme = self.viewTheme;\n    var container = self.container;\n    var legendOptions = self.options;\n\n    if (field) {\n      legendOptions = legendOptions[field];\n    }\n\n    var position = legendOptions.position || viewTheme.defaultLegendPosition;\n    position = self._adjustPosition(position);\n    var legends = self.legends;\n    legends[position] = legends[position] || [];\n    var items = legendOptions.items;\n\n    if (!items) {\n      return;\n    }\n\n    var geoms = chart.getAllGeoms();\n    Util.each(items, function (item) {\n      var geom = findGeom(geoms, item.value);\n\n      if (!Util.isObject(item.marker)) {\n        item.marker = {\n          symbol: item.marker ? item.marker : 'circle',\n          fill: item.fill,\n          radius: MARKER_SIZE\n        };\n      } else {\n        item.marker.radius = item.marker.radius || MARKER_SIZE;\n      }\n\n      item.checked = Util.isNil(item.checked) ? true : item.checked;\n      item.geom = geom;\n    });\n    var canvas = chart.get('canvas');\n    var plotRange = self.plotRange;\n    var posArray = position.split('-');\n    var maxLength = posArray[0] === 'right' || posArray[0] === 'left' ? plotRange.bl.y - plotRange.tr.y : canvas.get('width');\n    var legendCfg = Util.deepMix({}, viewTheme.legend[posArray[0]], legendOptions, {\n      maxLength: maxLength,\n      items: items,\n      container: container,\n      position: [0, 0]\n    });\n    var legend;\n\n    if (legendOptions.useHtml) {\n      var htmlContainer = legendOptions.container;\n\n      if (/^\\#/.test(container)) {\n        // 如果传入 dom 节点的 id\n        var id = htmlContainer.replace('#', '');\n        htmlContainer = document.getElementById(id);\n      } else if (!htmlContainer) {\n        htmlContainer = container.get('canvas').get('el').parentNode;\n      }\n\n      legendCfg.container = htmlContainer;\n      if (legendCfg.legendStyle === undefined) legendCfg.legendStyle = {};\n\n      if (!legendCfg.legendStyle.CONTAINER_CLASS) {\n        legendCfg.legendStyle.CONTAINER_CLASS = {\n          height: posArray[0] === 'right' || posArray[0] === 'left' ? maxLength + 'px' : 'auto',\n          width: !(posArray[0] === 'right' || posArray[0] === 'left') ? maxLength + 'px' : 'auto',\n          position: 'absolute',\n          overflow: 'auto'\n        };\n      }\n\n      if (legendOptions.flipPage) legend = new Legend.CatPageHtml(legendCfg);else legend = new Legend.CatHtml(legendCfg);\n    } else legend = new Legend.Category(legendCfg);\n\n    legends[position].push(legend);\n    legend.on('itemclick', function (ev) {\n      if (legendOptions.onClick) {\n        // 用户自定义了图例点击事件\n        legendOptions.onClick(ev);\n      }\n    });\n\n    self._bindHoverEvent(legend);\n\n    return legend;\n  };\n\n  _proto.addMixedLegend = function addMixedLegend(scales, geoms) {\n    var self = this;\n    var items = [];\n    Util.each(scales, function (scale) {\n      var value = scale.field;\n      Util.each(geoms, function (geom) {\n        if (geom.getYScale() === scale && scale.values && scale.values.length > 0) {\n          var shapeType = geom.get('shapeType') || 'point';\n          var shape = geom.getDefaultValue('shape') || 'circle';\n          var shapeObject = Shape.getShapeFactory(shapeType);\n          var cfg = {\n            color: geom.getDefaultValue('color')\n          };\n          var marker = shapeObject.getMarkerCfg(shape, cfg);\n          var item = {\n            value: value,\n            marker: marker\n          };\n          items.push(item);\n        }\n      }); // end of geom loop\n    }); // end of scale loop\n\n    var options = {\n      custom: true,\n      items: items\n    };\n    self.options = Util.deepMix({}, options, self.options);\n    var legend = self.addCustomLegend();\n\n    self._bindClickEventForMix(legend);\n  };\n\n  _proto.alignLegends = function alignLegends() {\n    var self = this;\n    var legends = self.legends;\n\n    var totalRegion = self._getRegion(legends);\n\n    self.totalRegion = totalRegion;\n    var i = 0;\n    Util.each(legends, function (legendItems, position) {\n      var region =\n      /* self._getRegion(legendItems)*/\n      totalRegion.subs[i];\n      Util.each(legendItems, function (legend, index) {\n        var pre = legendItems[index - 1];\n\n        if (!(legend.get('useHtml') && !legend.get('autoPosition'))) {\n          self._alignLegend(legend, pre, region, position);\n        }\n      });\n      i++;\n    });\n    return this;\n  };\n\n  return LegendController;\n}();\n\nmodule.exports = LegendController;"]}]}