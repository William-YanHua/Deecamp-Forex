{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\src\\app\\routing\\RouteConfig.tsx","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\src\\app\\routing\\RouteConfig.tsx","mtime":1596379644607},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { Redirect, Route } from \"react-router\";\r\nimport React from \"react\";\r\nimport { AsyncRoute } from \"./AsyncRoute\";\r\nexport var RouteType;\r\n(function (RouteType) {\r\n    RouteType[RouteType[\"Normal\"] = 0] = \"Normal\";\r\n    RouteType[RouteType[\"Async\"] = 1] = \"Async\";\r\n    RouteType[RouteType[\"Redirect\"] = 2] = \"Redirect\";\r\n})(RouteType || (RouteType = {}));\r\nexport function constructRoute(config, key, props) {\r\n    switch (config.type) {\r\n        case RouteType.Async:\r\n            return React.createElement(AsyncRoute, { exact: config.exact, key: key, path: config.path, component: config.component, props: props });\r\n        case RouteType.Redirect:\r\n            return React.createElement(Redirect, { exact: config.exact, key: key, from: config.path, path: config.path, to: config.to });\r\n        case RouteType.Normal:\r\n            return React.createElement(Route, { exact: config.exact, key: key, path: config.path, component: config.component });\r\n    }\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\src\\app\\routing\\RouteConfig.tsx","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\src\\app\\routing\\RouteConfig.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AAC/C,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAE1C,MAAM,CAAN,IAAY,SAIX;AAJD,WAAY,SAAS;IACnB,6CAAM,CAAA;IACN,2CAAK,CAAA;IACL,iDAAQ,CAAA;AACV,CAAC,EAJW,SAAS,KAAT,SAAS,QAIpB;AAyBD,MAAM,UAAU,cAAc,CAAC,MAAwB,EAAE,GAAoB,EAAE,KAAW;IAExF,QAAQ,MAAM,CAAC,IAAI,EAAE;QACnB,KAAK,SAAS,CAAC,KAAK;YAClB,OAAO,oBAAC,UAAU,IAAC,KAAK,EAAE,MAAM,CAAC,KAAK,EACnB,GAAG,EAAE,GAAG,EACR,IAAI,EAAE,MAAM,CAAC,IAAI,EACjB,SAAS,EAAE,MAAM,CAAC,SAAS,EAC3B,KAAK,EAAE,KAAK,GAC7B,CAAC;QACL,KAAK,SAAS,CAAC,QAAQ;YACrB,OAAO,oBAAC,QAAQ,IAAC,KAAK,EAAE,MAAM,CAAC,KAAK,EACnB,GAAG,EAAE,GAAG,EACR,IAAI,EAAE,MAAM,CAAC,IAAI,EACjB,IAAI,EAAE,MAAM,CAAC,IAAI,EACjB,EAAE,EAAE,MAAM,CAAC,EAAE,GAAG,CAAC;QACpC,KAAK,SAAS,CAAC,MAAM;YACnB,OAAO,oBAAC,KAAK,IAAC,KAAK,EAAE,MAAM,CAAC,KAAK,EACnB,GAAG,EAAE,GAAG,EACR,IAAI,EAAE,MAAM,CAAC,IAAI,EACjB,SAAS,EAAE,MAAM,CAAC,SAAS,GACzB,CAAC;KACpB;AACH,CAAC","sourcesContent":["import { Redirect, Route } from \"react-router\";\r\nimport React from \"react\";\r\nimport { AsyncRoute } from \"./AsyncRoute\";\r\n\r\nexport enum RouteType {\r\n  Normal,\r\n  Async,\r\n  Redirect,\r\n}\r\n\r\nexport interface RouteConfig {\r\n  path: string;\r\n  exact: boolean;\r\n  type: RouteType;\r\n}\r\n\r\nexport interface NormalRouteConfig extends RouteConfig {\r\n  type: RouteType.Normal;\r\n  component: any;\r\n}\r\n\r\nexport interface AsyncRouteConfig extends RouteConfig {\r\n  type: RouteType.Async;\r\n  component: Promise<any>;\r\n}\r\n\r\nexport interface RedirectRouteConfig extends RouteConfig {\r\n  type: RouteType.Redirect;\r\n  to: string;\r\n}\r\n\r\nexport type KnownRouteConfig = AsyncRouteConfig | RedirectRouteConfig | NormalRouteConfig;\r\n\r\nexport function constructRoute(config: KnownRouteConfig, key: number | string, props?: any) {\r\n\r\n  switch (config.type) {\r\n    case RouteType.Async:\r\n      return <AsyncRoute exact={config.exact}\r\n                         key={key}\r\n                         path={config.path}\r\n                         component={config.component}\r\n                         props={props}\r\n      />;\r\n    case RouteType.Redirect:\r\n      return <Redirect exact={config.exact}\r\n                       key={key}\r\n                       from={config.path}\r\n                       path={config.path}\r\n                       to={config.to}/>;\r\n    case RouteType.Normal:\r\n      return <Route exact={config.exact}\r\n                    key={key}\r\n                    path={config.path}\r\n                    component={config.component}\r\n                    />;\r\n  }\r\n}\r\n"]}]}