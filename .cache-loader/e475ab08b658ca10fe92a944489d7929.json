{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/g/lib/core/mixin/isPointInPath.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/g/lib/core/mixin/isPointInPath.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var Util = require('../../util/index');\nvar Inside = require('../../shapes/util/inside');\nvar mathUtl = {\n    arc: require('../../shapes/math/arc'),\n    ellipse: require('../../shapes/math/ellipse'),\n    line: require('../../shapes/math/line')\n};\nvar canvas = Util.createDom('<canvas width=\"500\" height=\"500\"></canvas>');\nvar context = canvas.getContext('2d');\nfunction isPointInPathByContext(x, y, ctx) {\n    ctx.createPath(context);\n    return context.isPointInPath(x, y);\n}\nvar arc = function arc(x, y) {\n    var attrs = this._attrs;\n    var cx = attrs.x;\n    var cy = attrs.y;\n    var r = attrs.r, startAngle = attrs.startAngle, endAngle = attrs.endAngle, clockwise = attrs.clockwise;\n    var lineWidth = this.getHitLineWidth();\n    if (this.hasStroke()) {\n        return Inside.arcline(cx, cy, r, startAngle, endAngle, clockwise, lineWidth, x, y);\n    }\n    return false;\n};\nvar circle = function circle(x, y) {\n    var attrs = this._attrs;\n    var cx = attrs.x;\n    var cy = attrs.y;\n    var r = attrs.r;\n    var lineWidth = this.getHitLineWidth();\n    var fill = this.hasFill();\n    var stroke = this.hasStroke();\n    if (fill && stroke) {\n        return Inside.circle(cx, cy, r, x, y) || Inside.arcline(cx, cy, r, 0, Math.PI * 2, false, lineWidth, x, y);\n    }\n    if (fill) {\n        return Inside.circle(cx, cy, r, x, y);\n    }\n    if (stroke) {\n        return Inside.arcline(cx, cy, r, 0, Math.PI * 2, false, lineWidth, x, y);\n    }\n    return false;\n};\nvar ellipse = function ellipse(x, y) {\n    var attrs = this._attrs;\n    var fill = this.hasFill();\n    var stroke = this.hasStroke();\n    var cx = attrs.x;\n    var cy = attrs.y;\n    var rx = attrs.rx;\n    var ry = attrs.ry;\n    var lineWidth = this.getHitLineWidth();\n    var r = rx > ry ? rx : ry;\n    var scaleX = rx > ry ? 1 : rx / ry;\n    var scaleY = rx > ry ? ry / rx : 1;\n    var p = [x, y, 1];\n    var m = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    Util.mat3.scale(m, m, [scaleX, scaleY]);\n    Util.mat3.translate(m, m, [cx, cy]);\n    var inm = Util.mat3.invert([], m);\n    Util.vec3.transformMat3(p, p, inm);\n    if (fill && stroke) {\n        return Inside.circle(0, 0, r, p[0], p[1]) || Inside.arcline(0, 0, r, 0, Math.PI * 2, false, lineWidth, p[0], p[1]);\n    }\n    if (fill) {\n        return Inside.circle(0, 0, r, p[0], p[1]);\n    }\n    if (stroke) {\n        return Inside.arcline(0, 0, r, 0, Math.PI * 2, false, lineWidth, p[0], p[1]);\n    }\n    return false;\n};\nvar fan = function fan(x, y) {\n    var self = this;\n    var fill = self.hasFill();\n    var stroke = self.hasStroke();\n    var attrs = self._attrs;\n    var cx = attrs.x;\n    var cy = attrs.y;\n    var rs = attrs.rs;\n    var re = attrs.re;\n    var startAngle = attrs.startAngle;\n    var endAngle = attrs.endAngle;\n    var clockwise = attrs.clockwise;\n    var v1 = [1, 0];\n    var subv = [x - cx, y - cy];\n    var angle = Util.vec2.angleTo(v1, subv);\n    function _isPointInFill() {\n        var angle1 = mathUtl.arc.nearAngle(angle, startAngle, endAngle, clockwise);\n        if (Util.isNumberEqual(angle, angle1)) {\n            var ls = Util.vec2.squaredLength(subv);\n            if (rs * rs <= ls && ls <= re * re) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function _isPointInStroke() {\n        var lineWidth = self.getHitLineWidth();\n        var ssp = {\n            x: Math.cos(startAngle) * rs + cx,\n            y: Math.sin(startAngle) * rs + cy\n        };\n        var sep = {\n            x: Math.cos(startAngle) * re + cx,\n            y: Math.sin(startAngle) * re + cy\n        };\n        var esp = {\n            x: Math.cos(endAngle) * rs + cx,\n            y: Math.sin(endAngle) * rs + cy\n        };\n        var eep = {\n            x: Math.cos(endAngle) * re + cx,\n            y: Math.sin(endAngle) * re + cy\n        };\n        if (Inside.line(ssp.x, ssp.y, sep.x, sep.y, lineWidth, x, y)) {\n            return true;\n        }\n        if (Inside.line(esp.x, esp.y, eep.x, eep.y, lineWidth, x, y)) {\n            return true;\n        }\n        if (Inside.arcline(cx, cy, rs, startAngle, endAngle, clockwise, lineWidth, x, y)) {\n            return true;\n        }\n        if (Inside.arcline(cx, cy, re, startAngle, endAngle, clockwise, lineWidth, x, y)) {\n            return true;\n        }\n        return false;\n    }\n    if (fill && stroke) {\n        return _isPointInFill() || _isPointInStroke();\n    }\n    if (fill) {\n        return _isPointInFill();\n    }\n    if (stroke) {\n        return _isPointInStroke();\n    }\n    return false;\n};\nvar image = function image(x, y) {\n    var attrs = this._attrs;\n    if (this.get('toDraw') || !attrs.img) {\n        return false;\n    }\n    if (!this._cfg.attrs || this._cfg.attrs.img !== attrs.img) {\n        this._setAttrImg();\n    }\n    var rx = attrs.x;\n    var ry = attrs.y;\n    var width = attrs.width;\n    var height = attrs.height;\n    return Inside.rect(rx, ry, width, height, x, y);\n};\nvar line = function line(x, y) {\n    var attrs = this._attrs;\n    var x1 = attrs.x1, y1 = attrs.y1, x2 = attrs.x2, y2 = attrs.y2;\n    var lineWidth = this.getHitLineWidth();\n    if (this.hasStroke()) {\n        return Inside.line(x1, y1, x2, y2, lineWidth, x, y);\n    }\n    return false;\n};\nvar path = function path(x, y) {\n    var self = this;\n    var segments = self.get('segments');\n    var fill = self.hasFill();\n    var stroke = self.hasStroke();\n    function _isPointInStroke() {\n        if (!Util.isEmpty(segments)) {\n            var lineWidth = self.getHitLineWidth();\n            for (var i = 0, l = segments.length; i < l; i++) {\n                if (segments[i].isInside(x, y, lineWidth)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n    if (fill && stroke) {\n        return isPointInPathByContext(x, y, self) || _isPointInStroke();\n    }\n    if (fill) {\n        return isPointInPathByContext(x, y, self);\n    }\n    if (stroke) {\n        return _isPointInStroke();\n    }\n    return false;\n};\nvar polygon = function polygon(x, y) {\n    var self = this;\n    var fill = self.hasFill();\n    var stroke = self.hasStroke();\n    function _isPointInStroke() {\n        var attrs = self._attrs;\n        var points = attrs.points;\n        if (points.length < 2) {\n            return false;\n        }\n        var lineWidth = self.getHitLineWidth();\n        var outPoints = points.slice(0);\n        if (points.length >= 3) {\n            outPoints.push(points[0]);\n        }\n        return Inside.polyline(outPoints, lineWidth, x, y);\n    }\n    if (fill && stroke) {\n        return isPointInPathByContext(x, y, self) || _isPointInStroke();\n    }\n    if (fill) {\n        return isPointInPathByContext(x, y, self);\n    }\n    if (stroke) {\n        return _isPointInStroke();\n    }\n    return false;\n};\nvar marker = function marker(x, y) {\n    var attrs = this._attrs;\n    var cx = attrs.x;\n    var cy = attrs.y;\n    var r = attrs.radius || attrs.r;\n    var lineWidth = this.getHitLineWidth();\n    return Inside.circle(cx, cy, r + lineWidth / 2, x, y);\n};\nvar polyline = function polyline(x, y) {\n    var self = this;\n    var attrs = self._attrs;\n    if (self.hasStroke()) {\n        var points = attrs.points;\n        if (points.length < 2) {\n            return false;\n        }\n        var lineWidth = attrs.lineWidth;\n        return Inside.polyline(points, lineWidth, x, y);\n    }\n    return false;\n};\nvar rect = function rect(x, y) {\n    var self = this;\n    var fill = self.hasFill();\n    var stroke = self.hasStroke();\n    function _isPointInStroke() {\n        var attrs = self._attrs;\n        var rx = attrs.x;\n        var ry = attrs.y;\n        var width = attrs.width;\n        var height = attrs.height;\n        var radius = attrs.radius;\n        var lineWidth = self.getHitLineWidth();\n        if (radius === 0) {\n            var halfWidth = lineWidth / 2;\n            return Inside.line(rx - halfWidth, ry, rx + width + halfWidth, ry, lineWidth, x, y) || Inside.line(rx + width, ry - halfWidth, rx + width, ry + height + halfWidth, lineWidth, x, y) || Inside.line(rx + width + halfWidth, ry + height, rx - halfWidth, ry + height, lineWidth, x, y) || Inside.line(rx, ry + height + halfWidth, rx, ry - halfWidth, lineWidth, x, y);\n        }\n        return Inside.line(rx + radius, ry, rx + width - radius, ry, lineWidth, x, y) || Inside.line(rx + width, ry + radius, rx + width, ry + height - radius, lineWidth, x, y) || Inside.line(rx + width - radius, ry + height, rx + radius, ry + height, lineWidth, x, y) || Inside.line(rx, ry + height - radius, rx, ry + radius, lineWidth, x, y) || Inside.arcline(rx + width - radius, ry + radius, radius, 1.5 * Math.PI, 2 * Math.PI, false, lineWidth, x, y) || Inside.arcline(rx + width - radius, ry + height - radius, radius, 0, 0.5 * Math.PI, false, lineWidth, x, y) || Inside.arcline(rx + radius, ry + height - radius, radius, 0.5 * Math.PI, Math.PI, false, lineWidth, x, y) || Inside.arcline(rx + radius, ry + radius, radius, Math.PI, 1.5 * Math.PI, false, lineWidth, x, y);\n    }\n    if (fill && stroke) {\n        return isPointInPathByContext(x, y, self) || _isPointInStroke();\n    }\n    if (fill) {\n        return isPointInPathByContext(x, y, self);\n    }\n    if (stroke) {\n        return _isPointInStroke();\n    }\n    return false;\n};\nvar text = function text(x, y) {\n    var self = this;\n    var box = self.getBBox();\n    if (self.hasFill() || self.hasStroke()) {\n        return Inside.box(box.minX, box.maxX, box.minY, box.maxY, x, y);\n    }\n};\nvar dom = function dom(x, y) {\n    if (!this._cfg.el) {\n        return false;\n    }\n    var box = this._cfg.el.getBBox();\n    return Inside.box(box.x, box.x + box.width, box.y, box.y + box.height, x, y);\n};\nvar shapes = {\n    arc: arc,\n    circle: circle,\n    dom: dom,\n    ellipse: ellipse,\n    fan: fan,\n    image: image,\n    line: line,\n    path: path,\n    marker: marker,\n    polygon: polygon,\n    polyline: polyline,\n    rect: rect,\n    text: text\n};\nmodule.exports = {\n    isPointInPath: function isPointInPath(x, y) {\n        var shape = shapes[this.type];\n        if (shape) {\n            return shape.call(this, x, y);\n        }\n        return false;\n    }\n};\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/g/lib/core/mixin/isPointInPath.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/g/lib/core/mixin/isPointInPath.js"],"names":[],"mappings":"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","sourcesContent":["var Util = require('../../util/index');\n\nvar Inside = require('../../shapes/util/inside');\n\nvar mathUtl = {\n  arc: require('../../shapes/math/arc'),\n  ellipse: require('../../shapes/math/ellipse'),\n  line: require('../../shapes/math/line')\n};\nvar canvas = Util.createDom('<canvas width=\"500\" height=\"500\"></canvas>');\nvar context = canvas.getContext('2d');\n\nfunction isPointInPathByContext(x, y, ctx) {\n  ctx.createPath(context);\n  return context.isPointInPath(x, y);\n}\n\nvar arc = function arc(x, y) {\n  var attrs = this._attrs;\n  var cx = attrs.x;\n  var cy = attrs.y;\n  var r = attrs.r,\n      startAngle = attrs.startAngle,\n      endAngle = attrs.endAngle,\n      clockwise = attrs.clockwise;\n  var lineWidth = this.getHitLineWidth();\n\n  if (this.hasStroke()) {\n    return Inside.arcline(cx, cy, r, startAngle, endAngle, clockwise, lineWidth, x, y);\n  }\n\n  return false;\n};\n\nvar circle = function circle(x, y) {\n  var attrs = this._attrs;\n  var cx = attrs.x;\n  var cy = attrs.y;\n  var r = attrs.r;\n  var lineWidth = this.getHitLineWidth();\n  var fill = this.hasFill();\n  var stroke = this.hasStroke();\n\n  if (fill && stroke) {\n    return Inside.circle(cx, cy, r, x, y) || Inside.arcline(cx, cy, r, 0, Math.PI * 2, false, lineWidth, x, y);\n  }\n\n  if (fill) {\n    return Inside.circle(cx, cy, r, x, y);\n  }\n\n  if (stroke) {\n    return Inside.arcline(cx, cy, r, 0, Math.PI * 2, false, lineWidth, x, y);\n  }\n\n  return false;\n};\n\nvar ellipse = function ellipse(x, y) {\n  var attrs = this._attrs;\n  var fill = this.hasFill();\n  var stroke = this.hasStroke();\n  var cx = attrs.x;\n  var cy = attrs.y;\n  var rx = attrs.rx;\n  var ry = attrs.ry;\n  var lineWidth = this.getHitLineWidth();\n  var r = rx > ry ? rx : ry;\n  var scaleX = rx > ry ? 1 : rx / ry;\n  var scaleY = rx > ry ? ry / rx : 1;\n  var p = [x, y, 1];\n  var m = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n  Util.mat3.scale(m, m, [scaleX, scaleY]);\n  Util.mat3.translate(m, m, [cx, cy]);\n  var inm = Util.mat3.invert([], m);\n  Util.vec3.transformMat3(p, p, inm);\n\n  if (fill && stroke) {\n    return Inside.circle(0, 0, r, p[0], p[1]) || Inside.arcline(0, 0, r, 0, Math.PI * 2, false, lineWidth, p[0], p[1]);\n  }\n\n  if (fill) {\n    return Inside.circle(0, 0, r, p[0], p[1]);\n  }\n\n  if (stroke) {\n    return Inside.arcline(0, 0, r, 0, Math.PI * 2, false, lineWidth, p[0], p[1]);\n  }\n\n  return false;\n};\n\nvar fan = function fan(x, y) {\n  var self = this;\n  var fill = self.hasFill();\n  var stroke = self.hasStroke();\n  var attrs = self._attrs;\n  var cx = attrs.x;\n  var cy = attrs.y;\n  var rs = attrs.rs;\n  var re = attrs.re;\n  var startAngle = attrs.startAngle;\n  var endAngle = attrs.endAngle;\n  var clockwise = attrs.clockwise;\n  var v1 = [1, 0];\n  var subv = [x - cx, y - cy];\n  var angle = Util.vec2.angleTo(v1, subv);\n\n  function _isPointInFill() {\n    var angle1 = mathUtl.arc.nearAngle(angle, startAngle, endAngle, clockwise);\n\n    if (Util.isNumberEqual(angle, angle1)) {\n      var ls = Util.vec2.squaredLength(subv);\n\n      if (rs * rs <= ls && ls <= re * re) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function _isPointInStroke() {\n    var lineWidth = self.getHitLineWidth();\n    var ssp = {\n      x: Math.cos(startAngle) * rs + cx,\n      y: Math.sin(startAngle) * rs + cy\n    };\n    var sep = {\n      x: Math.cos(startAngle) * re + cx,\n      y: Math.sin(startAngle) * re + cy\n    };\n    var esp = {\n      x: Math.cos(endAngle) * rs + cx,\n      y: Math.sin(endAngle) * rs + cy\n    };\n    var eep = {\n      x: Math.cos(endAngle) * re + cx,\n      y: Math.sin(endAngle) * re + cy\n    };\n\n    if (Inside.line(ssp.x, ssp.y, sep.x, sep.y, lineWidth, x, y)) {\n      return true;\n    }\n\n    if (Inside.line(esp.x, esp.y, eep.x, eep.y, lineWidth, x, y)) {\n      return true;\n    }\n\n    if (Inside.arcline(cx, cy, rs, startAngle, endAngle, clockwise, lineWidth, x, y)) {\n      return true;\n    }\n\n    if (Inside.arcline(cx, cy, re, startAngle, endAngle, clockwise, lineWidth, x, y)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  if (fill && stroke) {\n    return _isPointInFill() || _isPointInStroke();\n  }\n\n  if (fill) {\n    return _isPointInFill();\n  }\n\n  if (stroke) {\n    return _isPointInStroke();\n  }\n\n  return false;\n};\n\nvar image = function image(x, y) {\n  var attrs = this._attrs;\n\n  if (this.get('toDraw') || !attrs.img) {\n    return false;\n  }\n\n  if (!this._cfg.attrs || this._cfg.attrs.img !== attrs.img) {\n    this._setAttrImg();\n  }\n\n  var rx = attrs.x;\n  var ry = attrs.y;\n  var width = attrs.width;\n  var height = attrs.height;\n  return Inside.rect(rx, ry, width, height, x, y);\n};\n\nvar line = function line(x, y) {\n  var attrs = this._attrs;\n  var x1 = attrs.x1,\n      y1 = attrs.y1,\n      x2 = attrs.x2,\n      y2 = attrs.y2;\n  var lineWidth = this.getHitLineWidth();\n\n  if (this.hasStroke()) {\n    return Inside.line(x1, y1, x2, y2, lineWidth, x, y);\n  }\n\n  return false;\n};\n\nvar path = function path(x, y) {\n  var self = this;\n  var segments = self.get('segments');\n  var fill = self.hasFill();\n  var stroke = self.hasStroke();\n\n  function _isPointInStroke() {\n    if (!Util.isEmpty(segments)) {\n      var lineWidth = self.getHitLineWidth();\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        if (segments[i].isInside(x, y, lineWidth)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }\n\n  if (fill && stroke) {\n    return isPointInPathByContext(x, y, self) || _isPointInStroke();\n  }\n\n  if (fill) {\n    return isPointInPathByContext(x, y, self);\n  }\n\n  if (stroke) {\n    return _isPointInStroke();\n  }\n\n  return false;\n};\n\nvar polygon = function polygon(x, y) {\n  var self = this;\n  var fill = self.hasFill();\n  var stroke = self.hasStroke();\n\n  function _isPointInStroke() {\n    var attrs = self._attrs;\n    var points = attrs.points;\n\n    if (points.length < 2) {\n      return false;\n    }\n\n    var lineWidth = self.getHitLineWidth();\n    var outPoints = points.slice(0);\n\n    if (points.length >= 3) {\n      outPoints.push(points[0]);\n    }\n\n    return Inside.polyline(outPoints, lineWidth, x, y);\n  }\n\n  if (fill && stroke) {\n    return isPointInPathByContext(x, y, self) || _isPointInStroke();\n  }\n\n  if (fill) {\n    return isPointInPathByContext(x, y, self);\n  }\n\n  if (stroke) {\n    return _isPointInStroke();\n  }\n\n  return false;\n};\n\nvar marker = function marker(x, y) {\n  var attrs = this._attrs;\n  var cx = attrs.x;\n  var cy = attrs.y;\n  var r = attrs.radius || attrs.r;\n  var lineWidth = this.getHitLineWidth();\n  return Inside.circle(cx, cy, r + lineWidth / 2, x, y);\n};\n\nvar polyline = function polyline(x, y) {\n  var self = this;\n  var attrs = self._attrs;\n\n  if (self.hasStroke()) {\n    var points = attrs.points;\n\n    if (points.length < 2) {\n      return false;\n    }\n\n    var lineWidth = attrs.lineWidth;\n    return Inside.polyline(points, lineWidth, x, y);\n  }\n\n  return false;\n};\n\nvar rect = function rect(x, y) {\n  var self = this;\n  var fill = self.hasFill();\n  var stroke = self.hasStroke();\n\n  function _isPointInStroke() {\n    var attrs = self._attrs;\n    var rx = attrs.x;\n    var ry = attrs.y;\n    var width = attrs.width;\n    var height = attrs.height;\n    var radius = attrs.radius;\n    var lineWidth = self.getHitLineWidth();\n\n    if (radius === 0) {\n      var halfWidth = lineWidth / 2;\n      return Inside.line(rx - halfWidth, ry, rx + width + halfWidth, ry, lineWidth, x, y) || Inside.line(rx + width, ry - halfWidth, rx + width, ry + height + halfWidth, lineWidth, x, y) || Inside.line(rx + width + halfWidth, ry + height, rx - halfWidth, ry + height, lineWidth, x, y) || Inside.line(rx, ry + height + halfWidth, rx, ry - halfWidth, lineWidth, x, y);\n    }\n\n    return Inside.line(rx + radius, ry, rx + width - radius, ry, lineWidth, x, y) || Inside.line(rx + width, ry + radius, rx + width, ry + height - radius, lineWidth, x, y) || Inside.line(rx + width - radius, ry + height, rx + radius, ry + height, lineWidth, x, y) || Inside.line(rx, ry + height - radius, rx, ry + radius, lineWidth, x, y) || Inside.arcline(rx + width - radius, ry + radius, radius, 1.5 * Math.PI, 2 * Math.PI, false, lineWidth, x, y) || Inside.arcline(rx + width - radius, ry + height - radius, radius, 0, 0.5 * Math.PI, false, lineWidth, x, y) || Inside.arcline(rx + radius, ry + height - radius, radius, 0.5 * Math.PI, Math.PI, false, lineWidth, x, y) || Inside.arcline(rx + radius, ry + radius, radius, Math.PI, 1.5 * Math.PI, false, lineWidth, x, y);\n  }\n\n  if (fill && stroke) {\n    return isPointInPathByContext(x, y, self) || _isPointInStroke();\n  }\n\n  if (fill) {\n    return isPointInPathByContext(x, y, self);\n  }\n\n  if (stroke) {\n    return _isPointInStroke();\n  }\n\n  return false;\n};\n\nvar text = function text(x, y) {\n  var self = this;\n  var box = self.getBBox();\n\n  if (self.hasFill() || self.hasStroke()) {\n    return Inside.box(box.minX, box.maxX, box.minY, box.maxY, x, y);\n  }\n};\n\nvar dom = function dom(x, y) {\n  if (!this._cfg.el) {\n    return false;\n  }\n\n  var box = this._cfg.el.getBBox();\n\n  return Inside.box(box.x, box.x + box.width, box.y, box.y + box.height, x, y);\n};\n\nvar shapes = {\n  arc: arc,\n  circle: circle,\n  dom: dom,\n  ellipse: ellipse,\n  fan: fan,\n  image: image,\n  line: line,\n  path: path,\n  marker: marker,\n  polygon: polygon,\n  polyline: polyline,\n  rect: rect,\n  text: text\n};\nmodule.exports = {\n  isPointInPath: function isPointInPath(x, y) {\n    var shape = shapes[this.type];\n\n    if (shape) {\n      return shape.call(this, x, y);\n    }\n\n    return false;\n  }\n};"]}]}