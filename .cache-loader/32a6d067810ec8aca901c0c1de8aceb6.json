{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/graphlib/lib/alg/floyd-warshall.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/graphlib/lib/alg/floyd-warshall.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _ = require(\"../lodash\");\nmodule.exports = floydWarshall;\nvar DEFAULT_WEIGHT_FUNC = _.constant(1);\nfunction floydWarshall(g, weightFn, edgeFn) {\n    return runFloydWarshall(g, weightFn || DEFAULT_WEIGHT_FUNC, edgeFn || function (v) { return g.outEdges(v); });\n}\nfunction runFloydWarshall(g, weightFn, edgeFn) {\n    var results = {};\n    var nodes = g.nodes();\n    nodes.forEach(function (v) {\n        results[v] = {};\n        results[v][v] = { distance: 0 };\n        nodes.forEach(function (w) {\n            if (v !== w) {\n                results[v][w] = { distance: Number.POSITIVE_INFINITY };\n            }\n        });\n        edgeFn(v).forEach(function (edge) {\n            var w = edge.v === v ? edge.w : edge.v;\n            var d = weightFn(edge);\n            results[v][w] = { distance: d, predecessor: v };\n        });\n    });\n    nodes.forEach(function (k) {\n        var rowK = results[k];\n        nodes.forEach(function (i) {\n            var rowI = results[i];\n            nodes.forEach(function (j) {\n                var ik = rowI[k];\n                var kj = rowK[j];\n                var ij = rowI[j];\n                var altDistance = ik.distance + kj.distance;\n                if (altDistance < ij.distance) {\n                    ij.distance = altDistance;\n                    ij.predecessor = kj.predecessor;\n                }\n            });\n        });\n    });\n    return results;\n}\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/graphlib/lib/alg/floyd-warshall.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/graphlib/lib/alg/floyd-warshall.js"],"names":[],"mappings":"AAAA,IAAI,CAAC,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AAE7B,MAAM,CAAC,OAAO,GAAG,aAAa,CAAC;AAE/B,IAAI,mBAAmB,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAExC,SAAS,aAAa,CAAC,CAAC,EAAE,QAAQ,EAAE,MAAM;IACxC,OAAO,gBAAgB,CAAC,CAAC,EACvB,QAAQ,IAAI,mBAAmB,EAC/B,MAAM,IAAI,UAAS,CAAC,IAAI,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC;AAED,SAAS,gBAAgB,CAAC,CAAC,EAAE,QAAQ,EAAE,MAAM;IAC3C,IAAI,OAAO,GAAG,EAAE,CAAC;IACjB,IAAI,KAAK,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;IAEtB,KAAK,CAAC,OAAO,CAAC,UAAS,CAAC;QACtB,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QAChB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC;QAChC,KAAK,CAAC,OAAO,CAAC,UAAS,CAAC;YACtB,IAAI,CAAC,KAAK,CAAC,EAAE;gBACX,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,iBAAiB,EAAE,CAAC;aACxD;QACH,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,UAAS,IAAI;YAC7B,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;YACvB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC;QAClD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,OAAO,CAAC,UAAS,CAAC;QACtB,IAAI,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QACtB,KAAK,CAAC,OAAO,CAAC,UAAS,CAAC;YACtB,IAAI,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YACtB,KAAK,CAAC,OAAO,CAAC,UAAS,CAAC;gBACtB,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACjB,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACjB,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACjB,IAAI,WAAW,GAAG,EAAE,CAAC,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC;gBAC5C,IAAI,WAAW,GAAG,EAAE,CAAC,QAAQ,EAAE;oBAC7B,EAAE,CAAC,QAAQ,GAAG,WAAW,CAAC;oBAC1B,EAAE,CAAC,WAAW,GAAG,EAAE,CAAC,WAAW,CAAC;iBACjC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,OAAO,OAAO,CAAC;AACjB,CAAC","sourcesContent":["var _ = require(\"../lodash\");\n\nmodule.exports = floydWarshall;\n\nvar DEFAULT_WEIGHT_FUNC = _.constant(1);\n\nfunction floydWarshall(g, weightFn, edgeFn) {\n  return runFloydWarshall(g,\n    weightFn || DEFAULT_WEIGHT_FUNC,\n    edgeFn || function(v) { return g.outEdges(v); });\n}\n\nfunction runFloydWarshall(g, weightFn, edgeFn) {\n  var results = {};\n  var nodes = g.nodes();\n\n  nodes.forEach(function(v) {\n    results[v] = {};\n    results[v][v] = { distance: 0 };\n    nodes.forEach(function(w) {\n      if (v !== w) {\n        results[v][w] = { distance: Number.POSITIVE_INFINITY };\n      }\n    });\n    edgeFn(v).forEach(function(edge) {\n      var w = edge.v === v ? edge.w : edge.v;\n      var d = weightFn(edge);\n      results[v][w] = { distance: d, predecessor: v };\n    });\n  });\n\n  nodes.forEach(function(k) {\n    var rowK = results[k];\n    nodes.forEach(function(i) {\n      var rowI = results[i];\n      nodes.forEach(function(j) {\n        var ik = rowI[k];\n        var kj = rowK[j];\n        var ij = rowI[j];\n        var altDistance = ik.distance + kj.distance;\n        if (altDistance < ij.distance) {\n          ij.distance = altDistance;\n          ij.predecessor = kj.predecessor;\n        }\n      });\n    });\n  });\n\n  return results;\n}\n"]}]}