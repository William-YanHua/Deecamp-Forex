{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/facet/facet.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/facet/facet.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { deepMix, each, every, get, isNil } from '@antv/util';\nimport { LAYER } from '../constant';\nimport { getAxisOption } from '../util/axis';\nvar Facet = (function () {\n    function Facet(view, cfg) {\n        this.destroyed = false;\n        this.facets = [];\n        this.view = view;\n        this.cfg = deepMix({}, this.getDefaultCfg(), cfg);\n    }\n    Facet.prototype.init = function () {\n        if (!this.container) {\n            this.container = this.createContainer();\n        }\n        var data = this.view.getData();\n        this.facets = this.generateFacets(data);\n    };\n    Facet.prototype.render = function () {\n        this.renderViews();\n    };\n    Facet.prototype.update = function () {\n    };\n    Facet.prototype.clear = function () {\n        this.clearFacetViews();\n    };\n    Facet.prototype.destroy = function () {\n        this.clear();\n        if (this.container) {\n            this.container.remove(true);\n            this.container = undefined;\n        }\n        this.destroyed = true;\n        this.view = undefined;\n        this.facets = [];\n    };\n    Facet.prototype.facetToView = function (facet) {\n        var region = facet.region, data = facet.data, _a = facet.padding, padding = _a === void 0 ? this.cfg.padding : _a;\n        var view = this.view.createView({\n            region: region,\n            padding: padding,\n        });\n        view.data(data || []);\n        facet.view = view;\n        this.beforeEachView(view, facet);\n        var eachView = this.cfg.eachView;\n        if (eachView) {\n            eachView(view, facet);\n        }\n        this.afterEachView(view, facet);\n        return view;\n    };\n    Facet.prototype.createContainer = function () {\n        var foregroundGroup = this.view.getLayer(LAYER.FORE);\n        return foregroundGroup.addGroup();\n    };\n    Facet.prototype.renderViews = function () {\n        this.createFacetViews();\n    };\n    Facet.prototype.createFacetViews = function () {\n        var _this = this;\n        return this.facets.map(function (facet) {\n            return _this.facetToView(facet);\n        });\n    };\n    Facet.prototype.clearFacetViews = function () {\n        var _this = this;\n        each(this.facets, function (facet) {\n            if (facet.view) {\n                _this.view.removeView(facet.view);\n                facet.view = undefined;\n            }\n        });\n    };\n    Facet.prototype.getFieldValues = function (data, field) {\n        var rst = [];\n        var cache = {};\n        each(data, function (d) {\n            var value = d[field];\n            if (!isNil(value) && !cache[value]) {\n                rst.push(value);\n                cache[value] = true;\n            }\n        });\n        return rst;\n    };\n    Facet.prototype.getRegion = function (rows, cols, xIndex, yIndex) {\n        var xRatio = 1 / (cols === 0 ? 1 : cols);\n        var yRatio = 1 / (rows === 0 ? 1 : rows);\n        var start = {\n            x: xRatio * xIndex,\n            y: yRatio * yIndex,\n        };\n        var end = {\n            x: xRatio * (xIndex + 1),\n            y: yRatio * (yIndex + 1),\n        };\n        return {\n            start: start,\n            end: end,\n        };\n    };\n    Facet.prototype.getDefaultCfg = function () {\n        return {\n            eachView: undefined,\n            showTitle: true,\n            padding: 10,\n            fields: [],\n        };\n    };\n    Facet.prototype.getDefaultTitleCfg = function () {\n        var fontFamily = this.view.getTheme().fontFamily;\n        return {\n            style: {\n                fontSize: 14,\n                fill: '#666',\n                fontFamily: fontFamily,\n            },\n        };\n    };\n    Facet.prototype.processAxis = function (view, facet) {\n        var options = view.getOptions();\n        var coordinateOption = options.coordinate;\n        var geometries = view.geometries;\n        var coordinateType = get(coordinateOption, 'type', 'rect');\n        if (coordinateType === 'rect' && geometries.length) {\n            if (isNil(options.axes)) {\n                options.axes = {};\n            }\n            var axes = options.axes;\n            var _a = geometries[0].getXYFields(), x = _a[0], y = _a[1];\n            var xOption = getAxisOption(axes, x);\n            var yOption = getAxisOption(axes, y);\n            if (xOption !== false) {\n                options.axes[x] = this.getXAxisOption(x, axes, xOption, facet);\n            }\n            if (yOption !== false) {\n                options.axes[y] = this.getYAxisOption(y, axes, yOption, facet);\n            }\n        }\n    };\n    Facet.prototype.getFacetDataFilter = function (conditions) {\n        return function (datum) {\n            return every(conditions, function (condition) {\n                var field = condition.field, value = condition.value;\n                if (!isNil(value) && field) {\n                    return datum[field] === value;\n                }\n                return true;\n            });\n        };\n    };\n    return Facet;\n}());\nexport { Facet };\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/facet/facet.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/facet/facet.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,YAAY,CAAC;AAC9D,OAAO,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AACpC,OAAO,EAAE,aAAa,EAAE,MAAM,cAAc,CAAC;AAyB7C,IAAI,KAAK,GAAiB,CAAC;IACvB,SAAS,KAAK,CAAC,IAAI,EAAE,GAAG;QAEpB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAEvB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,EAAE,GAAG,CAAC,CAAC;IACtD,CAAC;IAID,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG;QAEnB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;SAC3C;QAED,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;QAC/B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IAC5C,CAAC,CAAC;IASF,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG;QACrB,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC,CAAC;IAIF,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG;IAEzB,CAAC,CAAC;IAKF,KAAK,CAAC,SAAS,CAAC,KAAK,GAAG;QACpB,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC,CAAC;IAIF,KAAK,CAAC,SAAS,CAAC,OAAO,GAAG;QACtB,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC5B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;SAC9B;QACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACrB,CAAC,CAAC;IAKF,KAAK,CAAC,SAAS,CAAC,WAAW,GAAG,UAAU,KAAK;QACzC,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,EAAE,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE,EAAE,GAAG,KAAK,CAAC,OAAO,EAAE,OAAO,GAAG,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;QAClH,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YAC5B,MAAM,EAAE,MAAM;YACd,OAAO,EAAE,OAAO;SACnB,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;QACtB,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;QAElB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACjC,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;QACjC,IAAI,QAAQ,EAAE;YACV,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SACzB;QAED,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAChC,OAAO,IAAI,CAAC;IAChB,CAAC,CAAC;IAEF,KAAK,CAAC,SAAS,CAAC,eAAe,GAAG;QAC9B,IAAI,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACrD,OAAO,eAAe,CAAC,QAAQ,EAAE,CAAC;IACtC,CAAC,CAAC;IAIF,KAAK,CAAC,SAAS,CAAC,WAAW,GAAG;QAC1B,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC5B,CAAC,CAAC;IAIF,KAAK,CAAC,SAAS,CAAC,gBAAgB,GAAG;QAC/B,IAAI,KAAK,GAAG,IAAI,CAAC;QAEjB,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,KAAK;YAClC,OAAO,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;IAIF,KAAK,CAAC,SAAS,CAAC,eAAe,GAAG;QAC9B,IAAI,KAAK,GAAG,IAAI,CAAC;QAEjB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,KAAK;YAC7B,IAAI,KAAK,CAAC,IAAI,EAAE;gBACZ,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAClC,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC;aAC1B;QACL,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;IASF,KAAK,CAAC,SAAS,CAAC,cAAc,GAAG,UAAU,IAAI,EAAE,KAAK;QAClD,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,KAAK,GAAG,EAAE,CAAC;QAEf,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC;YAClB,IAAI,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;YACrB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;gBAChC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAChB,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;aACvB;QACL,CAAC,CAAC,CAAC;QACH,OAAO,GAAG,CAAC;IACf,CAAC,CAAC;IAQF,KAAK,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM;QAE5D,IAAI,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,KAAK,GAAG;YACR,CAAC,EAAE,MAAM,GAAG,MAAM;YAClB,CAAC,EAAE,MAAM,GAAG,MAAM;SACrB,CAAC;QACF,IAAI,GAAG,GAAG;YACN,CAAC,EAAE,MAAM,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;YACxB,CAAC,EAAE,MAAM,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;SAC3B,CAAC;QACF,OAAO;YACH,KAAK,EAAE,KAAK;YACZ,GAAG,EAAE,GAAG;SACX,CAAC;IACN,CAAC,CAAC;IACF,KAAK,CAAC,SAAS,CAAC,aAAa,GAAG;QAC5B,OAAO;YACH,QAAQ,EAAE,SAAS;YACnB,SAAS,EAAE,IAAI;YACf,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,EAAE;SACb,CAAC;IACN,CAAC,CAAC;IAIF,KAAK,CAAC,SAAS,CAAC,kBAAkB,GAAG;QAEjC,IAAI,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC;QACjD,OAAO;YACH,KAAK,EAAE;gBACH,QAAQ,EAAE,EAAE;gBACZ,IAAI,EAAE,MAAM;gBACZ,UAAU,EAAE,UAAU;aACzB;SACJ,CAAC;IACN,CAAC,CAAC;IAMF,KAAK,CAAC,SAAS,CAAC,WAAW,GAAG,UAAU,IAAI,EAAE,KAAK;QAC/C,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAChC,IAAI,gBAAgB,GAAG,OAAO,CAAC,UAAU,CAAC;QAC1C,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACjC,IAAI,cAAc,GAAG,GAAG,CAAC,gBAAgB,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;QAC3D,IAAI,cAAc,KAAK,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;YAChD,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBAErB,OAAO,CAAC,IAAI,GAAG,EAAE,CAAC;aACrB;YACD,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;YACxB,IAAI,EAAE,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YAC3D,IAAI,OAAO,GAAG,aAAa,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YACrC,IAAI,OAAO,GAAG,aAAa,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YACrC,IAAI,OAAO,KAAK,KAAK,EAAE;gBACnB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;aAClE;YACD,IAAI,OAAO,KAAK,KAAK,EAAE;gBACnB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;aAClE;SACJ;IACL,CAAC,CAAC;IAKF,KAAK,CAAC,SAAS,CAAC,kBAAkB,GAAG,UAAU,UAAU;QACrD,OAAO,UAAU,KAAK;YAElB,OAAO,KAAK,CAAC,UAAU,EAAE,UAAU,SAAS;gBACxC,IAAI,KAAK,GAAG,SAAS,CAAC,KAAK,EAAE,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;gBACrD,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,KAAK,EAAE;oBACxB,OAAO,KAAK,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC;iBACjC;gBACD,OAAO,IAAI,CAAC;YAChB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC;IACN,CAAC,CAAC;IACF,OAAO,KAAK,CAAC;AACjB,CAAC,EAAE,CAAC,CAAC;AACL,OAAO,EAAE,KAAK,EAAE,CAAC","sourcesContent":["import { deepMix, each, every, get, isNil } from '@antv/util';\nimport { LAYER } from '../constant';\nimport { getAxisOption } from '../util/axis';\n/**\n * facet 基类\n *  - 定义生命周期，方便自定义 facet\n *  - 提供基础的生命流程方法\n *\n * 生命周期：\n *\n * 初始化 init\n * 1. 初始化容器\n * 2. 数据分面，生成分面布局信息\n *\n * 渲染阶段 render\n * 1. view 创建\n * 2. title\n * 3. axis\n *\n * 清除阶段 clear\n * 1. 清除 view\n *\n * 销毁阶段 destroy\n * 1. clear\n * 2. 清除事件\n * 3. 清除 group\n */\nvar Facet = /** @class */ (function () {\n    function Facet(view, cfg) {\n        /** 是否销毁 */\n        this.destroyed = false;\n        /** 分面之后的所有分面数据结构 */\n        this.facets = [];\n        this.view = view;\n        this.cfg = deepMix({}, this.getDefaultCfg(), cfg);\n    }\n    /**\n     * 初始化过程\n     */\n    Facet.prototype.init = function () {\n        // 初始化容器\n        if (!this.container) {\n            this.container = this.createContainer();\n        }\n        // 生成分面布局信息\n        var data = this.view.getData();\n        this.facets = this.generateFacets(data);\n    };\n    /**\n     * 渲染分面，由上层 view 调用。包括：\n     *  - 分面 view\n     *  - 轴\n     *  - title\n     *\n     *  子类可以复写，添加一些其他组件，比如滚动条等\n     */\n    Facet.prototype.render = function () {\n        this.renderViews();\n    };\n    /**\n     * 更新 facet\n     */\n    Facet.prototype.update = function () {\n        // 其实不用做任何事情，因为 facet 最终生成的 View 和 Geometry 都在父 view 的更新中处理了\n    };\n    /**\n     * 清空，clear 之后如果还需要使用，需要重新调用 init 初始化过程\n     * 一般在数据有变更的时候调用，重新进行数据的分面逻辑\n     */\n    Facet.prototype.clear = function () {\n        this.clearFacetViews();\n    };\n    /**\n     * 销毁\n     */\n    Facet.prototype.destroy = function () {\n        this.clear();\n        if (this.container) {\n            this.container.remove(true);\n            this.container = undefined;\n        }\n        this.destroyed = true;\n        this.view = undefined;\n        this.facets = [];\n    };\n    /**\n     * 根据 facet 生成 view，可以给上层自定义使用\n     * @param facet\n     */\n    Facet.prototype.facetToView = function (facet) {\n        var region = facet.region, data = facet.data, _a = facet.padding, padding = _a === void 0 ? this.cfg.padding : _a;\n        var view = this.view.createView({\n            region: region,\n            padding: padding,\n        });\n        // 设置分面的数据\n        view.data(data || []);\n        facet.view = view;\n        // 前置钩子\n        this.beforeEachView(view, facet);\n        var eachView = this.cfg.eachView;\n        if (eachView) {\n            eachView(view, facet);\n        }\n        // 后置钩子\n        this.afterEachView(view, facet);\n        return view;\n    };\n    // 创建容器\n    Facet.prototype.createContainer = function () {\n        var foregroundGroup = this.view.getLayer(LAYER.FORE);\n        return foregroundGroup.addGroup();\n    };\n    /**\n     * 初始化 view\n     */\n    Facet.prototype.renderViews = function () {\n        this.createFacetViews();\n    };\n    /**\n     * 创建 分面 view\n     */\n    Facet.prototype.createFacetViews = function () {\n        var _this = this;\n        // 使用分面数据 创建分面 view\n        return this.facets.map(function (facet) {\n            return _this.facetToView(facet);\n        });\n    };\n    /**\n     * 从 view 中清除 facetView\n     */\n    Facet.prototype.clearFacetViews = function () {\n        var _this = this;\n        // 从 view 中移除分面 view\n        each(this.facets, function (facet) {\n            if (facet.view) {\n                _this.view.removeView(facet.view);\n                facet.view = undefined;\n            }\n        });\n    };\n    // 其他一些提供给子类使用的方法\n    /**\n     * 获取这个字段对应的所有值，数组\n     * @protected\n     * @param data 数据\n     * @param field 字段名\n     * @return 字段对应的值\n     */\n    Facet.prototype.getFieldValues = function (data, field) {\n        var rst = [];\n        var cache = {};\n        // 去重、去除 Nil 值\n        each(data, function (d) {\n            var value = d[field];\n            if (!isNil(value) && !cache[value]) {\n                rst.push(value);\n                cache[value] = true;\n            }\n        });\n        return rst;\n    };\n    /**\n     * 获得每个分面的 region，平分区域\n     * @param rows row 总数\n     * @param cols col 总数\n     * @param xIndex x 方向 index\n     * @param yIndex y 方向 index\n     */\n    Facet.prototype.getRegion = function (rows, cols, xIndex, yIndex) {\n        // x, y 方向均分 100% 宽高\n        var xRatio = 1 / (cols === 0 ? 1 : cols);\n        var yRatio = 1 / (rows === 0 ? 1 : rows);\n        var start = {\n            x: xRatio * xIndex,\n            y: yRatio * yIndex,\n        };\n        var end = {\n            x: xRatio * (xIndex + 1),\n            y: yRatio * (yIndex + 1),\n        };\n        return {\n            start: start,\n            end: end,\n        };\n    };\n    Facet.prototype.getDefaultCfg = function () {\n        return {\n            eachView: undefined,\n            showTitle: true,\n            padding: 10,\n            fields: [],\n        };\n    };\n    /**\n     * 默认的 title 样式，因为有的分面是 title，有的分面配置是 columnTitle、rowTitle\n     */\n    Facet.prototype.getDefaultTitleCfg = function () {\n        // @ts-ignore\n        var fontFamily = this.view.getTheme().fontFamily;\n        return {\n            style: {\n                fontSize: 14,\n                fill: '#666',\n                fontFamily: fontFamily,\n            },\n        };\n    };\n    /**\n     * 处理 axis 的默认配置\n     * @param view\n     * @param facet\n     */\n    Facet.prototype.processAxis = function (view, facet) {\n        var options = view.getOptions();\n        var coordinateOption = options.coordinate;\n        var geometries = view.geometries;\n        var coordinateType = get(coordinateOption, 'type', 'rect');\n        if (coordinateType === 'rect' && geometries.length) {\n            if (isNil(options.axes)) {\n                // @ts-ignore\n                options.axes = {};\n            }\n            var axes = options.axes;\n            var _a = geometries[0].getXYFields(), x = _a[0], y = _a[1];\n            var xOption = getAxisOption(axes, x);\n            var yOption = getAxisOption(axes, y);\n            if (xOption !== false) {\n                options.axes[x] = this.getXAxisOption(x, axes, xOption, facet);\n            }\n            if (yOption !== false) {\n                options.axes[y] = this.getYAxisOption(y, axes, yOption, facet);\n            }\n        }\n    };\n    /**\n     * 获取分面数据\n     * @param conditions\n     */\n    Facet.prototype.getFacetDataFilter = function (conditions) {\n        return function (datum) {\n            // 过滤出全部满足条件的数据\n            return every(conditions, function (condition) {\n                var field = condition.field, value = condition.value;\n                if (!isNil(value) && field) {\n                    return datum[field] === value;\n                }\n                return true;\n            });\n        };\n    };\n    return Facet;\n}());\nexport { Facet };\n//# sourceMappingURL=facet.js.map"]}]}