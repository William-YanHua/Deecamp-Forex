{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\component\\plot.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\component\\plot.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\r\nvar Util = require('../util');\r\nvar _require = require('../renderer'), Group = _require.Group;\r\nvar AUTO_STR = 'auto';\r\nvar PlotBack = function (_Group) {\r\n    _inheritsLoose(PlotBack, _Group);\r\n    function PlotBack() {\r\n        return _Group.apply(this, arguments) || this;\r\n    }\r\n    var _proto = PlotBack.prototype;\r\n    _proto.getDefaultCfg = function getDefaultCfg() {\r\n        return {\r\n            type: 'plotBack',\r\n            padding: null,\r\n            background: null,\r\n            plotRange: null,\r\n            plotBackground: null\r\n        };\r\n    };\r\n    _proto._beforeRenderUI = function _beforeRenderUI() {\r\n        this._calculateRange();\r\n    };\r\n    _proto._renderUI = function _renderUI() {\r\n        this._renderBackground();\r\n        this._renderPlotBackground();\r\n    };\r\n    _proto._renderBackground = function _renderBackground() {\r\n        var self = this;\r\n        var background = self.get('background');\r\n        if (background) {\r\n            var canvas = this.get('canvas');\r\n            var width = self.get('width') || canvas.get('width');\r\n            var height = self.get('height') || canvas.get('height');\r\n            var cfg = {\r\n                x: 0,\r\n                y: 0,\r\n                width: width,\r\n                height: height\r\n            };\r\n            var rect = self.get('backgroundShape');\r\n            if (!rect) {\r\n                rect = this.addShape('rect', {\r\n                    attrs: Util.mix(cfg, background)\r\n                });\r\n                this.set('backgroundShape', rect);\r\n            }\r\n            else {\r\n                rect.attr(cfg);\r\n            }\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    };\r\n    _proto._renderPlotBackground = function _renderPlotBackground() {\r\n        var self = this;\r\n        var plotBackground = self.get('plotBackground');\r\n        if (plotBackground) {\r\n            var plotRange = self.get('plotRange');\r\n            var width = plotRange.br.x - plotRange.bl.x;\r\n            var height = plotRange.br.y - plotRange.tr.y;\r\n            var tl = plotRange.tl;\r\n            var cfg = {\r\n                x: tl.x,\r\n                y: tl.y,\r\n                width: width,\r\n                height: height\r\n            };\r\n            var plotBackShape = self.get('plotBackShape');\r\n            if (!plotBackShape) {\r\n                if (plotBackground.image) {\r\n                    cfg.img = plotBackground.image;\r\n                    plotBackShape = self.addShape('image', {\r\n                        attrs: cfg\r\n                    });\r\n                }\r\n                else {\r\n                    Util.mix(cfg, plotBackground);\r\n                    plotBackShape = self.addShape('rect', {\r\n                        attrs: cfg\r\n                    });\r\n                }\r\n                self.set('plotBackShape', plotBackShape);\r\n            }\r\n            else {\r\n                plotBackShape.attr(cfg);\r\n            }\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    };\r\n    _proto._convert = function _convert(val, isHorizontal) {\r\n        if (Util.isString(val)) {\r\n            if (val === AUTO_STR) {\r\n                val = 0;\r\n            }\r\n            else if (val.indexOf('%') !== -1) {\r\n                var canvas = this.get('canvas');\r\n                var width = this.get('width') || canvas.get('width');\r\n                var height = this.get('height') || canvas.get('height');\r\n                val = parseInt(val, 10) / 100;\r\n                val = isHorizontal ? val * width : val * height;\r\n            }\r\n        }\r\n        return val;\r\n    };\r\n    _proto._calculateRange = function _calculateRange() {\r\n        var self = this;\r\n        var plotRange = self.get('plotRange');\r\n        if (Util.isNil(plotRange)) {\r\n            plotRange = {};\r\n        }\r\n        var padding = self.get('padding');\r\n        var canvas = this.get('canvas');\r\n        var width = self.get('width') || canvas.get('width');\r\n        var height = self.get('height') || canvas.get('height');\r\n        var allPadding = Util.toAllPadding(padding);\r\n        var top = self._convert(allPadding[0], false);\r\n        var right = self._convert(allPadding[1], true);\r\n        var bottom = self._convert(allPadding[2], false);\r\n        var left = self._convert(allPadding[3], true);\r\n        var minX = Math.min(left, width - right);\r\n        var maxX = Math.max(left, width - right);\r\n        var minY = Math.min(height - bottom, top);\r\n        var maxY = Math.max(height - bottom, top);\r\n        plotRange.tl = {\r\n            x: minX,\r\n            y: minY\r\n        };\r\n        plotRange.tr = {\r\n            x: maxX,\r\n            y: minY\r\n        };\r\n        plotRange.bl = {\r\n            x: minX,\r\n            y: maxY\r\n        };\r\n        plotRange.br = {\r\n            x: maxX,\r\n            y: maxY\r\n        };\r\n        plotRange.cc = {\r\n            x: (maxX + minX) / 2,\r\n            y: (maxY + minY) / 2\r\n        };\r\n        this.set('plotRange', plotRange);\r\n    };\r\n    _proto.repaint = function repaint() {\r\n        this._calculateRange();\r\n        this._renderBackground();\r\n        this._renderPlotBackground();\r\n        return this;\r\n    };\r\n    return PlotBack;\r\n}(Group);\r\nmodule.exports = PlotBack;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\component\\plot.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\component\\plot.js"],"names":[],"mappings":"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","sourcesContent":["function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * @fileOverview The class of canvas plot\n * @author sima.zhang\n */\nvar Util = require('../util');\n\nvar _require = require('../renderer'),\n    Group = _require.Group;\n\nvar AUTO_STR = 'auto';\n\nvar PlotBack =\n/*#__PURE__*/\nfunction (_Group) {\n  _inheritsLoose(PlotBack, _Group);\n\n  function PlotBack() {\n    return _Group.apply(this, arguments) || this;\n  }\n\n  var _proto = PlotBack.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    return {\n      /**\n       * 类型\n       * @type {String}\n       */\n      type: 'plotBack',\n\n      /**\n       * 画布边距\n       * @type {Number | Array | Object | \"auto\"}\n       */\n      padding: null,\n\n      /**\n       * 大背景\n       * @type {Object}\n       */\n      background: null,\n\n      /**\n       * 绘图区域范围\n       * @type {Object}\n       */\n      plotRange: null,\n\n      /**\n       * 绘图区域背景\n       * @type {Object}\n       */\n      plotBackground: null\n    };\n  };\n\n  _proto._beforeRenderUI = function _beforeRenderUI() {\n    this._calculateRange();\n  };\n\n  _proto._renderUI = function _renderUI() {\n    this._renderBackground();\n\n    this._renderPlotBackground();\n  };\n\n  _proto._renderBackground = function _renderBackground() {\n    var self = this;\n    var background = self.get('background');\n\n    if (background) {\n      var canvas = this.get('canvas');\n      var width = self.get('width') || canvas.get('width');\n      var height = self.get('height') || canvas.get('height');\n      var cfg = {\n        x: 0,\n        y: 0,\n        width: width,\n        height: height\n      };\n      var rect = self.get('backgroundShape');\n\n      if (!rect) {\n        rect = this.addShape('rect', {\n          attrs: Util.mix(cfg, background)\n        });\n        this.set('backgroundShape', rect);\n      } else {\n        rect.attr(cfg);\n      }\n    } else {\n      return;\n    }\n  };\n\n  _proto._renderPlotBackground = function _renderPlotBackground() {\n    var self = this;\n    var plotBackground = self.get('plotBackground');\n\n    if (plotBackground) {\n      var plotRange = self.get('plotRange');\n      var width = plotRange.br.x - plotRange.bl.x;\n      var height = plotRange.br.y - plotRange.tr.y;\n      var tl = plotRange.tl;\n      var cfg = {\n        x: tl.x,\n        y: tl.y,\n        width: width,\n        height: height\n      };\n      var plotBackShape = self.get('plotBackShape');\n\n      if (!plotBackShape) {\n        if (plotBackground.image) {\n          cfg.img = plotBackground.image;\n          plotBackShape = self.addShape('image', {\n            attrs: cfg\n          });\n        } else {\n          // 矩形\n          Util.mix(cfg, plotBackground);\n          plotBackShape = self.addShape('rect', {\n            attrs: cfg\n          });\n        }\n\n        self.set('plotBackShape', plotBackShape);\n      } else {\n        plotBackShape.attr(cfg);\n      }\n    } else {\n      return;\n    }\n  };\n\n  _proto._convert = function _convert(val, isHorizontal) {\n    if (Util.isString(val)) {\n      if (val === AUTO_STR) {\n        val = 0;\n      } else if (val.indexOf('%') !== -1) {\n        var canvas = this.get('canvas');\n        var width = this.get('width') || canvas.get('width');\n        var height = this.get('height') || canvas.get('height');\n        val = parseInt(val, 10) / 100;\n        val = isHorizontal ? val * width : val * height;\n      }\n    }\n\n    return val;\n  };\n\n  _proto._calculateRange = function _calculateRange() {\n    var self = this;\n    var plotRange = self.get('plotRange');\n\n    if (Util.isNil(plotRange)) {\n      plotRange = {};\n    }\n\n    var padding = self.get('padding');\n    var canvas = this.get('canvas');\n    var width = self.get('width') || canvas.get('width');\n    var height = self.get('height') || canvas.get('height');\n    var allPadding = Util.toAllPadding(padding);\n\n    var top = self._convert(allPadding[0], false);\n\n    var right = self._convert(allPadding[1], true);\n\n    var bottom = self._convert(allPadding[2], false);\n\n    var left = self._convert(allPadding[3], true);\n\n    var minX = Math.min(left, width - right);\n    var maxX = Math.max(left, width - right);\n    var minY = Math.min(height - bottom, top);\n    var maxY = Math.max(height - bottom, top);\n    plotRange.tl = {\n      x: minX,\n      y: minY\n    }; // top-left\n\n    plotRange.tr = {\n      x: maxX,\n      y: minY\n    }; // top-right\n\n    plotRange.bl = {\n      x: minX,\n      y: maxY\n    }; // bottom-left\n\n    plotRange.br = {\n      x: maxX,\n      y: maxY\n    }; // bottom-right\n\n    plotRange.cc = {\n      x: (maxX + minX) / 2,\n      y: (maxY + minY) / 2\n    };\n    this.set('plotRange', plotRange);\n  };\n\n  _proto.repaint = function repaint() {\n    this._calculateRange();\n\n    this._renderBackground();\n\n    this._renderPlotBackground();\n\n    return this;\n  };\n\n  return PlotBack;\n}(Group);\n\nmodule.exports = PlotBack;"]}]}