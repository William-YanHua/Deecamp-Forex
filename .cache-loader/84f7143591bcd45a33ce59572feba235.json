{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/es6/processor/configMerge.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/es6/processor/configMerge.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar deleteFuncMap = {\n    Chart: 'deleteChart',\n    Coord: 'deleteCoord',\n    Geom: 'deleteGeom',\n    Axis: 'deleteAxis',\n    Tooltip: 'deleteTooltip',\n    Legend: 'deleteLegend',\n    Label: 'deleteLabel',\n    View: 'deleteView',\n    Guide: 'deleteGuide',\n    GuideLine: 'deleteTypedGuide',\n    GuideImage: 'deleteTypedGuide',\n    GuideText: 'deleteTypedGuide',\n    GuideRegion: 'deleteTypedGuide',\n    GuideHtml: 'deleteTypedGuide',\n    GuideArc: 'deleteTypedGuide',\n    GuideRegionFilter: 'deleteTypedGuide',\n    GuideDataMarker: 'deleteTypedGuide',\n    GuideDataRegion: 'deleteTypedGuide',\n    Facet: 'deleteFacet'\n};\nvar iMerge = {\n    merge: function merge(config, deleteInfos, elementInfos, clear) {\n        this.mergeDelete(config, deleteInfos, elementInfos);\n        this.mergeUpdate(config, clear);\n    },\n    mergeDelete: function mergeDelete(config, deleteInfos, elementInfos) {\n        var _this = this;\n        Object.keys(deleteInfos).forEach(function (id) {\n            var funName = deleteFuncMap[elementInfos[id].name];\n            var deleteConfigContainer = config;\n            if (elementInfos[id].viewId) {\n                deleteConfigContainer = config.views[elementInfos[id].viewId];\n            }\n            if (_this[funName]) {\n                _this[funName](deleteConfigContainer, id, elementInfos[id].parentInfo.id);\n            }\n        });\n    },\n    deleteAxis: function deleteAxis(config, id) {\n        if (!config)\n            return;\n        delete config.axises[id];\n    },\n    deleteTooltip: function deleteTooltip(config) {\n        if (!config)\n            return;\n        delete config.tooltip;\n    },\n    deleteCoord: function deleteCoord(config) {\n        if (!config)\n            return;\n        delete config.coord;\n    },\n    deleteLegend: function deleteLegend(config, id) {\n        if (!config)\n            return;\n        delete config.legends[id];\n    },\n    deleteGuide: function deleteGuide(config) {\n        if (!config)\n            return;\n        delete config.guide;\n    },\n    deleteGeom: function deleteGeom(config, id) {\n        if (!config || !config.geoms)\n            return;\n        delete config.geoms[id];\n    },\n    deleteLabel: function deleteLabel(config, id, parentId) {\n        if (!config || !config.geoms || !config.geoms[parentId])\n            return;\n        delete config.geoms[parentId].label;\n    },\n    deleteFacet: function deleteFacet(config) {\n        if (!config)\n            return;\n        delete config.facet;\n    },\n    deleteTypedGuide: function deleteTypedGuide(config, id) {\n        if (!config || !config.guide)\n            return;\n        delete config.guide.elements[id];\n    },\n    deleteView: function deleteView(config, id) {\n        if (!config)\n            return;\n        delete config.views[id];\n    },\n    mergeUpdate: function mergeUpdate(config, clear) {\n        this.mergeChart(config, clear);\n        this.mergeAxises(config, clear);\n        this.mergeCoord(config, clear);\n        this.mergeGeoms(config.geoms, clear);\n        this.mergeLegends(config.legends, clear);\n        this.mergeTooltip(config, clear);\n        this.mergeViews(config.views, clear);\n        this.mergeGuide(config.guide, clear);\n    },\n    mergeChart: function mergeChart(config, clear) {\n        if (config.chart && config.chart.updateProps) {\n            config.chart.props = config.chart.updateProps;\n        }\n        if (clear) {\n            delete config.chart.g2Instance;\n        }\n    },\n    mergeAxises: function mergeAxises(config, clear) {\n        var axises = config.axises;\n        if (!axises == null) {\n            return;\n        }\n        for (var id in axises) {\n            if (axises[id] && axises[id].updateProps) {\n                axises[id].props = axises[id].updateProps;\n            }\n            if (clear) {\n                delete axises[id].g2Instance;\n            }\n        }\n    },\n    mergeTooltip: function mergeTooltip(config, clear) {\n        if (!config.tooltip)\n            return;\n        if (clear) {\n            delete config.tooltip.g2Instance;\n        }\n        if (config.tooltip.updateProps) {\n            config.tooltip.props = config.tooltip.updateProps;\n        }\n    },\n    mergeCoord: function mergeCoord(config, clear) {\n        if (!config.coord)\n            return;\n        if (clear)\n            delete config.coord.g2Instance;\n        if (config.coord.updateProps) {\n            config.coord.props = config.coord.updateProps;\n        }\n    },\n    mergeLegends: function mergeLegends(legends, clear) {\n        if (!legends)\n            return;\n        for (var id in legends) {\n            if (legends[id]) {\n                var legendConfig = legends[id];\n                if (clear) {\n                    delete legendConfig.g2Instance;\n                }\n                if (legendConfig.updateProps)\n                    legendConfig.props = legendConfig.updateProps;\n            }\n        }\n    },\n    mergeGeoms: function mergeGeoms(geoms, clear) {\n        if (geoms == null)\n            return;\n        for (var id in geoms) {\n            if (geoms[id]) {\n                if (clear) {\n                    delete geoms[id].g2Instance;\n                    if (geoms[id].label && geoms[id].label.g2Instance) {\n                        if (geoms[id].label.updateProps) {\n                            geoms[id].label.props = geoms[id].label.updateProps;\n                        }\n                        delete geoms[id].label.g2Instance;\n                    }\n                }\n                if (geoms[id].updateProps)\n                    geoms[id].props = geoms[id].updateProps;\n            }\n        }\n    },\n    mergeGuide: function mergeGuide(guide, clear) {\n        if (guide == null)\n            return;\n        var guides = guide.elements;\n        for (var id in guides) {\n            if (guides[id]) {\n                if (clear) {\n                    delete guides[id].g2Instance;\n                }\n                if (guides[id].updateProps) {\n                    guides[id].props = guides[id].updateProps;\n                }\n            }\n        }\n    },\n    mergeView: function mergeView(view, clear) {\n        if (!view)\n            return;\n        if (clear && view.g2Instance) {\n            delete view.g2Instance;\n        }\n        if (view.updateProps) {\n            view.props = view.updateProps;\n        }\n        this.mergeCoord(view, clear);\n        this.mergeAxises(view, clear);\n        this.mergeGeoms(view.geoms, clear);\n        this.mergeGuide(view.guide, clear);\n    },\n    mergeViews: function mergeViews(views, clear) {\n        if (views == null)\n            return;\n        for (var id in views) {\n            if (views[id]) {\n                this.mergeView(views[id], clear);\n            }\n        }\n    }\n};\nexports.default = iMerge;\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/es6/processor/configMerge.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/es6/processor/configMerge.js"],"names":[],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar deleteFuncMap = {\n  Chart: 'deleteChart',\n  Coord: 'deleteCoord',\n  Geom: 'deleteGeom',\n  Axis: 'deleteAxis',\n  Tooltip: 'deleteTooltip',\n  Legend: 'deleteLegend',\n  Label: 'deleteLabel',\n  View: 'deleteView',\n  Guide: 'deleteGuide',\n  GuideLine: 'deleteTypedGuide',\n  GuideImage: 'deleteTypedGuide',\n  GuideText: 'deleteTypedGuide',\n  GuideRegion: 'deleteTypedGuide',\n  GuideHtml: 'deleteTypedGuide',\n  GuideArc: 'deleteTypedGuide',\n  GuideRegionFilter: 'deleteTypedGuide',\n  GuideDataMarker: 'deleteTypedGuide',\n  GuideDataRegion: 'deleteTypedGuide',\n  Facet: 'deleteFacet'\n};\n\nvar iMerge = {\n  merge: function merge(config, deleteInfos, elementInfos, clear) {\n    this.mergeDelete(config, deleteInfos, elementInfos);\n    this.mergeUpdate(config, clear);\n  },\n  mergeDelete: function mergeDelete(config, deleteInfos, elementInfos) {\n    var _this = this;\n\n    Object.keys(deleteInfos).forEach(function (id) {\n      var funName = deleteFuncMap[elementInfos[id].name];\n      var deleteConfigContainer = config;\n      if (elementInfos[id].viewId) {\n        deleteConfigContainer = config.views[elementInfos[id].viewId];\n      }\n      if (_this[funName]) {\n        _this[funName](deleteConfigContainer, id, elementInfos[id].parentInfo.id);\n      }\n    });\n  },\n  deleteAxis: function deleteAxis(config, id) {\n    if (!config) return;\n    delete config.axises[id];\n  },\n  deleteTooltip: function deleteTooltip(config) {\n    if (!config) return;\n    delete config.tooltip;\n  },\n  deleteCoord: function deleteCoord(config) {\n    if (!config) return;\n    delete config.coord;\n  },\n  deleteLegend: function deleteLegend(config, id) {\n    if (!config) return;\n    delete config.legends[id];\n  },\n  deleteGuide: function deleteGuide(config) {\n    if (!config) return;\n    delete config.guide;\n  },\n  deleteGeom: function deleteGeom(config, id) {\n    if (!config || !config.geoms) return;\n\n    delete config.geoms[id];\n  },\n  deleteLabel: function deleteLabel(config, id, parentId) {\n    if (!config || !config.geoms || !config.geoms[parentId]) return;\n\n    delete config.geoms[parentId].label;\n  },\n  deleteFacet: function deleteFacet(config) {\n    if (!config) return;\n\n    delete config.facet;\n  },\n  deleteTypedGuide: function deleteTypedGuide(config, id) {\n    if (!config || !config.guide) return;\n    delete config.guide.elements[id];\n  },\n  deleteView: function deleteView(config, id) {\n    if (!config) return;\n    delete config.views[id];\n  },\n  mergeUpdate: function mergeUpdate(config, clear) {\n    this.mergeChart(config, clear);\n    this.mergeAxises(config, clear);\n    this.mergeCoord(config, clear);\n    this.mergeGeoms(config.geoms, clear);\n    this.mergeLegends(config.legends, clear);\n    this.mergeTooltip(config, clear);\n    this.mergeViews(config.views, clear);\n    this.mergeGuide(config.guide, clear);\n  },\n  mergeChart: function mergeChart(config, clear) {\n    if (config.chart && config.chart.updateProps) {\n      config.chart.props = config.chart.updateProps;\n    }\n    if (clear) {\n      delete config.chart.g2Instance;\n    }\n  },\n  mergeAxises: function mergeAxises(config, clear) {\n    var axises = config.axises;\n\n    if (!axises == null) {\n      return;\n    }\n\n    for (var id in axises) {\n      if (axises[id] && axises[id].updateProps) {\n        axises[id].props = axises[id].updateProps;\n      }\n      if (clear) {\n        delete axises[id].g2Instance;\n      }\n    }\n  },\n  mergeTooltip: function mergeTooltip(config, clear) {\n    if (!config.tooltip) return;\n    if (clear) {\n      delete config.tooltip.g2Instance;\n    }\n\n    if (config.tooltip.updateProps) {\n      config.tooltip.props = config.tooltip.updateProps;\n    }\n  },\n  mergeCoord: function mergeCoord(config, clear) {\n    if (!config.coord) return;\n    if (clear) delete config.coord.g2Instance;\n    if (config.coord.updateProps) {\n      config.coord.props = config.coord.updateProps;\n    }\n  },\n  mergeLegends: function mergeLegends(legends, clear) {\n    if (!legends) return;\n\n    for (var id in legends) {\n      if (legends[id]) {\n        var legendConfig = legends[id];\n        if (clear) {\n          delete legendConfig.g2Instance;\n        }\n        if (legendConfig.updateProps) legendConfig.props = legendConfig.updateProps;\n      }\n    }\n  },\n  mergeGeoms: function mergeGeoms(geoms, clear) {\n    if (geoms == null) return;\n\n    for (var id in geoms) {\n      if (geoms[id]) {\n        if (clear) {\n          delete geoms[id].g2Instance;\n          if (geoms[id].label && geoms[id].label.g2Instance) {\n            if (geoms[id].label.updateProps) {\n              geoms[id].label.props = geoms[id].label.updateProps;\n            }\n            delete geoms[id].label.g2Instance;\n          }\n        }\n        if (geoms[id].updateProps) geoms[id].props = geoms[id].updateProps;\n      }\n    }\n  },\n  mergeGuide: function mergeGuide(guide, clear) {\n    if (guide == null) return;\n\n    var guides = guide.elements;\n    for (var id in guides) {\n      if (guides[id]) {\n        if (clear) {\n          delete guides[id].g2Instance;\n        }\n        if (guides[id].updateProps) {\n          guides[id].props = guides[id].updateProps;\n        }\n      }\n    }\n  },\n  mergeView: function mergeView(view, clear) {\n    if (!view) return;\n    // merge self\n    if (clear && view.g2Instance) {\n      delete view.g2Instance;\n    }\n    if (view.updateProps) {\n      view.props = view.updateProps;\n    }\n\n    this.mergeCoord(view, clear);\n    this.mergeAxises(view, clear);\n    this.mergeGeoms(view.geoms, clear);\n    this.mergeGuide(view.guide, clear);\n  },\n  mergeViews: function mergeViews(views, clear) {\n    if (views == null) return;\n\n    for (var id in views) {\n      if (views[id]) {\n        this.mergeView(views[id], clear);\n      }\n    }\n  }\n};\n\nexports.default = iMerge;"]}]}