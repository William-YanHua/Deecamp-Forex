{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/src/app/pages/InvReqPage/InvReqDetailPage/Bought/Chart/ReallocationChart.tsx","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/src/app/pages/InvReqPage/InvReqDetailPage/Bought/Chart/ReallocationChart.tsx","mtime":1596379644535},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport React from \"react\";\nimport { Chart, Geom, Axis, Tooltip, Legend, } from \"bizcharts\";\nimport DataSet from \"@antv/data-set\";\nvar ReallocationChart = (function (_super) {\n    __extends(ReallocationChart, _super);\n    function ReallocationChart() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ReallocationChart.prototype.render = function () {\n        var ds = new DataSet();\n        var dv = ds\n            .createView()\n            .source(this.props.data)\n            .transform({\n            type: \"rename\",\n            map: {\n                perOfStock: \"股票\",\n                perOfBond: \"债券\",\n                perOfProduct: \"商品市场\",\n            },\n        })\n            .transform({\n            type: \"fold\",\n            fields: [\"策略\", \"债券\", \"商品市场\"],\n            key: \"key\",\n            value: \"val\",\n            retains: [\"tranDate\"],\n        })\n            .transform({\n            type: \"percent\",\n            field: \"val\",\n            dimension: \"key\",\n            groupBy: [\"tranDate\"],\n            as: \"percent\",\n        });\n        console.log(dv);\n        var cols = {\n            percent: {\n                min: 0,\n                formatter: function (val) {\n                    return (val * 100).toFixed(2) + \"%\";\n                },\n            },\n            tranDate: {\n                range: [0.1, 0.9],\n            },\n        };\n        return (React.createElement(\"div\", null,\n            React.createElement(Chart, { height: 400, data: dv, scale: cols, forceFit: true, padding: [5, 80, 120, 80] },\n                React.createElement(Legend, null),\n                React.createElement(Axis, { name: \"tranDate\", position: \"bottom\" }),\n                React.createElement(Axis, { name: \"percent\" }),\n                React.createElement(Tooltip, null),\n                React.createElement(Geom, { type: \"intervalStack\", position: \"tranDate*percent\", color: \"key\" }))));\n    };\n    return ReallocationChart;\n}(React.Component));\nexport { ReallocationChart };\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/src/app/pages/InvReqPage/InvReqDetailPage/Bought/Chart/ReallocationChart.tsx","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/src/app/pages/InvReqPage/InvReqDetailPage/Bought/Chart/ReallocationChart.tsx"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EACL,KAAK,EACL,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,MAAM,GACP,MAAM,WAAW,CAAC;AACnB,OAAO,OAAO,MAAM,gBAAgB,CAAC;AAOrC;IAAuC,qCAA0B;IAAjE;;IAoEA,CAAC;IAnEC,kCAAM,GAAN;QACE,IAAM,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;QACzB,IAAM,EAAE,GAAG,EAAE;aACV,UAAU,EAAE;aACZ,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;aACvB,SAAS,CACR;YACE,IAAI,EAAE,QAAQ;YACd,GAAG,EAAE;gBACH,UAAU,EAAE,IAAI;gBAChB,SAAS,EAAE,IAAI;gBACf,YAAY,EAAE,MAAM;aACrB;SACF,CACF;aACA,SAAS,CACR;YACE,IAAI,EAAE,MAAM;YACZ,MAAM,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC;YAC5B,GAAG,EAAE,KAAK;YACV,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,CAAC,UAAU,CAAC;SACtB,CAAC;aACH,SAAS,CACR;YACE,IAAI,EAAE,SAAS;YACf,KAAK,EAAE,KAAK;YACZ,SAAS,EAAE,KAAK;YAChB,OAAO,EAAE,CAAC,UAAU,CAAC;YACrB,EAAE,EAAE,SAAS;SACd,CAAC,CAAC;QACP,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAEhB,IAAM,IAAI,GAAG;YACX,OAAO,EAAE;gBACP,GAAG,EAAE,CAAC;gBAEN,SAAS,YAAC,GAAG;oBACX,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAE;gBACvC,CAAC;aACF;YACD,QAAQ,EAAE;gBACR,KAAK,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;aAClB;SACF,CAAC;QAEF,OAAO,CACL;YACE,oBAAC,KAAK,IAAC,MAAM,EAAE,GAAG,EACX,IAAI,EAAE,EAAE,EACR,KAAK,EAAE,IAAI,EACX,QAAQ,EAAE,IAAI,EACd,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC;gBAE9B,oBAAC,MAAM,OAAG;gBACV,oBAAC,IAAI,IAAC,IAAI,EAAC,UAAU,EAAC,QAAQ,EAAE,QAAQ,GAAG;gBAC3C,oBAAC,IAAI,IAAC,IAAI,EAAC,SAAS,GAAG;gBACvB,oBAAC,OAAO,OAAG;gBACX,oBAAC,IAAI,IACH,IAAI,EAAC,eAAe,EACpB,QAAQ,EAAC,kBAAkB,EAC3B,KAAK,EAAE,KAAK,GACZ,CACI,CACJ,CACP,CAAC;IACJ,CAAC;IACH,wBAAC;AAAD,CAAC,AApED,CAAuC,KAAK,CAAC,SAAS,GAoErD","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Chart,\r\n  Geom,\r\n  Axis,\r\n  Tooltip,\r\n  Legend,\r\n} from \"bizcharts\";\r\nimport DataSet from \"@antv/data-set\";\r\nimport {ReallocationLog} from \"../../../../../models/invreq/Bought/ReallocationLog\";\r\n\r\ninterface Props {\r\n  data: ReallocationLog;\r\n}\r\n\r\nexport class ReallocationChart extends React.Component<Props, {}> {\r\n  render() {\r\n    const ds = new DataSet();\r\n    const dv = ds\r\n      .createView()\r\n      .source(this.props.data)\r\n      .transform(\r\n        {\r\n          type: \"rename\",\r\n          map: {\r\n            perOfStock: \"股票\",\r\n            perOfBond: \"债券\",\r\n            perOfProduct: \"商品市场\",\r\n          },\r\n        },\r\n      )\r\n      .transform(\r\n        {\r\n          type: \"fold\",\r\n          fields: [\"策略\", \"债券\", \"商品市场\"],\r\n          key: \"key\",\r\n          value: \"val\",\r\n          retains: [\"tranDate\"],\r\n        })\r\n      .transform(\r\n        {\r\n          type: \"percent\",\r\n          field: \"val\",\r\n          dimension: \"key\",\r\n          groupBy: [\"tranDate\"],\r\n          as: \"percent\",\r\n        });\r\n    console.log(dv);\r\n\r\n    const cols = {\r\n      percent: {\r\n        min: 0,\r\n\r\n        formatter(val) {\r\n          return (val * 100).toFixed(2) + \"%\" ;\r\n        },\r\n      },\r\n      tranDate: {\r\n        range: [0.1, 0.9],\r\n      },\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Chart height={400}\r\n               data={dv}\r\n               scale={cols}\r\n               forceFit={true}\r\n               padding={[5, 80, 120, 80]}\r\n        >\r\n          <Legend />\r\n          <Axis name=\"tranDate\" position={\"bottom\"}/>\r\n          <Axis name=\"percent\" />\r\n          <Tooltip />\r\n          <Geom\r\n            type=\"intervalStack\"\r\n            position=\"tranDate*percent\"\r\n            color={\"key\"}\r\n          />\r\n        </Chart>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}]}