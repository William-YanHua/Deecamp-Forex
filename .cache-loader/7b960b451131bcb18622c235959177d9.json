{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/src/transform/pick.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/src/transform/pick.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var pick = require('@antv/util/lib/pick');\nvar registerTransform = require('../data-set').registerTransform;\nvar getFields = require('../util/option-parser').getFields;\nregisterTransform('pick', function (dataView, options) {\n    if (options === void 0) { options = {}; }\n    var columns = getFields(options, dataView.getColumnNames());\n    dataView.rows = dataView.rows.map(function (row) { return pick(row, columns); });\n});\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/src/transform/pick.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/src/transform/pick.js"],"names":[],"mappings":"AAAA,IAAM,IAAI,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;AAE1C,IAAA,iBAAiB,GACf,OAAO,CAAC,aAAa,CAAC,kBADP,CACQ;AAEzB,IAAA,SAAS,GACP,OAAO,CAAC,uBAAuB,CAAC,UADzB,CAC0B;AASrC,iBAAiB,CAAC,MAAM,EAAE,UAAC,QAAQ,EAAE,OAAY;IAAZ,wBAAA,EAAA,YAAY;IAC/C,IAAM,OAAO,GAAG,SAAS,CAAC,OAAO,EAAE,QAAQ,CAAC,cAAc,EAAE,CAAC,CAAC;IAC9D,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,EAAlB,CAAkB,CAAC,CAAC;AAC/D,CAAC,CAAC,CAAC","sourcesContent":["const pick = require('@antv/util/lib/pick');\nconst {\n  registerTransform\n} = require('../data-set');\nconst {\n  getFields\n} = require('../util/option-parser');\n\n/*\n * options: {\n *   type: 'pick',\n *   fields: [],\n * }\n */\n\nregisterTransform('pick', (dataView, options = {}) => {\n  const columns = getFields(options, dataView.getColumnNames());\n  dataView.rows = dataView.rows.map(row => pick(row, columns));\n});\n"]}]}