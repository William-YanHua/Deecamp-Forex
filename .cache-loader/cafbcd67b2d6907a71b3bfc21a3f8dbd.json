{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/node_modules/@antv/hierarchy/lib/layout/mindmap.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/node_modules/@antv/hierarchy/lib/layout/mindmap.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var util = require('../util');\nfunction secondWalk(node, options) {\n    var totalHeight = 0;\n    if (!node.children.length) {\n        totalHeight = node.height;\n    }\n    else {\n        node.children.forEach(function (c) {\n            totalHeight += secondWalk(c, options);\n        });\n    }\n    node._subTreeSep = options.getSubTreeSep(node.data);\n    node.totalHeight = Math.max(node.height, totalHeight) + 2 * node._subTreeSep;\n    return node.totalHeight;\n}\nfunction thirdWalk(node) {\n    var children = node.children;\n    var len = children.length;\n    if (len) {\n        children.forEach(function (c) {\n            thirdWalk(c);\n        });\n        var first = children[0];\n        var last = children[len - 1];\n        var childrenHeight = last.y - first.y + last.height;\n        var childrenTotalHeight = 0;\n        children.forEach(function (child) {\n            childrenTotalHeight += child.totalHeight;\n        });\n        if (childrenHeight > node.height) {\n            node.y = first.y + childrenHeight / 2 - node.height / 2;\n        }\n        else if (children.length !== 1 || node.height > childrenTotalHeight) {\n            var offset = node.y + (node.height - childrenHeight) / 2 - first.y;\n            children.forEach(function (c) {\n                c.translate(0, offset);\n            });\n        }\n        else {\n            node.y = (first.y + first.height / 2 + last.y + last.height / 2) / 2 - node.height / 2;\n        }\n    }\n}\nvar DEFAULT_OPTIONS = {\n    getSubTreeSep: function getSubTreeSep() {\n        return 0;\n    }\n};\nmodule.exports = function (root, options) {\n    if (options === void 0) {\n        options = {};\n    }\n    options = util.assign({}, DEFAULT_OPTIONS, options);\n    root.parent = {\n        x: 0,\n        width: 0,\n        height: 0,\n        y: 0\n    };\n    root.BFTraverse(function (node) {\n        node.x = node.parent.x + node.parent.width;\n    });\n    root.parent = null;\n    secondWalk(root, options);\n    root.startY = 0;\n    root.y = root.totalHeight / 2 - root.height / 2;\n    root.eachNode(function (node) {\n        var children = node.children;\n        var len = children.length;\n        if (len) {\n            var first = children[0];\n            first.startY = node.startY + node._subTreeSep;\n            if (len === 1) {\n                first.y = node.y + node.height / 2 - first.height / 2;\n            }\n            else {\n                first.y = first.startY + first.totalHeight / 2 - first.height / 2;\n                for (var i = 1; i < len; i++) {\n                    var c = children[i];\n                    c.startY = children[i - 1].startY + children[i - 1].totalHeight;\n                    c.y = c.startY + c.totalHeight / 2 - c.height / 2;\n                }\n            }\n        }\n    });\n    thirdWalk(root);\n};\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/node_modules/@antv/hierarchy/lib/layout/mindmap.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/node_modules/@antv/hierarchy/lib/layout/mindmap.js"],"names":[],"mappings":"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","sourcesContent":["var util = require('../util');\n\nfunction secondWalk(node, options) {\n  var totalHeight = 0;\n\n  if (!node.children.length) {\n    totalHeight = node.height;\n  } else {\n    node.children.forEach(function (c) {\n      totalHeight += secondWalk(c, options);\n    });\n  }\n\n  node._subTreeSep = options.getSubTreeSep(node.data);\n  node.totalHeight = Math.max(node.height, totalHeight) + 2 * node._subTreeSep;\n  return node.totalHeight;\n}\n\nfunction thirdWalk(node) {\n  var children = node.children;\n  var len = children.length;\n\n  if (len) {\n    children.forEach(function (c) {\n      thirdWalk(c);\n    });\n    var first = children[0];\n    var last = children[len - 1];\n    var childrenHeight = last.y - first.y + last.height;\n    var childrenTotalHeight = 0;\n    children.forEach(function (child) {\n      childrenTotalHeight += child.totalHeight;\n    });\n\n    if (childrenHeight > node.height) {\n      // 当子节点总高度大于父节点高度\n      node.y = first.y + childrenHeight / 2 - node.height / 2;\n    } else if (children.length !== 1 || node.height > childrenTotalHeight) {\n      // 多于一个子节点或者父节点大于所有子节点的总高度\n      var offset = node.y + (node.height - childrenHeight) / 2 - first.y;\n      children.forEach(function (c) {\n        c.translate(0, offset);\n      });\n    } else {\n      // 只有一个子节点\n      node.y = (first.y + first.height / 2 + last.y + last.height / 2) / 2 - node.height / 2;\n    }\n  }\n}\n\nvar DEFAULT_OPTIONS = {\n  getSubTreeSep: function getSubTreeSep() {\n    return 0;\n  }\n};\n\nmodule.exports = function (root, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  options = util.assign({}, DEFAULT_OPTIONS, options);\n  root.parent = {\n    x: 0,\n    width: 0,\n    height: 0,\n    y: 0\n  }; // first walk\n\n  root.BFTraverse(function (node) {\n    node.x = node.parent.x + node.parent.width; // simply get x\n  });\n  root.parent = null; // second walk\n\n  secondWalk(root, options); // assign sub tree totalHeight\n  // adjusting\n  // separating nodes\n\n  root.startY = 0;\n  root.y = root.totalHeight / 2 - root.height / 2;\n  root.eachNode(function (node) {\n    var children = node.children;\n    var len = children.length;\n\n    if (len) {\n      var first = children[0];\n      first.startY = node.startY + node._subTreeSep;\n\n      if (len === 1) {\n        first.y = node.y + node.height / 2 - first.height / 2;\n      } else {\n        first.y = first.startY + first.totalHeight / 2 - first.height / 2;\n\n        for (var i = 1; i < len; i++) {\n          var c = children[i];\n          c.startY = children[i - 1].startY + children[i - 1].totalHeight;\n          c.y = c.startY + c.totalHeight / 2 - c.height / 2;\n        }\n      }\n    }\n  }); // third walk\n\n  thirdWalk(root);\n};"]}]}