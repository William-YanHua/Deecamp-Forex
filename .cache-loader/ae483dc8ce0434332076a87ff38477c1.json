{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\facet\\tree.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\facet\\tree.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\r\nvar Base = require('./base');\r\nvar Util = require('../util');\r\nvar assign = Util.assign;\r\nvar Tree = function (_Base) {\r\n    _inheritsLoose(Tree, _Base);\r\n    function Tree() {\r\n        return _Base.apply(this, arguments) || this;\r\n    }\r\n    var _proto = Tree.prototype;\r\n    _proto.getDefaultCfg = function getDefaultCfg() {\r\n        var cfg = _Base.prototype.getDefaultCfg.call(this);\r\n        cfg.type = 'tree';\r\n        cfg.line = {\r\n            lineWidth: 1,\r\n            stroke: '#ddd'\r\n        };\r\n        cfg.lineSmooth = false;\r\n        return cfg;\r\n    };\r\n    _proto.generateFacets = function generateFacets(data) {\r\n        var self = this;\r\n        var fields = self.fields;\r\n        if (!fields.length) {\r\n            throw 'Please specify for the fields for facet!';\r\n        }\r\n        var rst = [];\r\n        var root = self.getRootFacet(data);\r\n        rst.push(root);\r\n        root.children = self.getChildFacets(data, 1, rst);\r\n        self.setRegion(rst);\r\n        return rst;\r\n    };\r\n    _proto.getRootFacet = function getRootFacet(data) {\r\n        var self = this;\r\n        var facet = {\r\n            type: self.type,\r\n            rows: self.getRows(),\r\n            rowIndex: 0,\r\n            colIndex: 0,\r\n            colValue: self.rootTitle,\r\n            data: data\r\n        };\r\n        return facet;\r\n    };\r\n    _proto.getRows = function getRows() {\r\n        return this.fields.length + 1;\r\n    };\r\n    _proto.getChildFacets = function getChildFacets(data, level, arr) {\r\n        var self = this;\r\n        var fields = self.fields;\r\n        var length = fields.length;\r\n        if (length < level) {\r\n            return;\r\n        }\r\n        var rst = [];\r\n        var field = fields[level - 1];\r\n        var values = self.getFieldValues(field, data);\r\n        values.forEach(function (value, index) {\r\n            var conditions = [{\r\n                    field: field,\r\n                    value: value,\r\n                    values: values\r\n                }];\r\n            var filter = self.getFilter(conditions);\r\n            var subData = data.filter(filter);\r\n            if (subData.length) {\r\n                var facet = {\r\n                    type: self.type,\r\n                    colValue: value,\r\n                    colField: field,\r\n                    colIndex: index,\r\n                    rows: self.getRows(),\r\n                    rowIndex: level,\r\n                    data: subData,\r\n                    children: self.getChildFacets(subData, level + 1, arr)\r\n                };\r\n                rst.push(facet);\r\n                arr.push(facet);\r\n            }\r\n        });\r\n        return rst;\r\n    };\r\n    _proto.setRegion = function setRegion(facets) {\r\n        var self = this;\r\n        self.forceColIndex(facets);\r\n        facets.forEach(function (facet) {\r\n            facet.region = self.getRegion(facet.rows, facet.cols, facet.colIndex, facet.rowIndex);\r\n        });\r\n    };\r\n    _proto.forceColIndex = function forceColIndex(facets) {\r\n        var self = this;\r\n        var leafs = [];\r\n        var index = 0;\r\n        facets.forEach(function (facet) {\r\n            if (self.isLeaf(facet)) {\r\n                leafs.push(facet);\r\n                facet.colIndex = index;\r\n                index++;\r\n            }\r\n        });\r\n        leafs.forEach(function (facet) {\r\n            facet.cols = leafs.length;\r\n        });\r\n        var maxLevel = self.fields.length;\r\n        for (var i = maxLevel - 1; i >= 0; i--) {\r\n            var levelFacets = self.getFacetsByLevel(facets, i);\r\n            for (var j = 0; j < levelFacets.length; j++) {\r\n                var facet = levelFacets[j];\r\n                if (!self.isLeaf(facet)) {\r\n                    facet.originColIndex = facet.colIndex;\r\n                    facet.colIndex = self.getRegionIndex(facet.children);\r\n                    facet.cols = leafs.length;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    _proto.getFacetsByLevel = function getFacetsByLevel(facets, level) {\r\n        var rst = [];\r\n        facets.forEach(function (facet) {\r\n            if (facet.rowIndex === level) {\r\n                rst.push(facet);\r\n            }\r\n        });\r\n        return rst;\r\n    };\r\n    _proto.getRegion = function getRegion(rows, cols, xIndex, yIndex) {\r\n        var xWidth = 1 / cols;\r\n        var yWidth = 1 / rows;\r\n        var start = {\r\n            x: xWidth * xIndex,\r\n            y: yWidth * yIndex\r\n        };\r\n        var end = {\r\n            x: start.x + xWidth,\r\n            y: start.y + yWidth * 2 / 3\r\n        };\r\n        return {\r\n            start: start,\r\n            end: end\r\n        };\r\n    };\r\n    _proto.getRegionIndex = function getRegionIndex(children) {\r\n        var first = children[0];\r\n        var last = children[children.length - 1];\r\n        return (last.colIndex - first.colIndex) / 2 + first.colIndex;\r\n    };\r\n    _proto.isLeaf = function isLeaf(facet) {\r\n        return !facet.children || !facet.children.length;\r\n    };\r\n    _proto.setXAxis = function setXAxis(xField, axes, facet) {\r\n        if (facet.rowIndex !== facet.rows - 1) {\r\n            axes[xField].label = null;\r\n            axes[xField].title = null;\r\n        }\r\n    };\r\n    _proto.setYAxis = function setYAxis(yField, axes, facet) {\r\n        if (facet.originColIndex !== 0 && facet.colIndex !== 0) {\r\n            axes[yField].title = null;\r\n            axes[yField].label = null;\r\n        }\r\n    };\r\n    _proto.onPaint = function onPaint() {\r\n        _Base.prototype.onPaint.call(this);\r\n        this.group.clear();\r\n        if (this.facets && this.line) {\r\n            this.drawLines(this.facets, this.group);\r\n        }\r\n    };\r\n    _proto.drawLines = function drawLines(facets, group) {\r\n        var self = this;\r\n        var lineGroup = group.addGroup();\r\n        facets.forEach(function (facet) {\r\n            if (!self.isLeaf(facet)) {\r\n                var children = facet.children;\r\n                self._addFacetLines(facet, children, lineGroup);\r\n            }\r\n        });\r\n    };\r\n    _proto._addFacetLines = function _addFacetLines(facet, children, group) {\r\n        var self = this;\r\n        var view = facet.view;\r\n        var region = view.getViewRegion();\r\n        var start = {\r\n            x: region.start.x + (region.end.x - region.start.x) / 2,\r\n            y: region.start.y\r\n        };\r\n        children.forEach(function (subFacet) {\r\n            var subRegion = subFacet.view.getViewRegion();\r\n            var end = {\r\n                x: subRegion.start.x + (subRegion.end.x - subRegion.start.x) / 2,\r\n                y: subRegion.end.y\r\n            };\r\n            var middle1 = {\r\n                x: start.x,\r\n                y: start.y + (end.y - start.y) / 2\r\n            };\r\n            var middle2 = {\r\n                x: end.x,\r\n                y: middle1.y\r\n            };\r\n            self._drawLine([start, middle1, middle2, end], group);\r\n        });\r\n    };\r\n    _proto._getPath = function _getPath(points) {\r\n        var self = this;\r\n        var path = [];\r\n        var smooth = self.lineSmooth;\r\n        if (smooth) {\r\n            path.push(['M', points[0].x, points[0].y]);\r\n            path.push(['C', points[1].x, points[1].y, points[2].x, points[2].y, points[3].x, points[3].y]);\r\n        }\r\n        else {\r\n            points.forEach(function (point, index) {\r\n                if (index === 0) {\r\n                    path.push(['M', point.x, point.y]);\r\n                }\r\n                else {\r\n                    path.push(['L', point.x, point.y]);\r\n                }\r\n            });\r\n        }\r\n        return path;\r\n    };\r\n    _proto._drawLine = function _drawLine(points, group) {\r\n        var self = this;\r\n        var path = self._getPath(points);\r\n        var line = self.line;\r\n        group.addShape('path', {\r\n            attrs: assign({\r\n                path: path\r\n            }, line)\r\n        });\r\n    };\r\n    return Tree;\r\n}(Base);\r\nmodule.exports = Tree;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\facet\\tree.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\facet\\tree.js"],"names":[],"mappings":"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","sourcesContent":["function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * @fileOverview tree facets\n * @author dxq613@gmail.com\n */\nvar Base = require('./base');\n\nvar Util = require('../util');\n\nvar assign = Util.assign;\n\nvar Tree =\n/*#__PURE__*/\nfunction (_Base) {\n  _inheritsLoose(Tree, _Base);\n\n  function Tree() {\n    return _Base.apply(this, arguments) || this;\n  }\n\n  var _proto = Tree.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Base.prototype.getDefaultCfg.call(this);\n\n    cfg.type = 'tree';\n    cfg.line = {\n      lineWidth: 1,\n      stroke: '#ddd'\n    };\n    cfg.lineSmooth = false;\n    return cfg;\n  };\n\n  _proto.generateFacets = function generateFacets(data) {\n    var self = this;\n    var fields = self.fields;\n\n    if (!fields.length) {\n      throw 'Please specify for the fields for facet!';\n    }\n\n    var rst = [];\n    var root = self.getRootFacet(data); // if (self.showRoot) {\n\n    rst.push(root); // }\n\n    root.children = self.getChildFacets(data, 1, rst);\n    self.setRegion(rst);\n    return rst;\n  };\n\n  _proto.getRootFacet = function getRootFacet(data) {\n    var self = this;\n    var facet = {\n      type: self.type,\n      rows: self.getRows(),\n      rowIndex: 0,\n      colIndex: 0,\n      colValue: self.rootTitle,\n      data: data\n    };\n    return facet;\n  };\n\n  _proto.getRows = function getRows() {\n    return this.fields.length + 1;\n  }; // get child\n\n\n  _proto.getChildFacets = function getChildFacets(data, level, arr) {\n    var self = this;\n    var fields = self.fields;\n    var length = fields.length;\n\n    if (length < level) {\n      return;\n    }\n\n    var rst = [];\n    var field = fields[level - 1];\n    var values = self.getFieldValues(field, data);\n    values.forEach(function (value, index) {\n      var conditions = [{\n        field: field,\n        value: value,\n        values: values\n      }];\n      var filter = self.getFilter(conditions);\n      var subData = data.filter(filter);\n\n      if (subData.length) {\n        var facet = {\n          type: self.type,\n          colValue: value,\n          colField: field,\n          colIndex: index,\n          rows: self.getRows(),\n          rowIndex: level,\n          data: subData,\n          children: self.getChildFacets(subData, level + 1, arr)\n        };\n        rst.push(facet);\n        arr.push(facet);\n      }\n    });\n    return rst;\n  }; // 设置 region\n\n\n  _proto.setRegion = function setRegion(facets) {\n    var self = this;\n    self.forceColIndex(facets);\n    facets.forEach(function (facet) {\n      facet.region = self.getRegion(facet.rows, facet.cols, facet.colIndex, facet.rowIndex);\n    });\n  }; // set column index of facets\n\n\n  _proto.forceColIndex = function forceColIndex(facets) {\n    var self = this;\n    var leafs = [];\n    var index = 0;\n    facets.forEach(function (facet) {\n      if (self.isLeaf(facet)) {\n        leafs.push(facet);\n        facet.colIndex = index;\n        index++;\n      }\n    });\n    leafs.forEach(function (facet) {\n      facet.cols = leafs.length;\n    });\n    var maxLevel = self.fields.length;\n\n    for (var i = maxLevel - 1; i >= 0; i--) {\n      var levelFacets = self.getFacetsByLevel(facets, i); // var yIndex = maxLevel - i;\n\n      for (var j = 0; j < levelFacets.length; j++) {\n        var facet = levelFacets[j];\n\n        if (!self.isLeaf(facet)) {\n          facet.originColIndex = facet.colIndex;\n          facet.colIndex = self.getRegionIndex(facet.children);\n          facet.cols = leafs.length;\n        }\n      }\n    }\n  }; // get facet use level\n\n\n  _proto.getFacetsByLevel = function getFacetsByLevel(facets, level) {\n    var rst = [];\n    facets.forEach(function (facet) {\n      if (facet.rowIndex === level) {\n        rst.push(facet);\n      }\n    });\n    return rst;\n  }; // set facets region\n\n\n  _proto.getRegion = function getRegion(rows, cols, xIndex, yIndex) {\n    var xWidth = 1 / cols; // x轴方向的每个分面的偏移\n\n    var yWidth = 1 / rows; // y轴方向的每个分面的偏移\n\n    var start = {\n      x: xWidth * xIndex,\n      y: yWidth * yIndex\n    };\n    var end = {\n      x: start.x + xWidth,\n      y: start.y + yWidth * 2 / 3 // 预留1/3的空隙，方便添加连接线\n\n    };\n    return {\n      start: start,\n      end: end\n    };\n  }; // if the facet has children , make it's column index in the middle of it's children\n\n\n  _proto.getRegionIndex = function getRegionIndex(children) {\n    var first = children[0];\n    var last = children[children.length - 1];\n    return (last.colIndex - first.colIndex) / 2 + first.colIndex;\n  }; // is  a leaf without children\n\n\n  _proto.isLeaf = function isLeaf(facet) {\n    return !facet.children || !facet.children.length;\n  };\n\n  _proto.setXAxis = function setXAxis(xField, axes, facet) {\n    // 当是最后一行或者下面没有 view 时文本不显示\n    if (facet.rowIndex !== facet.rows - 1) {\n      axes[xField].label = null;\n      axes[xField].title = null;\n    }\n  }; // 设置 y 坐标轴的文本、title 是否显示\n\n\n  _proto.setYAxis = function setYAxis(yField, axes, facet) {\n    if (facet.originColIndex !== 0 && facet.colIndex !== 0) {\n      axes[yField].title = null;\n      axes[yField].label = null;\n    }\n  }; // 绘制完成后\n\n\n  _proto.onPaint = function onPaint() {\n    _Base.prototype.onPaint.call(this);\n\n    this.group.clear();\n\n    if (this.facets && this.line) {\n      this.drawLines(this.facets, this.group);\n    }\n  };\n\n  _proto.drawLines = function drawLines(facets, group) {\n    var self = this;\n    var lineGroup = group.addGroup();\n    facets.forEach(function (facet) {\n      if (!self.isLeaf(facet)) {\n        var children = facet.children;\n\n        self._addFacetLines(facet, children, lineGroup);\n      }\n    });\n  }; // add lines with it's children\n\n\n  _proto._addFacetLines = function _addFacetLines(facet, children, group) {\n    var self = this;\n    var view = facet.view;\n    var region = view.getViewRegion();\n    var start = {\n      x: region.start.x + (region.end.x - region.start.x) / 2,\n      y: region.start.y\n    };\n    children.forEach(function (subFacet) {\n      var subRegion = subFacet.view.getViewRegion();\n      var end = {\n        x: subRegion.start.x + (subRegion.end.x - subRegion.start.x) / 2,\n        y: subRegion.end.y\n      };\n      var middle1 = {\n        x: start.x,\n        y: start.y + (end.y - start.y) / 2\n      };\n      var middle2 = {\n        x: end.x,\n        y: middle1.y\n      };\n\n      self._drawLine([start, middle1, middle2, end], group);\n    });\n  };\n\n  _proto._getPath = function _getPath(points) {\n    var self = this;\n    var path = [];\n    var smooth = self.lineSmooth;\n\n    if (smooth) {\n      path.push(['M', points[0].x, points[0].y]);\n      path.push(['C', points[1].x, points[1].y, points[2].x, points[2].y, points[3].x, points[3].y]);\n    } else {\n      points.forEach(function (point, index) {\n        if (index === 0) {\n          path.push(['M', point.x, point.y]);\n        } else {\n          path.push(['L', point.x, point.y]);\n        }\n      });\n    }\n\n    return path;\n  }; // draw line width points\n\n\n  _proto._drawLine = function _drawLine(points, group) {\n    var self = this;\n\n    var path = self._getPath(points);\n\n    var line = self.line;\n    group.addShape('path', {\n      attrs: assign({\n        path: path\n      }, line)\n    });\n  };\n\n  return Tree;\n}(Base);\n\nmodule.exports = Tree;"]}]}