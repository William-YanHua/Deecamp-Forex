{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/geometry/shape/util/get-path-points.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/geometry/shape/util/get-path-points.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { isArray } from '@antv/util';\nfunction isValueEmpty(value) {\n    if (value) {\n        return false;\n    }\n    return value === null || value === undefined || isNaN(value);\n}\nfunction isYNil(point) {\n    if (isArray(point)) {\n        return isValueEmpty(point[1].y);\n    }\n    var value = point.y;\n    return isArray(value) ? isValueEmpty(value[0]) : isValueEmpty(value);\n}\nexport function getPathPoints(points, connectNulls, showSinglePoint) {\n    if (connectNulls === void 0) {\n        connectNulls = false;\n    }\n    if (showSinglePoint === void 0) {\n        showSinglePoint = true;\n    }\n    if (!points.length || (points.length === 1 && !showSinglePoint)) {\n        return [];\n    }\n    if (connectNulls) {\n        var filtered = [];\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n            if (!isYNil(point)) {\n                filtered.push(point);\n            }\n        }\n        return [filtered];\n    }\n    var result = [];\n    var tmp = [];\n    for (var i = 0, len = points.length; i < len; i++) {\n        var point = points[i];\n        if (isYNil(point)) {\n            if (tmp.length) {\n                if (!(tmp.length === 1 && !showSinglePoint)) {\n                    result.push(tmp);\n                }\n                tmp = [];\n            }\n        }\n        else {\n            tmp.push(point);\n        }\n    }\n    if (tmp.length) {\n        result.push(tmp);\n    }\n    return result;\n}\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/geometry/shape/util/get-path-points.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/geometry/shape/util/get-path-points.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AACrC,SAAS,YAAY,CAAC,KAAK;IACvB,IAAI,KAAK,EAAE;QACP,OAAO,KAAK,CAAC;KAChB;IACD,OAAO,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;AACjE,CAAC;AACD,SAAS,MAAM,CAAC,KAAK;IACjB,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;QAEhB,OAAO,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KACnC;IACD,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC;IACpB,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AACzE,CAAC;AAwBD,MAAM,UAAU,aAAa,CAAC,MAAM,EAAE,YAAY,EAAE,eAAe;IAC/D,IAAI,YAAY,KAAK,KAAK,CAAC,EAAE;QAAE,YAAY,GAAG,KAAK,CAAC;KAAE;IACtD,IAAI,eAAe,KAAK,KAAK,CAAC,EAAE;QAAE,eAAe,GAAG,IAAI,CAAC;KAAE;IAC3D,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE;QAE7D,OAAO,EAAE,CAAC;KACb;IACD,IAAI,YAAY,EAAE;QAEd,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC/C,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;gBAChB,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACxB;SACJ;QACD,OAAO,CAAC,QAAQ,CAAC,CAAC;KACrB;IACD,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,IAAI,GAAG,GAAG,EAAE,CAAC;IACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;QAC/C,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACtB,IAAI,MAAM,CAAC,KAAK,CAAC,EAAE;YACf,IAAI,GAAG,CAAC,MAAM,EAAE;gBACZ,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE;oBAEzC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACpB;gBACD,GAAG,GAAG,EAAE,CAAC;aACZ;SACJ;aACI;YACD,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACnB;KACJ;IACD,IAAI,GAAG,CAAC,MAAM,EAAE;QACZ,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACpB;IACD,OAAO,MAAM,CAAC;AAClB,CAAC","sourcesContent":["import { isArray } from '@antv/util';\nfunction isValueEmpty(value) {\n    if (value) {\n        return false;\n    }\n    return value === null || value === undefined || isNaN(value);\n}\nfunction isYNil(point) {\n    if (isArray(point)) {\n        // 特殊处理 area 的关键点数据，其关键点结构为 [{x: 0, y: 1}, {x: 0, y: 2}]\n        return isValueEmpty(point[1].y);\n    }\n    var value = point.y;\n    return isArray(value) ? isValueEmpty(value[0]) : isValueEmpty(value);\n}\n/**\n * @ignore\n * 分割数据，用于处理在一组点数据中，y 对应的数值存在 null/undefined/NaN 的情况\n * 应用于折线图、区域图以及路径图\n *\n * ```typescript\n * // return [[{x: 1, y: 2}, {x: 3, y: 3}]]\n * getPathPoints([{x: 1, y: 2}, {x: 2, y: null}, {x: 3, y: 3}], true);\n * // return [[{x: 1, y: 2}], [{x: 3, y: 3}]]\n * getPathPoints([{x: 1, y: 2}, {x: 2, y: null}, {x: 3, y: 3}], false);\n * // return [[[{ x: 1, y: 10 }, { x: 2, y: 2 }], [{ x: 9, y: 34 }, { x: 1, y: 1 }]]]\n * getPathPoints([\n *   [{ x: 1, y: 10 }, { x: 2, y: 2 }],\n *   [{ x: 4, y: 2 }, { x: 8, y: NaN }],\n *   [{ x: 9, y: 34 }, { x: 1, y: 1 }],\n * ], true);\n * ```\n *\n * @param points 要进行处理点集合\n * @param connectNulls 是否连接空值数据\n * @param showSinglePoint 是否展示孤立点\n * @returns 返回处理后的点集合\n */\nexport function getPathPoints(points, connectNulls, showSinglePoint) {\n    if (connectNulls === void 0) { connectNulls = false; }\n    if (showSinglePoint === void 0) { showSinglePoint = true; }\n    if (!points.length || (points.length === 1 && !showSinglePoint)) {\n        // 空或者只有一个点并配置不展示时\n        return [];\n    }\n    if (connectNulls) {\n        // 即 y 值为空的场景\n        var filtered = [];\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n            if (!isYNil(point)) {\n                filtered.push(point);\n            }\n        }\n        return [filtered];\n    }\n    var result = [];\n    var tmp = [];\n    for (var i = 0, len = points.length; i < len; i++) {\n        var point = points[i];\n        if (isYNil(point)) {\n            if (tmp.length) {\n                if (!(tmp.length === 1 && !showSinglePoint)) {\n                    // 如果前段数据只有一个字段并且不需要展示时则不加入\n                    result.push(tmp);\n                }\n                tmp = [];\n            }\n        }\n        else {\n            tmp.push(point);\n        }\n    }\n    if (tmp.length) {\n        result.push(tmp);\n    }\n    return result;\n}\n//# sourceMappingURL=get-path-points.js.map"]}]}