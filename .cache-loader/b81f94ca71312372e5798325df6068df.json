{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/column/layer.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/column/layer.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { __assign, __extends } from \"tslib\";\nimport { deepMix, has, each, clone } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport ViewLayer from '../../base/view-layer';\nimport { getGeom } from '../../geoms/factory';\nimport ConversionTag from '../../components/conversion-tag';\nimport { extractScale } from '../../util/scale';\nimport responsiveMethods from './apply-responsive';\nimport './apply-responsive/theme';\nimport './component/label';\nimport './component/label-auto';\nimport * as EventParser from './event';\nimport './theme';\nimport { getGeometryByType } from '../../util/view';\nvar G2_GEOM_MAP = {\n    column: 'interval',\n};\nvar PLOT_GEOM_MAP = {\n    interval: 'column',\n};\nvar BaseColumnLayer = (function (_super) {\n    __extends(BaseColumnLayer, _super);\n    function BaseColumnLayer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'column';\n        return _this;\n    }\n    BaseColumnLayer.getDefaultOptions = function () {\n        return deepMix({}, _super.getDefaultOptions.call(this), {\n            xAxis: {\n                visible: true,\n                tickLine: {\n                    visible: false,\n                },\n                title: {\n                    visible: true,\n                },\n            },\n            yAxis: {\n                nice: true,\n                title: {\n                    visible: true,\n                },\n                label: {\n                    visible: true,\n                },\n                grid: {\n                    visible: true,\n                },\n            },\n            tooltip: {\n                visible: true,\n                shared: true,\n                showCrosshairs: false,\n                showMarkers: false,\n            },\n            label: {\n                visible: false,\n                position: 'top',\n                adjustColor: true,\n            },\n            legend: {\n                visible: true,\n                position: 'top-left',\n            },\n            interactions: [\n                { type: 'tooltip' },\n                { type: 'active-region' },\n                { type: 'legend-active' },\n                { type: 'legend-filter' },\n            ],\n            conversionTag: {\n                visible: false,\n            },\n        });\n    };\n    BaseColumnLayer.prototype.beforeInit = function () {\n        _super.prototype.beforeInit.call(this);\n        if (this.options.responsive && this.options.padding !== 'auto') {\n            this.applyResponsive('preRender');\n        }\n    };\n    BaseColumnLayer.prototype.afterRender = function () {\n        var props = this.options;\n        this.renderLabel();\n        if (this.options.responsive && this.options.padding !== 'auto') {\n            this.applyResponsive('afterRender');\n        }\n        if (props.conversionTag.visible) {\n            this.conversionTag = new ConversionTag(__assign({ view: this.view, field: props.yField, transpose: true, animation: props.animation === false ? false : true }, props.conversionTag));\n        }\n        _super.prototype.afterRender.call(this);\n    };\n    BaseColumnLayer.prototype.geometryParser = function (dim, type) {\n        if (dim === 'g2') {\n            return G2_GEOM_MAP[type];\n        }\n        return PLOT_GEOM_MAP[type];\n    };\n    BaseColumnLayer.prototype.processData = function (originData) {\n        var xField = this.options.xField;\n        var processedData = [];\n        each(originData, function (data) {\n            var d = clone(data);\n            d[xField] = d[xField].toString();\n            processedData.push(d);\n        });\n        return processedData;\n    };\n    BaseColumnLayer.prototype.scale = function () {\n        var options = this.options;\n        var scales = {};\n        scales[options.xField] = { type: 'cat' };\n        if (has(options, 'xAxis')) {\n            extractScale(scales[options.xField], options.xAxis);\n        }\n        scales[options.yField] = {};\n        if (has(options, 'yAxis')) {\n            extractScale(scales[options.yField], options.yAxis);\n        }\n        this.setConfig('scales', scales);\n        _super.prototype.scale.call(this);\n    };\n    BaseColumnLayer.prototype.coord = function () {\n        return;\n    };\n    BaseColumnLayer.prototype.adjustColumn = function (column) {\n        return;\n    };\n    BaseColumnLayer.prototype.addGeometry = function () {\n        var options = this.options;\n        var column = getGeom('interval', 'main', {\n            positionFields: [options.xField, options.yField],\n            plot: this,\n        });\n        if (options.conversionTag.visible) {\n            this.setConfig('theme', deepMix({}, this.getTheme(), {\n                columnWidthRatio: 1 / 3,\n            }));\n        }\n        this.adjustColumn(column);\n        this.column = column;\n        if (options.tooltip && (options.tooltip.fields || options.tooltip.formatter)) {\n            this.geometryTooltip();\n        }\n        this.setConfig('geometry', column);\n    };\n    BaseColumnLayer.prototype.geometryTooltip = function () {\n        this.column.tooltip = {};\n        var tooltipOptions = this.options.tooltip;\n        if (tooltipOptions.fields) {\n            this.column.tooltip.fields = tooltipOptions.fields;\n        }\n        if (tooltipOptions.formatter) {\n            this.column.tooltip.callback = tooltipOptions.formatter;\n            if (!tooltipOptions.fields) {\n                this.column.tooltip.fields = [this.options.xField, this.options.yField];\n                if (this.options.colorField) {\n                    this.column.tooltip.fields.push(this.options.colorField);\n                }\n            }\n        }\n    };\n    BaseColumnLayer.prototype.animation = function () {\n        _super.prototype.animation.call(this);\n        if (this.options.animation === false) {\n            this.column.animate = false;\n        }\n    };\n    BaseColumnLayer.prototype.parseEvents = function () {\n        _super.prototype.parseEvents.call(this, EventParser);\n    };\n    BaseColumnLayer.prototype.renderLabel = function () {\n        var scales = this.config.scales;\n        var _a = this.options, label = _a.label, yField = _a.yField;\n        var scale = scales[yField];\n        if (label === null || label === void 0 ? void 0 : label.visible) {\n            var geometry = getGeometryByType(this.view, 'interval');\n            this.doRenderLabel(geometry, __assign({ type: 'column', formatter: scale.formatter && (function (value) { return scale.formatter(value); }) }, this.options.label));\n        }\n    };\n    BaseColumnLayer.prototype.applyResponsive = function (stage) {\n        var _this = this;\n        var methods = responsiveMethods[stage];\n        each(methods, function (r) {\n            var responsive = r;\n            responsive.method(_this);\n        });\n    };\n    return BaseColumnLayer;\n}(ViewLayer));\nexport default BaseColumnLayer;\nregisterPlotType('column', BaseColumnLayer);\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/column/layer.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/column/layer.js"],"names":[],"mappings":"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","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { deepMix, has, each, clone } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport ViewLayer from '../../base/view-layer';\nimport { getGeom } from '../../geoms/factory';\nimport ConversionTag from '../../components/conversion-tag';\nimport { extractScale } from '../../util/scale';\nimport responsiveMethods from './apply-responsive';\nimport './apply-responsive/theme';\nimport './component/label';\nimport './component/label-auto';\nimport * as EventParser from './event';\nimport './theme';\nimport { getGeometryByType } from '../../util/view';\nvar G2_GEOM_MAP = {\n    column: 'interval',\n};\nvar PLOT_GEOM_MAP = {\n    interval: 'column',\n};\nvar BaseColumnLayer = /** @class */ (function (_super) {\n    __extends(BaseColumnLayer, _super);\n    function BaseColumnLayer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'column';\n        return _this;\n    }\n    BaseColumnLayer.getDefaultOptions = function () {\n        return deepMix({}, _super.getDefaultOptions.call(this), {\n            xAxis: {\n                visible: true,\n                tickLine: {\n                    visible: false,\n                },\n                title: {\n                    visible: true,\n                },\n            },\n            yAxis: {\n                nice: true,\n                title: {\n                    visible: true,\n                },\n                label: {\n                    visible: true,\n                },\n                grid: {\n                    visible: true,\n                },\n            },\n            tooltip: {\n                visible: true,\n                shared: true,\n                showCrosshairs: false,\n                showMarkers: false,\n            },\n            label: {\n                visible: false,\n                position: 'top',\n                adjustColor: true,\n            },\n            legend: {\n                visible: true,\n                position: 'top-left',\n            },\n            interactions: [\n                { type: 'tooltip' },\n                { type: 'active-region' },\n                { type: 'legend-active' },\n                { type: 'legend-filter' },\n            ],\n            conversionTag: {\n                visible: false,\n            },\n        });\n    };\n    BaseColumnLayer.prototype.beforeInit = function () {\n        _super.prototype.beforeInit.call(this);\n        /** 响应式图形 */\n        if (this.options.responsive && this.options.padding !== 'auto') {\n            this.applyResponsive('preRender');\n        }\n    };\n    BaseColumnLayer.prototype.afterRender = function () {\n        var props = this.options;\n        this.renderLabel();\n        /** 响应式 */\n        if (this.options.responsive && this.options.padding !== 'auto') {\n            this.applyResponsive('afterRender');\n        }\n        if (props.conversionTag.visible) {\n            this.conversionTag = new ConversionTag(__assign({ view: this.view, field: props.yField, transpose: true, animation: props.animation === false ? false : true }, props.conversionTag));\n        }\n        _super.prototype.afterRender.call(this);\n    };\n    BaseColumnLayer.prototype.geometryParser = function (dim, type) {\n        if (dim === 'g2') {\n            return G2_GEOM_MAP[type];\n        }\n        return PLOT_GEOM_MAP[type];\n    };\n    BaseColumnLayer.prototype.processData = function (originData) {\n        var xField = this.options.xField;\n        var processedData = [];\n        each(originData, function (data) {\n            var d = clone(data);\n            d[xField] = d[xField].toString();\n            processedData.push(d);\n        });\n        return processedData;\n    };\n    BaseColumnLayer.prototype.scale = function () {\n        var options = this.options;\n        var scales = {};\n        /** 配置x-scale */\n        scales[options.xField] = { type: 'cat' };\n        if (has(options, 'xAxis')) {\n            extractScale(scales[options.xField], options.xAxis);\n        }\n        /** 配置y-scale */\n        scales[options.yField] = {};\n        if (has(options, 'yAxis')) {\n            extractScale(scales[options.yField], options.yAxis);\n        }\n        this.setConfig('scales', scales);\n        _super.prototype.scale.call(this);\n    };\n    BaseColumnLayer.prototype.coord = function () {\n        return;\n    };\n    //eslint-disable-next-line @typescript-eslint/no-unused-vars\n    BaseColumnLayer.prototype.adjustColumn = function (column) {\n        return;\n    };\n    BaseColumnLayer.prototype.addGeometry = function () {\n        var options = this.options;\n        var column = getGeom('interval', 'main', {\n            positionFields: [options.xField, options.yField],\n            plot: this,\n        });\n        if (options.conversionTag.visible) {\n            this.setConfig('theme', deepMix({}, this.getTheme(), {\n                columnWidthRatio: 1 / 3,\n            }));\n        }\n        this.adjustColumn(column);\n        this.column = column;\n        if (options.tooltip && (options.tooltip.fields || options.tooltip.formatter)) {\n            this.geometryTooltip();\n        }\n        this.setConfig('geometry', column);\n    };\n    BaseColumnLayer.prototype.geometryTooltip = function () {\n        this.column.tooltip = {};\n        var tooltipOptions = this.options.tooltip;\n        if (tooltipOptions.fields) {\n            this.column.tooltip.fields = tooltipOptions.fields;\n        }\n        if (tooltipOptions.formatter) {\n            this.column.tooltip.callback = tooltipOptions.formatter;\n            if (!tooltipOptions.fields) {\n                this.column.tooltip.fields = [this.options.xField, this.options.yField];\n                if (this.options.colorField) {\n                    this.column.tooltip.fields.push(this.options.colorField);\n                }\n            }\n        }\n    };\n    BaseColumnLayer.prototype.animation = function () {\n        _super.prototype.animation.call(this);\n        if (this.options.animation === false) {\n            /** 关闭动画 */\n            this.column.animate = false;\n        }\n    };\n    BaseColumnLayer.prototype.parseEvents = function () {\n        _super.prototype.parseEvents.call(this, EventParser);\n    };\n    BaseColumnLayer.prototype.renderLabel = function () {\n        var scales = this.config.scales;\n        var _a = this.options, label = _a.label, yField = _a.yField;\n        var scale = scales[yField];\n        if (label === null || label === void 0 ? void 0 : label.visible) {\n            var geometry = getGeometryByType(this.view, 'interval');\n            this.doRenderLabel(geometry, __assign({ type: 'column', formatter: scale.formatter && (function (value) { return scale.formatter(value); }) }, this.options.label));\n        }\n    };\n    BaseColumnLayer.prototype.applyResponsive = function (stage) {\n        var _this = this;\n        var methods = responsiveMethods[stage];\n        each(methods, function (r) {\n            var responsive = r;\n            responsive.method(_this);\n        });\n    };\n    return BaseColumnLayer;\n}(ViewLayer));\nexport default BaseColumnLayer;\nregisterPlotType('column', BaseColumnLayer);\n//# sourceMappingURL=layer.js.map"]}]}