{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\dom-align\\es\\adjustForViewport.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\dom-align\\es\\adjustForViewport.js","mtime":1529911610000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import utils from './utils';\r\nfunction adjustForViewport(elFuturePos, elRegion, visibleRect, overflow) {\r\n    var pos = utils.clone(elFuturePos);\r\n    var size = {\r\n        width: elRegion.width,\r\n        height: elRegion.height\r\n    };\r\n    if (overflow.adjustX && pos.left < visibleRect.left) {\r\n        pos.left = visibleRect.left;\r\n    }\r\n    if (overflow.resizeWidth && pos.left >= visibleRect.left && pos.left + size.width > visibleRect.right) {\r\n        size.width -= pos.left + size.width - visibleRect.right;\r\n    }\r\n    if (overflow.adjustX && pos.left + size.width > visibleRect.right) {\r\n        pos.left = Math.max(visibleRect.right - size.width, visibleRect.left);\r\n    }\r\n    if (overflow.adjustY && pos.top < visibleRect.top) {\r\n        pos.top = visibleRect.top;\r\n    }\r\n    if (overflow.resizeHeight && pos.top >= visibleRect.top && pos.top + size.height > visibleRect.bottom) {\r\n        size.height -= pos.top + size.height - visibleRect.bottom;\r\n    }\r\n    if (overflow.adjustY && pos.top + size.height > visibleRect.bottom) {\r\n        pos.top = Math.max(visibleRect.bottom - size.height, visibleRect.top);\r\n    }\r\n    return utils.mix(pos, size);\r\n}\r\nexport default adjustForViewport;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\dom-align\\es\\adjustForViewport.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\dom-align\\es\\adjustForViewport.js"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,SAAS,CAAC;AAE5B,SAAS,iBAAiB,CAAC,WAAW,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ;IACrE,IAAI,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IACnC,IAAI,IAAI,GAAG;QACT,KAAK,EAAE,QAAQ,CAAC,KAAK;QACrB,MAAM,EAAE,QAAQ,CAAC,MAAM;KACxB,CAAC;IAEF,IAAI,QAAQ,CAAC,OAAO,IAAI,GAAG,CAAC,IAAI,GAAG,WAAW,CAAC,IAAI,EAAE;QACnD,GAAG,CAAC,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC;KAC7B;IAGD,IAAI,QAAQ,CAAC,WAAW,IAAI,GAAG,CAAC,IAAI,IAAI,WAAW,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,EAAE;QACrG,IAAI,CAAC,KAAK,IAAI,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;KACzD;IAGD,IAAI,QAAQ,CAAC,OAAO,IAAI,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,EAAE;QAEjE,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC;KACvE;IAGD,IAAI,QAAQ,CAAC,OAAO,IAAI,GAAG,CAAC,GAAG,GAAG,WAAW,CAAC,GAAG,EAAE;QACjD,GAAG,CAAC,GAAG,GAAG,WAAW,CAAC,GAAG,CAAC;KAC3B;IAGD,IAAI,QAAQ,CAAC,YAAY,IAAI,GAAG,CAAC,GAAG,IAAI,WAAW,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,EAAE;QACrG,IAAI,CAAC,MAAM,IAAI,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;KAC3D;IAGD,IAAI,QAAQ,CAAC,OAAO,IAAI,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,EAAE;QAElE,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,WAAW,CAAC,GAAG,CAAC,CAAC;KACvE;IAED,OAAO,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AAC9B,CAAC;AAED,eAAe,iBAAiB,CAAC","sourcesContent":["import utils from './utils';\n\nfunction adjustForViewport(elFuturePos, elRegion, visibleRect, overflow) {\n  var pos = utils.clone(elFuturePos);\n  var size = {\n    width: elRegion.width,\n    height: elRegion.height\n  };\n\n  if (overflow.adjustX && pos.left < visibleRect.left) {\n    pos.left = visibleRect.left;\n  }\n\n  // Left edge inside and right edge outside viewport, try to resize it.\n  if (overflow.resizeWidth && pos.left >= visibleRect.left && pos.left + size.width > visibleRect.right) {\n    size.width -= pos.left + size.width - visibleRect.right;\n  }\n\n  // Right edge outside viewport, try to move it.\n  if (overflow.adjustX && pos.left + size.width > visibleRect.right) {\n    // 保证左边界和可视区域左边界对齐\n    pos.left = Math.max(visibleRect.right - size.width, visibleRect.left);\n  }\n\n  // Top edge outside viewport, try to move it.\n  if (overflow.adjustY && pos.top < visibleRect.top) {\n    pos.top = visibleRect.top;\n  }\n\n  // Top edge inside and bottom edge outside viewport, try to resize it.\n  if (overflow.resizeHeight && pos.top >= visibleRect.top && pos.top + size.height > visibleRect.bottom) {\n    size.height -= pos.top + size.height - visibleRect.bottom;\n  }\n\n  // Bottom edge outside viewport, try to move it.\n  if (overflow.adjustY && pos.top + size.height > visibleRect.bottom) {\n    // 保证上边界和可视区域上边界对齐\n    pos.top = Math.max(visibleRect.bottom - size.height, visibleRect.top);\n  }\n\n  return utils.mix(pos, size);\n}\n\nexport default adjustForViewport;"]}]}