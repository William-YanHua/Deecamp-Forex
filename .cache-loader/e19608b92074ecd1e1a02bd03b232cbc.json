{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\adjust\\lib\\jitter.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\adjust\\lib\\jitter.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\r\nvar each = require('@antv/util/lib/each');\r\nvar mix = require('@antv/util/lib/mix');\r\nvar ArrayUtil = {\r\n    merge: require('@antv/util/lib/array/merge')\r\n};\r\nvar Adjust = require('./base');\r\nvar AdjustMixin = require('./mixin/adjust');\r\nvar Jitter = function (_Adjust) {\r\n    _inheritsLoose(Jitter, _Adjust);\r\n    function Jitter() {\r\n        return _Adjust.apply(this, arguments) || this;\r\n    }\r\n    var _proto = Jitter.prototype;\r\n    _proto._initDefaultCfg = function _initDefaultCfg() {\r\n        this.xField = null;\r\n        this.yField = null;\r\n        this.adjustNames = ['x', 'y'];\r\n        this.groupFields = null;\r\n    };\r\n    _proto.processAdjust = function processAdjust(dataArray) {\r\n        var self = this;\r\n        var mergeData = ArrayUtil.merge(dataArray);\r\n        self.adjDataArray = dataArray;\r\n        self.mergeData = mergeData;\r\n        self.adjustData(dataArray, mergeData);\r\n        self.adjFrames = null;\r\n        self.mergeData = null;\r\n    };\r\n    _proto.getAdjustOffset = function getAdjustOffset(pre, next) {\r\n        var r = Math.random();\r\n        var avg = next - pre;\r\n        var append = avg * 0.05;\r\n        return pre + append + avg * 0.9 * r;\r\n    };\r\n    _proto._adjustGroup = function _adjustGroup(group, dim, key, values) {\r\n        var self = this;\r\n        var range = self.getAdjustRange(dim, key, values);\r\n        each(group, function (record) {\r\n            record[dim] = self.getAdjustOffset(range.pre, range.next);\r\n        });\r\n    };\r\n    _proto.adjustDim = function adjustDim(dim, values, data) {\r\n        var self = this;\r\n        var groupData = self.groupData(data, dim);\r\n        each(groupData, function (group, key) {\r\n            key = parseFloat(key);\r\n            self._adjustGroup(group, dim, key, values);\r\n        });\r\n    };\r\n    return Jitter;\r\n}(Adjust);\r\nmix(Jitter.prototype, AdjustMixin);\r\nAdjust.Jitter = Jitter;\r\nmodule.exports = Jitter;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\adjust\\lib\\jitter.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\adjust\\lib\\jitter.js"],"names":[],"mappings":"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","sourcesContent":["function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar each = require('@antv/util/lib/each');\n\nvar mix = require('@antv/util/lib/mix');\n\nvar ArrayUtil = {\n  merge: require('@antv/util/lib/array/merge')\n};\n\nvar Adjust = require('./base');\n\nvar AdjustMixin = require('./mixin/adjust');\n\nvar Jitter =\n/*#__PURE__*/\nfunction (_Adjust) {\n  _inheritsLoose(Jitter, _Adjust);\n\n  function Jitter() {\n    return _Adjust.apply(this, arguments) || this;\n  }\n\n  var _proto = Jitter.prototype;\n\n  _proto._initDefaultCfg = function _initDefaultCfg() {\n    this.xField = null; // 调整对应的 x 方向对应的字段名称\n\n    this.yField = null; // 调整对应的 y 方向对应的字段名称\n\n    this.adjustNames = ['x', 'y']; // 指x,y\n\n    this.groupFields = null; // 参与分组的数据维度\n  };\n\n  _proto.processAdjust = function processAdjust(dataArray) {\n    var self = this;\n    var mergeData = ArrayUtil.merge(dataArray);\n    self.adjDataArray = dataArray;\n    self.mergeData = mergeData;\n    self.adjustData(dataArray, mergeData);\n    self.adjFrames = null;\n    self.mergeData = null;\n  };\n\n  _proto.getAdjustOffset = function getAdjustOffset(pre, next) {\n    var r = Math.random(); // 随机位置，均匀分布\n\n    var avg = next - pre; // * length\n\n    var append = avg * 0.05;\n    return pre + append + avg * 0.9 * r;\n  }; // adjust group data\n\n\n  _proto._adjustGroup = function _adjustGroup(group, dim, key, values) {\n    var self = this;\n    var range = self.getAdjustRange(dim, key, values);\n    each(group, function (record) {\n      record[dim] = self.getAdjustOffset(range.pre, range.next); // 获取调整的位置\n    });\n  };\n\n  _proto.adjustDim = function adjustDim(dim, values, data) {\n    var self = this;\n    var groupData = self.groupData(data, dim);\n    each(groupData, function (group, key) {\n      key = parseFloat(key);\n\n      self._adjustGroup(group, dim, key, values);\n    });\n  };\n\n  return Jitter;\n}(Adjust);\n\nmix(Jitter.prototype, AdjustMixin);\nAdjust.Jitter = Jitter;\nmodule.exports = Jitter;"]}]}