{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\coord\\esm\\coord\\polar.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\coord\\esm\\coord\\polar.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\r\nimport { ext, vec2, vec3 } from '@antv/matrix-util';\r\nimport { isNumberEqual } from '@antv/util';\r\nimport Coordinate from './base';\r\nvar Polar = (function (_super) {\r\n    __extends(Polar, _super);\r\n    function Polar(cfg) {\r\n        var _this = _super.call(this, cfg) || this;\r\n        _this.isPolar = true;\r\n        _this.type = 'polar';\r\n        var _a = cfg.startAngle, startAngle = _a === void 0 ? -Math.PI / 2 : _a, _b = cfg.endAngle, endAngle = _b === void 0 ? (Math.PI * 3) / 2 : _b, _c = cfg.innerRadius, innerRadius = _c === void 0 ? 0 : _c, radius = cfg.radius;\r\n        _this.startAngle = startAngle;\r\n        _this.endAngle = endAngle;\r\n        _this.innerRadius = innerRadius;\r\n        _this.radius = radius;\r\n        _this.initial();\r\n        return _this;\r\n    }\r\n    Polar.prototype.initial = function () {\r\n        _super.prototype.initial.call(this);\r\n        while (this.endAngle < this.startAngle) {\r\n            this.endAngle += Math.PI * 2;\r\n        }\r\n        var oneBox = this.getOneBox();\r\n        var oneWidth = oneBox.maxX - oneBox.minX;\r\n        var oneHeight = oneBox.maxY - oneBox.minY;\r\n        var left = Math.abs(oneBox.minX) / oneWidth;\r\n        var top = Math.abs(oneBox.minY) / oneHeight;\r\n        var maxRadius;\r\n        if (this.height / oneHeight > this.width / oneWidth) {\r\n            maxRadius = this.width / oneWidth;\r\n            this.circleCenter = {\r\n                x: this.center.x - (0.5 - left) * this.width,\r\n                y: this.center.y - (0.5 - top) * maxRadius * oneHeight,\r\n            };\r\n        }\r\n        else {\r\n            maxRadius = this.height / oneHeight;\r\n            this.circleCenter = {\r\n                x: this.center.x - (0.5 - left) * maxRadius * oneWidth,\r\n                y: this.center.y - (0.5 - top) * this.height,\r\n            };\r\n        }\r\n        this.polarRadius = this.radius;\r\n        if (!this.radius) {\r\n            this.polarRadius = maxRadius;\r\n        }\r\n        else if (this.radius > 0 && this.radius <= 1) {\r\n            this.polarRadius = maxRadius * this.radius;\r\n        }\r\n        else if (this.radius <= 0 || this.radius > maxRadius) {\r\n            this.polarRadius = maxRadius;\r\n        }\r\n        this.x = {\r\n            start: this.startAngle,\r\n            end: this.endAngle,\r\n        };\r\n        this.y = {\r\n            start: this.innerRadius * this.polarRadius,\r\n            end: this.polarRadius,\r\n        };\r\n    };\r\n    Polar.prototype.getRadius = function () {\r\n        return this.polarRadius;\r\n    };\r\n    Polar.prototype.convertPoint = function (point) {\r\n        var _a;\r\n        var center = this.getCenter();\r\n        var x = point.x, y = point.y;\r\n        if (this.isTransposed) {\r\n            _a = [y, x], x = _a[0], y = _a[1];\r\n        }\r\n        x = this.convertDim(x, 'x');\r\n        y = this.convertDim(y, 'y');\r\n        return {\r\n            x: center.x + Math.cos(x) * y,\r\n            y: center.y + Math.sin(x) * y,\r\n        };\r\n    };\r\n    Polar.prototype.invertPoint = function (point) {\r\n        var center = this.getCenter();\r\n        var vPoint = [point.x - center.x, point.y - center.y];\r\n        var m = [1, 0, 0, 0, 1, 0, 0, 0, 1];\r\n        ext.leftRotate(m, m, this.startAngle);\r\n        var vStart3 = [1, 0, 0];\r\n        vec3.transformMat3(vStart3, vStart3, m);\r\n        var vStart2 = [vStart3[0], vStart3[1]];\r\n        var angle = ext.angleTo(vStart2, vPoint, this.endAngle < this.startAngle);\r\n        if (isNumberEqual(angle, Math.PI * 2)) {\r\n            angle = 0;\r\n        }\r\n        var radius = vec2.length(vPoint);\r\n        var xPercent = angle / (this.endAngle - this.startAngle);\r\n        xPercent = this.endAngle - this.startAngle > 0 ? xPercent : -xPercent;\r\n        var yPercent = this.invertDim(radius, 'y');\r\n        var rst = { x: 0, y: 0 };\r\n        rst.x = this.isTransposed ? yPercent : xPercent;\r\n        rst.y = this.isTransposed ? xPercent : yPercent;\r\n        return rst;\r\n    };\r\n    Polar.prototype.getCenter = function () {\r\n        return this.circleCenter;\r\n    };\r\n    Polar.prototype.getOneBox = function () {\r\n        var startAngle = this.startAngle;\r\n        var endAngle = this.endAngle;\r\n        if (Math.abs(endAngle - startAngle) >= Math.PI * 2) {\r\n            return {\r\n                minX: -1,\r\n                maxX: 1,\r\n                minY: -1,\r\n                maxY: 1,\r\n            };\r\n        }\r\n        var xs = [0, Math.cos(startAngle), Math.cos(endAngle)];\r\n        var ys = [0, Math.sin(startAngle), Math.sin(endAngle)];\r\n        for (var i = Math.min(startAngle, endAngle); i < Math.max(startAngle, endAngle); i += Math.PI / 18) {\r\n            xs.push(Math.cos(i));\r\n            ys.push(Math.sin(i));\r\n        }\r\n        return {\r\n            minX: Math.min.apply(Math, xs),\r\n            maxX: Math.max.apply(Math, xs),\r\n            minY: Math.min.apply(Math, ys),\r\n            maxY: Math.max.apply(Math, ys),\r\n        };\r\n    };\r\n    return Polar;\r\n}(Coordinate));\r\nexport default Polar;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\coord\\esm\\coord\\polar.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\coord\\esm\\coord\\polar.js"],"names":[],"mappings":"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","sourcesContent":["import { __extends } from \"tslib\";\nimport { ext, vec2, vec3 } from '@antv/matrix-util';\nimport { isNumberEqual } from '@antv/util';\nimport Coordinate from './base';\nvar Polar = /** @class */ (function (_super) {\n    __extends(Polar, _super);\n    function Polar(cfg) {\n        var _this = _super.call(this, cfg) || this;\n        _this.isPolar = true;\n        _this.type = 'polar';\n        var _a = cfg.startAngle, startAngle = _a === void 0 ? -Math.PI / 2 : _a, _b = cfg.endAngle, endAngle = _b === void 0 ? (Math.PI * 3) / 2 : _b, _c = cfg.innerRadius, innerRadius = _c === void 0 ? 0 : _c, radius = cfg.radius;\n        _this.startAngle = startAngle;\n        _this.endAngle = endAngle;\n        _this.innerRadius = innerRadius;\n        _this.radius = radius;\n        _this.initial();\n        return _this;\n    }\n    Polar.prototype.initial = function () {\n        _super.prototype.initial.call(this);\n        while (this.endAngle < this.startAngle) {\n            this.endAngle += Math.PI * 2;\n        }\n        var oneBox = this.getOneBox();\n        var oneWidth = oneBox.maxX - oneBox.minX;\n        var oneHeight = oneBox.maxY - oneBox.minY;\n        var left = Math.abs(oneBox.minX) / oneWidth;\n        var top = Math.abs(oneBox.minY) / oneHeight;\n        var maxRadius;\n        if (this.height / oneHeight > this.width / oneWidth) {\n            // width 为主\n            maxRadius = this.width / oneWidth;\n            this.circleCenter = {\n                x: this.center.x - (0.5 - left) * this.width,\n                y: this.center.y - (0.5 - top) * maxRadius * oneHeight,\n            };\n        }\n        else {\n            // height 为主\n            maxRadius = this.height / oneHeight;\n            this.circleCenter = {\n                x: this.center.x - (0.5 - left) * maxRadius * oneWidth,\n                y: this.center.y - (0.5 - top) * this.height,\n            };\n        }\n        this.polarRadius = this.radius;\n        if (!this.radius) {\n            this.polarRadius = maxRadius;\n        }\n        else if (this.radius > 0 && this.radius <= 1) {\n            this.polarRadius = maxRadius * this.radius;\n        }\n        else if (this.radius <= 0 || this.radius > maxRadius) {\n            this.polarRadius = maxRadius;\n        }\n        this.x = {\n            start: this.startAngle,\n            end: this.endAngle,\n        };\n        this.y = {\n            start: this.innerRadius * this.polarRadius,\n            end: this.polarRadius,\n        };\n    };\n    Polar.prototype.getRadius = function () {\n        return this.polarRadius;\n    };\n    Polar.prototype.convertPoint = function (point) {\n        var _a;\n        var center = this.getCenter();\n        var x = point.x, y = point.y;\n        if (this.isTransposed) {\n            _a = [y, x], x = _a[0], y = _a[1];\n        }\n        x = this.convertDim(x, 'x');\n        y = this.convertDim(y, 'y');\n        return {\n            x: center.x + Math.cos(x) * y,\n            y: center.y + Math.sin(x) * y,\n        };\n    };\n    Polar.prototype.invertPoint = function (point) {\n        var center = this.getCenter();\n        var vPoint = [point.x - center.x, point.y - center.y];\n        var m = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n        ext.leftRotate(m, m, this.startAngle);\n        var vStart3 = [1, 0, 0];\n        vec3.transformMat3(vStart3, vStart3, m);\n        var vStart2 = [vStart3[0], vStart3[1]];\n        var angle = ext.angleTo(vStart2, vPoint, this.endAngle < this.startAngle);\n        if (isNumberEqual(angle, Math.PI * 2)) {\n            angle = 0;\n        }\n        var radius = vec2.length(vPoint);\n        var xPercent = angle / (this.endAngle - this.startAngle);\n        xPercent = this.endAngle - this.startAngle > 0 ? xPercent : -xPercent;\n        var yPercent = this.invertDim(radius, 'y');\n        var rst = { x: 0, y: 0 };\n        rst.x = this.isTransposed ? yPercent : xPercent;\n        rst.y = this.isTransposed ? xPercent : yPercent;\n        return rst;\n    };\n    Polar.prototype.getCenter = function () {\n        return this.circleCenter;\n    };\n    Polar.prototype.getOneBox = function () {\n        var startAngle = this.startAngle;\n        var endAngle = this.endAngle;\n        if (Math.abs(endAngle - startAngle) >= Math.PI * 2) {\n            return {\n                minX: -1,\n                maxX: 1,\n                minY: -1,\n                maxY: 1,\n            };\n        }\n        var xs = [0, Math.cos(startAngle), Math.cos(endAngle)];\n        var ys = [0, Math.sin(startAngle), Math.sin(endAngle)];\n        for (var i = Math.min(startAngle, endAngle); i < Math.max(startAngle, endAngle); i += Math.PI / 18) {\n            xs.push(Math.cos(i));\n            ys.push(Math.sin(i));\n        }\n        return {\n            minX: Math.min.apply(Math, xs),\n            maxX: Math.max.apply(Math, xs),\n            minY: Math.min.apply(Math, ys),\n            maxY: Math.max.apply(Math, ys),\n        };\n    };\n    return Polar;\n}(Coordinate));\nexport default Polar;\n//# sourceMappingURL=polar.js.map"]}]}