{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/src/transform/hierarchy/pack.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/src/transform/hierarchy/pack.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var assign = require('@antv/util/lib/mix');\nvar d3Hierarchy = require('d3-hierarchy');\nvar isArray = require('@antv/util/lib/type/is-array');\nvar _a = require('../../data-set'), HIERARCHY = _a.HIERARCHY, registerTransform = _a.registerTransform;\nvar getField = require('../../util/option-parser').getField;\nvar DEFAULT_OPTIONS = {\n    field: 'value',\n    size: [1, 1],\n    padding: 0,\n    as: ['x', 'y', 'r']\n};\nfunction transform(dataView, options) {\n    if (dataView.dataType !== HIERARCHY) {\n        throw new TypeError('Invalid DataView: This transform is for Hierarchy data only!');\n    }\n    var root = dataView.root;\n    options = assign({}, DEFAULT_OPTIONS, options);\n    var as = options.as;\n    if (!isArray(as) || as.length !== 3) {\n        throw new TypeError('Invalid as: it must be an array with 3 strings (e.g. [ \"x\", \"y\", \"r\" ])!');\n    }\n    var field;\n    try {\n        field = getField(options);\n    }\n    catch (e) {\n        console.warn(e);\n    }\n    if (field) {\n        root.sum(function (d) { return d[field]; })\n            .sort(function (a, b) { return b[field] - a[field]; });\n    }\n    var packLayout = d3Hierarchy.pack();\n    packLayout.size(options.size);\n    if (options.padding) {\n        packLayout.padding(options.padding);\n    }\n    packLayout(root);\n    var x = as[0];\n    var y = as[1];\n    var r = as[2];\n    root.each(function (node) {\n        node[x] = node.x;\n        node[y] = node.y;\n        node[r] = node.r;\n    });\n}\nregisterTransform('hierarchy.pack', transform);\nregisterTransform('hierarchy.circle-packing', transform);\nregisterTransform('circle-packing', transform);\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/src/transform/hierarchy/pack.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/src/transform/hierarchy/pack.js"],"names":[],"mappings":"AAAA,IAAM,MAAM,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;AAC7C,IAAM,WAAW,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AAC5C,IAAM,OAAO,GAAG,OAAO,CAAC,8BAA8B,CAAC,CAAC;AAClD,IAAA,KAGF,OAAO,CAAC,gBAAgB,CAAC,EAF3B,SAAS,eAAA,EACT,iBAAiB,uBACU,CAAC;AAE5B,IAAA,QAAQ,GACN,OAAO,CAAC,0BAA0B,CAAC,SAD7B,CAC8B;AAExC,IAAM,eAAe,GAAG;IACtB,KAAK,EAAE,OAAO;IACd,IAAI,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE;IACd,OAAO,EAAE,CAAC;IACV,EAAE,EAAE,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE;CACtB,CAAC;AAEF,SAAS,SAAS,CAAC,QAAQ,EAAE,OAAO;IAClC,IAAI,QAAQ,CAAC,QAAQ,KAAK,SAAS,EAAE;QACnC,MAAM,IAAI,SAAS,CAAC,8DAA8D,CAAC,CAAC;KACrF;IACD,IAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;IAC3B,OAAO,GAAG,MAAM,CAAC,EAAE,EAAE,eAAe,EAAE,OAAO,CAAC,CAAC;IAE/C,IAAM,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;IACtB,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE;QACnC,MAAM,IAAI,SAAS,CAAC,0EAA0E,CAAC,CAAC;KACjG;IAED,IAAI,KAAK,CAAC;IACV,IAAI;QACF,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;KAC3B;IAAC,OAAO,CAAC,EAAE;QACV,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACjB;IACD,IAAI,KAAK,EAAE;QACT,IAAI,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,CAAC,EAAR,CAAQ,CAAC;aACpB,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAnB,CAAmB,CAAC,CAAC;KACxC;IAED,IAAM,UAAU,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC;IACtC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAE9B,IAAI,OAAO,CAAC,OAAO,EAAE;QACnB,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;KACrC;IACD,UAAU,CAAC,IAAI,CAAC,CAAC;IAEjB,IAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IAChB,IAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IAChB,IAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IAChB,IAAI,CAAC,IAAI,CAAC,UAAA,IAAI;QACZ,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;QACjB,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;QACjB,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,CAAC;AACL,CAAC;AAED,iBAAiB,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAC;AAC/C,iBAAiB,CAAC,0BAA0B,EAAE,SAAS,CAAC,CAAC;AACzD,iBAAiB,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAC","sourcesContent":["const assign = require('@antv/util/lib/mix');\nconst d3Hierarchy = require('d3-hierarchy');\nconst isArray = require('@antv/util/lib/type/is-array');\nconst {\n  HIERARCHY,\n  registerTransform\n} = require('../../data-set');\nconst {\n  getField\n} = require('../../util/option-parser');\n\nconst DEFAULT_OPTIONS = {\n  field: 'value',\n  size: [ 1, 1 ], // width, height\n  padding: 0,\n  as: [ 'x', 'y', 'r' ]\n};\n\nfunction transform(dataView, options) {\n  if (dataView.dataType !== HIERARCHY) {\n    throw new TypeError('Invalid DataView: This transform is for Hierarchy data only!');\n  }\n  const root = dataView.root;\n  options = assign({}, DEFAULT_OPTIONS, options);\n\n  const as = options.as;\n  if (!isArray(as) || as.length !== 3) {\n    throw new TypeError('Invalid as: it must be an array with 3 strings (e.g. [ \"x\", \"y\", \"r\" ])!');\n  }\n\n  let field;\n  try {\n    field = getField(options);\n  } catch (e) {\n    console.warn(e);\n  }\n  if (field) {\n    root.sum(d => d[field])\n      .sort((a, b) => b[field] - a[field]);\n  }\n\n  const packLayout = d3Hierarchy.pack();\n  packLayout.size(options.size);\n\n  if (options.padding) {\n    packLayout.padding(options.padding);\n  }\n  packLayout(root);\n\n  const x = as[0];\n  const y = as[1];\n  const r = as[2];\n  root.each(node => {\n    node[x] = node.x;\n    node[y] = node.y;\n    node[r] = node.r;\n  });\n}\n\nregisterTransform('hierarchy.pack', transform);\nregisterTransform('hierarchy.circle-packing', transform);\nregisterTransform('circle-packing', transform);\n"]}]}