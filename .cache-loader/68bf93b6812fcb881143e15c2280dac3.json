{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/src/connector/default.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/src/connector/default.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var isString = require('@antv/util/lib/type/is-string');\nvar cloneDeep = require('@antv/util/lib/clone');\nvar registerConnector = require('../data-set').registerConnector;\nregisterConnector('default', function (dataView, dataSet) {\n    if (isString(dataView)) {\n        dataView = dataSet.getView(dataView);\n    }\n    if (!dataView) {\n        throw new TypeError('Invalid dataView');\n    }\n    return cloneDeep(dataView.rows);\n});\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/src/connector/default.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/src/connector/default.js"],"names":[],"mappings":"AAAA,IAAM,QAAQ,GAAG,OAAO,CAAC,+BAA+B,CAAC,CAAC;AAC1D,IAAM,SAAS,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC;AAEhD,IAAA,iBAAiB,GACf,OAAO,CAAC,aAAa,CAAC,kBADP,CACQ;AAE3B,iBAAiB,CAAC,SAAS,EAAE,UAAC,QAAQ,EAAE,OAAO;IAC7C,IAAI,QAAQ,CAAC,QAAQ,CAAC,EAAE;QACtB,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;KACtC;IACD,IAAI,CAAC,QAAQ,EAAE;QACb,MAAM,IAAI,SAAS,CAAC,kBAAkB,CAAC,CAAC;KACzC;IACD,OAAO,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC","sourcesContent":["const isString = require('@antv/util/lib/type/is-string');\nconst cloneDeep = require('@antv/util/lib/clone');\nconst {\n  registerConnector\n} = require('../data-set');\n\nregisterConnector('default', (dataView, dataSet) => {\n  if (isString(dataView)) {\n    dataView = dataSet.getView(dataView);\n  }\n  if (!dataView) {\n    throw new TypeError('Invalid dataView');\n  }\n  return cloneDeep(dataView.rows);\n});\n"]}]}