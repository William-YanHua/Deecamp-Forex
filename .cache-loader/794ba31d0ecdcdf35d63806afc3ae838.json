{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/geometry/heatmap.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/geometry/heatmap.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { __assign, __extends } from \"tslib\";\nimport ColorUtil from '@antv/color-util';\nimport { get, isNumber } from '@antv/util';\nimport { FIELD_ORIGIN } from '../constant';\nimport Geometry from './base';\nvar Heatmap = (function (_super) {\n    __extends(Heatmap, _super);\n    function Heatmap() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'heatmap';\n        _this.paletteCache = {};\n        return _this;\n    }\n    Heatmap.prototype.createElements = function (mappingData, index, isUpdate) {\n        if (isUpdate === void 0) {\n            isUpdate = false;\n        }\n        var range = this.prepareRange(mappingData);\n        var radius = this.prepareSize();\n        var blur = get(this.styleOption, ['style', 'shadowBlur']);\n        if (!isNumber(blur)) {\n            blur = radius / 2;\n        }\n        this.prepareGreyScaleBlurredCircle(radius, blur);\n        this.drawWithRange(mappingData, range, radius, blur);\n        return null;\n    };\n    Heatmap.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        this.clearShadowCanvasCtx();\n        this.paletteCache = {};\n    };\n    Heatmap.prototype.prepareRange = function (data) {\n        var colorAttr = this.getAttribute('color');\n        var colorField = colorAttr.getFields()[0];\n        var min = Infinity;\n        var max = -Infinity;\n        data.forEach(function (row) {\n            var value = row[FIELD_ORIGIN][colorField];\n            if (value > max) {\n                max = value;\n            }\n            if (value < min) {\n                min = value;\n            }\n        });\n        if (min === max) {\n            min = max - 1;\n        }\n        return [min, max];\n    };\n    Heatmap.prototype.prepareSize = function () {\n        var radius = this.getDefaultValue('size');\n        if (!isNumber(radius)) {\n            radius = this.getDefaultSize();\n        }\n        return radius;\n    };\n    Heatmap.prototype.prepareGreyScaleBlurredCircle = function (radius, blur) {\n        var grayScaleBlurredCanvas = this.getGrayScaleBlurredCanvas();\n        var r2 = radius + blur;\n        var ctx = grayScaleBlurredCanvas.getContext('2d');\n        grayScaleBlurredCanvas.width = grayScaleBlurredCanvas.height = r2 * 2;\n        ctx.clearRect(0, 0, grayScaleBlurredCanvas.width, grayScaleBlurredCanvas.height);\n        ctx.shadowOffsetX = ctx.shadowOffsetY = r2 * 2;\n        ctx.shadowBlur = blur;\n        ctx.shadowColor = 'black';\n        ctx.beginPath();\n        ctx.arc(-r2, -r2, radius, 0, Math.PI * 2, true);\n        ctx.closePath();\n        ctx.fill();\n    };\n    Heatmap.prototype.drawWithRange = function (data, range, radius, blur) {\n        var _a = this.coordinate, start = _a.start, end = _a.end;\n        var width = this.coordinate.getWidth();\n        var height = this.coordinate.getHeight();\n        var colorAttr = this.getAttribute('color');\n        var valueField = colorAttr.getFields()[0];\n        this.clearShadowCanvasCtx();\n        var ctx = this.getShadowCanvasCtx();\n        if (range) {\n            data = data.filter(function (row) {\n                return row[FIELD_ORIGIN][valueField] <= range[1] && row[FIELD_ORIGIN][valueField] >= range[0];\n            });\n        }\n        var scale = this.scales[valueField];\n        for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n            var obj = data_1[_i];\n            var _b = this.getDrawCfg(obj), x = _b.x, y = _b.y;\n            var alpha = scale.scale(obj[FIELD_ORIGIN][valueField]);\n            this.drawGrayScaleBlurredCircle(x - start.x, y - end.y, radius + blur, alpha, ctx);\n        }\n        var colored = ctx.getImageData(0, 0, width, height);\n        this.clearShadowCanvasCtx();\n        this.colorize(colored);\n        ctx.putImageData(colored, 0, 0);\n        var imageShape = this.getImageShape();\n        imageShape.attr('x', start.x);\n        imageShape.attr('y', end.y);\n        imageShape.attr('width', width);\n        imageShape.attr('height', height);\n        imageShape.attr('img', ctx.canvas);\n        imageShape.set('origin', this.getShapeInfo(data));\n    };\n    Heatmap.prototype.getDefaultSize = function () {\n        var position = this.getAttribute('position');\n        var coordinate = this.coordinate;\n        return Math.min(coordinate.getWidth() / (position.scales[0].ticks.length * 4), coordinate.getHeight() / (position.scales[1].ticks.length * 4));\n    };\n    Heatmap.prototype.clearShadowCanvasCtx = function () {\n        var ctx = this.getShadowCanvasCtx();\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    };\n    Heatmap.prototype.getShadowCanvasCtx = function () {\n        var canvas = this.shadowCanvas;\n        if (!canvas) {\n            canvas = document.createElement('canvas');\n            this.shadowCanvas = canvas;\n        }\n        canvas.width = this.coordinate.getWidth();\n        canvas.height = this.coordinate.getHeight();\n        return canvas.getContext('2d');\n    };\n    Heatmap.prototype.getGrayScaleBlurredCanvas = function () {\n        if (!this.grayScaleBlurredCanvas) {\n            this.grayScaleBlurredCanvas = document.createElement('canvas');\n        }\n        return this.grayScaleBlurredCanvas;\n    };\n    Heatmap.prototype.drawGrayScaleBlurredCircle = function (x, y, r, alpha, ctx) {\n        var grayScaleBlurredCanvas = this.getGrayScaleBlurredCanvas();\n        ctx.globalAlpha = alpha;\n        ctx.drawImage(grayScaleBlurredCanvas, x - r, y - r);\n    };\n    Heatmap.prototype.colorize = function (img) {\n        var colorAttr = this.getAttribute('color');\n        var pixels = img.data;\n        var paletteCache = this.paletteCache;\n        for (var i = 3; i < pixels.length; i += 4) {\n            var alpha = pixels[i];\n            if (isNumber(alpha)) {\n                var palette = paletteCache[alpha] ? paletteCache[alpha] : ColorUtil.rgb2arr(colorAttr.gradient(alpha / 256));\n                pixels[i - 3] = palette[0];\n                pixels[i - 2] = palette[1];\n                pixels[i - 1] = palette[2];\n                pixels[i] = alpha;\n            }\n        }\n    };\n    Heatmap.prototype.getImageShape = function () {\n        var imageShape = this.imageShape;\n        if (imageShape) {\n            return imageShape;\n        }\n        var container = this.container;\n        imageShape = container.addShape({\n            type: 'image',\n            attrs: {},\n        });\n        this.imageShape = imageShape;\n        return imageShape;\n    };\n    Heatmap.prototype.getShapeInfo = function (mappingData) {\n        var shapeCfg = this.getDrawCfg(mappingData[0]);\n        return __assign(__assign({}, shapeCfg), { mappingData: mappingData, data: this.getData(mappingData) });\n    };\n    Heatmap.prototype.getData = function (mappingData) {\n        return mappingData.map(function (obj) {\n            return obj[FIELD_ORIGIN];\n        });\n    };\n    return Heatmap;\n}(Geometry));\nexport default Heatmap;\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/geometry/heatmap.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/node_modules/@antv/g2/esm/geometry/heatmap.js"],"names":[],"mappings":"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","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport ColorUtil from '@antv/color-util';\nimport { get, isNumber } from '@antv/util';\nimport { FIELD_ORIGIN } from '../constant';\nimport Geometry from './base';\n/**\n * 用于绘制热力图。\n */\nvar Heatmap = /** @class */ (function (_super) {\n    __extends(Heatmap, _super);\n    function Heatmap() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'heatmap';\n        _this.paletteCache = {};\n        return _this;\n    }\n    Heatmap.prototype.createElements = function (mappingData, index, isUpdate) {\n        if (isUpdate === void 0) { isUpdate = false; }\n        var range = this.prepareRange(mappingData);\n        var radius = this.prepareSize();\n        var blur = get(this.styleOption, ['style', 'shadowBlur']);\n        if (!isNumber(blur)) {\n            blur = radius / 2;\n        }\n        this.prepareGreyScaleBlurredCircle(radius, blur);\n        this.drawWithRange(mappingData, range, radius, blur);\n        return null;\n    };\n    /**\n     * clear\n     */\n    Heatmap.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        this.clearShadowCanvasCtx();\n        this.paletteCache = {};\n    };\n    Heatmap.prototype.prepareRange = function (data) {\n        var colorAttr = this.getAttribute('color');\n        var colorField = colorAttr.getFields()[0];\n        var min = Infinity;\n        var max = -Infinity;\n        data.forEach(function (row) {\n            var value = row[FIELD_ORIGIN][colorField];\n            if (value > max) {\n                max = value;\n            }\n            if (value < min) {\n                min = value;\n            }\n        });\n        if (min === max) {\n            min = max - 1;\n        }\n        return [min, max];\n    };\n    Heatmap.prototype.prepareSize = function () {\n        var radius = this.getDefaultValue('size');\n        if (!isNumber(radius)) {\n            radius = this.getDefaultSize();\n        }\n        return radius;\n    };\n    Heatmap.prototype.prepareGreyScaleBlurredCircle = function (radius, blur) {\n        var grayScaleBlurredCanvas = this.getGrayScaleBlurredCanvas();\n        var r2 = radius + blur;\n        var ctx = grayScaleBlurredCanvas.getContext('2d');\n        grayScaleBlurredCanvas.width = grayScaleBlurredCanvas.height = r2 * 2;\n        ctx.clearRect(0, 0, grayScaleBlurredCanvas.width, grayScaleBlurredCanvas.height);\n        ctx.shadowOffsetX = ctx.shadowOffsetY = r2 * 2;\n        ctx.shadowBlur = blur;\n        ctx.shadowColor = 'black';\n        ctx.beginPath();\n        ctx.arc(-r2, -r2, radius, 0, Math.PI * 2, true);\n        ctx.closePath();\n        ctx.fill();\n    };\n    Heatmap.prototype.drawWithRange = function (data, range, radius, blur) {\n        // canvas size\n        var _a = this.coordinate, start = _a.start, end = _a.end;\n        var width = this.coordinate.getWidth();\n        var height = this.coordinate.getHeight();\n        // value, range, etc\n        var colorAttr = this.getAttribute('color');\n        var valueField = colorAttr.getFields()[0];\n        // prepare shadow canvas context\n        this.clearShadowCanvasCtx();\n        var ctx = this.getShadowCanvasCtx();\n        // filter data\n        if (range) {\n            data = data.filter(function (row) {\n                return row[FIELD_ORIGIN][valueField] <= range[1] && row[FIELD_ORIGIN][valueField] >= range[0];\n            });\n        }\n        // step1. draw points with shadow\n        var scale = this.scales[valueField];\n        for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n            var obj = data_1[_i];\n            var _b = this.getDrawCfg(obj), x = _b.x, y = _b.y;\n            var alpha = scale.scale(obj[FIELD_ORIGIN][valueField]);\n            this.drawGrayScaleBlurredCircle(x - start.x, y - end.y, radius + blur, alpha, ctx);\n        }\n        // step2. convert pixels\n        var colored = ctx.getImageData(0, 0, width, height);\n        this.clearShadowCanvasCtx();\n        this.colorize(colored);\n        ctx.putImageData(colored, 0, 0);\n        var imageShape = this.getImageShape();\n        imageShape.attr('x', start.x);\n        imageShape.attr('y', end.y);\n        imageShape.attr('width', width);\n        imageShape.attr('height', height);\n        imageShape.attr('img', ctx.canvas);\n        imageShape.set('origin', this.getShapeInfo(data)); // 存储绘图信息数据\n    };\n    Heatmap.prototype.getDefaultSize = function () {\n        var position = this.getAttribute('position');\n        var coordinate = this.coordinate;\n        return Math.min(coordinate.getWidth() / (position.scales[0].ticks.length * 4), coordinate.getHeight() / (position.scales[1].ticks.length * 4));\n    };\n    Heatmap.prototype.clearShadowCanvasCtx = function () {\n        var ctx = this.getShadowCanvasCtx();\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    };\n    Heatmap.prototype.getShadowCanvasCtx = function () {\n        var canvas = this.shadowCanvas;\n        if (!canvas) {\n            canvas = document.createElement('canvas');\n            this.shadowCanvas = canvas;\n        }\n        canvas.width = this.coordinate.getWidth();\n        canvas.height = this.coordinate.getHeight();\n        return canvas.getContext('2d');\n    };\n    Heatmap.prototype.getGrayScaleBlurredCanvas = function () {\n        if (!this.grayScaleBlurredCanvas) {\n            this.grayScaleBlurredCanvas = document.createElement('canvas');\n        }\n        return this.grayScaleBlurredCanvas;\n    };\n    Heatmap.prototype.drawGrayScaleBlurredCircle = function (x, y, r, alpha, ctx) {\n        var grayScaleBlurredCanvas = this.getGrayScaleBlurredCanvas();\n        ctx.globalAlpha = alpha;\n        ctx.drawImage(grayScaleBlurredCanvas, x - r, y - r);\n    };\n    Heatmap.prototype.colorize = function (img) {\n        var colorAttr = this.getAttribute('color');\n        var pixels = img.data;\n        var paletteCache = this.paletteCache;\n        for (var i = 3; i < pixels.length; i += 4) {\n            var alpha = pixels[i]; // get gradient color from opacity value\n            if (isNumber(alpha)) {\n                var palette = paletteCache[alpha] ? paletteCache[alpha] : ColorUtil.rgb2arr(colorAttr.gradient(alpha / 256));\n                pixels[i - 3] = palette[0];\n                pixels[i - 2] = palette[1];\n                pixels[i - 1] = palette[2];\n                pixels[i] = alpha;\n            }\n        }\n    };\n    Heatmap.prototype.getImageShape = function () {\n        var imageShape = this.imageShape;\n        if (imageShape) {\n            return imageShape;\n        }\n        var container = this.container;\n        imageShape = container.addShape({\n            type: 'image',\n            attrs: {},\n        });\n        this.imageShape = imageShape;\n        return imageShape;\n    };\n    Heatmap.prototype.getShapeInfo = function (mappingData) {\n        var shapeCfg = this.getDrawCfg(mappingData[0]);\n        return __assign(__assign({}, shapeCfg), { mappingData: mappingData, data: this.getData(mappingData) });\n    };\n    Heatmap.prototype.getData = function (mappingData) {\n        return mappingData.map(function (obj) {\n            return obj[FIELD_ORIGIN];\n        });\n    };\n    return Heatmap;\n}(Geometry));\nexport default Heatmap;\n//# sourceMappingURL=heatmap.js.map"]}]}