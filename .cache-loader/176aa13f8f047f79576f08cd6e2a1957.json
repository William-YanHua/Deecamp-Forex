{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-canvas\\esm\\shape\\image.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-canvas\\esm\\shape\\image.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __assign, __extends } from \"tslib\";\r\nimport ShapeBase from './base';\r\nimport { isString, isNil } from '../util/util';\r\nfunction isCanvas(dom) {\r\n    return dom instanceof HTMLElement && isString(dom.nodeName) && dom.nodeName.toUpperCase() === 'CANVAS';\r\n}\r\nvar ImageShape = (function (_super) {\r\n    __extends(ImageShape, _super);\r\n    function ImageShape() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ImageShape.prototype.getDefaultAttrs = function () {\r\n        var attrs = _super.prototype.getDefaultAttrs.call(this);\r\n        return __assign(__assign({}, attrs), { x: 0, y: 0, width: 0, height: 0 });\r\n    };\r\n    ImageShape.prototype.initAttrs = function (attrs) {\r\n        this._setImage(attrs.img);\r\n    };\r\n    ImageShape.prototype.isStroke = function () {\r\n        return false;\r\n    };\r\n    ImageShape.prototype.isOnlyHitBox = function () {\r\n        return true;\r\n    };\r\n    ImageShape.prototype._afterLoading = function () {\r\n        if (this.get('toDraw') === true) {\r\n            var canvas = this.get('canvas');\r\n            if (canvas) {\r\n                canvas.draw();\r\n            }\r\n            else {\r\n                this.createPath(this.get('context'));\r\n            }\r\n        }\r\n    };\r\n    ImageShape.prototype._setImage = function (img) {\r\n        var _this = this;\r\n        var attrs = this.attrs;\r\n        if (isString(img)) {\r\n            var image_1 = new Image();\r\n            image_1.onload = function () {\r\n                if (_this.destroyed) {\r\n                    return false;\r\n                }\r\n                _this.attr('img', image_1);\r\n                _this.set('loading', false);\r\n                _this._afterLoading();\r\n                var callback = _this.get('callback');\r\n                if (callback) {\r\n                    callback.call(_this);\r\n                }\r\n            };\r\n            image_1.src = img;\r\n            image_1.crossOrigin = 'Anonymous';\r\n            this.set('loading', true);\r\n        }\r\n        else if (img instanceof Image) {\r\n            if (!attrs.width) {\r\n                attrs.width = img.width;\r\n            }\r\n            if (!attrs.height) {\r\n                attrs.height = img.height;\r\n            }\r\n        }\r\n        else if (isCanvas(img)) {\r\n            if (!attrs.width) {\r\n                attrs.width = Number(img.getAttribute('width'));\r\n            }\r\n            if (!attrs.height) {\r\n                attrs.height, Number(img.getAttribute('height'));\r\n            }\r\n        }\r\n    };\r\n    ImageShape.prototype.onAttrChange = function (name, value, originValue) {\r\n        _super.prototype.onAttrChange.call(this, name, value, originValue);\r\n        if (name === 'img') {\r\n            this._setImage(value);\r\n        }\r\n    };\r\n    ImageShape.prototype.createPath = function (context) {\r\n        if (this.get('loading')) {\r\n            this.set('toDraw', true);\r\n            this.set('context', context);\r\n            return;\r\n        }\r\n        var attrs = this.attr();\r\n        var x = attrs.x, y = attrs.y, width = attrs.width, height = attrs.height, sx = attrs.sx, sy = attrs.sy, swidth = attrs.swidth, sheight = attrs.sheight;\r\n        var img = attrs.img;\r\n        if (img instanceof Image || isCanvas(img)) {\r\n            if (!isNil(sx) && !isNil(sy) && !isNil(swidth) && !isNil(sheight)) {\r\n                context.drawImage(img, sx, sy, swidth, sheight, x, y, width, height);\r\n            }\r\n            else {\r\n                context.drawImage(img, x, y, width, height);\r\n            }\r\n        }\r\n    };\r\n    return ImageShape;\r\n}(ShapeBase));\r\nexport default ImageShape;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-canvas\\esm\\shape\\image.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-canvas\\esm\\shape\\image.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * @fileoverview 图片\n * @author dxq613@gmail.com\n */\nimport { __assign, __extends } from \"tslib\";\nimport ShapeBase from './base';\nimport { isString, isNil } from '../util/util';\nfunction isCanvas(dom) {\n    return dom instanceof HTMLElement && isString(dom.nodeName) && dom.nodeName.toUpperCase() === 'CANVAS';\n}\nvar ImageShape = /** @class */ (function (_super) {\n    __extends(ImageShape, _super);\n    function ImageShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ImageShape.prototype.getDefaultAttrs = function () {\n        var attrs = _super.prototype.getDefaultAttrs.call(this);\n        return __assign(__assign({}, attrs), { x: 0, y: 0, width: 0, height: 0 });\n    };\n    ImageShape.prototype.initAttrs = function (attrs) {\n        this._setImage(attrs.img);\n    };\n    // image 不计算 stroke\n    ImageShape.prototype.isStroke = function () {\n        return false;\n    };\n    // 仅仅使用包围盒检测来进行拾取\n    // 所以不需要复写 isInStrokeOrPath 的方法\n    ImageShape.prototype.isOnlyHitBox = function () {\n        return true;\n    };\n    ImageShape.prototype._afterLoading = function () {\n        if (this.get('toDraw') === true) {\n            var canvas = this.get('canvas');\n            if (canvas) {\n                // 这段应该改成局部渲染\n                canvas.draw();\n            }\n            else {\n                // 这种方式如果发生遮挡会出现问题\n                this.createPath(this.get('context'));\n            }\n        }\n    };\n    ImageShape.prototype._setImage = function (img) {\n        var _this = this;\n        var attrs = this.attrs;\n        if (isString(img)) {\n            var image_1 = new Image();\n            image_1.onload = function () {\n                // 图片未加载完，则已经被销毁\n                if (_this.destroyed) {\n                    return false;\n                }\n                // 缓存原始地址，可以做对比，防止重复加载图片\n                // 如果考虑到在加载过程中可能替换 img 属性，则情况更加复杂\n                // this.set('imgSrc', img);\n                // 这里会循环调用 _setImage 方法，但不会再走这个分支\n                _this.attr('img', image_1);\n                _this.set('loading', false);\n                _this._afterLoading();\n                var callback = _this.get('callback');\n                if (callback) {\n                    callback.call(_this);\n                }\n            };\n            image_1.src = img;\n            // 设置跨域\n            image_1.crossOrigin = 'Anonymous';\n            // loading 过程中不绘制\n            this.set('loading', true);\n        }\n        else if (img instanceof Image) {\n            // 如果是一个 image 对象，则设置宽高\n            if (!attrs.width) {\n                attrs.width = img.width;\n            }\n            if (!attrs.height) {\n                attrs.height = img.height;\n            }\n        }\n        else if (isCanvas(img)) {\n            // 如果设置了 canvas 对象\n            if (!attrs.width) {\n                attrs.width = Number(img.getAttribute('width'));\n            }\n            if (!attrs.height) {\n                attrs.height, Number(img.getAttribute('height'));\n            }\n        }\n    };\n    ImageShape.prototype.onAttrChange = function (name, value, originValue) {\n        _super.prototype.onAttrChange.call(this, name, value, originValue);\n        // 如果加载的已经是当前图片，则不再处理\n        if (name === 'img') {\n            // 可以加缓冲，&& this.get('imgSrc') !== value\n            this._setImage(value);\n        }\n    };\n    ImageShape.prototype.createPath = function (context) {\n        // 正在加载则不绘制\n        if (this.get('loading')) {\n            this.set('toDraw', true); // 加载完成后绘制\n            this.set('context', context);\n            return;\n        }\n        var attrs = this.attr();\n        var x = attrs.x, y = attrs.y, width = attrs.width, height = attrs.height, sx = attrs.sx, sy = attrs.sy, swidth = attrs.swidth, sheight = attrs.sheight;\n        var img = attrs.img;\n        if (img instanceof Image || isCanvas(img)) {\n            if (!isNil(sx) && !isNil(sy) && !isNil(swidth) && !isNil(sheight)) {\n                context.drawImage(img, sx, sy, swidth, sheight, x, y, width, height);\n            }\n            else {\n                context.drawImage(img, x, y, width, height);\n            }\n        }\n    };\n    return ImageShape;\n}(ShapeBase));\nexport default ImageShape;\n//# sourceMappingURL=image.js.map"]}]}