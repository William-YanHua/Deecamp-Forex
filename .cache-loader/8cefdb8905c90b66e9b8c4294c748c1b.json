{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\util\\state-manager.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\util\\state-manager.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\r\nimport EventEmitter from '@antv/event-emitter';\r\nimport { each } from '@antv/util';\r\nvar StateManager = (function (_super) {\r\n    __extends(StateManager, _super);\r\n    function StateManager() {\r\n        var _this = _super.call(this) || this;\r\n        _this._states = {};\r\n        _this._stateStack = {};\r\n        return _this;\r\n    }\r\n    StateManager.prototype.setState = function (name, exp) {\r\n        this._stateStack[name] = exp;\r\n        this._onUpdate();\r\n    };\r\n    StateManager.prototype.getState = function (name) {\r\n        return this._states[name];\r\n    };\r\n    StateManager.prototype.getAllStates = function () {\r\n        return this._states;\r\n    };\r\n    StateManager.prototype.clear = function () {\r\n        this._states = {};\r\n        this._stateStack = {};\r\n        if (this._changeTimer) {\r\n            clearTimeout(this._changeTimer);\r\n            this._changeTimer = null;\r\n        }\r\n    };\r\n    StateManager.prototype._onUpdate = function () {\r\n        var _this = this;\r\n        var stateStack = this._stateStack;\r\n        if (this._changeTimer) {\r\n            clearTimeout(this._changeTimer);\r\n            this._changeTimer = null;\r\n        }\r\n        this._changeTimer = setTimeout(function () {\r\n            each(stateStack, function (exp, name) {\r\n                var state = stateStack[name];\r\n                if (!_this._states[name] || _this._states[name] !== exp) {\r\n                    _this._states[name] = exp;\r\n                    _this._triggerEvent(name, state);\r\n                }\r\n            });\r\n            _this._stateStack = {};\r\n        }, 16);\r\n    };\r\n    StateManager.prototype._triggerEvent = function (name, exp) {\r\n        this.emit(name + \":change\", {\r\n            name: name,\r\n            exp: exp,\r\n        });\r\n    };\r\n    return StateManager;\r\n}(EventEmitter));\r\nexport default StateManager;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\util\\state-manager.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\util\\state-manager.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAKlC,OAAO,YAAY,MAAM,qBAAqB,CAAC;AAC/C,OAAO,EAAE,IAAI,EAAE,MAAM,YAAY,CAAC;AAClC,IAAI,YAAY,GAAiB,CAAC,UAAU,MAAM;IAC9C,SAAS,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;IAChC,SAAS,YAAY;QACjB,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC;QACtC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;QACnB,KAAK,CAAC,WAAW,GAAG,EAAE,CAAC;QACvB,OAAO,KAAK,CAAC;IACjB,CAAC;IACD,YAAY,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,IAAI,EAAE,GAAG;QACjD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;QAC7B,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,IAAI;QAC5C,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,YAAY,GAAG;QAClC,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,KAAK,GAAG;QAC3B,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAChC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC5B;IACL,CAAC,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,SAAS,GAAG;QAC/B,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;QAClC,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAChC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC5B;QACD,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC;YAE3B,IAAI,CAAC,UAAU,EAAE,UAAU,GAAG,EAAE,IAAI;gBAChC,IAAI,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;gBAC7B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE;oBAErD,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;oBAE1B,KAAK,CAAC,aAAa,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;iBACpC;YACL,CAAC,CAAC,CAAC;YAGH,KAAK,CAAC,WAAW,GAAG,EAAE,CAAC;QAC3B,CAAC,EAAE,EAAE,CAAC,CAAC;IACX,CAAC,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,IAAI,EAAE,GAAG;QACtD,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,SAAS,EAAE;YACxB,IAAI,EAAE,IAAI;YACV,GAAG,EAAE,GAAG;SACX,CAAC,CAAC;IACP,CAAC,CAAC;IACF,OAAO,YAAY,CAAC;AACxB,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;AACjB,eAAe,YAAY,CAAC","sourcesContent":["import { __extends } from \"tslib\";\n/**\n * 可插拔的状态量管理机\n */\n// todo: 后续还需要加入交互互斥的维护机制\nimport EventEmitter from '@antv/event-emitter';\nimport { each } from '@antv/util';\nvar StateManager = /** @class */ (function (_super) {\n    __extends(StateManager, _super);\n    function StateManager() {\n        var _this = _super.call(this) || this;\n        _this._states = {};\n        _this._stateStack = {};\n        return _this;\n    }\n    StateManager.prototype.setState = function (name, exp) {\n        this._stateStack[name] = exp;\n        this._onUpdate();\n    };\n    StateManager.prototype.getState = function (name) {\n        return this._states[name];\n    };\n    StateManager.prototype.getAllStates = function () {\n        return this._states;\n    };\n    StateManager.prototype.clear = function () {\n        this._states = {};\n        this._stateStack = {};\n        if (this._changeTimer) {\n            clearTimeout(this._changeTimer);\n            this._changeTimer = null;\n        }\n    };\n    StateManager.prototype._onUpdate = function () {\n        var _this = this;\n        var stateStack = this._stateStack;\n        if (this._changeTimer) {\n            clearTimeout(this._changeTimer);\n            this._changeTimer = null;\n        }\n        this._changeTimer = setTimeout(function () {\n            // for (const name in stateStack) {\n            each(stateStack, function (exp, name) {\n                var state = stateStack[name];\n                if (!_this._states[name] || _this._states[name] !== exp) {\n                    // update states\n                    _this._states[name] = exp;\n                    // dispatch state event\n                    _this._triggerEvent(name, state);\n                }\n            });\n            // }\n            // clear stack\n            _this._stateStack = {};\n        }, 16);\n    };\n    StateManager.prototype._triggerEvent = function (name, exp) {\n        this.emit(name + \":change\", {\n            name: name,\n            exp: exp,\n        });\n    };\n    return StateManager;\n}(EventEmitter));\nexport default StateManager;\n//# sourceMappingURL=state-manager.js.map"]}]}