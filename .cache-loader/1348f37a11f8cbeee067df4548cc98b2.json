{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\parse-entities\\decode-entity.browser.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\parse-entities\\decode-entity.browser.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["'use strict';\r\nvar el;\r\nmodule.exports = decodeEntity;\r\nfunction decodeEntity(characters) {\r\n    var entity = '&' + characters + ';';\r\n    var char;\r\n    el = el || document.createElement('i');\r\n    el.innerHTML = entity;\r\n    char = el.textContent;\r\n    if (char.slice(-1) === ';' && characters !== 'semi') {\r\n        return false;\r\n    }\r\n    return char === entity ? false : char;\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\parse-entities\\decode-entity.browser.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\parse-entities\\decode-entity.browser.js"],"names":[],"mappings":"AAAA,YAAY,CAAA;AAIZ,IAAI,EAAE,CAAA;AAEN,MAAM,CAAC,OAAO,GAAG,YAAY,CAAA;AAE7B,SAAS,YAAY,CAAC,UAAU;IAC9B,IAAI,MAAM,GAAG,GAAG,GAAG,UAAU,GAAG,GAAG,CAAA;IACnC,IAAI,IAAI,CAAA;IAER,EAAE,GAAG,EAAE,IAAI,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAA;IACtC,EAAE,CAAC,SAAS,GAAG,MAAM,CAAA;IACrB,IAAI,GAAG,EAAE,CAAC,WAAW,CAAA;IAOrB,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,UAAU,KAAK,MAAM,EAAE;QACnD,OAAO,KAAK,CAAA;KACb;IAGD,OAAO,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAA;AACvC,CAAC","sourcesContent":["'use strict'\n\n/* eslint-env browser */\n\nvar el\n\nmodule.exports = decodeEntity\n\nfunction decodeEntity(characters) {\n  var entity = '&' + characters + ';'\n  var char\n\n  el = el || document.createElement('i')\n  el.innerHTML = entity\n  char = el.textContent\n\n  // Some entities do not require the closing semicolon (&not - for instance),\n  // which leads to situations where parsing the assumed entity of &notit; will\n  // result in the string `Â¬it;`.  When we encounter a trailing semicolon after\n  // parsing and the entity to decode was not a semicolon (&semi;), we can\n  // assume that the matching was incomplete\n  if (char.slice(-1) === ';' && characters !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the entity was not valid\n  return char === entity ? false : char\n}\n"]}]}