{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g-canvas/esm/util/in-path/polygon.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g-canvas/esm/util/in-path/polygon.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var tolerance = 1e-6;\nfunction dcmp(x) {\n    if (Math.abs(x) < tolerance) {\n        return 0;\n    }\n    return x < 0 ? -1 : 1;\n}\nfunction onSegment(p1, p2, q) {\n    if ((q[0] - p1[0]) * (p2[1] - p1[1]) === (p2[0] - p1[0]) * (q[1] - p1[1]) &&\n        Math.min(p1[0], p2[0]) <= q[0] &&\n        q[0] <= Math.max(p1[0], p2[0]) &&\n        Math.min(p1[1], p2[1]) <= q[1] &&\n        q[1] <= Math.max(p1[1], p2[1])) {\n        return true;\n    }\n    return false;\n}\nexport default function isInPolygon(points, x, y) {\n    var isHit = false;\n    var n = points.length;\n    if (n <= 2) {\n        return false;\n    }\n    for (var i = 0; i < n; i++) {\n        var p1 = points[i];\n        var p2 = points[(i + 1) % n];\n        if (onSegment(p1, p2, [x, y])) {\n            return true;\n        }\n        if (dcmp(p1[1] - y) > 0 !== dcmp(p2[1] - y) > 0 &&\n            dcmp(x - ((y - p1[1]) * (p1[0] - p2[0])) / (p1[1] - p2[1]) - p1[0]) < 0) {\n            isHit = !isHit;\n        }\n    }\n    return isHit;\n}\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g-canvas/esm/util/in-path/polygon.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g-canvas/esm/util/in-path/polygon.js"],"names":[],"mappings":"AAKA,IAAI,SAAS,GAAG,IAAI,CAAC;AAErB,SAAS,IAAI,CAAC,CAAC;IACX,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,SAAS,EAAE;QACzB,OAAO,CAAC,CAAC;KACZ;IACD,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC;AAED,SAAS,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IACxB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;QACrE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;QAChC,OAAO,IAAI,CAAC;KACf;IACD,OAAO,KAAK,CAAC;AACjB,CAAC;AAED,MAAM,CAAC,OAAO,UAAU,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC;IAC5C,IAAI,KAAK,GAAG,KAAK,CAAC;IAClB,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;IACtB,IAAI,CAAC,IAAI,CAAC,EAAE;QAER,OAAO,KAAK,CAAC;KAChB;IACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QACxB,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACnB,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC7B,IAAI,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;YAE3B,OAAO,IAAI,CAAC;SACf;QAGD,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;YAC3C,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YACzE,KAAK,GAAG,CAAC,KAAK,CAAC;SAClB;KACJ;IACD,OAAO,KAAK,CAAC;AACjB,CAAC","sourcesContent":["/**\n * @fileoverview 判断点是否在多边形内\n * @author dxq613@gmail.com\n */\n// 多边形的射线检测，参考：https://blog.csdn.net/WilliamSun0122/article/details/77994526\nvar tolerance = 1e-6;\n// 三态函数，判断两个double在eps精度下的大小关系\nfunction dcmp(x) {\n    if (Math.abs(x) < tolerance) {\n        return 0;\n    }\n    return x < 0 ? -1 : 1;\n}\n// 判断点Q是否在p1和p2的线段上\nfunction onSegment(p1, p2, q) {\n    if ((q[0] - p1[0]) * (p2[1] - p1[1]) === (p2[0] - p1[0]) * (q[1] - p1[1]) &&\n        Math.min(p1[0], p2[0]) <= q[0] &&\n        q[0] <= Math.max(p1[0], p2[0]) &&\n        Math.min(p1[1], p2[1]) <= q[1] &&\n        q[1] <= Math.max(p1[1], p2[1])) {\n        return true;\n    }\n    return false;\n}\n// 判断点P在多边形内-射线法\nexport default function isInPolygon(points, x, y) {\n    var isHit = false;\n    var n = points.length;\n    if (n <= 2) {\n        // svg 中点小于 3 个时，不显示，也无法被拾取\n        return false;\n    }\n    for (var i = 0; i < n; i++) {\n        var p1 = points[i];\n        var p2 = points[(i + 1) % n];\n        if (onSegment(p1, p2, [x, y])) {\n            // 点在多边形一条边上\n            return true;\n        }\n        // 前一个判断min(p1[1],p2[1])<P.y<=max(p1[1],p2[1])\n        // 后一个判断被测点 在 射线与边交点 的左边\n        if (dcmp(p1[1] - y) > 0 !== dcmp(p2[1] - y) > 0 &&\n            dcmp(x - ((y - p1[1]) * (p1[0] - p2[0])) / (p1[1] - p2[1]) - p1[0]) < 0) {\n            isHit = !isHit;\n        }\n    }\n    return isHit;\n}\n//# sourceMappingURL=polygon.js.map"]}]}