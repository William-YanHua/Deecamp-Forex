{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\path-util\\esm\\path-2-curve.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\path-util\\esm\\path-2-curve.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import path2Absolute from './path-2-absolute';\r\nvar a2c = function (x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\r\n    if (rx === ry) {\r\n        rx += 1;\r\n    }\r\n    var _120 = (Math.PI * 120) / 180;\r\n    var rad = (Math.PI / 180) * (+angle || 0);\r\n    var res = [];\r\n    var xy;\r\n    var f1;\r\n    var f2;\r\n    var cx;\r\n    var cy;\r\n    var rotate = function (x, y, rad) {\r\n        var X = x * Math.cos(rad) - y * Math.sin(rad);\r\n        var Y = x * Math.sin(rad) + y * Math.cos(rad);\r\n        return {\r\n            x: X,\r\n            y: Y,\r\n        };\r\n    };\r\n    if (!recursive) {\r\n        xy = rotate(x1, y1, -rad);\r\n        x1 = xy.x;\r\n        y1 = xy.y;\r\n        xy = rotate(x2, y2, -rad);\r\n        x2 = xy.x;\r\n        y2 = xy.y;\r\n        if (x1 === x2 && y1 === y2) {\r\n            x2 += 1;\r\n            y2 += 1;\r\n        }\r\n        var x = (x1 - x2) / 2;\r\n        var y = (y1 - y2) / 2;\r\n        var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\r\n        if (h > 1) {\r\n            h = Math.sqrt(h);\r\n            rx = h * rx;\r\n            ry = h * ry;\r\n        }\r\n        var rx2 = rx * rx;\r\n        var ry2 = ry * ry;\r\n        var k = (large_arc_flag === sweep_flag ? -1 : 1) *\r\n            Math.sqrt(Math.abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x)));\r\n        cx = (k * rx * y) / ry + (x1 + x2) / 2;\r\n        cy = (k * -ry * x) / rx + (y1 + y2) / 2;\r\n        f1 = Math.asin(Number(((y1 - cy) / ry).toFixed(9)));\r\n        f2 = Math.asin(Number(((y2 - cy) / ry).toFixed(9)));\r\n        f1 = x1 < cx ? Math.PI - f1 : f1;\r\n        f2 = x2 < cx ? Math.PI - f2 : f2;\r\n        f1 < 0 && (f1 = Math.PI * 2 + f1);\r\n        f2 < 0 && (f2 = Math.PI * 2 + f2);\r\n        if (sweep_flag && f1 > f2) {\r\n            f1 = f1 - Math.PI * 2;\r\n        }\r\n        if (!sweep_flag && f2 > f1) {\r\n            f2 = f2 - Math.PI * 2;\r\n        }\r\n    }\r\n    else {\r\n        f1 = recursive[0];\r\n        f2 = recursive[1];\r\n        cx = recursive[2];\r\n        cy = recursive[3];\r\n    }\r\n    var df = f2 - f1;\r\n    if (Math.abs(df) > _120) {\r\n        var f2old = f2;\r\n        var x2old = x2;\r\n        var y2old = y2;\r\n        f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\r\n        x2 = cx + rx * Math.cos(f2);\r\n        y2 = cy + ry * Math.sin(f2);\r\n        res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\r\n    }\r\n    df = f2 - f1;\r\n    var c1 = Math.cos(f1);\r\n    var s1 = Math.sin(f1);\r\n    var c2 = Math.cos(f2);\r\n    var s2 = Math.sin(f2);\r\n    var t = Math.tan(df / 4);\r\n    var hx = (4 / 3) * rx * t;\r\n    var hy = (4 / 3) * ry * t;\r\n    var m1 = [x1, y1];\r\n    var m2 = [x1 + hx * s1, y1 - hy * c1];\r\n    var m3 = [x2 + hx * s2, y2 - hy * c2];\r\n    var m4 = [x2, y2];\r\n    m2[0] = 2 * m1[0] - m2[0];\r\n    m2[1] = 2 * m1[1] - m2[1];\r\n    if (recursive) {\r\n        return [m2, m3, m4].concat(res);\r\n    }\r\n    res = [m2, m3, m4]\r\n        .concat(res)\r\n        .join()\r\n        .split(',');\r\n    var newres = [];\r\n    for (var i = 0, ii = res.length; i < ii; i++) {\r\n        newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\r\n    }\r\n    return newres;\r\n};\r\nvar l2c = function (x1, y1, x2, y2) {\r\n    return [x1, y1, x2, y2, x2, y2];\r\n};\r\nvar q2c = function (x1, y1, ax, ay, x2, y2) {\r\n    var _13 = 1 / 3;\r\n    var _23 = 2 / 3;\r\n    return [_13 * x1 + _23 * ax, _13 * y1 + _23 * ay, _13 * x2 + _23 * ax, _13 * y2 + _23 * ay, x2, y2];\r\n};\r\nexport default function pathTocurve(path, path2) {\r\n    var p = path2Absolute(path);\r\n    var p2 = path2 && path2Absolute(path2);\r\n    var attrs = {\r\n        x: 0,\r\n        y: 0,\r\n        bx: 0,\r\n        by: 0,\r\n        X: 0,\r\n        Y: 0,\r\n        qx: null,\r\n        qy: null,\r\n    };\r\n    var attrs2 = {\r\n        x: 0,\r\n        y: 0,\r\n        bx: 0,\r\n        by: 0,\r\n        X: 0,\r\n        Y: 0,\r\n        qx: null,\r\n        qy: null,\r\n    };\r\n    var pcoms1 = [];\r\n    var pcoms2 = [];\r\n    var pfirst = '';\r\n    var pcom = '';\r\n    var ii;\r\n    var processPath = function (path, d, pcom) {\r\n        var nx, ny;\r\n        if (!path) {\r\n            return ['C', d.x, d.y, d.x, d.y, d.x, d.y];\r\n        }\r\n        !(path[0] in\r\n            {\r\n                T: 1,\r\n                Q: 1,\r\n            }) && (d.qx = d.qy = null);\r\n        switch (path[0]) {\r\n            case 'M':\r\n                d.X = path[1];\r\n                d.Y = path[2];\r\n                break;\r\n            case 'A':\r\n                path = ['C'].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\r\n                break;\r\n            case 'S':\r\n                if (pcom === 'C' || pcom === 'S') {\r\n                    nx = d.x * 2 - d.bx;\r\n                    ny = d.y * 2 - d.by;\r\n                }\r\n                else {\r\n                    nx = d.x;\r\n                    ny = d.y;\r\n                }\r\n                path = ['C', nx, ny].concat(path.slice(1));\r\n                break;\r\n            case 'T':\r\n                if (pcom === 'Q' || pcom === 'T') {\r\n                    d.qx = d.x * 2 - d.qx;\r\n                    d.qy = d.y * 2 - d.qy;\r\n                }\r\n                else {\r\n                    d.qx = d.x;\r\n                    d.qy = d.y;\r\n                }\r\n                path = ['C'].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\r\n                break;\r\n            case 'Q':\r\n                d.qx = path[1];\r\n                d.qy = path[2];\r\n                path = ['C'].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\r\n                break;\r\n            case 'L':\r\n                path = ['C'].concat(l2c(d.x, d.y, path[1], path[2]));\r\n                break;\r\n            case 'H':\r\n                path = ['C'].concat(l2c(d.x, d.y, path[1], d.y));\r\n                break;\r\n            case 'V':\r\n                path = ['C'].concat(l2c(d.x, d.y, d.x, path[1]));\r\n                break;\r\n            case 'Z':\r\n                path = ['C'].concat(l2c(d.x, d.y, d.X, d.Y));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return path;\r\n    };\r\n    var fixArc = function (pp, i) {\r\n        if (pp[i].length > 7) {\r\n            pp[i].shift();\r\n            var pi = pp[i];\r\n            while (pi.length) {\r\n                pcoms1[i] = 'A';\r\n                p2 && (pcoms2[i] = 'A');\r\n                pp.splice(i++, 0, ['C'].concat(pi.splice(0, 6)));\r\n            }\r\n            pp.splice(i, 1);\r\n            ii = Math.max(p.length, (p2 && p2.length) || 0);\r\n        }\r\n    };\r\n    var fixM = function (path1, path2, a1, a2, i) {\r\n        if (path1 && path2 && path1[i][0] === 'M' && path2[i][0] !== 'M') {\r\n            path2.splice(i, 0, ['M', a2.x, a2.y]);\r\n            a1.bx = 0;\r\n            a1.by = 0;\r\n            a1.x = path1[i][1];\r\n            a1.y = path1[i][2];\r\n            ii = Math.max(p.length, (p2 && p2.length) || 0);\r\n        }\r\n    };\r\n    ii = Math.max(p.length, (p2 && p2.length) || 0);\r\n    for (var i = 0; i < ii; i++) {\r\n        p[i] && (pfirst = p[i][0]);\r\n        if (pfirst !== 'C') {\r\n            pcoms1[i] = pfirst;\r\n            i && (pcom = pcoms1[i - 1]);\r\n        }\r\n        p[i] = processPath(p[i], attrs, pcom);\r\n        if (pcoms1[i] !== 'A' && pfirst === 'C')\r\n            pcoms1[i] = 'C';\r\n        fixArc(p, i);\r\n        if (p2) {\r\n            p2[i] && (pfirst = p2[i][0]);\r\n            if (pfirst !== 'C') {\r\n                pcoms2[i] = pfirst;\r\n                i && (pcom = pcoms2[i - 1]);\r\n            }\r\n            p2[i] = processPath(p2[i], attrs2, pcom);\r\n            if (pcoms2[i] !== 'A' && pfirst === 'C') {\r\n                pcoms2[i] = 'C';\r\n            }\r\n            fixArc(p2, i);\r\n        }\r\n        fixM(p, p2, attrs, attrs2, i);\r\n        fixM(p2, p, attrs2, attrs, i);\r\n        var seg = p[i];\r\n        var seg2 = p2 && p2[i];\r\n        var seglen = seg.length;\r\n        var seg2len = p2 && seg2.length;\r\n        attrs.x = seg[seglen - 2];\r\n        attrs.y = seg[seglen - 1];\r\n        attrs.bx = parseFloat(seg[seglen - 4]) || attrs.x;\r\n        attrs.by = parseFloat(seg[seglen - 3]) || attrs.y;\r\n        attrs2.bx = p2 && (parseFloat(seg2[seg2len - 4]) || attrs2.x);\r\n        attrs2.by = p2 && (parseFloat(seg2[seg2len - 3]) || attrs2.y);\r\n        attrs2.x = p2 && seg2[seg2len - 2];\r\n        attrs2.y = p2 && seg2[seg2len - 1];\r\n    }\r\n    return p2 ? [p, p2] : p;\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\path-util\\esm\\path-2-curve.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\path-util\\esm\\path-2-curve.js"],"names":[],"mappings":"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","sourcesContent":["import path2Absolute from './path-2-absolute';\nvar a2c = function (x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n    // for more information of where this math came from visit:\n    // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n    if (rx === ry) {\n        rx += 1;\n    }\n    var _120 = (Math.PI * 120) / 180;\n    var rad = (Math.PI / 180) * (+angle || 0);\n    var res = [];\n    var xy;\n    var f1;\n    var f2;\n    var cx;\n    var cy;\n    var rotate = function (x, y, rad) {\n        var X = x * Math.cos(rad) - y * Math.sin(rad);\n        var Y = x * Math.sin(rad) + y * Math.cos(rad);\n        return {\n            x: X,\n            y: Y,\n        };\n    };\n    if (!recursive) {\n        xy = rotate(x1, y1, -rad);\n        x1 = xy.x;\n        y1 = xy.y;\n        xy = rotate(x2, y2, -rad);\n        x2 = xy.x;\n        y2 = xy.y;\n        if (x1 === x2 && y1 === y2) {\n            // 若弧的起始点和终点重叠则错开一点\n            x2 += 1;\n            y2 += 1;\n        }\n        // const cos = Math.cos(Math.PI / 180 * angle);\n        // const sin = Math.sin(Math.PI / 180 * angle);\n        var x = (x1 - x2) / 2;\n        var y = (y1 - y2) / 2;\n        var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\n        if (h > 1) {\n            h = Math.sqrt(h);\n            rx = h * rx;\n            ry = h * ry;\n        }\n        var rx2 = rx * rx;\n        var ry2 = ry * ry;\n        var k = (large_arc_flag === sweep_flag ? -1 : 1) *\n            Math.sqrt(Math.abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x)));\n        cx = (k * rx * y) / ry + (x1 + x2) / 2;\n        cy = (k * -ry * x) / rx + (y1 + y2) / 2;\n        f1 = Math.asin(Number(((y1 - cy) / ry).toFixed(9)));\n        f2 = Math.asin(Number(((y2 - cy) / ry).toFixed(9)));\n        f1 = x1 < cx ? Math.PI - f1 : f1;\n        f2 = x2 < cx ? Math.PI - f2 : f2;\n        f1 < 0 && (f1 = Math.PI * 2 + f1);\n        f2 < 0 && (f2 = Math.PI * 2 + f2);\n        if (sweep_flag && f1 > f2) {\n            f1 = f1 - Math.PI * 2;\n        }\n        if (!sweep_flag && f2 > f1) {\n            f2 = f2 - Math.PI * 2;\n        }\n    }\n    else {\n        f1 = recursive[0];\n        f2 = recursive[1];\n        cx = recursive[2];\n        cy = recursive[3];\n    }\n    var df = f2 - f1;\n    if (Math.abs(df) > _120) {\n        var f2old = f2;\n        var x2old = x2;\n        var y2old = y2;\n        f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n        x2 = cx + rx * Math.cos(f2);\n        y2 = cy + ry * Math.sin(f2);\n        res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n    }\n    df = f2 - f1;\n    var c1 = Math.cos(f1);\n    var s1 = Math.sin(f1);\n    var c2 = Math.cos(f2);\n    var s2 = Math.sin(f2);\n    var t = Math.tan(df / 4);\n    var hx = (4 / 3) * rx * t;\n    var hy = (4 / 3) * ry * t;\n    var m1 = [x1, y1];\n    var m2 = [x1 + hx * s1, y1 - hy * c1];\n    var m3 = [x2 + hx * s2, y2 - hy * c2];\n    var m4 = [x2, y2];\n    m2[0] = 2 * m1[0] - m2[0];\n    m2[1] = 2 * m1[1] - m2[1];\n    if (recursive) {\n        return [m2, m3, m4].concat(res);\n    }\n    res = [m2, m3, m4]\n        .concat(res)\n        .join()\n        .split(',');\n    var newres = [];\n    for (var i = 0, ii = res.length; i < ii; i++) {\n        newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n    }\n    return newres;\n};\nvar l2c = function (x1, y1, x2, y2) {\n    return [x1, y1, x2, y2, x2, y2];\n};\nvar q2c = function (x1, y1, ax, ay, x2, y2) {\n    var _13 = 1 / 3;\n    var _23 = 2 / 3;\n    return [_13 * x1 + _23 * ax, _13 * y1 + _23 * ay, _13 * x2 + _23 * ax, _13 * y2 + _23 * ay, x2, y2];\n};\nexport default function pathTocurve(path, path2) {\n    var p = path2Absolute(path);\n    var p2 = path2 && path2Absolute(path2);\n    var attrs = {\n        x: 0,\n        y: 0,\n        bx: 0,\n        by: 0,\n        X: 0,\n        Y: 0,\n        qx: null,\n        qy: null,\n    };\n    var attrs2 = {\n        x: 0,\n        y: 0,\n        bx: 0,\n        by: 0,\n        X: 0,\n        Y: 0,\n        qx: null,\n        qy: null,\n    };\n    var pcoms1 = []; // path commands of original path p\n    var pcoms2 = []; // path commands of original path p2\n    var pfirst = ''; // temporary holder for original path command\n    var pcom = ''; // holder for previous path command of original path\n    var ii;\n    var processPath = function (path, d, pcom) {\n        var nx, ny;\n        if (!path) {\n            return ['C', d.x, d.y, d.x, d.y, d.x, d.y];\n        }\n        !(path[0] in\n            {\n                T: 1,\n                Q: 1,\n            }) && (d.qx = d.qy = null);\n        switch (path[0]) {\n            case 'M':\n                d.X = path[1];\n                d.Y = path[2];\n                break;\n            case 'A':\n                path = ['C'].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n                break;\n            case 'S':\n                if (pcom === 'C' || pcom === 'S') {\n                    // In \"S\" case we have to take into account, if the previous command is C/S.\n                    nx = d.x * 2 - d.bx; // And reflect the previous\n                    ny = d.y * 2 - d.by; // command's control point relative to the current point.\n                }\n                else {\n                    // or some else or nothing\n                    nx = d.x;\n                    ny = d.y;\n                }\n                path = ['C', nx, ny].concat(path.slice(1));\n                break;\n            case 'T':\n                if (pcom === 'Q' || pcom === 'T') {\n                    // In \"T\" case we have to take into account, if the previous command is Q/T.\n                    d.qx = d.x * 2 - d.qx; // And make a reflection similar\n                    d.qy = d.y * 2 - d.qy; // to case \"S\".\n                }\n                else {\n                    // or something else or nothing\n                    d.qx = d.x;\n                    d.qy = d.y;\n                }\n                path = ['C'].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                break;\n            case 'Q':\n                d.qx = path[1];\n                d.qy = path[2];\n                path = ['C'].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                break;\n            case 'L':\n                path = ['C'].concat(l2c(d.x, d.y, path[1], path[2]));\n                break;\n            case 'H':\n                path = ['C'].concat(l2c(d.x, d.y, path[1], d.y));\n                break;\n            case 'V':\n                path = ['C'].concat(l2c(d.x, d.y, d.x, path[1]));\n                break;\n            case 'Z':\n                path = ['C'].concat(l2c(d.x, d.y, d.X, d.Y));\n                break;\n            default:\n                break;\n        }\n        return path;\n    };\n    var fixArc = function (pp, i) {\n        if (pp[i].length > 7) {\n            pp[i].shift();\n            var pi = pp[i];\n            while (pi.length) {\n                pcoms1[i] = 'A'; // if created multiple C:s, their original seg is saved\n                p2 && (pcoms2[i] = 'A'); // the same as above\n                pp.splice(i++, 0, ['C'].concat(pi.splice(0, 6)));\n            }\n            pp.splice(i, 1);\n            ii = Math.max(p.length, (p2 && p2.length) || 0);\n        }\n    };\n    var fixM = function (path1, path2, a1, a2, i) {\n        if (path1 && path2 && path1[i][0] === 'M' && path2[i][0] !== 'M') {\n            path2.splice(i, 0, ['M', a2.x, a2.y]);\n            a1.bx = 0;\n            a1.by = 0;\n            a1.x = path1[i][1];\n            a1.y = path1[i][2];\n            ii = Math.max(p.length, (p2 && p2.length) || 0);\n        }\n    };\n    ii = Math.max(p.length, (p2 && p2.length) || 0);\n    for (var i = 0; i < ii; i++) {\n        p[i] && (pfirst = p[i][0]); // save current path command\n        if (pfirst !== 'C') {\n            // C is not saved yet, because it may be result of conversion\n            pcoms1[i] = pfirst; // Save current path command\n            i && (pcom = pcoms1[i - 1]); // Get previous path command pcom\n        }\n        p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n        if (pcoms1[i] !== 'A' && pfirst === 'C')\n            pcoms1[i] = 'C'; // A is the only command\n        // which may produce multiple C:s\n        // so we have to make sure that C is also C in original path\n        fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n        if (p2) {\n            // the same procedures is done to p2\n            p2[i] && (pfirst = p2[i][0]);\n            if (pfirst !== 'C') {\n                pcoms2[i] = pfirst;\n                i && (pcom = pcoms2[i - 1]);\n            }\n            p2[i] = processPath(p2[i], attrs2, pcom);\n            if (pcoms2[i] !== 'A' && pfirst === 'C') {\n                pcoms2[i] = 'C';\n            }\n            fixArc(p2, i);\n        }\n        fixM(p, p2, attrs, attrs2, i);\n        fixM(p2, p, attrs2, attrs, i);\n        var seg = p[i];\n        var seg2 = p2 && p2[i];\n        var seglen = seg.length;\n        var seg2len = p2 && seg2.length;\n        attrs.x = seg[seglen - 2];\n        attrs.y = seg[seglen - 1];\n        attrs.bx = parseFloat(seg[seglen - 4]) || attrs.x;\n        attrs.by = parseFloat(seg[seglen - 3]) || attrs.y;\n        attrs2.bx = p2 && (parseFloat(seg2[seg2len - 4]) || attrs2.x);\n        attrs2.by = p2 && (parseFloat(seg2[seg2len - 3]) || attrs2.y);\n        attrs2.x = p2 && seg2[seg2len - 2];\n        attrs2.y = p2 && seg2[seg2len - 1];\n    }\n    return p2 ? [p, p2] : p;\n}\n//# sourceMappingURL=path-2-curve.js.map"]}]}