{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\components\\conversion-tag.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\components\\conversion-tag.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __assign } from \"tslib\";\r\nimport { DEFAULT_ANIMATE_CFG } from '@antv/g2/lib/animate';\r\nimport { each, deepMix, get } from '@antv/util';\r\nfunction parsePoints(shape, coord) {\r\n    var parsedPoints = [];\r\n    var points = shape.get('origin').points;\r\n    each(points, function (p) {\r\n        parsedPoints.push(coord.convertPoint(p));\r\n    });\r\n    return parsedPoints;\r\n}\r\nvar ConversionTag = (function () {\r\n    function ConversionTag(cfg) {\r\n        deepMix(this, this.constructor.getDefaultOptions(cfg), cfg);\r\n        this._init();\r\n    }\r\n    ConversionTag.getDefaultOptions = function (_a) {\r\n        var transpose = _a.transpose;\r\n        return {\r\n            visible: true,\r\n            size: transpose ? 32 : 80,\r\n            spacing: transpose ? 8 : 12,\r\n            offset: transpose ? 32 : 0,\r\n            arrow: {\r\n                visible: true,\r\n                headSize: 12,\r\n                style: {\r\n                    fill: 'rgba(0, 0, 0, 0.05)',\r\n                },\r\n            },\r\n            value: {\r\n                visible: true,\r\n                style: {\r\n                    fontSize: 12,\r\n                    fill: 'rgba(0, 0, 0, 0.85)',\r\n                },\r\n                formatter: function (valueUpper, valueLower) { return ((100 * valueLower) / valueUpper).toFixed(2) + \"%\"; },\r\n            },\r\n            animation: deepMix({}, DEFAULT_ANIMATE_CFG),\r\n        };\r\n    };\r\n    ConversionTag.prototype._init = function () {\r\n        var _this = this;\r\n        var layer = this.view.backgroundGroup;\r\n        this.container = layer.addGroup();\r\n        this.draw();\r\n        this.view.on('beforerender', function () {\r\n            _this.clear();\r\n        });\r\n    };\r\n    ConversionTag.prototype.draw = function () {\r\n        var _this = this;\r\n        var transpose = this.transpose;\r\n        var values = this.view.getScaleByField(this.field).values;\r\n        var geometry = this.view.geometries[0];\r\n        var shapes = geometry.getShapes();\r\n        var shapeLower, valueLower, shapeUpper, valueUpper;\r\n        if (transpose) {\r\n            shapes.forEach(function (shapeLower, i) {\r\n                valueLower = values[i];\r\n                if (i++ > 0) {\r\n                    _this._drawTag(shapeUpper, valueUpper, shapeLower, valueLower);\r\n                }\r\n                valueUpper = valueLower;\r\n                shapeUpper = shapeLower;\r\n            });\r\n        }\r\n        else {\r\n            shapes.forEach(function (shapeUpper, i) {\r\n                valueUpper = values[i];\r\n                if (i++ > 0) {\r\n                    _this._drawTag(shapeUpper, valueUpper, shapeLower, valueLower);\r\n                }\r\n                valueLower = valueUpper;\r\n                shapeLower = shapeUpper;\r\n            });\r\n        }\r\n    };\r\n    ConversionTag.prototype.clear = function () {\r\n        if (this.container) {\r\n            this.container.clear();\r\n        }\r\n    };\r\n    ConversionTag.prototype.destroy = function () {\r\n        if (this.container) {\r\n            this.container.remove();\r\n        }\r\n    };\r\n    ConversionTag.prototype._drawTag = function (shapeUpper, valueUpper, shapeLower, valueLower) {\r\n        var transpose = this.transpose;\r\n        var coord = this.view.geometries[0].coordinate;\r\n        var pointUpper = parsePoints(shapeUpper, coord)[transpose ? 3 : 0];\r\n        var pointLower = parsePoints(shapeLower, coord)[transpose ? 0 : 3];\r\n        this._drawTagArrow(pointUpper, pointLower);\r\n        this._drawTagValue(pointUpper, valueUpper, pointLower, valueLower);\r\n    };\r\n    ConversionTag.prototype._drawTagArrow = function (pointUpper, pointLower) {\r\n        var spacing = this.spacing;\r\n        var _a = this, size = _a.size, offset = _a.offset, animation = _a.animation, transpose = _a.transpose;\r\n        var headSize = this.arrow.headSize;\r\n        var totalHeight = pointLower.y - pointUpper.y;\r\n        var totalWidth = pointLower.x - pointUpper.x;\r\n        var points;\r\n        if (transpose) {\r\n            if ((totalWidth - headSize) / 2 < spacing) {\r\n                spacing = Math.max(1, (totalWidth - headSize) / 2);\r\n                points = [\r\n                    [pointUpper.x + spacing, pointUpper.y - offset],\r\n                    [pointUpper.x + spacing, pointUpper.y - offset - size],\r\n                    [pointLower.x - spacing, pointLower.y - offset - size / 2],\r\n                ];\r\n            }\r\n            else {\r\n                points = [\r\n                    [pointUpper.x + spacing, pointUpper.y - offset],\r\n                    [pointUpper.x + spacing, pointUpper.y - offset - size],\r\n                    [pointLower.x - spacing - headSize, pointLower.y - offset - size],\r\n                    [pointLower.x - spacing, pointLower.y - offset - size / 2],\r\n                    [pointLower.x - spacing - headSize, pointLower.y - offset],\r\n                ];\r\n            }\r\n        }\r\n        else {\r\n            if ((totalHeight - headSize) / 2 < spacing) {\r\n                spacing = Math.max(1, (totalHeight - headSize) / 2);\r\n                points = [\r\n                    [pointUpper.x + offset, pointUpper.y + spacing],\r\n                    [pointUpper.x + offset + size, pointUpper.y + spacing],\r\n                    [pointLower.x + offset + size / 2, pointLower.y - spacing],\r\n                ];\r\n            }\r\n            else {\r\n                points = [\r\n                    [pointUpper.x + offset, pointUpper.y + spacing],\r\n                    [pointUpper.x + offset + size, pointUpper.y + spacing],\r\n                    [pointLower.x + offset + size, pointLower.y - spacing - headSize],\r\n                    [pointLower.x + offset + size / 2, pointLower.y - spacing],\r\n                    [pointLower.x + offset, pointLower.y - spacing - headSize],\r\n                ];\r\n            }\r\n        }\r\n        var tagArrow = this.container.addShape('polygon', {\r\n            name: 'arrow',\r\n            attrs: __assign(__assign({}, this.arrow.style), { points: points }),\r\n        });\r\n        if (animation !== false) {\r\n            this._fadeInTagShape(tagArrow);\r\n        }\r\n    };\r\n    ConversionTag.prototype._drawTagValue = function (pointUpper, valueUpper, pointLower, valueLower) {\r\n        var _a = this, size = _a.size, offset = _a.offset, animation = _a.animation, transpose = _a.transpose;\r\n        var text = this.value.formatter(valueUpper, valueLower);\r\n        var tagValue = this.container.addShape('text', {\r\n            name: 'value',\r\n            attrs: __assign(__assign({}, this.value.style), { text: text, x: transpose ? (pointUpper.x + pointLower.x) / 2 : pointUpper.x + offset + size / 2, y: transpose ? pointUpper.y - offset - size / 2 : (pointUpper.y + pointLower.y) / 2, textAlign: 'center', textBaseline: 'middle' }),\r\n        });\r\n        if (transpose) {\r\n            var totalWidth = pointLower.x - pointUpper.x;\r\n            var textWidth = tagValue.getBBox().width;\r\n            if (textWidth > totalWidth) {\r\n                var cWidth = textWidth / text.length;\r\n                var cEnd = Math.max(1, Math.ceil(totalWidth / cWidth) - 1);\r\n                var textAdjusted = text.slice(0, cEnd) + \"...\";\r\n                tagValue.attr('text', textAdjusted);\r\n            }\r\n        }\r\n        if (animation !== false) {\r\n            this._fadeInTagShape(tagValue);\r\n        }\r\n    };\r\n    ConversionTag.prototype._fadeInTagShape = function (shape) {\r\n        var animation = this.animation;\r\n        var opacity = shape.attr('opacity');\r\n        shape.attr('opacity', 0);\r\n        var duration = get(animation, 'appear', DEFAULT_ANIMATE_CFG.appear).duration;\r\n        shape.animate({ opacity: opacity }, duration);\r\n    };\r\n    return ConversionTag;\r\n}());\r\nexport default ConversionTag;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\components\\conversion-tag.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\components\\conversion-tag.js"],"names":[],"mappings":"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","sourcesContent":["import { __assign } from \"tslib\";\nimport { DEFAULT_ANIMATE_CFG } from '@antv/g2/lib/animate';\nimport { each, deepMix, get } from '@antv/util';\nfunction parsePoints(shape, coord) {\n    var parsedPoints = [];\n    var points = shape.get('origin').points;\n    each(points, function (p) {\n        parsedPoints.push(coord.convertPoint(p));\n    });\n    return parsedPoints;\n}\nvar ConversionTag = /** @class */ (function () {\n    function ConversionTag(cfg) {\n        // @ts-ignore\n        deepMix(this, this.constructor.getDefaultOptions(cfg), cfg);\n        this._init();\n    }\n    ConversionTag.getDefaultOptions = function (_a) {\n        var transpose = _a.transpose;\n        return {\n            visible: true,\n            size: transpose ? 32 : 80,\n            spacing: transpose ? 8 : 12,\n            offset: transpose ? 32 : 0,\n            arrow: {\n                visible: true,\n                headSize: 12,\n                style: {\n                    fill: 'rgba(0, 0, 0, 0.05)',\n                },\n            },\n            value: {\n                visible: true,\n                style: {\n                    fontSize: 12,\n                    fill: 'rgba(0, 0, 0, 0.85)',\n                },\n                formatter: function (valueUpper, valueLower) { return ((100 * valueLower) / valueUpper).toFixed(2) + \"%\"; },\n            },\n            animation: deepMix({}, DEFAULT_ANIMATE_CFG),\n        };\n    };\n    ConversionTag.prototype._init = function () {\n        var _this = this;\n        var layer = this.view.backgroundGroup;\n        this.container = layer.addGroup();\n        this.draw();\n        this.view.on('beforerender', function () {\n            _this.clear();\n        });\n    };\n    ConversionTag.prototype.draw = function () {\n        var _this = this;\n        var transpose = this.transpose;\n        var values = this.view.getScaleByField(this.field).values;\n        var geometry = this.view.geometries[0];\n        var shapes = geometry.getShapes();\n        var shapeLower, valueLower, shapeUpper, valueUpper;\n        if (transpose) {\n            shapes.forEach(function (shapeLower, i) {\n                valueLower = values[i];\n                if (i++ > 0) {\n                    _this._drawTag(shapeUpper, valueUpper, shapeLower, valueLower);\n                }\n                valueUpper = valueLower;\n                shapeUpper = shapeLower;\n            });\n        }\n        else {\n            shapes.forEach(function (shapeUpper, i) {\n                valueUpper = values[i];\n                if (i++ > 0) {\n                    _this._drawTag(shapeUpper, valueUpper, shapeLower, valueLower);\n                }\n                valueLower = valueUpper;\n                shapeLower = shapeUpper;\n            });\n        }\n    };\n    ConversionTag.prototype.clear = function () {\n        if (this.container) {\n            this.container.clear();\n        }\n    };\n    ConversionTag.prototype.destroy = function () {\n        if (this.container) {\n            this.container.remove();\n        }\n    };\n    ConversionTag.prototype._drawTag = function (shapeUpper, valueUpper, shapeLower, valueLower) {\n        var transpose = this.transpose;\n        var coord = this.view.geometries[0].coordinate;\n        var pointUpper = parsePoints(shapeUpper, coord)[transpose ? 3 : 0];\n        var pointLower = parsePoints(shapeLower, coord)[transpose ? 0 : 3];\n        this._drawTagArrow(pointUpper, pointLower);\n        this._drawTagValue(pointUpper, valueUpper, pointLower, valueLower);\n    };\n    ConversionTag.prototype._drawTagArrow = function (pointUpper, pointLower) {\n        var spacing = this.spacing;\n        var _a = this, size = _a.size, offset = _a.offset, animation = _a.animation, transpose = _a.transpose;\n        var headSize = this.arrow.headSize;\n        var totalHeight = pointLower.y - pointUpper.y;\n        var totalWidth = pointLower.x - pointUpper.x;\n        var points;\n        if (transpose) {\n            if ((totalWidth - headSize) / 2 < spacing) {\n                // 当柱间距不足容纳箭头尖与间隔时，画三角并挤占间隔\n                spacing = Math.max(1, (totalWidth - headSize) / 2);\n                points = [\n                    [pointUpper.x + spacing, pointUpper.y - offset],\n                    [pointUpper.x + spacing, pointUpper.y - offset - size],\n                    [pointLower.x - spacing, pointLower.y - offset - size / 2],\n                ];\n            }\n            else {\n                // 当柱间距足够时，画完整图形并留出间隔。\n                points = [\n                    [pointUpper.x + spacing, pointUpper.y - offset],\n                    [pointUpper.x + spacing, pointUpper.y - offset - size],\n                    [pointLower.x - spacing - headSize, pointLower.y - offset - size],\n                    [pointLower.x - spacing, pointLower.y - offset - size / 2],\n                    [pointLower.x - spacing - headSize, pointLower.y - offset],\n                ];\n            }\n        }\n        else {\n            if ((totalHeight - headSize) / 2 < spacing) {\n                // 当柱间距不足容纳箭头尖与间隔时，画三角并挤占间隔\n                spacing = Math.max(1, (totalHeight - headSize) / 2);\n                points = [\n                    [pointUpper.x + offset, pointUpper.y + spacing],\n                    [pointUpper.x + offset + size, pointUpper.y + spacing],\n                    [pointLower.x + offset + size / 2, pointLower.y - spacing],\n                ];\n            }\n            else {\n                // 当柱间距足够时，画完整图形并留出间隔。\n                points = [\n                    [pointUpper.x + offset, pointUpper.y + spacing],\n                    [pointUpper.x + offset + size, pointUpper.y + spacing],\n                    [pointLower.x + offset + size, pointLower.y - spacing - headSize],\n                    [pointLower.x + offset + size / 2, pointLower.y - spacing],\n                    [pointLower.x + offset, pointLower.y - spacing - headSize],\n                ];\n            }\n        }\n        var tagArrow = this.container.addShape('polygon', {\n            name: 'arrow',\n            attrs: __assign(__assign({}, this.arrow.style), { points: points }),\n        });\n        if (animation !== false) {\n            this._fadeInTagShape(tagArrow);\n        }\n    };\n    ConversionTag.prototype._drawTagValue = function (pointUpper, valueUpper, pointLower, valueLower) {\n        var _a = this, size = _a.size, offset = _a.offset, animation = _a.animation, transpose = _a.transpose;\n        var text = this.value.formatter(valueUpper, valueLower);\n        var tagValue = this.container.addShape('text', {\n            name: 'value',\n            attrs: __assign(__assign({}, this.value.style), { text: text, x: transpose ? (pointUpper.x + pointLower.x) / 2 : pointUpper.x + offset + size / 2, y: transpose ? pointUpper.y - offset - size / 2 : (pointUpper.y + pointLower.y) / 2, textAlign: 'center', textBaseline: 'middle' }),\n        });\n        if (transpose) {\n            var totalWidth = pointLower.x - pointUpper.x;\n            var textWidth = tagValue.getBBox().width;\n            if (textWidth > totalWidth) {\n                var cWidth = textWidth / text.length;\n                var cEnd = Math.max(1, Math.ceil(totalWidth / cWidth) - 1);\n                var textAdjusted = text.slice(0, cEnd) + \"...\";\n                tagValue.attr('text', textAdjusted);\n            }\n        }\n        if (animation !== false) {\n            this._fadeInTagShape(tagValue);\n        }\n    };\n    ConversionTag.prototype._fadeInTagShape = function (shape) {\n        var animation = this.animation;\n        var opacity = shape.attr('opacity');\n        shape.attr('opacity', 0);\n        var duration = get(animation, 'appear', DEFAULT_ANIMATE_CFG.appear).duration;\n        shape.animate({ opacity: opacity }, duration);\n    };\n    return ConversionTag;\n}());\nexport default ConversionTag;\n//# sourceMappingURL=conversion-tag.js.map"]}]}