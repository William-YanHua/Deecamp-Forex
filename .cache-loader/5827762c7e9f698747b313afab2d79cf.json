{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-math\\lib\\segments.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-math\\lib\\segments.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar line_1 = require(\"./line\");\r\nvar util_1 = require(\"./util\");\r\nfunction analyzePoints(points) {\r\n    var totalLength = 0;\r\n    var segments = [];\r\n    for (var i = 0; i < points.length - 1; i++) {\r\n        var from = points[i];\r\n        var to = points[i + 1];\r\n        var length_1 = util_1.distance(from[0], from[1], to[0], to[1]);\r\n        var seg = {\r\n            from: from,\r\n            to: to,\r\n            length: length_1,\r\n        };\r\n        segments.push(seg);\r\n        totalLength += length_1;\r\n    }\r\n    return { segments: segments, totalLength: totalLength };\r\n}\r\nfunction lengthOfSegment(points) {\r\n    if (points.length < 2) {\r\n        return 0;\r\n    }\r\n    var totalLength = 0;\r\n    for (var i = 0; i < points.length - 1; i++) {\r\n        var from = points[i];\r\n        var to = points[i + 1];\r\n        totalLength += util_1.distance(from[0], from[1], to[0], to[1]);\r\n    }\r\n    return totalLength;\r\n}\r\nexports.lengthOfSegment = lengthOfSegment;\r\nfunction pointAtSegments(points, t) {\r\n    if (t > 1 || t < 0 || points.length < 2) {\r\n        return null;\r\n    }\r\n    var _a = analyzePoints(points), segments = _a.segments, totalLength = _a.totalLength;\r\n    if (totalLength === 0) {\r\n        return {\r\n            x: points[0][0],\r\n            y: points[0][1],\r\n        };\r\n    }\r\n    var startRatio = 0;\r\n    var point = null;\r\n    for (var i = 0; i < segments.length; i++) {\r\n        var seg = segments[i];\r\n        var from = seg.from, to = seg.to;\r\n        var currentRatio = seg.length / totalLength;\r\n        if (t >= startRatio && t <= startRatio + currentRatio) {\r\n            var localRatio = (t - startRatio) / currentRatio;\r\n            point = line_1.default.pointAt(from[0], from[1], to[0], to[1], localRatio);\r\n            break;\r\n        }\r\n        startRatio += currentRatio;\r\n    }\r\n    return point;\r\n}\r\nexports.pointAtSegments = pointAtSegments;\r\nfunction angleAtSegments(points, t) {\r\n    if (t > 1 || t < 0 || points.length < 2) {\r\n        return 0;\r\n    }\r\n    var _a = analyzePoints(points), segments = _a.segments, totalLength = _a.totalLength;\r\n    var startRatio = 0;\r\n    var angle = 0;\r\n    for (var i = 0; i < segments.length; i++) {\r\n        var seg = segments[i];\r\n        var from = seg.from, to = seg.to;\r\n        var currentRatio = seg.length / totalLength;\r\n        if (t >= startRatio && t <= startRatio + currentRatio) {\r\n            angle = Math.atan2(to[1] - from[1], to[0] - from[0]);\r\n            break;\r\n        }\r\n        startRatio += currentRatio;\r\n    }\r\n    return angle;\r\n}\r\nexports.angleAtSegments = angleAtSegments;\r\nfunction distanceAtSegment(points, x, y) {\r\n    var minDistance = Infinity;\r\n    for (var i = 0; i < points.length - 1; i++) {\r\n        var point = points[i];\r\n        var nextPoint = points[i + 1];\r\n        var distance_1 = line_1.default.pointDistance(point[0], point[1], nextPoint[0], nextPoint[1], x, y);\r\n        if (distance_1 < minDistance) {\r\n            minDistance = distance_1;\r\n        }\r\n    }\r\n    return minDistance;\r\n}\r\nexports.distanceAtSegment = distanceAtSegment;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-math\\lib\\segments.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-math\\lib\\segments.js"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar line_1 = require(\"./line\");\nvar util_1 = require(\"./util\");\nfunction analyzePoints(points) {\n    // 计算每段的长度和总的长度\n    var totalLength = 0;\n    var segments = [];\n    for (var i = 0; i < points.length - 1; i++) {\n        var from = points[i];\n        var to = points[i + 1];\n        var length_1 = util_1.distance(from[0], from[1], to[0], to[1]);\n        var seg = {\n            from: from,\n            to: to,\n            length: length_1,\n        };\n        segments.push(seg);\n        totalLength += length_1;\n    }\n    return { segments: segments, totalLength: totalLength };\n}\nfunction lengthOfSegment(points) {\n    if (points.length < 2) {\n        return 0;\n    }\n    var totalLength = 0;\n    for (var i = 0; i < points.length - 1; i++) {\n        var from = points[i];\n        var to = points[i + 1];\n        totalLength += util_1.distance(from[0], from[1], to[0], to[1]);\n    }\n    return totalLength;\n}\nexports.lengthOfSegment = lengthOfSegment;\n/**\n * 按照比例在数据片段中获取点\n * @param {array} points 点的集合\n * @param {number} t 百分比 0-1\n * @return {object} 点的坐标\n */\nfunction pointAtSegments(points, t) {\n    // 边界判断\n    if (t > 1 || t < 0 || points.length < 2) {\n        return null;\n    }\n    var _a = analyzePoints(points), segments = _a.segments, totalLength = _a.totalLength;\n    // 多个点有可能重合\n    if (totalLength === 0) {\n        return {\n            x: points[0][0],\n            y: points[0][1],\n        };\n    }\n    // 计算比例\n    var startRatio = 0;\n    var point = null;\n    for (var i = 0; i < segments.length; i++) {\n        var seg = segments[i];\n        var from = seg.from, to = seg.to;\n        var currentRatio = seg.length / totalLength;\n        if (t >= startRatio && t <= startRatio + currentRatio) {\n            var localRatio = (t - startRatio) / currentRatio;\n            point = line_1.default.pointAt(from[0], from[1], to[0], to[1], localRatio);\n            break;\n        }\n        startRatio += currentRatio;\n    }\n    return point;\n}\nexports.pointAtSegments = pointAtSegments;\n/**\n * 按照比例在数据片段中获取切线的角度\n * @param {array} points 点的集合\n * @param {number} t 百分比 0-1\n */\nfunction angleAtSegments(points, t) {\n    // 边界判断\n    if (t > 1 || t < 0 || points.length < 2) {\n        return 0;\n    }\n    var _a = analyzePoints(points), segments = _a.segments, totalLength = _a.totalLength;\n    // 计算比例\n    var startRatio = 0;\n    var angle = 0;\n    for (var i = 0; i < segments.length; i++) {\n        var seg = segments[i];\n        var from = seg.from, to = seg.to;\n        var currentRatio = seg.length / totalLength;\n        if (t >= startRatio && t <= startRatio + currentRatio) {\n            angle = Math.atan2(to[1] - from[1], to[0] - from[0]);\n            break;\n        }\n        startRatio += currentRatio;\n    }\n    return angle;\n}\nexports.angleAtSegments = angleAtSegments;\nfunction distanceAtSegment(points, x, y) {\n    var minDistance = Infinity;\n    for (var i = 0; i < points.length - 1; i++) {\n        var point = points[i];\n        var nextPoint = points[i + 1];\n        var distance_1 = line_1.default.pointDistance(point[0], point[1], nextPoint[0], nextPoint[1], x, y);\n        if (distance_1 < minDistance) {\n            minDistance = distance_1;\n        }\n    }\n    return minDistance;\n}\nexports.distanceAtSegment = distanceAtSegment;\n//# sourceMappingURL=segments.js.map"]}]}