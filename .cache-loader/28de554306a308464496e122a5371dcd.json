{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-svg\\esm\\util\\draw.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-svg\\esm\\util\\draw.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { setTransform, setClip } from './svg';\r\nimport { sortDom, moveTo } from './dom';\r\nexport function drawChildren(context, children) {\r\n    children.forEach(function (child) {\r\n        child.draw(context);\r\n    });\r\n}\r\nexport function refreshElement(element, changeType) {\r\n    var canvas = element.get('canvas');\r\n    if (canvas && canvas.get('autoDraw')) {\r\n        var context = canvas.get('context');\r\n        var parent_1 = element.getParent();\r\n        var parentChildren = parent_1 ? parent_1.getChildren() : [canvas];\r\n        var el = element.get('el');\r\n        if (changeType === 'remove') {\r\n            var isClipShape = element.get('isClipShape');\r\n            if (isClipShape) {\r\n                var clipPathEl = el && el.parentNode;\r\n                var defsEl = clipPathEl && clipPathEl.parentNode;\r\n                if (clipPathEl && defsEl) {\r\n                    defsEl.removeChild(clipPathEl);\r\n                }\r\n            }\r\n            else if (el && el.parentNode) {\r\n                el.parentNode.removeChild(el);\r\n            }\r\n        }\r\n        else if (changeType === 'show') {\r\n            el.setAttribute('visibility', 'visible');\r\n        }\r\n        else if (changeType === 'hide') {\r\n            el.setAttribute('visibility', 'hidden');\r\n        }\r\n        else if (changeType === 'zIndex') {\r\n            moveTo(el, parentChildren.indexOf(element));\r\n        }\r\n        else if (changeType === 'sort') {\r\n            var children_1 = element.get('children');\r\n            if (children_1 && children_1.length) {\r\n                sortDom(element, function (a, b) {\r\n                    return children_1.indexOf(a) - children_1.indexOf(b) ? 1 : 0;\r\n                });\r\n            }\r\n        }\r\n        else if (changeType === 'clear') {\r\n            if (el) {\r\n                el.innerHTML = '';\r\n            }\r\n        }\r\n        else if (changeType === 'matrix') {\r\n            setTransform(element);\r\n        }\r\n        else if (changeType === 'clip') {\r\n            setClip(element, context);\r\n        }\r\n        else if (changeType === 'attr') {\r\n        }\r\n        else if (changeType === 'add') {\r\n            element.draw(context);\r\n        }\r\n    }\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-svg\\esm\\util\\draw.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-svg\\esm\\util\\draw.js"],"names":[],"mappings":"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","sourcesContent":["import { setTransform, setClip } from './svg';\nimport { sortDom, moveTo } from './dom';\nexport function drawChildren(context, children) {\n    children.forEach(function (child) {\n        child.draw(context);\n    });\n}\n/**\n * 更新元素，包括 group 和 shape\n * @param {IElement} element       SVG 元素\n * @param {ChangeType} changeType  更新类型\n */\nexport function refreshElement(element, changeType) {\n    // 对于还没有挂载到画布下的元素，canvas 可能为空\n    var canvas = element.get('canvas');\n    // 只有挂载到画布下，才对元素进行实际渲染\n    if (canvas && canvas.get('autoDraw')) {\n        var context = canvas.get('context');\n        var parent_1 = element.getParent();\n        var parentChildren = parent_1 ? parent_1.getChildren() : [canvas];\n        var el = element.get('el');\n        if (changeType === 'remove') {\n            var isClipShape = element.get('isClipShape');\n            // 对于 clip，不仅需要将 clipShape 对于的 SVG 元素删除，还需要将上层的 clipPath 元素也删除\n            if (isClipShape) {\n                var clipPathEl = el && el.parentNode;\n                var defsEl = clipPathEl && clipPathEl.parentNode;\n                if (clipPathEl && defsEl) {\n                    defsEl.removeChild(clipPathEl);\n                }\n            }\n            else if (el && el.parentNode) {\n                el.parentNode.removeChild(el);\n            }\n        }\n        else if (changeType === 'show') {\n            el.setAttribute('visibility', 'visible');\n        }\n        else if (changeType === 'hide') {\n            el.setAttribute('visibility', 'hidden');\n        }\n        else if (changeType === 'zIndex') {\n            moveTo(el, parentChildren.indexOf(element));\n        }\n        else if (changeType === 'sort') {\n            var children_1 = element.get('children');\n            if (children_1 && children_1.length) {\n                sortDom(element, function (a, b) {\n                    return children_1.indexOf(a) - children_1.indexOf(b) ? 1 : 0;\n                });\n            }\n        }\n        else if (changeType === 'clear') {\n            // el maybe null for group\n            if (el) {\n                el.innerHTML = '';\n            }\n        }\n        else if (changeType === 'matrix') {\n            setTransform(element);\n        }\n        else if (changeType === 'clip') {\n            setClip(element, context);\n        }\n        else if (changeType === 'attr') {\n            // 已在 afterAttrsChange 进行了处理，此处 do nothing\n        }\n        else if (changeType === 'add') {\n            element.draw(context);\n        }\n    }\n}\n//# sourceMappingURL=draw.js.map"]}]}