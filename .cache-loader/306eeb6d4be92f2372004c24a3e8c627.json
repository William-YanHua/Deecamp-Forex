{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\chart\\view.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\chart\\view.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __assign, __extends, __spreadArrays } from \"tslib\";\r\nimport { clone, deepMix, each, filter, find, flatten, get, isBoolean, isFunction, isNil, isObject, isString, isUndefined, mix, remove, set, size, uniqueId, isEqual, } from '@antv/util';\r\nimport { GROUP_Z_INDEX, LAYER, PLOT_EVENTS, VIEW_LIFE_CIRCLE } from '../constant';\r\nimport Base from '../base';\r\nimport { getFacet } from '../facet';\r\nimport { createInteraction } from '../interaction';\r\nimport { getTheme } from '../theme';\r\nimport { BBox } from '../util/bbox';\r\nimport { getCoordinateClipCfg, isFullCircle, isPointInCoordinate } from '../util/coordinate';\r\nimport { uniq } from '../util/helper';\r\nimport { findDataByPoint } from '../util/tooltip';\r\nimport { getComponentController, getComponentControllerNames } from './controller';\r\nimport CoordinateController from './controller/coordinate';\r\nimport Event from './event';\r\nimport defaultLayout from './layout';\r\nimport { ScalePool } from './util/scale-pool';\r\nvar View = (function (_super) {\r\n    __extends(View, _super);\r\n    function View(props) {\r\n        var _this = _super.call(this, { visible: props.visible }) || this;\r\n        _this.id = uniqueId('view');\r\n        _this.views = [];\r\n        _this.geometries = [];\r\n        _this.controllers = [];\r\n        _this.interactions = {};\r\n        _this.limitInPlot = false;\r\n        _this.options = {\r\n            data: [],\r\n            animate: true,\r\n        };\r\n        _this.usedControllers = getComponentControllerNames();\r\n        _this.scalePool = new ScalePool();\r\n        _this.layoutFunc = defaultLayout;\r\n        _this.isPreMouseInPlot = false;\r\n        _this.isDataChanged = false;\r\n        _this.isCoordinateChanged = false;\r\n        _this.createdScaleKeys = new Map();\r\n        _this.onCanvasEvent = function (evt) {\r\n            var name = evt.name;\r\n            if (!name.includes(':')) {\r\n                var e = _this.createViewEvent(evt);\r\n                _this.doPlotEvent(e);\r\n                _this.emit(name, e);\r\n            }\r\n        };\r\n        _this.onDelegateEvents = function (evt) {\r\n            var name = evt.name;\r\n            if (!name.includes(':')) {\r\n                return;\r\n            }\r\n            var e = _this.createViewEvent(evt);\r\n            _this.emit(name, e);\r\n        };\r\n        var parent = props.parent, canvas = props.canvas, backgroundGroup = props.backgroundGroup, middleGroup = props.middleGroup, foregroundGroup = props.foregroundGroup, _a = props.region, region = _a === void 0 ? { start: { x: 0, y: 0 }, end: { x: 1, y: 1 } } : _a, padding = props.padding, appendPadding = props.appendPadding, theme = props.theme, options = props.options, limitInPlot = props.limitInPlot;\r\n        _this.parent = parent;\r\n        _this.canvas = canvas;\r\n        _this.backgroundGroup = backgroundGroup;\r\n        _this.middleGroup = middleGroup;\r\n        _this.foregroundGroup = foregroundGroup;\r\n        _this.region = region;\r\n        _this.padding = padding;\r\n        _this.appendPadding = appendPadding;\r\n        _this.options = __assign(__assign({}, _this.options), options);\r\n        _this.limitInPlot = limitInPlot;\r\n        _this.themeObject = isObject(theme) ? deepMix({}, getTheme('default'), theme) : getTheme(theme);\r\n        _this.init();\r\n        return _this;\r\n    }\r\n    View.prototype.setLayout = function (layout) {\r\n        this.layoutFunc = layout;\r\n    };\r\n    View.prototype.init = function () {\r\n        this.calculateViewBBox();\r\n        this.initEvents();\r\n        this.initComponentController();\r\n        this.coordinateController = new CoordinateController(this.options.coordinate);\r\n        this.initOptions();\r\n        var views = this.views;\r\n        for (var i = 0; i < views.length; i++) {\r\n            views[i].init();\r\n        }\r\n    };\r\n    View.prototype.render = function (isUpdate) {\r\n        if (isUpdate === void 0) {\r\n            isUpdate = false;\r\n        }\r\n        this.emit(VIEW_LIFE_CIRCLE.BEFORE_RENDER);\r\n        this.paint(isUpdate);\r\n        this.emit(VIEW_LIFE_CIRCLE.AFTER_RENDER);\r\n        if (this.visible === false) {\r\n            this.changeVisible(false);\r\n        }\r\n    };\r\n    View.prototype.clear = function () {\r\n        var _this = this;\r\n        this.emit(VIEW_LIFE_CIRCLE.BEFORE_CLEAR);\r\n        this.filteredData = [];\r\n        this.coordinateInstance = undefined;\r\n        this.isDataChanged = false;\r\n        this.isCoordinateChanged = false;\r\n        var geometries = this.geometries;\r\n        for (var i = 0; i < geometries.length; i++) {\r\n            geometries[i].clear();\r\n        }\r\n        this.geometries = [];\r\n        var controllers = this.controllers;\r\n        for (var i = 0; i < controllers.length; i++) {\r\n            controllers[i].clear();\r\n        }\r\n        this.createdScaleKeys.forEach(function (v, k) {\r\n            _this.getRootView().scalePool.deleteScale(k);\r\n        });\r\n        this.createdScaleKeys.clear();\r\n        var views = this.views;\r\n        for (var i = 0; i < views.length; i++) {\r\n            views[i].clear();\r\n        }\r\n        this.emit(VIEW_LIFE_CIRCLE.AFTER_CLEAR);\r\n    };\r\n    View.prototype.destroy = function () {\r\n        this.emit(VIEW_LIFE_CIRCLE.BEFORE_DESTROY);\r\n        var interactions = this.interactions;\r\n        each(interactions, function (interaction) {\r\n            if (interaction) {\r\n                interaction.destroy();\r\n            }\r\n        });\r\n        this.clear();\r\n        var controllers = this.controllers;\r\n        for (var i = 0, len = controllers.length; i < len; i++) {\r\n            var controller = controllers[i];\r\n            controller.destroy();\r\n        }\r\n        this.backgroundGroup.remove(true);\r\n        this.middleGroup.remove(true);\r\n        this.foregroundGroup.remove(true);\r\n        _super.prototype.destroy.call(this);\r\n    };\r\n    View.prototype.changeVisible = function (visible) {\r\n        _super.prototype.changeVisible.call(this, visible);\r\n        var geometries = this.geometries;\r\n        for (var i = 0, len = geometries.length; i < len; i++) {\r\n            var geometry = geometries[i];\r\n            geometry.changeVisible(visible);\r\n        }\r\n        var controllers = this.controllers;\r\n        for (var i = 0, len = controllers.length; i < len; i++) {\r\n            var controller = controllers[i];\r\n            controller.changeVisible(visible);\r\n        }\r\n        this.foregroundGroup.set('visible', visible);\r\n        this.middleGroup.set('visible', visible);\r\n        this.backgroundGroup.set('visible', visible);\r\n        this.getCanvas().draw();\r\n        return this;\r\n    };\r\n    View.prototype.data = function (data) {\r\n        set(this.options, 'data', data);\r\n        this.isDataChanged = true;\r\n        return this;\r\n    };\r\n    View.prototype.source = function (data) {\r\n        console.warn('This method will be removed at G2 V4.1. Please use chart.data() instead.');\r\n        return this.data(data);\r\n    };\r\n    View.prototype.filter = function (field, condition) {\r\n        if (isFunction(condition)) {\r\n            set(this.options, ['filters', field], condition);\r\n            return this;\r\n        }\r\n        if (!condition && get(this.options, ['filters', field])) {\r\n            delete this.options.filters[field];\r\n        }\r\n        return this;\r\n    };\r\n    View.prototype.axis = function (field, axisOption) {\r\n        if (isBoolean(field)) {\r\n            set(this.options, ['axes'], field);\r\n        }\r\n        else {\r\n            set(this.options, ['axes', field], axisOption);\r\n        }\r\n        return this;\r\n    };\r\n    View.prototype.legend = function (field, legendOption) {\r\n        if (isBoolean(field)) {\r\n            set(this.options, ['legends'], field);\r\n        }\r\n        else if (isString(field)) {\r\n            set(this.options, ['legends', field], legendOption);\r\n        }\r\n        else {\r\n            set(this.options, ['legends'], field);\r\n        }\r\n        return this;\r\n    };\r\n    View.prototype.scale = function (field, scaleOption) {\r\n        var _this = this;\r\n        if (isString(field)) {\r\n            set(this.options, ['scales', field], scaleOption);\r\n        }\r\n        else if (isObject(field)) {\r\n            each(field, function (v, k) {\r\n                set(_this.options, ['scales', k], v);\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n    View.prototype.tooltip = function (cfg) {\r\n        set(this.options, 'tooltip', cfg);\r\n        return this;\r\n    };\r\n    View.prototype.annotation = function () {\r\n        return this.getController('annotation');\r\n    };\r\n    View.prototype.guide = function () {\r\n        console.warn('This method will be removed at G2 V4.1. Please use chart.annotation() instead.');\r\n        return this.annotation();\r\n    };\r\n    View.prototype.coordinate = function (type, coordinateCfg) {\r\n        if (isString(type)) {\r\n            set(this.options, 'coordinate', { type: type, cfg: coordinateCfg });\r\n        }\r\n        else {\r\n            set(this.options, 'coordinate', type);\r\n        }\r\n        this.coordinateController.update(this.options.coordinate);\r\n        return this.coordinateController;\r\n    };\r\n    View.prototype.coord = function (type, coordinateCfg) {\r\n        console.warn('This method will be removed at G2 V4.1. Please use chart.coordinate() instead.');\r\n        return this.coordinate(type, coordinateCfg);\r\n    };\r\n    View.prototype.facet = function (type, cfg) {\r\n        if (this.facetInstance) {\r\n            this.facetInstance.destroy();\r\n        }\r\n        var Ctor = getFacet(type);\r\n        if (!Ctor) {\r\n            throw new Error(\"facet '\" + type + \"' is not exist!\");\r\n        }\r\n        this.facetInstance = new Ctor(this, __assign(__assign({}, cfg), { type: type }));\r\n        return this;\r\n    };\r\n    View.prototype.animate = function (status) {\r\n        set(this.options, 'animate', status);\r\n        return this;\r\n    };\r\n    View.prototype.updateOptions = function (options) {\r\n        this.clear();\r\n        mix(this.options, options);\r\n        this.initOptions();\r\n        return this;\r\n    };\r\n    View.prototype.option = function (name, opt) {\r\n        if (View.prototype[name]) {\r\n            throw new Error(\"Can't use built in variable name \\\"\" + name + \"\\\", please change another one.\");\r\n        }\r\n        set(this.options, name, opt);\r\n        return this;\r\n    };\r\n    View.prototype.theme = function (theme) {\r\n        this.themeObject = isObject(theme) ? deepMix({}, this.themeObject, theme) : getTheme(theme);\r\n        return this;\r\n    };\r\n    View.prototype.interaction = function (name, cfg) {\r\n        var existInteraction = this.interactions[name];\r\n        if (existInteraction) {\r\n            existInteraction.destroy();\r\n        }\r\n        var interaction = createInteraction(name, this, cfg);\r\n        if (interaction) {\r\n            interaction.init();\r\n            this.interactions[name] = interaction;\r\n        }\r\n        return this;\r\n    };\r\n    View.prototype.removeInteraction = function (name) {\r\n        var existInteraction = this.interactions[name];\r\n        if (existInteraction) {\r\n            existInteraction.destroy();\r\n            this.interactions[name] = undefined;\r\n        }\r\n    };\r\n    View.prototype.changeData = function (data) {\r\n        this.isDataChanged = true;\r\n        this.emit(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA);\r\n        this.data(data);\r\n        this.paint(true);\r\n        var views = this.views;\r\n        for (var i = 0, len = views.length; i < len; i++) {\r\n            var view = views[i];\r\n            view.changeData(data);\r\n        }\r\n        this.emit(VIEW_LIFE_CIRCLE.AFTER_CHANGE_DATA);\r\n    };\r\n    View.prototype.createView = function (cfg) {\r\n        var sharedOptions = {\r\n            data: this.options.data,\r\n            scales: clone(this.options.scales),\r\n            axes: clone(this.options.axes),\r\n            coordinate: clone(this.coordinateController.getOption()),\r\n            tooltip: clone(this.options.tooltip),\r\n            legends: clone(this.options.legends),\r\n            animate: this.options.animate,\r\n            visible: this.visible,\r\n        };\r\n        var v = new View(__assign(__assign({ parent: this, canvas: this.canvas,\r\n            backgroundGroup: this.backgroundGroup.addGroup({ zIndex: GROUP_Z_INDEX.BG }), middleGroup: this.middleGroup.addGroup({ zIndex: GROUP_Z_INDEX.MID }), foregroundGroup: this.foregroundGroup.addGroup({ zIndex: GROUP_Z_INDEX.FORE }), theme: this.themeObject, padding: this.padding }, cfg), { options: __assign(__assign({}, sharedOptions), get(cfg, 'options', {})) }));\r\n        this.views.push(v);\r\n        return v;\r\n    };\r\n    View.prototype.view = function (cfg) {\r\n        console.warn('This method will be removed at G2 V4.1. Please use chart.createView() instead.');\r\n        return this.createView(cfg);\r\n    };\r\n    View.prototype.removeView = function (view) {\r\n        var removedView = remove(this.views, function (v) { return v === view; })[0];\r\n        if (removedView) {\r\n            removedView.destroy();\r\n        }\r\n        return removedView;\r\n    };\r\n    View.prototype.getCoordinate = function () {\r\n        return this.coordinateInstance;\r\n    };\r\n    View.prototype.getTheme = function () {\r\n        return this.themeObject;\r\n    };\r\n    View.prototype.getXScale = function () {\r\n        var g = this.geometries[0];\r\n        return g ? g.getXScale() : null;\r\n    };\r\n    View.prototype.getYScales = function () {\r\n        var tmpMap = {};\r\n        return this.geometries.map(function (g) {\r\n            var yScale = g.getYScale();\r\n            var field = yScale.field;\r\n            if (!tmpMap[field]) {\r\n                tmpMap[field] = true;\r\n                return yScale;\r\n            }\r\n        });\r\n    };\r\n    View.prototype.getScalesByDim = function (dimType) {\r\n        var geometries = this.geometries;\r\n        var scales = {};\r\n        for (var i = 0, len = geometries.length; i < len; i++) {\r\n            var geometry = geometries[i];\r\n            var scale = dimType === 'x' ? geometry.getXScale() : geometry.getYScale();\r\n            if (scale && !scales[scale.field]) {\r\n                scales[scale.field] = scale;\r\n            }\r\n        }\r\n        return scales;\r\n    };\r\n    View.prototype.getScaleByField = function (field, key) {\r\n        var defaultKey = key ? key : this.getScaleKey(field);\r\n        return this.getRootView().scalePool.getScale(defaultKey);\r\n    };\r\n    View.prototype.getOptions = function () {\r\n        return this.options;\r\n    };\r\n    View.prototype.getData = function () {\r\n        return this.filteredData;\r\n    };\r\n    View.prototype.getLayer = function (layer) {\r\n        return layer === LAYER.BG\r\n            ? this.backgroundGroup\r\n            : layer === LAYER.MID\r\n                ? this.middleGroup\r\n                : layer === LAYER.FORE\r\n                    ? this.foregroundGroup\r\n                    : this.foregroundGroup;\r\n    };\r\n    View.prototype.isPointInPlot = function (point) {\r\n        return isPointInCoordinate(this.getCoordinate(), point);\r\n    };\r\n    View.prototype.getLegendAttributes = function () {\r\n        return flatten(this.geometries.map(function (g) { return g.getGroupAttributes(); }));\r\n    };\r\n    View.prototype.getGroupScales = function () {\r\n        var scales = this.geometries.map(function (g) { return g.getGroupScales(); });\r\n        return uniq(flatten(scales));\r\n    };\r\n    View.prototype.getCanvas = function () {\r\n        return this.getRootView().canvas;\r\n    };\r\n    View.prototype.getRootView = function () {\r\n        var v = this;\r\n        while (true) {\r\n            if (v.parent) {\r\n                v = v.parent;\r\n                continue;\r\n            }\r\n            break;\r\n        }\r\n        return v;\r\n    };\r\n    View.prototype.getXY = function (data) {\r\n        var coordinate = this.getCoordinate();\r\n        var xScales = this.getScalesByDim('x');\r\n        var yScales = this.getScalesByDim('y');\r\n        var x;\r\n        var y;\r\n        each(data, function (value, key) {\r\n            if (xScales[key]) {\r\n                x = xScales[key].scale(value);\r\n            }\r\n            if (yScales[key]) {\r\n                y = yScales[key].scale(value);\r\n            }\r\n        });\r\n        if (!isNil(x) && !isNil(y)) {\r\n            return coordinate.convert({ x: x, y: y });\r\n        }\r\n    };\r\n    View.prototype.getController = function (name) {\r\n        return find(this.controllers, function (c) { return c.name === name; });\r\n    };\r\n    View.prototype.showTooltip = function (point) {\r\n        var tooltip = this.getController('tooltip');\r\n        if (tooltip) {\r\n            tooltip.showTooltip(point);\r\n        }\r\n        return this;\r\n    };\r\n    View.prototype.hideTooltip = function () {\r\n        var tooltip = this.getController('tooltip');\r\n        if (tooltip) {\r\n            tooltip.hideTooltip();\r\n        }\r\n        return this;\r\n    };\r\n    View.prototype.lockTooltip = function () {\r\n        var tooltip = this.getController('tooltip');\r\n        if (tooltip) {\r\n            tooltip.lockTooltip();\r\n        }\r\n        return this;\r\n    };\r\n    View.prototype.unlockTooltip = function () {\r\n        var tooltip = this.getController('tooltip');\r\n        if (tooltip) {\r\n            tooltip.unlockTooltip();\r\n        }\r\n        return this;\r\n    };\r\n    View.prototype.isTooltipLocked = function () {\r\n        var tooltip = this.getController('tooltip');\r\n        return tooltip && tooltip.isTooltipLocked();\r\n    };\r\n    View.prototype.getTooltipItems = function (point) {\r\n        var tooltip = this.getController('tooltip');\r\n        return tooltip ? tooltip.getTooltipItems(point) : [];\r\n    };\r\n    View.prototype.getSnapRecords = function (point) {\r\n        var geometries = this.geometries;\r\n        var rst = [];\r\n        for (var i = 0, len = geometries.length; i < len; i++) {\r\n            var geom = geometries[i];\r\n            var dataArray = geom.dataArray;\r\n            geom.sort(dataArray);\r\n            var record = void 0;\r\n            for (var j = 0, dataLen = dataArray.length; j < dataLen; j++) {\r\n                var data = dataArray[j];\r\n                record = findDataByPoint(point, data, geom);\r\n                if (record) {\r\n                    rst.push(record);\r\n                }\r\n            }\r\n        }\r\n        var views = this.views;\r\n        for (var i = 0, len = views.length; i < len; i++) {\r\n            var view = views[i];\r\n            var snapRecords = view.getSnapRecords(point);\r\n            rst = rst.concat(snapRecords);\r\n        }\r\n        return rst;\r\n    };\r\n    View.prototype.getComponents = function () {\r\n        var components = [];\r\n        var controllers = this.controllers;\r\n        for (var i = 0, len = controllers.length; i < len; i++) {\r\n            var controller = controllers[i];\r\n            components = components.concat(controller.getComponents());\r\n        }\r\n        return components;\r\n    };\r\n    View.prototype.filterData = function (data) {\r\n        var filters = this.options.filters;\r\n        if (size(filters) === 0) {\r\n            return data;\r\n        }\r\n        return filter(data, function (datum, idx) {\r\n            var fields = Object.keys(filters);\r\n            return fields.every(function (field) {\r\n                var condition = filters[field];\r\n                return condition(datum[field], datum, idx);\r\n            });\r\n        });\r\n    };\r\n    View.prototype.filterFieldData = function (field, data) {\r\n        var filters = this.options.filters;\r\n        var condition = get(filters, field);\r\n        if (isUndefined(condition)) {\r\n            return data;\r\n        }\r\n        return data.filter(function (datum, idx) { return condition(datum[field], datum, idx); });\r\n    };\r\n    View.prototype.adjustCoordinate = function () {\r\n        var _a = this.getCoordinate(), curStart = _a.start, curEnd = _a.end;\r\n        var start = this.coordinateBBox.bl;\r\n        var end = this.coordinateBBox.tr;\r\n        if (isEqual(curStart, start) && isEqual(curEnd, end)) {\r\n            this.isCoordinateChanged = false;\r\n            return;\r\n        }\r\n        this.isCoordinateChanged = true;\r\n        this.coordinateInstance = this.coordinateController.adjust(start, end);\r\n    };\r\n    View.prototype.paint = function (isUpdate) {\r\n        this.renderDataRecursive(isUpdate);\r\n        this.syncScale();\r\n        this.emit(VIEW_LIFE_CIRCLE.BEFORE_PAINT);\r\n        this.renderLayoutRecursive(isUpdate);\r\n        this.renderPaintRecursive(isUpdate);\r\n        this.emit(VIEW_LIFE_CIRCLE.AFTER_PAINT);\r\n        this.isDataChanged = false;\r\n    };\r\n    View.prototype.renderLayoutRecursive = function (isUpdate) {\r\n        this.calculateViewBBox();\r\n        this.adjustCoordinate();\r\n        this.initComponents(isUpdate);\r\n        this.doLayout();\r\n        var viewBBox = this.viewBBox;\r\n        var coordinateBBox = this.coordinateBBox;\r\n        if (!this.padding) {\r\n            this.autoPadding = [\r\n                coordinateBBox.tl.y - viewBBox.tl.y,\r\n                viewBBox.tr.x - coordinateBBox.tr.x,\r\n                viewBBox.bl.y - coordinateBBox.bl.y,\r\n                coordinateBBox.tl.x - viewBBox.tl.x,\r\n            ];\r\n        }\r\n        var views = this.views;\r\n        for (var i = 0, len = views.length; i < len; i++) {\r\n            var view = views[i];\r\n            view.renderLayoutRecursive(isUpdate);\r\n        }\r\n    };\r\n    View.prototype.renderPaintRecursive = function (isUpdate) {\r\n        if (this.limitInPlot) {\r\n            var middleGroup = this.middleGroup;\r\n            var _a = getCoordinateClipCfg(this.coordinateInstance), type = _a.type, attrs = _a.attrs;\r\n            middleGroup.setClip({\r\n                type: type,\r\n                attrs: attrs,\r\n            });\r\n        }\r\n        this.paintGeometries(isUpdate);\r\n        this.renderComponents(isUpdate);\r\n        var views = this.views;\r\n        for (var i = 0, len = views.length; i < len; i++) {\r\n            var view = views[i];\r\n            view.renderPaintRecursive(isUpdate);\r\n        }\r\n    };\r\n    View.prototype.createScale = function (field, data, scaleDef, key) {\r\n        var currentScaleDef = get(this.options.scales, [field]);\r\n        var mergedScaleDef = __assign(__assign({}, currentScaleDef), scaleDef);\r\n        if (this.parent) {\r\n            return this.parent.createScale(field, data, mergedScaleDef, key);\r\n        }\r\n        return this.scalePool.createScale(field, data, mergedScaleDef, key);\r\n    };\r\n    View.prototype.renderDataRecursive = function (isUpdate) {\r\n        this.doFilterData();\r\n        this.createCoordinate();\r\n        this.initGeometries(isUpdate);\r\n        this.renderFacet(isUpdate);\r\n        var views = this.views;\r\n        for (var i = 0, len = views.length; i < len; i++) {\r\n            var view = views[i];\r\n            view.renderDataRecursive(isUpdate);\r\n        }\r\n    };\r\n    View.prototype.calculateViewBBox = function () {\r\n        var x;\r\n        var y;\r\n        var width;\r\n        var height;\r\n        if (this.parent) {\r\n            var bbox = this.parent.coordinateBBox;\r\n            x = bbox.x;\r\n            y = bbox.y;\r\n            width = bbox.width;\r\n            height = bbox.height;\r\n        }\r\n        else {\r\n            x = 0;\r\n            y = 0;\r\n            width = this.canvas.get('width');\r\n            height = this.canvas.get('height');\r\n        }\r\n        var _a = this.region, start = _a.start, end = _a.end;\r\n        var viewBBox = new BBox(x + width * start.x, y + height * start.y, width * (end.x - start.x), height * (end.y - start.y));\r\n        if (!this.viewBBox || !this.viewBBox.isEqual(viewBBox)) {\r\n            this.viewBBox = new BBox(x + width * start.x, y + height * start.y, width * (end.x - start.x), height * (end.y - start.y));\r\n            this.coordinateBBox = this.viewBBox;\r\n        }\r\n    };\r\n    View.prototype.initEvents = function () {\r\n        this.foregroundGroup.on('*', this.onDelegateEvents);\r\n        this.middleGroup.on('*', this.onDelegateEvents);\r\n        this.backgroundGroup.on('*', this.onDelegateEvents);\r\n        this.canvas.on('*', this.onCanvasEvent);\r\n    };\r\n    View.prototype.initComponentController = function () {\r\n        var usedControllers = this.usedControllers;\r\n        for (var i = 0, len = usedControllers.length; i < len; i++) {\r\n            var controllerName = usedControllers[i];\r\n            var Ctor = getComponentController(controllerName);\r\n            if (Ctor) {\r\n                this.controllers.push(new Ctor(this));\r\n            }\r\n        }\r\n    };\r\n    View.prototype.createViewEvent = function (evt) {\r\n        var shape = evt.shape, name = evt.name;\r\n        var data = shape ? shape.get('origin') : null;\r\n        var e = new Event(this, evt, data);\r\n        e.type = name;\r\n        return e;\r\n    };\r\n    View.prototype.doPlotEvent = function (e) {\r\n        var type = e.type, x = e.x, y = e.y;\r\n        var point = { x: x, y: y };\r\n        var ALL_EVENTS = [\r\n            'mousedown',\r\n            'mouseup',\r\n            'mousemove',\r\n            'mouseleave',\r\n            'mousewheel',\r\n            'touchstart',\r\n            'touchmove',\r\n            'touchend',\r\n            'touchcancel',\r\n            'click',\r\n            'dblclick',\r\n            'contextmenu',\r\n        ];\r\n        if (ALL_EVENTS.includes(type)) {\r\n            var currentInPlot = this.isPointInPlot(point);\r\n            if (currentInPlot) {\r\n                var TYPE = \"plot:\" + type;\r\n                e.type = TYPE;\r\n                this.emit(TYPE, e);\r\n                if (type === 'mouseleave' || type === 'touchend') {\r\n                    this.isPreMouseInPlot = false;\r\n                }\r\n            }\r\n            if (type === 'mousemove' || type === 'touchmove') {\r\n                if (this.isPreMouseInPlot && !currentInPlot) {\r\n                    if (type === 'mousemove') {\r\n                        e.type = PLOT_EVENTS.MOUSE_LEAVE;\r\n                        this.emit(PLOT_EVENTS.MOUSE_LEAVE, e);\r\n                    }\r\n                    e.type = PLOT_EVENTS.LEAVE;\r\n                    this.emit(PLOT_EVENTS.LEAVE, e);\r\n                }\r\n                else if (!this.isPreMouseInPlot && currentInPlot) {\r\n                    if (type === 'mousemove') {\r\n                        e.type = PLOT_EVENTS.MOUSE_ENTER;\r\n                        this.emit(PLOT_EVENTS.MOUSE_ENTER, e);\r\n                    }\r\n                    e.type = PLOT_EVENTS.ENTER;\r\n                    this.emit(PLOT_EVENTS.ENTER, e);\r\n                }\r\n                this.isPreMouseInPlot = currentInPlot;\r\n            }\r\n            else if (type === 'mouseleave' || type === 'touchend') {\r\n                if (this.isPreMouseInPlot) {\r\n                    if (type === 'mouseleave') {\r\n                        e.type = PLOT_EVENTS.MOUSE_LEAVE;\r\n                        this.emit(PLOT_EVENTS.MOUSE_LEAVE, e);\r\n                    }\r\n                    e.type = PLOT_EVENTS.LEAVE;\r\n                    this.emit(PLOT_EVENTS.LEAVE, e);\r\n                    this.isPreMouseInPlot = false;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    View.prototype.doFilterData = function () {\r\n        var data = this.options.data;\r\n        this.filteredData = this.filterData(data);\r\n    };\r\n    View.prototype.initGeometries = function (isUpdate) {\r\n        this.createOrUpdateScales();\r\n        var coordinate = this.getCoordinate();\r\n        var scaleDefs = get(this.options, 'scales', {});\r\n        var geometries = this.geometries;\r\n        for (var i = 0, len = geometries.length; i < len; i++) {\r\n            var geometry = geometries[i];\r\n            geometry.scales = this.getGeometryScales();\r\n            var cfg = {\r\n                coordinate: coordinate,\r\n                scaleDefs: scaleDefs,\r\n                data: this.filteredData,\r\n                theme: this.themeObject,\r\n                isDataChanged: this.isDataChanged,\r\n                isCoordinateChanged: this.isCoordinateChanged,\r\n            };\r\n            if (isUpdate) {\r\n                geometry.update(cfg);\r\n            }\r\n            else {\r\n                geometry.init(cfg);\r\n            }\r\n        }\r\n        this.adjustScales();\r\n    };\r\n    View.prototype.createOrUpdateScales = function () {\r\n        var fields = this.getScaleFields();\r\n        var groupedFields = this.getGroupedFields();\r\n        var _a = this.getOptions(), data = _a.data, _b = _a.scales, scales = _b === void 0 ? {} : _b;\r\n        var filteredData = this.filteredData;\r\n        for (var i = 0, len = fields.length; i < len; i++) {\r\n            var field = fields[i];\r\n            var scaleDef = scales[field];\r\n            var key = this.getScaleKey(field);\r\n            this.createScale(field, groupedFields.includes(field) ? data : filteredData, scaleDef, key);\r\n            this.createdScaleKeys.set(key, true);\r\n        }\r\n    };\r\n    View.prototype.syncScale = function () {\r\n        this.getRootView().scalePool.sync();\r\n    };\r\n    View.prototype.getGeometryScales = function () {\r\n        var fields = this.getScaleFields();\r\n        var scales = {};\r\n        for (var i = 0; i < fields.length; i++) {\r\n            var field = fields[i];\r\n            scales[field] = this.getScaleByField(field);\r\n        }\r\n        return scales;\r\n    };\r\n    View.prototype.getScaleFields = function () {\r\n        var fields = [];\r\n        var tmpMap = {};\r\n        var geometries = this.geometries;\r\n        for (var i = 0; i < geometries.length; i++) {\r\n            var geometry = geometries[i];\r\n            var geometryScales = geometry.getScaleFields();\r\n            uniq(geometryScales, fields, tmpMap);\r\n        }\r\n        return fields;\r\n    };\r\n    View.prototype.getGroupedFields = function () {\r\n        var fields = [];\r\n        var tmpMap = {};\r\n        var geometries = this.geometries;\r\n        for (var i = 0; i < geometries.length; i++) {\r\n            var geometry = geometries[i];\r\n            var groupFields = geometry.getGroupFields();\r\n            uniq(groupFields, fields, tmpMap);\r\n        }\r\n        return fields;\r\n    };\r\n    View.prototype.adjustScales = function () {\r\n        this.adjustCategoryScaleRange();\r\n    };\r\n    View.prototype.adjustCategoryScaleRange = function () {\r\n        var _this = this;\r\n        var xyScales = __spreadArrays([this.getXScale()], this.getYScales()).filter(function (e) { return !!e; });\r\n        var coordinate = this.getCoordinate();\r\n        var scaleOptions = this.options.scales;\r\n        each(xyScales, function (scale) {\r\n            var field = scale.field, values = scale.values, isCategory = scale.isCategory, isIdentity = scale.isIdentity;\r\n            if (isCategory || isIdentity) {\r\n                if (values && !get(scaleOptions, [field, 'range'])) {\r\n                    var count = values.length;\r\n                    var range = void 0;\r\n                    if (count === 1) {\r\n                        range = [0.5, 1];\r\n                    }\r\n                    else {\r\n                        var widthRatio = 1;\r\n                        var offset = 0;\r\n                        if (isFullCircle(coordinate)) {\r\n                            if (!coordinate.isTransposed) {\r\n                                range = [0, 1 - 1 / count];\r\n                            }\r\n                            else {\r\n                                widthRatio = get(_this.theme, 'widthRatio.multiplePie', 1 / 1.3);\r\n                                offset = (1 / count) * widthRatio;\r\n                                range = [offset / 2, 1 - offset / 2];\r\n                            }\r\n                        }\r\n                        else {\r\n                            offset = 1 / count / 2;\r\n                            range = [offset, 1 - offset];\r\n                        }\r\n                    }\r\n                    scale.range = range;\r\n                }\r\n            }\r\n        });\r\n    };\r\n    View.prototype.initComponents = function (isUpdate) {\r\n        var controllers = this.controllers;\r\n        for (var i = 0; i < controllers.length; i++) {\r\n            var controller = controllers[i];\r\n            if (isUpdate) {\r\n                controller.update();\r\n            }\r\n            else {\r\n                controller.clear();\r\n                controller.render();\r\n            }\r\n        }\r\n    };\r\n    View.prototype.doLayout = function () {\r\n        this.layoutFunc(this);\r\n    };\r\n    View.prototype.createCoordinate = function () {\r\n        var start = this.coordinateBBox.bl;\r\n        var end = this.coordinateBBox.tr;\r\n        this.coordinateInstance = this.coordinateController.create(start, end);\r\n    };\r\n    View.prototype.paintGeometries = function (isUpdate) {\r\n        var doAnimation = this.options.animate;\r\n        var coordinate = this.getCoordinate();\r\n        var canvasRegion = {\r\n            x: this.viewBBox.x,\r\n            y: this.viewBBox.y,\r\n            minX: this.viewBBox.minX,\r\n            minY: this.viewBBox.minY,\r\n            maxX: this.viewBBox.maxX,\r\n            maxY: this.viewBBox.maxY,\r\n            width: this.viewBBox.width,\r\n            height: this.viewBBox.height,\r\n        };\r\n        var geometries = this.geometries;\r\n        for (var i = 0; i < geometries.length; i++) {\r\n            var geometry = geometries[i];\r\n            geometry.coordinate = coordinate;\r\n            geometry.canvasRegion = canvasRegion;\r\n            if (!doAnimation) {\r\n                geometry.animate(false);\r\n            }\r\n            geometry.paint(isUpdate);\r\n        }\r\n    };\r\n    View.prototype.renderComponents = function (isUpdate) {\r\n        for (var i = 0; i < this.getComponents().length; i++) {\r\n            var co = this.getComponents()[i];\r\n            co.component.render();\r\n        }\r\n    };\r\n    View.prototype.renderFacet = function (isUpdate) {\r\n        if (this.facetInstance) {\r\n            if (isUpdate) {\r\n                this.facetInstance.update();\r\n            }\r\n            else {\r\n                this.facetInstance.clear();\r\n                this.facetInstance.init();\r\n                this.facetInstance.render();\r\n            }\r\n        }\r\n    };\r\n    View.prototype.initOptions = function () {\r\n        var _a = this.options, _b = _a.geometries, geometries = _b === void 0 ? [] : _b, _c = _a.interactions, interactions = _c === void 0 ? [] : _c, _d = _a.views, views = _d === void 0 ? [] : _d, _e = _a.annotations, annotations = _e === void 0 ? [] : _e;\r\n        for (var i = 0; i < geometries.length; i++) {\r\n            var geometryOption = geometries[i];\r\n            this.createGeometry(geometryOption);\r\n        }\r\n        for (var j = 0; j < interactions.length; j++) {\r\n            var interactionOption = interactions[j];\r\n            var type = interactionOption.type, cfg = interactionOption.cfg;\r\n            this.interaction(type, cfg);\r\n        }\r\n        for (var k = 0; k < views.length; k++) {\r\n            var viewOption = views[k];\r\n            this.createView(viewOption);\r\n        }\r\n        var annotationComponent = this.getController('annotation');\r\n        for (var l = 0; l < annotations.length; l++) {\r\n            var annotationOption = annotations[l];\r\n            annotationComponent.annotation(annotationOption);\r\n        }\r\n    };\r\n    View.prototype.createGeometry = function (geometryOption) {\r\n        var type = geometryOption.type, _a = geometryOption.cfg, cfg = _a === void 0 ? {} : _a;\r\n        if (this[type]) {\r\n            var geometry_1 = this[type](cfg);\r\n            each(geometryOption, function (v, k) {\r\n                if (isFunction(geometry_1[k])) {\r\n                    geometry_1[k](v);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    View.prototype.getScaleKey = function (field) {\r\n        return this.id + \"-\" + field;\r\n    };\r\n    return View;\r\n}(Base));\r\nexport { View };\r\nexport function registerGeometry(name, Ctor) {\r\n    View.prototype[name.toLowerCase()] = function (cfg) {\r\n        if (cfg === void 0) {\r\n            cfg = {};\r\n        }\r\n        var props = __assign({\r\n            container: this.middleGroup.addGroup(), labelsContainer: this.foregroundGroup.addGroup()\r\n        }, cfg);\r\n        var geometry = new Ctor(props);\r\n        this.geometries.push(geometry);\r\n        return geometry;\r\n    };\r\n}\r\nexport default View;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\chart\\view.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\chart\\view.js"],"names":[],"mappings":"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","sourcesContent":["import { __assign, __extends, __spreadArrays } from \"tslib\";\nimport { clone, deepMix, each, filter, find, flatten, get, isBoolean, isFunction, isNil, isObject, isString, isUndefined, mix, remove, set, size, uniqueId, isEqual, } from '@antv/util';\nimport { GROUP_Z_INDEX, LAYER, PLOT_EVENTS, VIEW_LIFE_CIRCLE } from '../constant';\nimport Base from '../base';\nimport { getFacet } from '../facet';\nimport { createInteraction } from '../interaction';\nimport { getTheme } from '../theme';\nimport { BBox } from '../util/bbox';\nimport { getCoordinateClipCfg, isFullCircle, isPointInCoordinate } from '../util/coordinate';\nimport { uniq } from '../util/helper';\nimport { findDataByPoint } from '../util/tooltip';\nimport { getComponentController, getComponentControllerNames } from './controller';\nimport CoordinateController from './controller/coordinate';\nimport Event from './event';\nimport defaultLayout from './layout';\nimport { ScalePool } from './util/scale-pool';\n/**\n * G2 视图 View 类\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    function View(props) {\n        var _this = _super.call(this, { visible: props.visible }) || this;\n        /** view id，全局唯一。 */\n        _this.id = uniqueId('view');\n        /** 所有的子 view。 */\n        _this.views = [];\n        /** 所有的 geometry 实例。 */\n        _this.geometries = [];\n        /** 所有的组件 controllers。 */\n        _this.controllers = [];\n        /** 所有的 Interaction 实例。 */\n        _this.interactions = {};\n        /** 是否对超出坐标系范围的 Geometry 进行剪切 */\n        _this.limitInPlot = false;\n        // 配置信息存储\n        _this.options = {\n            data: [],\n            animate: true,\n        }; // 初始化为空\n        /** 配置开启的组件插件，默认为全局配置的组件。 */\n        _this.usedControllers = getComponentControllerNames();\n        /** 所有的 scales */\n        _this.scalePool = new ScalePool();\n        /** 布局函数 */\n        _this.layoutFunc = defaultLayout;\n        /** 当前鼠标是否在 plot 内（CoordinateBBox） */\n        _this.isPreMouseInPlot = false;\n        /** 默认标识位，用于判定数据是否更新 */\n        _this.isDataChanged = false;\n        /** 用于判断坐标系范围是否发生变化的标志位 */\n        _this.isCoordinateChanged = false;\n        /** 从当前这个 view 创建的 scale key */\n        _this.createdScaleKeys = new Map();\n        _this.onCanvasEvent = function (evt) {\n            var name = evt.name;\n            if (!name.includes(':')) {\n                // 非委托事件\n                var e = _this.createViewEvent(evt);\n                // 处理 plot 事件\n                _this.doPlotEvent(e);\n                _this.emit(name, e);\n            }\n        };\n        /**\n         * 触发事件之后\n         * @param evt\n         */\n        _this.onDelegateEvents = function (evt) {\n            // 阻止继续冒泡，防止重复事件触发\n            // evt.preventDefault();\n            var name = evt.name;\n            if (!name.includes(':')) {\n                return;\n            }\n            // 事件在 view 嵌套中冒泡（暂不提供阻止冒泡的机制）\n            var e = _this.createViewEvent(evt);\n            // 包含有基本事件、组合事件\n            _this.emit(name, e);\n            // const currentTarget = evt.currentTarget as IShape;\n            // const inheritNames = currentTarget.get('inheritNames');\n            // if (evt.delegateObject || inheritNames) {\n            //   const events = this.getEvents();\n            //   each(inheritNames, (subName) => {\n            //     const eventName = `${subName}:${type}`;\n            //     if (events[eventName]) {\n            //       this.emit(eventName, e);\n            //     }\n            //   });\n            // }\n        };\n        var parent = props.parent, canvas = props.canvas, backgroundGroup = props.backgroundGroup, middleGroup = props.middleGroup, foregroundGroup = props.foregroundGroup, _a = props.region, region = _a === void 0 ? { start: { x: 0, y: 0 }, end: { x: 1, y: 1 } } : _a, padding = props.padding, appendPadding = props.appendPadding, theme = props.theme, options = props.options, limitInPlot = props.limitInPlot;\n        _this.parent = parent;\n        _this.canvas = canvas;\n        _this.backgroundGroup = backgroundGroup;\n        _this.middleGroup = middleGroup;\n        _this.foregroundGroup = foregroundGroup;\n        _this.region = region;\n        _this.padding = padding;\n        _this.appendPadding = appendPadding;\n        // 接受父 view 传入的参数\n        _this.options = __assign(__assign({}, _this.options), options);\n        _this.limitInPlot = limitInPlot;\n        // 初始化 theme\n        _this.themeObject = isObject(theme) ? deepMix({}, getTheme('default'), theme) : getTheme(theme);\n        _this.init();\n        return _this;\n    }\n    /**\n     * 设置 layout 布局函数\n     * @param layout 布局函数\n     * @returns void\n     */\n    View.prototype.setLayout = function (layout) {\n        this.layoutFunc = layout;\n    };\n    /**\n     * 生命周期：初始化\n     * @returns voids\n     */\n    View.prototype.init = function () {\n        // 计算画布的 viewBBox\n        this.calculateViewBBox();\n        // 事件委托机制\n        this.initEvents();\n        // 初始化组件 controller\n        this.initComponentController();\n        // 创建 coordinate controller\n        this.coordinateController = new CoordinateController(this.options.coordinate);\n        this.initOptions();\n        // 递归初始化子 view\n        var views = this.views;\n        for (var i = 0; i < views.length; i++) {\n            views[i].init();\n        }\n    };\n    /**\n     * 生命周期：渲染流程，渲染过程需要处理数据更新的情况。\n     * render 函数仅仅会处理 view 和子 view。\n     * @param isUpdate 是否触发更新流程。\n     */\n    View.prototype.render = function (isUpdate) {\n        if (isUpdate === void 0) { isUpdate = false; }\n        this.emit(VIEW_LIFE_CIRCLE.BEFORE_RENDER);\n        // 递归渲染\n        this.paint(isUpdate);\n        this.emit(VIEW_LIFE_CIRCLE.AFTER_RENDER);\n        if (this.visible === false) {\n            // 用户在初始化的时候声明 visible: false\n            this.changeVisible(false);\n        }\n    };\n    /**\n     * 生命周期：清空图表上所有的绘制内容，但是不销毁图表，chart 仍可使用。\n     * @returns void\n     */\n    View.prototype.clear = function () {\n        var _this = this;\n        this.emit(VIEW_LIFE_CIRCLE.BEFORE_CLEAR);\n        // 1. 清空缓存和计算数据\n        this.filteredData = [];\n        this.coordinateInstance = undefined;\n        this.isDataChanged = false; // 复位\n        this.isCoordinateChanged = false; // 复位\n        // 2. 清空 geometries\n        var geometries = this.geometries;\n        for (var i = 0; i < geometries.length; i++) {\n            geometries[i].clear();\n        }\n        this.geometries = [];\n        // 3. 清空 controllers\n        var controllers = this.controllers;\n        for (var i = 0; i < controllers.length; i++) {\n            controllers[i].clear();\n        }\n        // 4. 删除 scale 缓存\n        this.createdScaleKeys.forEach(function (v, k) {\n            _this.getRootView().scalePool.deleteScale(k);\n        });\n        this.createdScaleKeys.clear();\n        // 递归处理子 view\n        var views = this.views;\n        for (var i = 0; i < views.length; i++) {\n            views[i].clear();\n        }\n        this.emit(VIEW_LIFE_CIRCLE.AFTER_CLEAR);\n    };\n    /**\n     * 生命周期：销毁，完全无法使用。\n     * @returns void\n     */\n    View.prototype.destroy = function () {\n        // 销毁前事件，销毁之后已经没有意义了，所以不抛出事件\n        this.emit(VIEW_LIFE_CIRCLE.BEFORE_DESTROY);\n        var interactions = this.interactions;\n        // 销毁 interactions\n        each(interactions, function (interaction) {\n            if (interaction) {\n                // 有可能已经销毁，设置了 undefined\n                interaction.destroy();\n            }\n        });\n        this.clear();\n        // 销毁 controller 中的组件\n        var controllers = this.controllers;\n        for (var i = 0, len = controllers.length; i < len; i++) {\n            var controller = controllers[i];\n            controller.destroy();\n        }\n        this.backgroundGroup.remove(true);\n        this.middleGroup.remove(true);\n        this.foregroundGroup.remove(true);\n        _super.prototype.destroy.call(this);\n    };\n    /* end 生命周期函数 */\n    /**\n     * 显示或者隐藏整个 view。\n     * @param visible 是否可见\n     * @returns View\n     */\n    View.prototype.changeVisible = function (visible) {\n        _super.prototype.changeVisible.call(this, visible);\n        var geometries = this.geometries;\n        for (var i = 0, len = geometries.length; i < len; i++) {\n            var geometry = geometries[i];\n            geometry.changeVisible(visible);\n        }\n        var controllers = this.controllers;\n        for (var i = 0, len = controllers.length; i < len; i++) {\n            var controller = controllers[i];\n            controller.changeVisible(visible);\n        }\n        this.foregroundGroup.set('visible', visible);\n        this.middleGroup.set('visible', visible);\n        this.backgroundGroup.set('visible', visible);\n        // group.set('visible', visible) 不会触发自动刷新\n        this.getCanvas().draw();\n        return this;\n    };\n    /**\n     * 装载数据源。\n     *\n     * ```ts\n     * view.data([{ city: '杭州', sale: 100 }, { city: '上海', sale: 110 } ]);\n     * ```\n     *\n     * @param data 数据源，json 数组。\n     * @returns View\n     */\n    View.prototype.data = function (data) {\n        set(this.options, 'data', data);\n        this.isDataChanged = true;\n        return this;\n    };\n    /**\n     * @deprecated\n     * This method will be removed at G2 V4.1. Replaced by {@link #data(data)}\n     */\n    View.prototype.source = function (data) {\n        console.warn('This method will be removed at G2 V4.1. Please use chart.data() instead.');\n        return this.data(data);\n    };\n    /**\n     * 设置数据筛选规则。\n     *\n     * ```ts\n     * view.filter('city', (value: any, datum: Datum) => value !== '杭州');\n     *\n     * // 删除 'city' 字段对应的筛选规则。\n     * view.filter('city', null);\n     * ```\n     *\n     * @param field 数据字段\n     * @param condition 筛选规则\n     * @returns View\n     */\n    View.prototype.filter = function (field, condition) {\n        if (isFunction(condition)) {\n            set(this.options, ['filters', field], condition);\n            return this;\n        }\n        // condition 为空，则表示删除过滤条件\n        if (!condition && get(this.options, ['filters', field])) {\n            delete this.options.filters[field];\n        }\n        return this;\n    };\n    View.prototype.axis = function (field, axisOption) {\n        if (isBoolean(field)) {\n            set(this.options, ['axes'], field);\n        }\n        else {\n            set(this.options, ['axes', field], axisOption);\n        }\n        return this;\n    };\n    View.prototype.legend = function (field, legendOption) {\n        if (isBoolean(field)) {\n            set(this.options, ['legends'], field);\n        }\n        else if (isString(field)) {\n            set(this.options, ['legends', field], legendOption);\n        }\n        else {\n            // 设置全局的 legend 配置\n            set(this.options, ['legends'], field);\n        }\n        return this;\n    };\n    View.prototype.scale = function (field, scaleOption) {\n        var _this = this;\n        if (isString(field)) {\n            set(this.options, ['scales', field], scaleOption);\n        }\n        else if (isObject(field)) {\n            each(field, function (v, k) {\n                set(_this.options, ['scales', k], v);\n            });\n        }\n        return this;\n    };\n    /**\n     * tooltip 提示信息配置。\n     *\n     * ```ts\n     * view.tooltip(false); // 关闭 tooltip\n     *\n     * view.tooltip({\n     *   shared: true\n     * });\n     * ```\n     *\n     * @param cfg Tooltip 配置，更详细的配置项参考：https://github.com/antvis/component#tooltip\n     * @returns View\n     */\n    View.prototype.tooltip = function (cfg) {\n        set(this.options, 'tooltip', cfg);\n        return this;\n    };\n    /**\n     * 辅助标记配置。\n     *\n     * ```ts\n     * view.annotation().line({\n     *   start: ['min', 85],\n     *   end: ['max', 85],\n     *   style: {\n     *     stroke: '#595959',\n     *     lineWidth: 1,\n     *     lineDash: [3, 3],\n     *   },\n     * });\n     * ```\n     * 更详细的配置项：https://github.com/antvis/component#annotation\n     * @returns [[Annotation]]\n     */\n    View.prototype.annotation = function () {\n        return this.getController('annotation');\n    };\n    /**\n     * @deprecated\n     * This method will be removed at G2 V4.1. Replaced by {@link #guide()}\n     */\n    View.prototype.guide = function () {\n        console.warn('This method will be removed at G2 V4.1. Please use chart.annotation() instead.');\n        return this.annotation();\n    };\n    View.prototype.coordinate = function (type, coordinateCfg) {\n        // 提供语法糖，使用更简单\n        if (isString(type)) {\n            set(this.options, 'coordinate', { type: type, cfg: coordinateCfg });\n        }\n        else {\n            set(this.options, 'coordinate', type);\n        }\n        // 更新 coordinate 配置\n        this.coordinateController.update(this.options.coordinate);\n        return this.coordinateController;\n    };\n    /**\n     * @deprecated\n     * This method will be removed at G2 V4.1. Replaced by {@link #coordinate()}\n     */\n    View.prototype.coord = function (type, coordinateCfg) {\n        console.warn('This method will be removed at G2 V4.1. Please use chart.coordinate() instead.');\n        // @ts-ignore\n        return this.coordinate(type, coordinateCfg);\n    };\n    /**\n     * view 分面绘制。\n     *\n     * ```ts\n     * view.facet('rect', {\n     *   rowField: 'province',\n     *   columnField: 'category',\n     *   eachView: (innerView: View, facet?: FacetData) => {\n     *     innerView.line().position('city*sale');\n     *   },\n     * });\n     * ```\n     *\n     * @param type 分面类型\n     * @param cfg 分面配置， [[FacetCfgMap]]\n     * @returns View\n     */\n    View.prototype.facet = function (type, cfg) {\n        // 先销毁掉之前的分面\n        if (this.facetInstance) {\n            this.facetInstance.destroy();\n        }\n        // 创建新的分面\n        var Ctor = getFacet(type);\n        if (!Ctor) {\n            throw new Error(\"facet '\" + type + \"' is not exist!\");\n        }\n        this.facetInstance = new Ctor(this, __assign(__assign({}, cfg), { type: type }));\n        return this;\n    };\n    /*\n     * 开启或者关闭动画。\n     *\n     * ```ts\n     * view.animate(false);\n     * ```\n     *\n     * @param status 动画状态，true 表示开始，false 表示关闭\n     * @returns View\n     */\n    View.prototype.animate = function (status) {\n        set(this.options, 'animate', status);\n        return this;\n    };\n    /**\n     * 更新配置项，用于配置项式声明。\n     * @param options 配置项\n     */\n    View.prototype.updateOptions = function (options) {\n        this.clear(); // 清空\n        mix(this.options, options);\n        this.initOptions();\n        return this;\n    };\n    /**\n     * 往 `view.options` 属性中存储配置项。\n     * @param name 属性名称\n     * @param opt 属性值\n     * @returns view\n     */\n    View.prototype.option = function (name, opt) {\n        // 对于内置的 option，避免覆盖。\n        // name 在原型上，说明可能是内置 API，存在 option 被覆盖的风险，不处理\n        if (View.prototype[name]) {\n            throw new Error(\"Can't use built in variable name \\\"\" + name + \"\\\", please change another one.\");\n        }\n        // 存入到 option 中\n        set(this.options, name, opt);\n        return this;\n    };\n    /**\n     * 设置主题。\n     *\n     * ```ts\n     * view.theme('dark'); // 'dark' 需要事先通过 `registerTheme()` 接口注册完成\n     *\n     * view.theme({ defaultColor: 'red' });\n     * ```\n     *\n     * @param theme 主题名或者主题配置\n     * @returns View\n     */\n    View.prototype.theme = function (theme) {\n        this.themeObject = isObject(theme) ? deepMix({}, this.themeObject, theme) : getTheme(theme);\n        return this;\n    };\n    /* end 一系列传入配置的 API */\n    /**\n     * Call the interaction based on the interaction name\n     *\n     * ```ts\n     * view.interaction('my-interaction', { extra: 'hello world' });\n     * ```\n     * 详细文档可以参考：https://g2.antv.vision/zh/docs/manual/tutorial/interaction\n     * @param name interaction name\n     * @param cfg interaction config\n     * @returns\n     */\n    View.prototype.interaction = function (name, cfg) {\n        var existInteraction = this.interactions[name];\n        // 存在则先销毁已有的\n        if (existInteraction) {\n            existInteraction.destroy();\n        }\n        // 新建交互实例\n        var interaction = createInteraction(name, this, cfg);\n        if (interaction) {\n            interaction.init();\n            this.interactions[name] = interaction;\n        }\n        return this;\n    };\n    /**\n     * 移除当前 View 的 interaction\n     * ```ts\n     * view.removeInteraction('my-interaction');\n     * ```\n     * @param name interaction name\n     */\n    View.prototype.removeInteraction = function (name) {\n        var existInteraction = this.interactions[name];\n        // 存在则先销毁已有的\n        if (existInteraction) {\n            existInteraction.destroy();\n            this.interactions[name] = undefined;\n        }\n    };\n    /**\n     * 修改数据，数据更新逻辑，数据更新仅仅影响当前这一层的 view\n     *\n     * ```ts\n     * view.changeData([{ city: '北京', sale: '200' }]);\n     * ```\n     *\n     * @param data\n     * @returns void\n     */\n    View.prototype.changeData = function (data) {\n        this.isDataChanged = true;\n        this.emit(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA);\n        // 1. 保存数据\n        this.data(data);\n        // 2. 渲染\n        this.paint(true);\n        // 3. 遍历子 view 进行 change data\n        var views = this.views;\n        for (var i = 0, len = views.length; i < len; i++) {\n            var view = views[i];\n            // FIXME 子 view 有自己的数据的情况，该如何处理？\n            view.changeData(data);\n        }\n        this.emit(VIEW_LIFE_CIRCLE.AFTER_CHANGE_DATA);\n    };\n    /* View 管理相关的 API */\n    /**\n     * 创建子 view\n     *\n     * ```ts\n     * const innerView = view.createView({\n     *   start: { x: 0, y: 0 },\n     *   end: { x: 0.5, y: 0.5 },\n     *   padding: 8,\n     * });\n     * ```\n     *\n     * @param cfg\n     * @returns View\n     */\n    View.prototype.createView = function (cfg) {\n        // 子 view 共享 options 配置数据\n        var sharedOptions = {\n            data: this.options.data,\n            scales: clone(this.options.scales),\n            axes: clone(this.options.axes),\n            coordinate: clone(this.coordinateController.getOption()),\n            tooltip: clone(this.options.tooltip),\n            legends: clone(this.options.legends),\n            animate: this.options.animate,\n            visible: this.visible,\n        };\n        var v = new View(__assign(__assign({ parent: this, canvas: this.canvas, \n            // 子 view 共用三层 group\n            backgroundGroup: this.backgroundGroup.addGroup({ zIndex: GROUP_Z_INDEX.BG }), middleGroup: this.middleGroup.addGroup({ zIndex: GROUP_Z_INDEX.MID }), foregroundGroup: this.foregroundGroup.addGroup({ zIndex: GROUP_Z_INDEX.FORE }), theme: this.themeObject, padding: this.padding }, cfg), { options: __assign(__assign({}, sharedOptions), get(cfg, 'options', {})) }));\n        this.views.push(v);\n        return v;\n    };\n    /**\n     * @deprecated\n     * This method will be removed at G2 V4.1. Replaced by {@link #createView()}\n     */\n    View.prototype.view = function (cfg) {\n        console.warn('This method will be removed at G2 V4.1. Please use chart.createView() instead.');\n        return this.createView(cfg);\n    };\n    /**\n     * 删除一个子 view\n     * @param view\n     * @return removedView\n     */\n    View.prototype.removeView = function (view) {\n        var removedView = remove(this.views, function (v) { return v === view; })[0];\n        if (removedView) {\n            removedView.destroy();\n        }\n        return removedView;\n    };\n    /* end View 管理相关的 API */\n    // 一些 get 方法\n    /**\n     * 获取当前坐标系实例。\n     * @returns [[Coordinate]]\n     */\n    View.prototype.getCoordinate = function () {\n        return this.coordinateInstance;\n    };\n    /**\n     * 获取当前 view 的主题配置。\n     * @returns themeObject\n     */\n    View.prototype.getTheme = function () {\n        return this.themeObject;\n    };\n    /**\n     * 获得 x 轴字段的 scale 实例。\n     * @returns view 中 Geometry 对于的 x scale\n     */\n    View.prototype.getXScale = function () {\n        // 拿第一个 Geometry 的 X scale\n        // 隐藏逻辑：一个 view 中的 Geometry 必须 x 字段一致\n        var g = this.geometries[0];\n        return g ? g.getXScale() : null;\n    };\n    /**\n     * 获取 y 轴字段的 scales 实例。\n     * @returns view 中 Geometry 对于的 y scale 数组\n     */\n    View.prototype.getYScales = function () {\n        // 拿到所有的 Geometry 的 Y scale，然后去重\n        var tmpMap = {};\n        return this.geometries.map(function (g) {\n            var yScale = g.getYScale();\n            var field = yScale.field;\n            if (!tmpMap[field]) {\n                tmpMap[field] = true;\n                return yScale;\n            }\n        });\n    };\n    /**\n     * 获取 x 轴或者 y 轴对应的所有 scale 实例。\n     * @param dimType x | y\n     * @returns x 轴或者 y 轴对应的所有 scale 实例。\n     */\n    View.prototype.getScalesByDim = function (dimType) {\n        var geometries = this.geometries;\n        var scales = {};\n        for (var i = 0, len = geometries.length; i < len; i++) {\n            var geometry = geometries[i];\n            var scale = dimType === 'x' ? geometry.getXScale() : geometry.getYScale();\n            if (scale && !scales[scale.field]) {\n                scales[scale.field] = scale;\n            }\n        }\n        return scales;\n    };\n    /**\n     * 根据字段名去获取 scale 实例。\n     * @param field 数据字段名称\n     * @param key id\n     */\n    View.prototype.getScaleByField = function (field, key) {\n        var defaultKey = key ? key : this.getScaleKey(field);\n        // 调用根节点 view 的方法获取\n        return this.getRootView().scalePool.getScale(defaultKey);\n    };\n    /**\n     * 返回所有配置信息。\n     * @returns 所有的 view API 配置。\n     */\n    View.prototype.getOptions = function () {\n        return this.options;\n    };\n    /**\n     * 获取 view 的数据（过滤后的数据）。\n     * @returns 处理过滤器之后的数据。\n     */\n    View.prototype.getData = function () {\n        return this.filteredData;\n    };\n    /**\n     * 获得绘制的层级 group。\n     * @param layer 层级名称。\n     * @returns 对应层级的 Group。\n     */\n    View.prototype.getLayer = function (layer) {\n        return layer === LAYER.BG\n            ? this.backgroundGroup\n            : layer === LAYER.MID\n                ? this.middleGroup\n                : layer === LAYER.FORE\n                    ? this.foregroundGroup\n                    : this.foregroundGroup;\n    };\n    /**\n     * 对外暴露方法，判断一个点是否在绘图区域（即坐标系范围）内部。\n     * @param point 坐标点\n     */\n    View.prototype.isPointInPlot = function (point) {\n        return isPointInCoordinate(this.getCoordinate(), point);\n    };\n    /**\n     * 获得所有的 legend 对应的 attribute 实例。\n     * @returns 维度字段的 Attribute 数组\n     */\n    View.prototype.getLegendAttributes = function () {\n        return flatten(this.geometries.map(function (g) { return g.getGroupAttributes(); }));\n    };\n    /**\n     * 获取所有的分组字段的 scale 实例。\n     * @returns 获得分组字段的 scale 实例数组。\n     */\n    View.prototype.getGroupScales = function () {\n        // 拿到所有的 Geometry 的 分组字段 scale，然后打平去重\n        var scales = this.geometries.map(function (g) { return g.getGroupScales(); });\n        return uniq(flatten(scales));\n    };\n    /**\n     * 获取 G.Canvas 实例。\n     * @returns G.Canvas 画布实例。\n     */\n    View.prototype.getCanvas = function () {\n        return this.getRootView().canvas;\n    };\n    /**\n     * 获得根节点 view。\n     */\n    View.prototype.getRootView = function () {\n        var v = this;\n        while (true) {\n            if (v.parent) {\n                v = v.parent;\n                continue;\n            }\n            break;\n        }\n        return v;\n    };\n    /**\n     * 获取该数据在可视化后，对应的画布坐标点。\n     * @param data 原始数据记录\n     * @returns 对应的画布坐标点\n     */\n    View.prototype.getXY = function (data) {\n        var coordinate = this.getCoordinate();\n        var xScales = this.getScalesByDim('x');\n        var yScales = this.getScalesByDim('y');\n        var x;\n        var y;\n        each(data, function (value, key) {\n            if (xScales[key]) {\n                x = xScales[key].scale(value);\n            }\n            if (yScales[key]) {\n                y = yScales[key].scale(value);\n            }\n        });\n        if (!isNil(x) && !isNil(y)) {\n            return coordinate.convert({ x: x, y: y });\n        }\n    };\n    /**\n     * 获取 name 对应的 controller 实例\n     * @param name\n     */\n    View.prototype.getController = function (name) {\n        return find(this.controllers, function (c) { return c.name === name; });\n    };\n    /**\n     * 显示 point 坐标点对应的 tooltip。\n     * @param point 画布坐标点\n     * @returns View\n     */\n    View.prototype.showTooltip = function (point) {\n        var tooltip = this.getController('tooltip');\n        if (tooltip) {\n            tooltip.showTooltip(point);\n        }\n        return this;\n    };\n    /**\n     * 隐藏 tooltip。\n     * @returns View\n     */\n    View.prototype.hideTooltip = function () {\n        var tooltip = this.getController('tooltip');\n        if (tooltip) {\n            tooltip.hideTooltip();\n        }\n        return this;\n    };\n    /**\n     * 将 tooltip 锁定到当前位置不能移动。\n     * @returns View\n     */\n    View.prototype.lockTooltip = function () {\n        var tooltip = this.getController('tooltip');\n        if (tooltip) {\n            tooltip.lockTooltip();\n        }\n        return this;\n    };\n    /**\n     * 将 tooltip 锁定解除。\n     * @returns View\n     */\n    View.prototype.unlockTooltip = function () {\n        var tooltip = this.getController('tooltip');\n        if (tooltip) {\n            tooltip.unlockTooltip();\n        }\n        return this;\n    };\n    /**\n     * 是否锁定 tooltip。\n     * @returns 是否锁定\n     */\n    View.prototype.isTooltipLocked = function () {\n        var tooltip = this.getController('tooltip');\n        return tooltip && tooltip.isTooltipLocked();\n    };\n    /**\n     * 获取当前 point 对应的 tooltip 数据项。\n     * @param point 坐标点\n     * @returns tooltip 数据项\n     */\n    View.prototype.getTooltipItems = function (point) {\n        var tooltip = this.getController('tooltip');\n        return tooltip ? tooltip.getTooltipItems(point) : [];\n    };\n    /**\n     * 获取逼近的点的数据集合\n     * @param point 当前坐标点\n     * @returns  数据\n     */\n    View.prototype.getSnapRecords = function (point) {\n        var geometries = this.geometries;\n        var rst = [];\n        for (var i = 0, len = geometries.length; i < len; i++) {\n            var geom = geometries[i];\n            var dataArray = geom.dataArray;\n            geom.sort(dataArray); // 先进行排序，便于 tooltip 查找\n            var record = void 0;\n            for (var j = 0, dataLen = dataArray.length; j < dataLen; j++) {\n                var data = dataArray[j];\n                record = findDataByPoint(point, data, geom);\n                if (record) {\n                    rst.push(record);\n                }\n            }\n        }\n        // 同样递归处理子 views\n        var views = this.views;\n        for (var i = 0, len = views.length; i < len; i++) {\n            var view = views[i];\n            var snapRecords = view.getSnapRecords(point);\n            rst = rst.concat(snapRecords);\n        }\n        return rst;\n    };\n    /**\n     * 获取所有的 pure component 组件，用于布局。\n     */\n    View.prototype.getComponents = function () {\n        var components = [];\n        var controllers = this.controllers;\n        for (var i = 0, len = controllers.length; i < len; i++) {\n            var controller = controllers[i];\n            components = components.concat(controller.getComponents());\n        }\n        return components;\n    };\n    /**\n     * 将 data 数据进行过滤。\n     * @param data\n     * @returns 过滤之后的数据\n     */\n    View.prototype.filterData = function (data) {\n        var filters = this.options.filters;\n        // 不存在 filters，则不需要进行数据过滤\n        if (size(filters) === 0) {\n            return data;\n        }\n        // 存在过滤器，则逐个执行过滤，过滤器之间是 与 的关系\n        return filter(data, function (datum, idx) {\n            // 所有的 filter 字段\n            var fields = Object.keys(filters);\n            // 所有的条件都通过，才算通过\n            return fields.every(function (field) {\n                var condition = filters[field];\n                // condition 返回 true，则保留\n                return condition(datum[field], datum, idx);\n            });\n        });\n    };\n    /**\n     * 对某一个字段进行过滤\n     * @param field\n     * @param data\n     */\n    View.prototype.filterFieldData = function (field, data) {\n        var filters = this.options.filters;\n        var condition = get(filters, field);\n        if (isUndefined(condition)) {\n            return data;\n        }\n        return data.filter(function (datum, idx) { return condition(datum[field], datum, idx); });\n    };\n    /**\n     * 调整 coordinate 的坐标范围。\n     */\n    View.prototype.adjustCoordinate = function () {\n        var _a = this.getCoordinate(), curStart = _a.start, curEnd = _a.end;\n        var start = this.coordinateBBox.bl;\n        var end = this.coordinateBBox.tr;\n        // 在 defaultLayoutFn 中只会在 coordinateBBox 发生变化的时候会调用 adjustCoorinate()，所以不用担心被置位\n        if (isEqual(curStart, start) && isEqual(curEnd, end)) {\n            this.isCoordinateChanged = false;\n            // 如果大小没有变化则不更新\n            return;\n        }\n        this.isCoordinateChanged = true;\n        this.coordinateInstance = this.coordinateController.adjust(start, end);\n    };\n    View.prototype.paint = function (isUpdate) {\n        this.renderDataRecursive(isUpdate);\n        // 处理 sync scale 的逻辑\n        this.syncScale();\n        this.emit(VIEW_LIFE_CIRCLE.BEFORE_PAINT);\n        this.renderLayoutRecursive(isUpdate);\n        this.renderPaintRecursive(isUpdate);\n        this.emit(VIEW_LIFE_CIRCLE.AFTER_PAINT);\n        this.isDataChanged = false; // 渲染完毕复位\n    };\n    /**\n     * 替换处理 view 的布局，最终是计算各个 view 的 coordinateBBox 和 coordinateInstance\n     * @param isUpdate\n     */\n    View.prototype.renderLayoutRecursive = function (isUpdate) {\n        // 1. 子 view 大小相对 coordinateBBox，changeSize 的时候需要重新计算\n        this.calculateViewBBox();\n        // 2. 更新 coordinate\n        this.adjustCoordinate();\n        // 3. 初始化组件 component\n        this.initComponents(isUpdate);\n        // 4. 进行布局，计算 coordinateBBox，进行组件布局，update 位置\n        this.doLayout();\n        // 5. 更新并存储最终的 padding 值\n        var viewBBox = this.viewBBox;\n        var coordinateBBox = this.coordinateBBox;\n        if (!this.padding) {\n            // 用户未设置 padding 时，将自动计算的 padding 保存至 autoPadding 属性中\n            this.autoPadding = [\n                coordinateBBox.tl.y - viewBBox.tl.y,\n                viewBBox.tr.x - coordinateBBox.tr.x,\n                viewBBox.bl.y - coordinateBBox.bl.y,\n                coordinateBBox.tl.x - viewBBox.tl.x,\n            ];\n        }\n        // 同样递归处理子 views\n        var views = this.views;\n        for (var i = 0, len = views.length; i < len; i++) {\n            var view = views[i];\n            view.renderLayoutRecursive(isUpdate);\n        }\n    };\n    /**\n     * 最终递归绘制组件和图形\n     * @param isUpdate\n     */\n    View.prototype.renderPaintRecursive = function (isUpdate) {\n        if (this.limitInPlot) {\n            var middleGroup = this.middleGroup;\n            var _a = getCoordinateClipCfg(this.coordinateInstance), type = _a.type, attrs = _a.attrs;\n            middleGroup.setClip({\n                type: type,\n                attrs: attrs,\n            });\n        }\n        // 1. 渲染几何标记\n        this.paintGeometries(isUpdate);\n        // 2. 绘制组件\n        this.renderComponents(isUpdate);\n        // 同样递归处理子 views\n        var views = this.views;\n        for (var i = 0, len = views.length; i < len; i++) {\n            var view = views[i];\n            view.renderPaintRecursive(isUpdate);\n        }\n    };\n    // end Get 方法\n    /**\n     * 创建 scale，递归到顶层 view 去创建和缓存 scale\n     * @param field\n     * @param data\n     * @param scaleDef\n     * @param key\n     */\n    View.prototype.createScale = function (field, data, scaleDef, key) {\n        // 1. 合并 field 对应的 scaleDef，合并原则是底层覆盖顶层（就近原则）\n        var currentScaleDef = get(this.options.scales, [field]);\n        var mergedScaleDef = __assign(__assign({}, currentScaleDef), scaleDef);\n        // 2. 是否存在父 view，在则递归，否则创建\n        if (this.parent) {\n            return this.parent.createScale(field, data, mergedScaleDef, key);\n        }\n        // 3. 在根节点 view 通过 scalePool 创建\n        return this.scalePool.createScale(field, data, mergedScaleDef, key);\n    };\n    /**\n     * 递归渲染中的数据处理\n     * @param isUpdate\n     */\n    View.prototype.renderDataRecursive = function (isUpdate) {\n        // 1. 处理数据\n        this.doFilterData();\n        // 2. 创建实例\n        this.createCoordinate();\n        // 3. 初始化 Geometry\n        this.initGeometries(isUpdate);\n        // 4. 处理分面逻辑，最终都是生成子 view 和 geometry\n        this.renderFacet(isUpdate);\n        // 同样递归处理子 views\n        var views = this.views;\n        for (var i = 0, len = views.length; i < len; i++) {\n            var view = views[i];\n            view.renderDataRecursive(isUpdate);\n        }\n    };\n    /**\n     * 计算 region，计算实际的像素范围坐标\n     * @private\n     */\n    View.prototype.calculateViewBBox = function () {\n        var x;\n        var y;\n        var width;\n        var height;\n        if (this.parent) {\n            var bbox = this.parent.coordinateBBox;\n            // 存在 parent， 那么就是通过父容器大小计算\n            x = bbox.x;\n            y = bbox.y;\n            width = bbox.width;\n            height = bbox.height;\n        }\n        else {\n            // 顶层容器，从 canvas 中取值 宽高\n            x = 0;\n            y = 0;\n            width = this.canvas.get('width');\n            height = this.canvas.get('height');\n        }\n        var _a = this.region, start = _a.start, end = _a.end;\n        // 根据 region 计算当前 view 的 bbox 大小。\n        var viewBBox = new BBox(x + width * start.x, y + height * start.y, width * (end.x - start.x), height * (end.y - start.y));\n        if (!this.viewBBox || !this.viewBBox.isEqual(viewBBox)) {\n            // viewBBox 发生变化的时候进行更新\n            this.viewBBox = new BBox(x + width * start.x, y + height * start.y, width * (end.x - start.x), height * (end.y - start.y));\n            // 初始的 coordinate bbox 大小\n            this.coordinateBBox = this.viewBBox;\n        }\n    };\n    /**\n     * 初始化事件机制：G 4.0 底层内置支持 name:event 的机制，那么只要所有组件都有自己的 name 即可。\n     *\n     * G2 的事件只是获取事件委托，然后在 view 嵌套结构中，形成事件冒泡机制。\n     * 当前 view 只委托自己 view 中的 Component 和 Geometry 事件，并向上冒泡\n     * @private\n     */\n    View.prototype.initEvents = function () {\n        // 三层 group 中的 shape 事件都会通过 G 冒泡上来的\n        this.foregroundGroup.on('*', this.onDelegateEvents);\n        this.middleGroup.on('*', this.onDelegateEvents);\n        this.backgroundGroup.on('*', this.onDelegateEvents);\n        this.canvas.on('*', this.onCanvasEvent);\n    };\n    /**\n     * 初始化插件\n     */\n    View.prototype.initComponentController = function () {\n        var usedControllers = this.usedControllers;\n        for (var i = 0, len = usedControllers.length; i < len; i++) {\n            var controllerName = usedControllers[i];\n            var Ctor = getComponentController(controllerName);\n            if (Ctor) {\n                this.controllers.push(new Ctor(this));\n            }\n        }\n    };\n    View.prototype.createViewEvent = function (evt) {\n        var shape = evt.shape, name = evt.name;\n        var data = shape ? shape.get('origin') : null;\n        // 事件在 view 嵌套中冒泡（暂不提供阻止冒泡的机制）\n        var e = new Event(this, evt, data);\n        e.type = name;\n        return e;\n    };\n    /**\n     * 处理 PLOT_EVENTS\n     * plot event 需要处理所有的基础事件，并判断是否在画布中，然后再决定是否要 emit。\n     * 对于 mouseenter、mouseleave 比较特殊，需要做一下数学比较。\n     * @param e\n     */\n    View.prototype.doPlotEvent = function (e) {\n        var type = e.type, x = e.x, y = e.y;\n        var point = { x: x, y: y };\n        var ALL_EVENTS = [\n            'mousedown',\n            'mouseup',\n            'mousemove',\n            'mouseleave',\n            'mousewheel',\n            'touchstart',\n            'touchmove',\n            'touchend',\n            'touchcancel',\n            'click',\n            'dblclick',\n            'contextmenu',\n        ];\n        if (ALL_EVENTS.includes(type)) {\n            var currentInPlot = this.isPointInPlot(point);\n            if (currentInPlot) {\n                var TYPE = \"plot:\" + type; // 组合 plot 事件\n                e.type = TYPE;\n                this.emit(TYPE, e);\n                if (type === 'mouseleave' || type === 'touchend') {\n                    // 在plot 内部却离开画布\n                    this.isPreMouseInPlot = false;\n                }\n            }\n            // 对于 mouseenter, mouseleave 的计算处理\n            if (type === 'mousemove' || type === 'touchmove') {\n                if (this.isPreMouseInPlot && !currentInPlot) {\n                    if (type === 'mousemove') {\n                        e.type = PLOT_EVENTS.MOUSE_LEAVE;\n                        this.emit(PLOT_EVENTS.MOUSE_LEAVE, e);\n                    }\n                    e.type = PLOT_EVENTS.LEAVE;\n                    this.emit(PLOT_EVENTS.LEAVE, e);\n                }\n                else if (!this.isPreMouseInPlot && currentInPlot) {\n                    if (type === 'mousemove') {\n                        e.type = PLOT_EVENTS.MOUSE_ENTER;\n                        this.emit(PLOT_EVENTS.MOUSE_ENTER, e);\n                    }\n                    e.type = PLOT_EVENTS.ENTER;\n                    this.emit(PLOT_EVENTS.ENTER, e);\n                }\n                // 赋新的状态值\n                this.isPreMouseInPlot = currentInPlot;\n            }\n            else if (type === 'mouseleave' || type === 'touchend') {\n                // 可能不在 currentInPlot 中\n                if (this.isPreMouseInPlot) {\n                    if (type === 'mouseleave') {\n                        e.type = PLOT_EVENTS.MOUSE_LEAVE;\n                        this.emit(PLOT_EVENTS.MOUSE_LEAVE, e);\n                    }\n                    e.type = PLOT_EVENTS.LEAVE;\n                    this.emit(PLOT_EVENTS.LEAVE, e);\n                    this.isPreMouseInPlot = false;\n                }\n            }\n        }\n    };\n    // view 生命周期 —— 渲染流程\n    /**\n     * 处理筛选器，筛选数据\n     * @private\n     */\n    View.prototype.doFilterData = function () {\n        var data = this.options.data;\n        this.filteredData = this.filterData(data);\n    };\n    /**\n     * 初始化 Geometries\n     * @private\n     */\n    View.prototype.initGeometries = function (isUpdate) {\n        // 初始化图形的之前，先创建 / 更新 scales\n        this.createOrUpdateScales();\n        // 实例化 Geometry，然后 view 将所有的 scale 管理起来\n        var coordinate = this.getCoordinate();\n        var scaleDefs = get(this.options, 'scales', {});\n        var geometries = this.geometries;\n        for (var i = 0, len = geometries.length; i < len; i++) {\n            var geometry = geometries[i];\n            // 保持 scales 引用不要变化\n            geometry.scales = this.getGeometryScales();\n            var cfg = {\n                coordinate: coordinate,\n                scaleDefs: scaleDefs,\n                data: this.filteredData,\n                theme: this.themeObject,\n                isDataChanged: this.isDataChanged,\n                isCoordinateChanged: this.isCoordinateChanged,\n            };\n            if (isUpdate) {\n                // 数据发生更新\n                geometry.update(cfg);\n            }\n            else {\n                geometry.init(cfg);\n            }\n        }\n        // Geometry 初始化之后，生成了 scale，然后进行调整 scale 配置\n        this.adjustScales();\n    };\n    /**\n     * 根据 Geometry 的所有字段创建 scales\n     * 如果存在，则更新，不存在则创建\n     */\n    View.prototype.createOrUpdateScales = function () {\n        var fields = this.getScaleFields();\n        var groupedFields = this.getGroupedFields();\n        var _a = this.getOptions(), data = _a.data, _b = _a.scales, scales = _b === void 0 ? {} : _b;\n        var filteredData = this.filteredData;\n        for (var i = 0, len = fields.length; i < len; i++) {\n            var field = fields[i];\n            var scaleDef = scales[field];\n            // 调用方法，递归去创建\n            var key = this.getScaleKey(field);\n            this.createScale(field, \n            // 分组字段的 scale 使用未过滤的数据创建\n            groupedFields.includes(field) ? data : filteredData, scaleDef, key);\n            // 缓存从当前 view 创建的 scale key\n            this.createdScaleKeys.set(key, true);\n        }\n    };\n    /**\n     * 处理 scale 同步逻辑\n     */\n    View.prototype.syncScale = function () {\n        // 最终调用 root view 的\n        this.getRootView().scalePool.sync();\n    };\n    /**\n     * 获得 Geometry 中的 scale 对象\n     */\n    View.prototype.getGeometryScales = function () {\n        var fields = this.getScaleFields();\n        var scales = {};\n        for (var i = 0; i < fields.length; i++) {\n            var field = fields[i];\n            scales[field] = this.getScaleByField(field);\n        }\n        return scales;\n    };\n    View.prototype.getScaleFields = function () {\n        var fields = [];\n        var tmpMap = {};\n        var geometries = this.geometries;\n        for (var i = 0; i < geometries.length; i++) {\n            var geometry = geometries[i];\n            var geometryScales = geometry.getScaleFields();\n            uniq(geometryScales, fields, tmpMap);\n        }\n        return fields;\n    };\n    View.prototype.getGroupedFields = function () {\n        var fields = [];\n        var tmpMap = {};\n        var geometries = this.geometries;\n        for (var i = 0; i < geometries.length; i++) {\n            var geometry = geometries[i];\n            var groupFields = geometry.getGroupFields();\n            uniq(groupFields, fields, tmpMap);\n        }\n        return fields;\n    };\n    /**\n     * 调整 scale 配置\n     * @private\n     */\n    View.prototype.adjustScales = function () {\n        // 调整目前包括：\n        // 分类 scale，调整 range 范围\n        this.adjustCategoryScaleRange();\n    };\n    /**\n     * 调整分类 scale 的 range，防止超出坐标系外面\n     * @private\n     */\n    View.prototype.adjustCategoryScaleRange = function () {\n        var _this = this;\n        var xyScales = __spreadArrays([this.getXScale()], this.getYScales()).filter(function (e) { return !!e; });\n        var coordinate = this.getCoordinate();\n        var scaleOptions = this.options.scales;\n        each(xyScales, function (scale) {\n            var field = scale.field, values = scale.values, isCategory = scale.isCategory, isIdentity = scale.isIdentity;\n            // 分类或者 identity 的 scale 才进行处理\n            if (isCategory || isIdentity) {\n                // 存在 value 值，且用户没有配置 range 配置\n                if (values && !get(scaleOptions, [field, 'range'])) {\n                    var count = values.length;\n                    var range = void 0;\n                    if (count === 1) {\n                        range = [0.5, 1]; // 只有一个分类时,防止计算出现 [0.5,0.5] 的状态\n                    }\n                    else {\n                        var widthRatio = 1;\n                        var offset = 0;\n                        if (isFullCircle(coordinate)) {\n                            if (!coordinate.isTransposed) {\n                                range = [0, 1 - 1 / count];\n                            }\n                            else {\n                                widthRatio = get(_this.theme, 'widthRatio.multiplePie', 1 / 1.3);\n                                offset = (1 / count) * widthRatio;\n                                range = [offset / 2, 1 - offset / 2];\n                            }\n                        }\n                        else {\n                            offset = 1 / count / 2; // 两边留下分类空间的一半\n                            range = [offset, 1 - offset]; // 坐标轴最前面和最后面留下空白防止绘制柱状图时\n                        }\n                    }\n                    // 更新 range\n                    scale.range = range;\n                }\n            }\n        });\n    };\n    /**\n     * 根据 options 配置、Geometry 字段配置，自动生成 components\n     * @param isUpdate 是否是更新\n     * @private\n     */\n    View.prototype.initComponents = function (isUpdate) {\n        // 先全部清空，然后 render\n        var controllers = this.controllers;\n        for (var i = 0; i < controllers.length; i++) {\n            var controller = controllers[i];\n            // 更新则走更新逻辑；否则清空载重绘\n            if (isUpdate) {\n                controller.update();\n            }\n            else {\n                controller.clear();\n                controller.render();\n            }\n        }\n    };\n    View.prototype.doLayout = function () {\n        this.layoutFunc(this);\n    };\n    /**\n     * 创建坐标系\n     * @private\n     */\n    View.prototype.createCoordinate = function () {\n        var start = this.coordinateBBox.bl;\n        var end = this.coordinateBBox.tr;\n        this.coordinateInstance = this.coordinateController.create(start, end);\n    };\n    /**\n     * 根据 options 配置自动渲染 geometry\n     * @private\n     */\n    View.prototype.paintGeometries = function (isUpdate) {\n        var doAnimation = this.options.animate;\n        // geometry 的 paint 阶段\n        var coordinate = this.getCoordinate();\n        var canvasRegion = {\n            x: this.viewBBox.x,\n            y: this.viewBBox.y,\n            minX: this.viewBBox.minX,\n            minY: this.viewBBox.minY,\n            maxX: this.viewBBox.maxX,\n            maxY: this.viewBBox.maxY,\n            width: this.viewBBox.width,\n            height: this.viewBBox.height,\n        };\n        var geometries = this.geometries;\n        for (var i = 0; i < geometries.length; i++) {\n            var geometry = geometries[i];\n            geometry.coordinate = coordinate;\n            geometry.canvasRegion = canvasRegion;\n            if (!doAnimation) {\n                // 如果 view 不执行动画，那么 view 下所有的 geometry 都不执行动画\n                geometry.animate(false);\n            }\n            geometry.paint(isUpdate);\n        }\n    };\n    /**\n     * 最后的绘制组件\n     * @param isUpdate\n     */\n    View.prototype.renderComponents = function (isUpdate) {\n        // 先全部清空，然后 render\n        for (var i = 0; i < this.getComponents().length; i++) {\n            var co = this.getComponents()[i];\n            co.component.render();\n        }\n    };\n    /**\n     * 渲染分面，会在其中进行数据分面，然后进行子 view 创建\n     * @param isUpdate\n     */\n    View.prototype.renderFacet = function (isUpdate) {\n        if (this.facetInstance) {\n            if (isUpdate) {\n                this.facetInstance.update();\n            }\n            else {\n                this.facetInstance.clear();\n                // 计算分面数据\n                this.facetInstance.init();\n                // 渲染组件和 views\n                this.facetInstance.render();\n            }\n        }\n    };\n    View.prototype.initOptions = function () {\n        var _a = this.options, _b = _a.geometries, geometries = _b === void 0 ? [] : _b, _c = _a.interactions, interactions = _c === void 0 ? [] : _c, _d = _a.views, views = _d === void 0 ? [] : _d, _e = _a.annotations, annotations = _e === void 0 ? [] : _e;\n        // 创建 geometry 实例\n        for (var i = 0; i < geometries.length; i++) {\n            var geometryOption = geometries[i];\n            this.createGeometry(geometryOption);\n        }\n        // 创建 interactions 实例\n        for (var j = 0; j < interactions.length; j++) {\n            var interactionOption = interactions[j];\n            var type = interactionOption.type, cfg = interactionOption.cfg;\n            this.interaction(type, cfg);\n        }\n        // 创建 view 实例\n        for (var k = 0; k < views.length; k++) {\n            var viewOption = views[k];\n            this.createView(viewOption);\n        }\n        // 设置 annotation\n        var annotationComponent = this.getController('annotation');\n        for (var l = 0; l < annotations.length; l++) {\n            var annotationOption = annotations[l];\n            annotationComponent.annotation(annotationOption);\n        }\n    };\n    View.prototype.createGeometry = function (geometryOption) {\n        var type = geometryOption.type, _a = geometryOption.cfg, cfg = _a === void 0 ? {} : _a;\n        if (this[type]) {\n            var geometry_1 = this[type](cfg);\n            each(geometryOption, function (v, k) {\n                if (isFunction(geometry_1[k])) {\n                    geometry_1[k](v);\n                }\n            });\n        }\n    };\n    /**\n     * scale key 的创建方式\n     * @param field\n     */\n    View.prototype.getScaleKey = function (field) {\n        return this.id + \"-\" + field;\n    };\n    return View;\n}(Base));\nexport { View };\n/**\n * 注册 geometry 组件\n * @param name\n * @param Ctor\n * @returns Geometry\n */\nexport function registerGeometry(name, Ctor) {\n    // 语法糖，在 view API 上增加原型方法\n    View.prototype[name.toLowerCase()] = function (cfg) {\n        if (cfg === void 0) { cfg = {}; }\n        var props = __assign({ \n            /** 图形容器 */\n            container: this.middleGroup.addGroup(), labelsContainer: this.foregroundGroup.addGroup() }, cfg);\n        var geometry = new Ctor(props);\n        this.geometries.push(geometry);\n        return geometry;\n    };\n}\nexport default View;\n//# sourceMappingURL=view.js.map"]}]}