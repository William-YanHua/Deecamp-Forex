{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/src/transform/hierarchy/compact-box.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/src/transform/hierarchy/compact-box.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var hierarchy = require('@antv/hierarchy/lib');\nvar _a = require('../../data-set'), HIERARCHY = _a.HIERARCHY, registerTransform = _a.registerTransform;\nvar DEFAULT_OPTIONS = {};\nfunction transform(dataView, options) {\n    var root = dataView.root;\n    options = Object.assign({}, DEFAULT_OPTIONS, options);\n    if (dataView.dataType !== HIERARCHY) {\n        throw new TypeError('Invalid DataView: This transform is for Hierarchy data only!');\n    }\n    dataView.root = hierarchy.compactBox(root, options);\n}\nregisterTransform('hierarchy.compact-box', transform);\nregisterTransform('compact-box-tree', transform);\nregisterTransform('non-layered-tidy-tree', transform);\nregisterTransform('mindmap-logical', transform);\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/src/transform/hierarchy/compact-box.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/src/transform/hierarchy/compact-box.js"],"names":[],"mappings":"AAAA,IAAM,SAAS,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;AAC3C,IAAA,KAGF,OAAO,CAAC,gBAAgB,CAAC,EAF3B,SAAS,eAAA,EACT,iBAAiB,uBACU,CAAC;AAE9B,IAAM,eAAe,GAAG,EACvB,CAAC;AAEF,SAAS,SAAS,CAAC,QAAQ,EAAE,OAAO;IAClC,IAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;IAC3B,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,eAAe,EAAE,OAAO,CAAC,CAAC;IAEtD,IAAI,QAAQ,CAAC,QAAQ,KAAK,SAAS,EAAE;QACnC,MAAM,IAAI,SAAS,CAAC,8DAA8D,CAAC,CAAC;KACrF;IAED,QAAQ,CAAC,IAAI,GAAG,SAAS,CAAC,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AACtD,CAAC;AAED,iBAAiB,CAAC,uBAAuB,EAAE,SAAS,CAAC,CAAC;AACtD,iBAAiB,CAAC,kBAAkB,EAAE,SAAS,CAAC,CAAC;AACjD,iBAAiB,CAAC,uBAAuB,EAAE,SAAS,CAAC,CAAC;AACtD,iBAAiB,CAAC,iBAAiB,EAAE,SAAS,CAAC,CAAC","sourcesContent":["const hierarchy = require('@antv/hierarchy/lib');\nconst {\n  HIERARCHY,\n  registerTransform\n} = require('../../data-set');\n\nconst DEFAULT_OPTIONS = {\n};\n\nfunction transform(dataView, options) {\n  const root = dataView.root;\n  options = Object.assign({}, DEFAULT_OPTIONS, options);\n\n  if (dataView.dataType !== HIERARCHY) {\n    throw new TypeError('Invalid DataView: This transform is for Hierarchy data only!');\n  }\n\n  dataView.root = hierarchy.compactBox(root, options);\n}\n\nregisterTransform('hierarchy.compact-box', transform);\nregisterTransform('compact-box-tree', transform);\nregisterTransform('non-layered-tidy-tree', transform);\nregisterTransform('mindmap-logical', transform);\n"]}]}