{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\transform\\subset.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\transform\\subset.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["var registerTransform = require('../data-set').registerTransform;\r\nvar getFields = require('../util/option-parser').getFields;\r\nregisterTransform('subset', function (dataView, options) {\r\n    if (options === void 0) { options = {}; }\r\n    var startIndex = options.startRowIndex || 0;\r\n    var endIndex = options.endRowIndex || dataView.rows.length - 1;\r\n    var columns = getFields(options, dataView.getColumnNames());\r\n    dataView.rows = dataView.getSubset(startIndex, endIndex, columns);\r\n});\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\transform\\subset.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\transform\\subset.js"],"names":[],"mappings":"AACE,IAAA,4DAAiB,CACQ;AAEzB,IAAA,sDAAS,CAC0B;AAWrC,iBAAiB,CAAC,QAAQ,EAAE,UAAC,QAAQ,EAAE,OAAY;IAAZ,wBAAA,EAAA,YAAY;IACjD,IAAM,UAAU,GAAG,OAAO,CAAC,aAAa,IAAI,CAAC,CAAC;IAC9C,IAAM,QAAQ,GAAG,OAAO,CAAC,WAAW,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IACjE,IAAM,OAAO,GAAG,SAAS,CAAC,OAAO,EAAE,QAAQ,CAAC,cAAc,EAAE,CAAC,CAAC;IAC9D,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,SAAS,CAAC,UAAU,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;AACpE,CAAC,CAAC,CAAC","sourcesContent":["const {\n  registerTransform\n} = require('../data-set');\nconst {\n  getFields\n} = require('../util/option-parser');\n\n/*\n * options: {\n *   type: 'subset',\n *   startRowIndex: 0,\n *   endRowIndex: 1,\n *   fields: [],\n * }\n */\n\nregisterTransform('subset', (dataView, options = {}) => {\n  const startIndex = options.startRowIndex || 0;\n  const endIndex = options.endRowIndex || dataView.rows.length - 1;\n  const columns = getFields(options, dataView.getColumnNames());\n  dataView.rows = dataView.getSubset(startIndex, endIndex, columns);\n});\n"]}]}