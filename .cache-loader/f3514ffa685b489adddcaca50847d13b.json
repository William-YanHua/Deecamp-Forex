{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\dagre\\lib\\data\\list.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\dagre\\lib\\data\\list.js","mtime":1517934108000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["module.exports = List;\r\nfunction List() {\r\n    var sentinel = {};\r\n    sentinel._next = sentinel._prev = sentinel;\r\n    this._sentinel = sentinel;\r\n}\r\nList.prototype.dequeue = function () {\r\n    var sentinel = this._sentinel, entry = sentinel._prev;\r\n    if (entry !== sentinel) {\r\n        unlink(entry);\r\n        return entry;\r\n    }\r\n};\r\nList.prototype.enqueue = function (entry) {\r\n    var sentinel = this._sentinel;\r\n    if (entry._prev && entry._next) {\r\n        unlink(entry);\r\n    }\r\n    entry._next = sentinel._next;\r\n    sentinel._next._prev = entry;\r\n    sentinel._next = entry;\r\n    entry._prev = sentinel;\r\n};\r\nList.prototype.toString = function () {\r\n    var strs = [], sentinel = this._sentinel, curr = sentinel._prev;\r\n    while (curr !== sentinel) {\r\n        strs.push(JSON.stringify(curr, filterOutLinks));\r\n        curr = curr._prev;\r\n    }\r\n    return \"[\" + strs.join(\", \") + \"]\";\r\n};\r\nfunction unlink(entry) {\r\n    entry._prev._next = entry._next;\r\n    entry._next._prev = entry._prev;\r\n    delete entry._next;\r\n    delete entry._prev;\r\n}\r\nfunction filterOutLinks(k, v) {\r\n    if (k !== \"_next\" && k !== \"_prev\") {\r\n        return v;\r\n    }\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\dagre\\lib\\data\\list.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\dagre\\lib\\data\\list.js"],"names":[],"mappings":"AAKA,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;AAEtB,SAAS,IAAI;IACX,IAAI,QAAQ,GAAG,EAAE,CAAC;IAClB,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC;IAC3C,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAC5B,CAAC;AAED,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG;IACvB,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,EACzB,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;IAC3B,IAAI,KAAK,KAAK,QAAQ,EAAE;QACtB,MAAM,CAAC,KAAK,CAAC,CAAC;QACd,OAAO,KAAK,CAAC;KACd;AACH,CAAC,CAAC;AAEF,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,UAAS,KAAK;IACrC,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;IAC9B,IAAI,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,EAAE;QAC9B,MAAM,CAAC,KAAK,CAAC,CAAC;KACf;IACD,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;IAC7B,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;IAC7B,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC;AACzB,CAAC,CAAC;AAEF,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG;IACxB,IAAI,IAAI,GAAG,EAAE,EACT,QAAQ,GAAG,IAAI,CAAC,SAAS,EACzB,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC;IAC1B,OAAO,IAAI,KAAK,QAAQ,EAAE;QACxB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC,CAAC;QAChD,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;KACnB;IACD,OAAO,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;AACrC,CAAC,CAAC;AAEF,SAAS,MAAM,CAAC,KAAK;IACnB,KAAK,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAChC,KAAK,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAChC,OAAO,KAAK,CAAC,KAAK,CAAC;IACnB,OAAO,KAAK,CAAC,KAAK,CAAC;AACrB,CAAC;AAED,SAAS,cAAc,CAAC,CAAC,EAAE,CAAC;IAC1B,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,KAAK,OAAO,EAAE;QAClC,OAAO,CAAC,CAAC;KACV;AACH,CAAC","sourcesContent":["/*\n * Simple doubly linked list implementation derived from Cormen, et al.,\n * \"Introduction to Algorithms\".\n */\n\nmodule.exports = List;\n\nfunction List() {\n  var sentinel = {};\n  sentinel._next = sentinel._prev = sentinel;\n  this._sentinel = sentinel;\n}\n\nList.prototype.dequeue = function() {\n  var sentinel = this._sentinel,\n      entry = sentinel._prev;\n  if (entry !== sentinel) {\n    unlink(entry);\n    return entry;\n  }\n};\n\nList.prototype.enqueue = function(entry) {\n  var sentinel = this._sentinel;\n  if (entry._prev && entry._next) {\n    unlink(entry);\n  }\n  entry._next = sentinel._next;\n  sentinel._next._prev = entry;\n  sentinel._next = entry;\n  entry._prev = sentinel;\n};\n\nList.prototype.toString = function() {\n  var strs = [],\n      sentinel = this._sentinel,\n      curr = sentinel._prev;\n  while (curr !== sentinel) {\n    strs.push(JSON.stringify(curr, filterOutLinks));\n    curr = curr._prev;\n  }\n  return \"[\" + strs.join(\", \") + \"]\";\n};\n\nfunction unlink(entry) {\n  entry._prev._next = entry._next;\n  entry._next._prev = entry._prev;\n  delete entry._next;\n  delete entry._prev;\n}\n\nfunction filterOutLinks(k, v) {\n  if (k !== \"_next\" && k !== \"_prev\") {\n    return v;\n  }\n}\n"]}]}