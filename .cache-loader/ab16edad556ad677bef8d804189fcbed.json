{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/remark-parse/lib/tokenize/auto-link.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/remark-parse/lib/tokenize/auto-link.js","mtime":1516201759000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["'use strict';\nvar whitespace = require('is-whitespace-character');\nvar decode = require('parse-entities');\nvar locate = require('../locate/tag');\nmodule.exports = autoLink;\nautoLink.locator = locate;\nautoLink.notInLink = true;\nvar C_LT = '<';\nvar C_GT = '>';\nvar C_AT_SIGN = '@';\nvar C_SLASH = '/';\nvar MAILTO = 'mailto:';\nvar MAILTO_LENGTH = MAILTO.length;\nfunction autoLink(eat, value, silent) {\n    var self;\n    var subvalue;\n    var length;\n    var index;\n    var queue;\n    var character;\n    var hasAtCharacter;\n    var link;\n    var now;\n    var content;\n    var tokenizers;\n    var exit;\n    if (value.charAt(0) !== C_LT) {\n        return;\n    }\n    self = this;\n    subvalue = '';\n    length = value.length;\n    index = 0;\n    queue = '';\n    hasAtCharacter = false;\n    link = '';\n    index++;\n    subvalue = C_LT;\n    while (index < length) {\n        character = value.charAt(index);\n        if (whitespace(character) ||\n            character === C_GT ||\n            character === C_AT_SIGN ||\n            (character === ':' && value.charAt(index + 1) === C_SLASH)) {\n            break;\n        }\n        queue += character;\n        index++;\n    }\n    if (!queue) {\n        return;\n    }\n    link += queue;\n    queue = '';\n    character = value.charAt(index);\n    link += character;\n    index++;\n    if (character === C_AT_SIGN) {\n        hasAtCharacter = true;\n    }\n    else {\n        if (character !== ':' ||\n            value.charAt(index + 1) !== C_SLASH) {\n            return;\n        }\n        link += C_SLASH;\n        index++;\n    }\n    while (index < length) {\n        character = value.charAt(index);\n        if (whitespace(character) || character === C_GT) {\n            break;\n        }\n        queue += character;\n        index++;\n    }\n    character = value.charAt(index);\n    if (!queue || character !== C_GT) {\n        return;\n    }\n    if (silent) {\n        return true;\n    }\n    link += queue;\n    content = link;\n    subvalue += link + character;\n    now = eat.now();\n    now.column++;\n    now.offset++;\n    if (hasAtCharacter) {\n        if (link.slice(0, MAILTO_LENGTH).toLowerCase() === MAILTO) {\n            content = content.substr(MAILTO_LENGTH);\n            now.column += MAILTO_LENGTH;\n            now.offset += MAILTO_LENGTH;\n        }\n        else {\n            link = MAILTO + link;\n        }\n    }\n    tokenizers = self.inlineTokenizers;\n    self.inlineTokenizers = { text: tokenizers.text };\n    exit = self.enterLink();\n    content = self.tokenizeInline(content, now);\n    self.inlineTokenizers = tokenizers;\n    exit();\n    return eat(subvalue)({\n        type: 'link',\n        title: null,\n        url: decode(link, { nonTerminated: false }),\n        children: content\n    });\n}\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/remark-parse/lib/tokenize/auto-link.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/remark-parse/lib/tokenize/auto-link.js"],"names":[],"mappings":"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","sourcesContent":["'use strict';\n\nvar whitespace = require('is-whitespace-character');\nvar decode = require('parse-entities');\nvar locate = require('../locate/tag');\n\nmodule.exports = autoLink;\nautoLink.locator = locate;\nautoLink.notInLink = true;\n\nvar C_LT = '<';\nvar C_GT = '>';\nvar C_AT_SIGN = '@';\nvar C_SLASH = '/';\nvar MAILTO = 'mailto:';\nvar MAILTO_LENGTH = MAILTO.length;\n\n/* Tokenise a link. */\nfunction autoLink(eat, value, silent) {\n  var self;\n  var subvalue;\n  var length;\n  var index;\n  var queue;\n  var character;\n  var hasAtCharacter;\n  var link;\n  var now;\n  var content;\n  var tokenizers;\n  var exit;\n\n  if (value.charAt(0) !== C_LT) {\n    return;\n  }\n\n  self = this;\n  subvalue = '';\n  length = value.length;\n  index = 0;\n  queue = '';\n  hasAtCharacter = false;\n  link = '';\n\n  index++;\n  subvalue = C_LT;\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (\n      whitespace(character) ||\n      character === C_GT ||\n      character === C_AT_SIGN ||\n      (character === ':' && value.charAt(index + 1) === C_SLASH)\n    ) {\n      break;\n    }\n\n    queue += character;\n    index++;\n  }\n\n  if (!queue) {\n    return;\n  }\n\n  link += queue;\n  queue = '';\n\n  character = value.charAt(index);\n  link += character;\n  index++;\n\n  if (character === C_AT_SIGN) {\n    hasAtCharacter = true;\n  } else {\n    if (\n      character !== ':' ||\n      value.charAt(index + 1) !== C_SLASH\n    ) {\n      return;\n    }\n\n    link += C_SLASH;\n    index++;\n  }\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (whitespace(character) || character === C_GT) {\n      break;\n    }\n\n    queue += character;\n    index++;\n  }\n\n  character = value.charAt(index);\n\n  if (!queue || character !== C_GT) {\n    return;\n  }\n\n  /* istanbul ignore if - never used (yet) */\n  if (silent) {\n    return true;\n  }\n\n  link += queue;\n  content = link;\n  subvalue += link + character;\n  now = eat.now();\n  now.column++;\n  now.offset++;\n\n  if (hasAtCharacter) {\n    if (link.slice(0, MAILTO_LENGTH).toLowerCase() === MAILTO) {\n      content = content.substr(MAILTO_LENGTH);\n      now.column += MAILTO_LENGTH;\n      now.offset += MAILTO_LENGTH;\n    } else {\n      link = MAILTO + link;\n    }\n  }\n\n  /* Temporarily remove all tokenizers except text in autolinks. */\n  tokenizers = self.inlineTokenizers;\n  self.inlineTokenizers = {text: tokenizers.text};\n\n  exit = self.enterLink();\n\n  content = self.tokenizeInline(content, now);\n\n  self.inlineTokenizers = tokenizers;\n  exit();\n\n  return eat(subvalue)({\n    type: 'link',\n    title: null,\n    url: decode(link, {nonTerminated: false}),\n    children: content\n  });\n}\n"]}]}