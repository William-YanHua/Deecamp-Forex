{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/combo/dual-line/layer.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/combo/dual-line/layer.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { __assign, __extends } from \"tslib\";\nimport { Legend } from '@antv/component';\nimport { registerPlotType } from '../../base/global';\nimport ComboViewLayer from '../base';\nimport LineLayer from '../../plots/line/layer';\nimport { clone, deepMix, each } from '@antv/util';\nvar defaultLineConfig = {\n    lineSize: 2,\n    connectNull: true,\n    point: {\n        visible: false,\n        size: 3,\n        shape: 'circle',\n        style: {\n            stroke: '#fff',\n        },\n    },\n    label: {\n        visible: false,\n    },\n};\nvar defaultYAxisConfig = {\n    visible: true,\n    colorMapping: true,\n    grid: {\n        visible: true,\n    },\n    line: {\n        visible: false,\n    },\n    tickLine: {\n        visible: false,\n    },\n    label: {\n        visible: true,\n        autoHide: true,\n        autoRotate: false,\n    },\n    title: {\n        autoRotate: true,\n        visible: false,\n        offset: 12,\n    },\n};\nvar DualLineLayer = (function (_super) {\n    __extends(DualLineLayer, _super);\n    function DualLineLayer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'dualLine';\n        return _this;\n    }\n    DualLineLayer.getDefaultOptions = function () {\n        return deepMix({}, _super.getDefaultOptions.call(this), {\n            legend: {\n                visible: true,\n            },\n            yAxis: {\n                leftConfig: defaultYAxisConfig,\n                rightConfig: defaultYAxisConfig,\n            },\n            lineConfigs: [\n                deepMix({}, defaultLineConfig, { color: '#5B8FF9' }),\n                deepMix({}, defaultLineConfig, { color: '#e76c5e' }),\n            ],\n        });\n    };\n    DualLineLayer.prototype.init = function () {\n        var _this = this;\n        _super.prototype.init.call(this);\n        if (!this.checkData()) {\n            return;\n        }\n        var _a = this.options, data = _a.data, meta = _a.meta, xField = _a.xField, yField = _a.yField, xAxis = _a.xAxis, tooltip = _a.tooltip, lineConfigs = _a.lineConfigs, legend = _a.legend, events = _a.events;\n        this.colors = [lineConfigs[0].color, lineConfigs[1].color];\n        var yAxisGlobalConfig = this.getYAxisGlobalConfig();\n        var leftLine = this.createLayer(LineLayer, data[0], __assign({ meta: meta,\n            xField: xField, yField: yField[0], xAxis: {\n                visible: false,\n            }, yAxis: deepMix({}, yAxisGlobalConfig, this.yAxis(0), {\n                grid: {\n                    visible: false,\n                },\n                nice: true,\n            }), tooltip: {\n                visible: false,\n            }, events: events }, lineConfigs[0]));\n        leftLine.render();\n        var metaInfo = {};\n        metaInfo[yField[1]] = { ticks: this.getTicks() };\n        var rightLine = this.createLayer(LineLayer, data[1], __assign({ xField: xField, yField: yField[1], meta: deepMix({}, meta, metaInfo), serieField: yField[1], xAxis: xAxis, yAxis: deepMix({}, yAxisGlobalConfig, this.yAxis(1), {\n                position: 'right',\n                nice: false,\n            }), tooltip: deepMix({}, tooltip, {\n                showMarkers: false,\n                custom: {\n                    onChange: function (containerDom, ev) {\n                        _this.tooltip(containerDom, ev);\n                    },\n                },\n            }), events: events }, lineConfigs[1]));\n        rightLine.render();\n        if (legend.visible) {\n            this.customLegend();\n        }\n        this.adjustLayout();\n    };\n    DualLineLayer.prototype.tooltip = function (dom, ev) {\n        var unCheckedValue = this.getUnCheckedValue();\n        if (unCheckedValue.length === this.colors.length) {\n            dom.style.display = 'none';\n            return;\n        }\n        else {\n            dom.style.display = 'block';\n        }\n        var _a = this.options, yField = _a.yField, legend = _a.legend;\n        var originItem = clone(ev.items[0]);\n        var dataItemsA = this.getDataByXField(ev.title, 0)[0];\n        if (dataItemsA) {\n            ev.items.push(__assign(__assign({}, originItem), { mappingData: deepMix({}, originItem.mappingData, { _origin: dataItemsA }), data: dataItemsA, name: yField[0], value: dataItemsA[yField[0]], color: this.colors[0] }));\n        }\n        if (legend.visible) {\n            each(this.legends, function (legend, index) {\n                var item = legend.get('items')[0];\n                if (item.unchecked) {\n                    var spliceIndex = index === 0 ? 1 : 0;\n                    ev.items.splice(spliceIndex, 1);\n                }\n            });\n        }\n    };\n    DualLineLayer.prototype.customLegend = function () {\n        var _this = this;\n        var _a = this.options, yField = _a.yField, legend = _a.legend;\n        var colors = this.colors;\n        var container = this.container.addGroup();\n        var legendCfg = legend;\n        each(this.geomLayers, function (line, index) {\n            var markerCfg = deepMix({}, {\n                symbol: 'circle',\n                style: {\n                    r: 4,\n                    fill: colors[index],\n                },\n            }, legendCfg.marker);\n            var items = [\n                {\n                    name: yField[index],\n                    unchecked: false,\n                    marker: markerCfg,\n                },\n            ];\n            var legend = new Legend.Category({\n                id: _this.type,\n                container: container,\n                x: 0,\n                y: 0,\n                items: items,\n                updateAutoRender: true,\n                itemBackground: null,\n                itemName: legendCfg.text,\n            });\n            legend.init();\n            legend.render();\n            _this.legends.push(legend);\n        });\n        each(this.geomLayers, function (line, index) {\n            _this.legendFilter(index);\n        });\n    };\n    return DualLineLayer;\n}(ComboViewLayer));\nexport default DualLineLayer;\nregisterPlotType('dualLine', DualLineLayer);\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/combo/dual-line/layer.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/combo/dual-line/layer.js"],"names":[],"mappings":"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","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { Legend } from '@antv/component';\nimport { registerPlotType } from '../../base/global';\nimport ComboViewLayer from '../base';\nimport LineLayer from '../../plots/line/layer';\nimport { clone, deepMix, each } from '@antv/util';\nvar defaultLineConfig = {\n    lineSize: 2,\n    connectNull: true,\n    point: {\n        visible: false,\n        size: 3,\n        shape: 'circle',\n        style: {\n            stroke: '#fff',\n        },\n    },\n    label: {\n        visible: false,\n    },\n};\nvar defaultYAxisConfig = {\n    visible: true,\n    colorMapping: true,\n    grid: {\n        visible: true,\n    },\n    line: {\n        visible: false,\n    },\n    tickLine: {\n        visible: false,\n    },\n    label: {\n        visible: true,\n        autoHide: true,\n        autoRotate: false,\n    },\n    title: {\n        autoRotate: true,\n        visible: false,\n        offset: 12,\n    },\n};\nvar DualLineLayer = /** @class */ (function (_super) {\n    __extends(DualLineLayer, _super);\n    function DualLineLayer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'dualLine';\n        return _this;\n    }\n    DualLineLayer.getDefaultOptions = function () {\n        return deepMix({}, _super.getDefaultOptions.call(this), {\n            legend: {\n                visible: true,\n            },\n            yAxis: {\n                leftConfig: defaultYAxisConfig,\n                rightConfig: defaultYAxisConfig,\n            },\n            // 自古红蓝出cp....\n            lineConfigs: [\n                deepMix({}, defaultLineConfig, { color: '#5B8FF9' }),\n                deepMix({}, defaultLineConfig, { color: '#e76c5e' }),\n            ],\n        });\n    };\n    DualLineLayer.prototype.init = function () {\n        var _this = this;\n        _super.prototype.init.call(this);\n        if (!this.checkData()) {\n            return;\n        }\n        var _a = this.options, data = _a.data, meta = _a.meta, xField = _a.xField, yField = _a.yField, xAxis = _a.xAxis, tooltip = _a.tooltip, lineConfigs = _a.lineConfigs, legend = _a.legend, events = _a.events;\n        this.colors = [lineConfigs[0].color, lineConfigs[1].color];\n        var yAxisGlobalConfig = this.getYAxisGlobalConfig();\n        //draw first line\n        var leftLine = this.createLayer(LineLayer, data[0], __assign({ meta: meta,\n            xField: xField, yField: yField[0], xAxis: {\n                visible: false,\n            }, yAxis: deepMix({}, yAxisGlobalConfig, this.yAxis(0), {\n                grid: {\n                    visible: false,\n                },\n                nice: true,\n            }), tooltip: {\n                visible: false,\n            }, events: events }, lineConfigs[0]));\n        leftLine.render();\n        //draw second line\n        var metaInfo = {};\n        metaInfo[yField[1]] = { ticks: this.getTicks() };\n        var rightLine = this.createLayer(LineLayer, data[1], __assign({ xField: xField, yField: yField[1], meta: deepMix({}, meta, metaInfo), serieField: yField[1], xAxis: xAxis, yAxis: deepMix({}, yAxisGlobalConfig, this.yAxis(1), {\n                position: 'right',\n                nice: false,\n            }), tooltip: deepMix({}, tooltip, {\n                showMarkers: false,\n                custom: {\n                    onChange: function (containerDom, ev) {\n                        _this.tooltip(containerDom, ev);\n                    },\n                },\n            }), events: events }, lineConfigs[1]));\n        rightLine.render();\n        if (legend.visible) {\n            this.customLegend();\n        }\n        this.adjustLayout();\n    };\n    DualLineLayer.prototype.tooltip = function (dom, ev) {\n        var unCheckedValue = this.getUnCheckedValue();\n        // 如果legend全部是unchecked的状态，tooltip不显示\n        if (unCheckedValue.length === this.colors.length) {\n            dom.style.display = 'none';\n            return;\n        }\n        else {\n            dom.style.display = 'block';\n        }\n        var _a = this.options, yField = _a.yField, legend = _a.legend;\n        var originItem = clone(ev.items[0]);\n        var dataItemsA = this.getDataByXField(ev.title, 0)[0];\n        if (dataItemsA) {\n            ev.items.push(__assign(__assign({}, originItem), { mappingData: deepMix({}, originItem.mappingData, { _origin: dataItemsA }), data: dataItemsA, name: yField[0], value: dataItemsA[yField[0]], color: this.colors[0] }));\n        }\n        if (legend.visible) {\n            each(this.legends, function (legend, index) {\n                var item = legend.get('items')[0];\n                if (item.unchecked) {\n                    var spliceIndex = index === 0 ? 1 : 0;\n                    ev.items.splice(spliceIndex, 1);\n                }\n            });\n        }\n    };\n    DualLineLayer.prototype.customLegend = function () {\n        var _this = this;\n        var _a = this.options, yField = _a.yField, legend = _a.legend;\n        var colors = this.colors;\n        var container = this.container.addGroup();\n        var legendCfg = legend;\n        each(this.geomLayers, function (line, index) {\n            var markerCfg = deepMix({}, {\n                symbol: 'circle',\n                style: {\n                    r: 4,\n                    fill: colors[index],\n                },\n            }, legendCfg.marker);\n            var items = [\n                {\n                    name: yField[index],\n                    unchecked: false,\n                    marker: markerCfg,\n                },\n            ];\n            var legend = new Legend.Category({\n                id: _this.type,\n                container: container,\n                x: 0,\n                y: 0,\n                items: items,\n                updateAutoRender: true,\n                itemBackground: null,\n                itemName: legendCfg.text,\n            });\n            legend.init();\n            legend.render();\n            _this.legends.push(legend);\n        });\n        // 使用legend做图层筛选\n        each(this.geomLayers, function (line, index) {\n            _this.legendFilter(index);\n        });\n    };\n    return DualLineLayer;\n}(ComboViewLayer));\nexport default DualLineLayer;\nregisterPlotType('dualLine', DualLineLayer);\n//# sourceMappingURL=layer.js.map"]}]}