{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/d3-geo-projection/src/quantize.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/d3-geo-projection/src/quantize.js","mtime":1490982737000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["export default function (input, digits) {\n    if (!(0 <= (digits = +digits) && digits <= 20))\n        throw new Error(\"invalid digits\");\n    function quantizePoint(input) {\n        var n = input.length, i = 2, output = new Array(n);\n        output[0] = +input[0].toFixed(digits);\n        output[1] = +input[1].toFixed(digits);\n        while (i < n)\n            output[i] = input[i], ++i;\n        return output;\n    }\n    function quantizePoints(input) {\n        return input.map(quantizePoint);\n    }\n    function quantizePolygon(input) {\n        return input.map(quantizePoints);\n    }\n    function quantizeGeometry(input) {\n        if (input == null)\n            return input;\n        var output;\n        switch (input.type) {\n            case \"GeometryCollection\":\n                output = { type: \"GeometryCollection\", geometries: input.geometries.map(quantizeGeometry) };\n                break;\n            case \"Point\":\n                output = { type: \"Point\", coordinates: quantizePoint(input.coordinates) };\n                break;\n            case \"MultiPoint\":\n            case \"LineString\":\n                output = { type: input.type, coordinates: quantizePoints(input.coordinates) };\n                break;\n            case \"MultiLineString\":\n            case \"Polygon\":\n                output = { type: input.type, coordinates: quantizePolygon(input.coordinates) };\n                break;\n            case \"MultiPolygon\":\n                output = { type: \"MultiPolygon\", coordinates: input.coordinates.map(quantizePolygon) };\n                break;\n            default: return input;\n        }\n        if (input.bbox != null)\n            output.bbox = input.bbox;\n        return output;\n    }\n    function quantizeFeature(input) {\n        var output = { type: \"Feature\", properties: input.properties, geometry: quantizeGeometry(input.geometry) };\n        if (input.id != null)\n            output.id = input.id;\n        if (input.bbox != null)\n            output.bbox = input.bbox;\n        return output;\n    }\n    if (input != null)\n        switch (input.type) {\n            case \"Feature\": return quantizeFeature(input);\n            case \"FeatureCollection\": {\n                var output = { type: \"FeatureCollection\", features: input.features.map(quantizeFeature) };\n                if (input.bbox != null)\n                    output.bbox = input.bbox;\n                return output;\n            }\n            default: return quantizeGeometry(input);\n        }\n    return input;\n}\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/d3-geo-projection/src/quantize.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/d3-geo-projection/src/quantize.js"],"names":[],"mappings":"AAAA,MAAM,CAAC,OAAO,WAAU,KAAK,EAAE,MAAM;IACnC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,MAAM,IAAI,EAAE,CAAC;QAAE,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;IAElF,SAAS,aAAa,CAAC,KAAK;QAC1B,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QACnD,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACtC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACtC,OAAO,CAAC,GAAG,CAAC;YAAE,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACxC,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,SAAS,cAAc,CAAC,KAAK;QAC3B,OAAO,KAAK,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IAClC,CAAC;IAED,SAAS,eAAe,CAAC,KAAK;QAC5B,OAAO,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;IACnC,CAAC;IAED,SAAS,gBAAgB,CAAC,KAAK;QAC7B,IAAI,KAAK,IAAI,IAAI;YAAE,OAAO,KAAK,CAAC;QAChC,IAAI,MAAM,CAAC;QACX,QAAQ,KAAK,CAAC,IAAI,EAAE;YAClB,KAAK,oBAAoB;gBAAE,MAAM,GAAG,EAAC,IAAI,EAAE,oBAAoB,EAAE,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,gBAAgB,CAAC,EAAC,CAAC;gBAAC,MAAM;YAC5H,KAAK,OAAO;gBAAE,MAAM,GAAG,EAAC,IAAI,EAAE,OAAO,EAAE,WAAW,EAAE,aAAa,CAAC,KAAK,CAAC,WAAW,CAAC,EAAC,CAAC;gBAAC,MAAM;YAC7F,KAAK,YAAY,CAAC;YAAC,KAAK,YAAY;gBAAE,MAAM,GAAG,EAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,WAAW,EAAE,cAAc,CAAC,KAAK,CAAC,WAAW,CAAC,EAAC,CAAC;gBAAC,MAAM;YACzH,KAAK,iBAAiB,CAAC;YAAC,KAAK,SAAS;gBAAE,MAAM,GAAG,EAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,WAAW,EAAE,eAAe,CAAC,KAAK,CAAC,WAAW,CAAC,EAAC,CAAC;gBAAC,MAAM;YAC5H,KAAK,cAAc;gBAAE,MAAM,GAAG,EAAC,IAAI,EAAE,cAAc,EAAE,WAAW,EAAE,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,eAAe,CAAC,EAAC,CAAC;gBAAC,MAAM;YACjH,OAAO,CAAC,CAAC,OAAO,KAAK,CAAC;SACvB;QACD,IAAI,KAAK,CAAC,IAAI,IAAI,IAAI;YAAE,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QACjD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,SAAS,eAAe,CAAC,KAAK;QAC5B,IAAI,MAAM,GAAG,EAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,UAAU,EAAE,QAAQ,EAAE,gBAAgB,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAC,CAAC;QACzG,IAAI,KAAK,CAAC,EAAE,IAAI,IAAI;YAAE,MAAM,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;QAC3C,IAAI,KAAK,CAAC,IAAI,IAAI,IAAI;YAAE,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QACjD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,IAAI,KAAK,IAAI,IAAI;QAAE,QAAQ,KAAK,CAAC,IAAI,EAAE;YACrC,KAAK,SAAS,CAAC,CAAC,OAAO,eAAe,CAAC,KAAK,CAAC,CAAC;YAC9C,KAAK,mBAAmB,CAAC,CAAC;gBACxB,IAAI,MAAM,GAAG,EAAC,IAAI,EAAE,mBAAmB,EAAE,QAAQ,EAAE,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,eAAe,CAAC,EAAC,CAAC;gBACxF,IAAI,KAAK,CAAC,IAAI,IAAI,IAAI;oBAAE,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;gBACjD,OAAO,MAAM,CAAC;aACf;YACD,OAAO,CAAC,CAAC,OAAO,gBAAgB,CAAC,KAAK,CAAC,CAAC;SACzC;IAED,OAAO,KAAK,CAAC;AACf,CAAC","sourcesContent":["export default function(input, digits) {\n  if (!(0 <= (digits = +digits) && digits <= 20)) throw new Error(\"invalid digits\");\n\n  function quantizePoint(input) {\n    var n = input.length, i = 2, output = new Array(n);\n    output[0] = +input[0].toFixed(digits);\n    output[1] = +input[1].toFixed(digits);\n    while (i < n) output[i] = input[i], ++i;\n    return output;\n  }\n\n  function quantizePoints(input) {\n    return input.map(quantizePoint);\n  }\n\n  function quantizePolygon(input) {\n    return input.map(quantizePoints);\n  }\n\n  function quantizeGeometry(input) {\n    if (input == null) return input;\n    var output;\n    switch (input.type) {\n      case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(quantizeGeometry)}; break;\n      case \"Point\": output = {type: \"Point\", coordinates: quantizePoint(input.coordinates)}; break;\n      case \"MultiPoint\": case \"LineString\": output = {type: input.type, coordinates: quantizePoints(input.coordinates)}; break;\n      case \"MultiLineString\": case \"Polygon\": output = {type: input.type, coordinates: quantizePolygon(input.coordinates)}; break;\n      case \"MultiPolygon\": output = {type: \"MultiPolygon\", coordinates: input.coordinates.map(quantizePolygon)}; break;\n      default: return input;\n    }\n    if (input.bbox != null) output.bbox = input.bbox;\n    return output;\n  }\n\n  function quantizeFeature(input) {\n    var output = {type: \"Feature\", properties: input.properties, geometry: quantizeGeometry(input.geometry)};\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    return output;\n  }\n\n  if (input != null) switch (input.type) {\n    case \"Feature\": return quantizeFeature(input);\n    case \"FeatureCollection\": {\n      var output = {type: \"FeatureCollection\", features: input.features.map(quantizeFeature)};\n      if (input.bbox != null) output.bbox = input.bbox;\n      return output;\n    }\n    default: return quantizeGeometry(input);\n  }\n\n  return input;\n}\n"]}]}