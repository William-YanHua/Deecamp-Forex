{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-base\\lib\\bbox\\path.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-base\\lib\\bbox\\path.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar quadratic_1 = require(\"@antv/g-math/lib/quadratic\");\r\nvar cubic_1 = require(\"@antv/g-math/lib/cubic\");\r\nvar arc_1 = require(\"@antv/g-math/lib/arc\");\r\nvar path_2_segments_1 = require(\"@antv/path-util/lib/path-2-segments\");\r\nvar is_number_equal_1 = require(\"@antv/util/lib/is-number-equal\");\r\nvar util_1 = require(\"./util\");\r\nfunction getPathBox(segments, lineWidth) {\r\n    var xArr = [];\r\n    var yArr = [];\r\n    var segmentsWithAngle = [];\r\n    for (var i = 0; i < segments.length; i++) {\r\n        var segment = segments[i];\r\n        var currentPoint = segment.currentPoint, params = segment.params, prePoint = segment.prePoint;\r\n        var box = void 0;\r\n        switch (segment.command) {\r\n            case 'Q':\r\n                box = quadratic_1.default.box(prePoint[0], prePoint[1], params[1], params[2], params[3], params[4]);\r\n                break;\r\n            case 'C':\r\n                box = cubic_1.default.box(prePoint[0], prePoint[1], params[1], params[2], params[3], params[4], params[5], params[6]);\r\n                break;\r\n            case 'A':\r\n                var arcParams = segment.arcParams;\r\n                box = arc_1.default.box(arcParams.cx, arcParams.cy, arcParams.rx, arcParams.ry, arcParams.xRotation, arcParams.startAngle, arcParams.endAngle);\r\n                break;\r\n            default:\r\n                xArr.push(currentPoint[0]);\r\n                yArr.push(currentPoint[1]);\r\n                break;\r\n        }\r\n        if (box) {\r\n            segment.box = box;\r\n            xArr.push(box.x, box.x + box.width);\r\n            yArr.push(box.y, box.y + box.height);\r\n        }\r\n        if (lineWidth && (segment.command === 'L' || segment.command === 'M') && segment.prePoint && segment.nextPoint) {\r\n            segmentsWithAngle.push(segment);\r\n        }\r\n    }\r\n    xArr = xArr.filter(function (item) { return !Number.isNaN(item); });\r\n    yArr = yArr.filter(function (item) { return !Number.isNaN(item); });\r\n    var minX = Math.min.apply(null, xArr);\r\n    var minY = Math.min.apply(null, yArr);\r\n    var maxX = Math.max.apply(null, xArr);\r\n    var maxY = Math.max.apply(null, yArr);\r\n    if (segmentsWithAngle.length === 0) {\r\n        return {\r\n            x: minX,\r\n            y: minY,\r\n            width: maxX - minX,\r\n            height: maxY - minY,\r\n        };\r\n    }\r\n    for (var i = 0; i < segmentsWithAngle.length; i++) {\r\n        var segment = segmentsWithAngle[i];\r\n        var currentPoint = segment.currentPoint;\r\n        var extra = void 0;\r\n        if (currentPoint[0] === minX) {\r\n            extra = getExtraFromSegmentWithAngle(segment, lineWidth);\r\n            minX = minX - extra.xExtra;\r\n        }\r\n        else if (currentPoint[0] === maxX) {\r\n            extra = getExtraFromSegmentWithAngle(segment, lineWidth);\r\n            maxX = maxX + extra.xExtra;\r\n        }\r\n        if (currentPoint[1] === minY) {\r\n            extra = getExtraFromSegmentWithAngle(segment, lineWidth);\r\n            minY = minY - extra.yExtra;\r\n        }\r\n        else if (currentPoint[1] === maxY) {\r\n            extra = getExtraFromSegmentWithAngle(segment, lineWidth);\r\n            maxY = maxY + extra.yExtra;\r\n        }\r\n    }\r\n    return {\r\n        x: minX,\r\n        y: minY,\r\n        width: maxX - minX,\r\n        height: maxY - minY,\r\n    };\r\n}\r\nfunction getExtraFromSegmentWithAngle(segment, lineWidth) {\r\n    var prePoint = segment.prePoint, currentPoint = segment.currentPoint, nextPoint = segment.nextPoint;\r\n    var currentAndPre = Math.pow(currentPoint[0] - prePoint[0], 2) + Math.pow(currentPoint[1] - prePoint[1], 2);\r\n    var currentAndNext = Math.pow(currentPoint[0] - nextPoint[0], 2) + Math.pow(currentPoint[1] - nextPoint[1], 2);\r\n    var preAndNext = Math.pow(prePoint[0] - nextPoint[0], 2) + Math.pow(prePoint[1] - nextPoint[1], 2);\r\n    var currentAngle = Math.acos((currentAndPre + currentAndNext - preAndNext) / (2 * Math.sqrt(currentAndPre) * Math.sqrt(currentAndNext)));\r\n    if (!currentAngle || Math.sin(currentAngle) === 0 || is_number_equal_1.default(currentAngle, 0)) {\r\n        return {\r\n            xExtra: 0,\r\n            yExtra: 0,\r\n        };\r\n    }\r\n    var xAngle = Math.abs(Math.atan2(nextPoint[1] - currentPoint[1], nextPoint[0] - currentPoint[0]));\r\n    var yAngle = Math.abs(Math.atan2(nextPoint[0] - currentPoint[0], nextPoint[1] - currentPoint[1]));\r\n    xAngle = xAngle > Math.PI / 2 ? Math.PI - xAngle : xAngle;\r\n    yAngle = yAngle > Math.PI / 2 ? Math.PI - yAngle : yAngle;\r\n    var extra = {\r\n        xExtra: Math.cos(currentAngle / 2 - xAngle) * ((lineWidth / 2) * (1 / Math.sin(currentAngle / 2))) - lineWidth / 2 || 0,\r\n        yExtra: Math.cos(yAngle - currentAngle / 2) * ((lineWidth / 2) * (1 / Math.sin(currentAngle / 2))) - lineWidth / 2 || 0,\r\n    };\r\n    return extra;\r\n}\r\nfunction default_1(shape) {\r\n    var attrs = shape.attr();\r\n    var path = attrs.path, stroke = attrs.stroke;\r\n    var lineWidth = stroke ? attrs.lineWidth : 0;\r\n    var segments = shape.get('segments') || path_2_segments_1.default(path);\r\n    var _a = getPathBox(segments, lineWidth), x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    var bbox = {\r\n        minX: x,\r\n        minY: y,\r\n        maxX: x + width,\r\n        maxY: y + height,\r\n    };\r\n    bbox = util_1.mergeArrowBBox(shape, bbox);\r\n    return {\r\n        x: bbox.minX,\r\n        y: bbox.minY,\r\n        width: bbox.maxX - bbox.minX,\r\n        height: bbox.maxY - bbox.minY,\r\n    };\r\n}\r\nexports.default = default_1;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-base\\lib\\bbox\\path.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-base\\lib\\bbox\\path.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;AACb,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,IAAI,WAAW,GAAG,OAAO,CAAC,4BAA4B,CAAC,CAAC;AACxD,IAAI,OAAO,GAAG,OAAO,CAAC,wBAAwB,CAAC,CAAC;AAChD,IAAI,KAAK,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC;AAC5C,IAAI,iBAAiB,GAAG,OAAO,CAAC,qCAAqC,CAAC,CAAC;AACvE,IAAI,iBAAiB,GAAG,OAAO,CAAC,gCAAgC,CAAC,CAAC;AAClE,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,SAAS,UAAU,CAAC,QAAQ,EAAE,SAAS;IACnC,IAAI,IAAI,GAAG,EAAE,CAAC;IACd,IAAI,IAAI,GAAG,EAAE,CAAC;IACd,IAAI,iBAAiB,GAAG,EAAE,CAAC;IAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACtC,IAAI,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC1B,IAAI,YAAY,GAAG,OAAO,CAAC,YAAY,EAAE,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QAC9F,IAAI,GAAG,GAAG,KAAK,CAAC,CAAC;QACjB,QAAQ,OAAO,CAAC,OAAO,EAAE;YACrB,KAAK,GAAG;gBACJ,GAAG,GAAG,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpG,MAAM;YACV,KAAK,GAAG;gBACJ,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtH,MAAM;YACV,KAAK,GAAG;gBACJ,IAAI,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;gBAClC,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE,EAAE,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,UAAU,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC;gBAC/I,MAAM;YACV;gBACI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3B,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3B,MAAM;SACb;QACD,IAAI,GAAG,EAAE;YACL,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;YAClB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC;YACpC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;SACxC;QACD,IAAI,SAAS,IAAI,CAAC,OAAO,CAAC,OAAO,KAAK,GAAG,IAAI,OAAO,CAAC,OAAO,KAAK,GAAG,CAAC,IAAI,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,SAAS,EAAE;YAC5G,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACnC;KACJ;IAGD,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpE,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpE,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACtC,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACtC,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACtC,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACtC,IAAI,iBAAiB,CAAC,MAAM,KAAK,CAAC,EAAE;QAChC,OAAO;YACH,CAAC,EAAE,IAAI;YACP,CAAC,EAAE,IAAI;YACP,KAAK,EAAE,IAAI,GAAG,IAAI;YAClB,MAAM,EAAE,IAAI,GAAG,IAAI;SACtB,CAAC;KACL;IACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,iBAAiB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAC/C,IAAI,OAAO,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;QACnC,IAAI,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;QACxC,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC;QACnB,IAAI,YAAY,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;YAC1B,KAAK,GAAG,4BAA4B,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;YACzD,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC;SAC9B;aACI,IAAI,YAAY,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;YAC/B,KAAK,GAAG,4BAA4B,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;YACzD,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC;SAC9B;QACD,IAAI,YAAY,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;YAC1B,KAAK,GAAG,4BAA4B,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;YACzD,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC;SAC9B;aACI,IAAI,YAAY,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;YAC/B,KAAK,GAAG,4BAA4B,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;YACzD,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC;SAC9B;KACJ;IACD,OAAO;QACH,CAAC,EAAE,IAAI;QACP,CAAC,EAAE,IAAI;QACP,KAAK,EAAE,IAAI,GAAG,IAAI;QAClB,MAAM,EAAE,IAAI,GAAG,IAAI;KACtB,CAAC;AACN,CAAC;AACD,SAAS,4BAA4B,CAAC,OAAO,EAAE,SAAS;IACpD,IAAI,QAAQ,GAAG,OAAO,CAAC,QAAQ,EAAE,YAAY,GAAG,OAAO,CAAC,YAAY,EAAE,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;IACpG,IAAI,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5G,IAAI,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/G,IAAI,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAEnG,IAAI,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,aAAa,GAAG,cAAc,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IAGzI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,iBAAiB,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC,EAAE;QAC7F,OAAO;YACH,MAAM,EAAE,CAAC;YACT,MAAM,EAAE,CAAC;SACZ,CAAC;KACL;IACD,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClG,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAElG,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;IAC1D,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;IAG1D,IAAI,KAAK,GAAG;QAER,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,YAAY,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC,IAAI,CAAC;QAEvH,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC,IAAI,CAAC;KAC1H,CAAC;IACF,OAAO,KAAK,CAAC;AACjB,CAAC;AACD,SAAS,SAAS,CAAC,KAAK;IACpB,IAAI,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;IACzB,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;IAC7C,IAAI,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C,IAAI,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACxE,IAAI,EAAE,GAAG,UAAU,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,KAAK,GAAG,EAAE,CAAC,KAAK,EAAE,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC;IACnG,IAAI,IAAI,GAAG;QACP,IAAI,EAAE,CAAC;QACP,IAAI,EAAE,CAAC;QACP,IAAI,EAAE,CAAC,GAAG,KAAK;QACf,IAAI,EAAE,CAAC,GAAG,MAAM;KACnB,CAAC;IACF,IAAI,GAAG,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IAC1C,OAAO;QACH,CAAC,EAAE,IAAI,CAAC,IAAI;QACZ,CAAC,EAAE,IAAI,CAAC,IAAI;QACZ,KAAK,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI;QAC5B,MAAM,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI;KAChC,CAAC;AACN,CAAC;AACD,OAAO,CAAC,OAAO,GAAG,SAAS,CAAC","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar quadratic_1 = require(\"@antv/g-math/lib/quadratic\");\nvar cubic_1 = require(\"@antv/g-math/lib/cubic\");\nvar arc_1 = require(\"@antv/g-math/lib/arc\");\nvar path_2_segments_1 = require(\"@antv/path-util/lib/path-2-segments\");\nvar is_number_equal_1 = require(\"@antv/util/lib/is-number-equal\");\nvar util_1 = require(\"./util\");\nfunction getPathBox(segments, lineWidth) {\n    var xArr = [];\n    var yArr = [];\n    var segmentsWithAngle = [];\n    for (var i = 0; i < segments.length; i++) {\n        var segment = segments[i];\n        var currentPoint = segment.currentPoint, params = segment.params, prePoint = segment.prePoint;\n        var box = void 0;\n        switch (segment.command) {\n            case 'Q':\n                box = quadratic_1.default.box(prePoint[0], prePoint[1], params[1], params[2], params[3], params[4]);\n                break;\n            case 'C':\n                box = cubic_1.default.box(prePoint[0], prePoint[1], params[1], params[2], params[3], params[4], params[5], params[6]);\n                break;\n            case 'A':\n                var arcParams = segment.arcParams;\n                box = arc_1.default.box(arcParams.cx, arcParams.cy, arcParams.rx, arcParams.ry, arcParams.xRotation, arcParams.startAngle, arcParams.endAngle);\n                break;\n            default:\n                xArr.push(currentPoint[0]);\n                yArr.push(currentPoint[1]);\n                break;\n        }\n        if (box) {\n            segment.box = box;\n            xArr.push(box.x, box.x + box.width);\n            yArr.push(box.y, box.y + box.height);\n        }\n        if (lineWidth && (segment.command === 'L' || segment.command === 'M') && segment.prePoint && segment.nextPoint) {\n            segmentsWithAngle.push(segment);\n        }\n    }\n    // bbox calculation should ignore NaN for path attribute\n    // ref: https://github.com/antvis/g/issues/210\n    xArr = xArr.filter(function (item) { return !Number.isNaN(item); });\n    yArr = yArr.filter(function (item) { return !Number.isNaN(item); });\n    var minX = Math.min.apply(null, xArr);\n    var minY = Math.min.apply(null, yArr);\n    var maxX = Math.max.apply(null, xArr);\n    var maxY = Math.max.apply(null, yArr);\n    if (segmentsWithAngle.length === 0) {\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n    for (var i = 0; i < segmentsWithAngle.length; i++) {\n        var segment = segmentsWithAngle[i];\n        var currentPoint = segment.currentPoint;\n        var extra = void 0;\n        if (currentPoint[0] === minX) {\n            extra = getExtraFromSegmentWithAngle(segment, lineWidth);\n            minX = minX - extra.xExtra;\n        }\n        else if (currentPoint[0] === maxX) {\n            extra = getExtraFromSegmentWithAngle(segment, lineWidth);\n            maxX = maxX + extra.xExtra;\n        }\n        if (currentPoint[1] === minY) {\n            extra = getExtraFromSegmentWithAngle(segment, lineWidth);\n            minY = minY - extra.yExtra;\n        }\n        else if (currentPoint[1] === maxY) {\n            extra = getExtraFromSegmentWithAngle(segment, lineWidth);\n            maxY = maxY + extra.yExtra;\n        }\n    }\n    return {\n        x: minX,\n        y: minY,\n        width: maxX - minX,\n        height: maxY - minY,\n    };\n}\nfunction getExtraFromSegmentWithAngle(segment, lineWidth) {\n    var prePoint = segment.prePoint, currentPoint = segment.currentPoint, nextPoint = segment.nextPoint;\n    var currentAndPre = Math.pow(currentPoint[0] - prePoint[0], 2) + Math.pow(currentPoint[1] - prePoint[1], 2);\n    var currentAndNext = Math.pow(currentPoint[0] - nextPoint[0], 2) + Math.pow(currentPoint[1] - nextPoint[1], 2);\n    var preAndNext = Math.pow(prePoint[0] - nextPoint[0], 2) + Math.pow(prePoint[1] - nextPoint[1], 2);\n    // 以 currentPoint 为顶点的夹角\n    var currentAngle = Math.acos((currentAndPre + currentAndNext - preAndNext) / (2 * Math.sqrt(currentAndPre) * Math.sqrt(currentAndNext)));\n    // 夹角为空、 0 或 PI 时，不需要计算夹角处的额外宽度\n    // 注意: 由于计算精度问题，夹角为 0 的情况计算出来的角度可能是一个很小的值，还需要判断其与 0 是否近似相等\n    if (!currentAngle || Math.sin(currentAngle) === 0 || is_number_equal_1.default(currentAngle, 0)) {\n        return {\n            xExtra: 0,\n            yExtra: 0,\n        };\n    }\n    var xAngle = Math.abs(Math.atan2(nextPoint[1] - currentPoint[1], nextPoint[0] - currentPoint[0]));\n    var yAngle = Math.abs(Math.atan2(nextPoint[0] - currentPoint[0], nextPoint[1] - currentPoint[1]));\n    // 将夹角转为锐角\n    xAngle = xAngle > Math.PI / 2 ? Math.PI - xAngle : xAngle;\n    yAngle = yAngle > Math.PI / 2 ? Math.PI - yAngle : yAngle;\n    // 这里不考虑在水平和垂直方向的投影，直接使用最大差值\n    // 由于上层统一加减了二分之一线宽，这里需要进行弥补\n    var extra = {\n        // 水平方向投影\n        xExtra: Math.cos(currentAngle / 2 - xAngle) * ((lineWidth / 2) * (1 / Math.sin(currentAngle / 2))) - lineWidth / 2 || 0,\n        // 垂直方向投影\n        yExtra: Math.cos(yAngle - currentAngle / 2) * ((lineWidth / 2) * (1 / Math.sin(currentAngle / 2))) - lineWidth / 2 || 0,\n    };\n    return extra;\n}\nfunction default_1(shape) {\n    var attrs = shape.attr();\n    var path = attrs.path, stroke = attrs.stroke;\n    var lineWidth = stroke ? attrs.lineWidth : 0; // 只有有 stroke 时，lineWidth 才生效\n    var segments = shape.get('segments') || path_2_segments_1.default(path);\n    var _a = getPathBox(segments, lineWidth), x = _a.x, y = _a.y, width = _a.width, height = _a.height;\n    var bbox = {\n        minX: x,\n        minY: y,\n        maxX: x + width,\n        maxY: y + height,\n    };\n    bbox = util_1.mergeArrowBBox(shape, bbox);\n    return {\n        x: bbox.minX,\n        y: bbox.minY,\n        width: bbox.maxX - bbox.minX,\n        height: bbox.maxY - bbox.minY,\n    };\n}\nexports.default = default_1;\n//# sourceMappingURL=path.js.map"]}]}