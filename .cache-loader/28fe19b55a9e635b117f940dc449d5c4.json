{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g\\lib\\core\\mixin\\transform.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g\\lib\\core\\mixin\\transform.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["var Util = require('../../util/index');\r\nfunction isUnchanged(m) {\r\n    return m[0] === 1 && m[1] === 0 && m[3] === 0 && m[4] === 1 && m[6] === 0 && m[7] === 0;\r\n}\r\nfunction isScale(m) {\r\n    return m[1] === 0 && m[3] === 0 && m[6] === 0 && m[7] === 0;\r\n}\r\nfunction multiple(m1, m2) {\r\n    if (!isUnchanged(m2)) {\r\n        if (isScale(m2)) {\r\n            m1[0] *= m2[0];\r\n            m1[4] *= m2[4];\r\n        }\r\n        else {\r\n            Util.mat3.multiply(m1, m1, m2);\r\n        }\r\n    }\r\n}\r\nmodule.exports = {\r\n    initTransform: function initTransform() { },\r\n    resetMatrix: function resetMatrix() {\r\n        this.attr('matrix', [1, 0, 0, 0, 1, 0, 0, 0, 1]);\r\n    },\r\n    translate: function translate(tx, ty) {\r\n        var matrix = this._attrs.matrix;\r\n        Util.mat3.translate(matrix, matrix, [tx, ty]);\r\n        this.clearTotalMatrix();\r\n        this.attr('matrix', matrix);\r\n        return this;\r\n    },\r\n    rotate: function rotate(radian) {\r\n        var matrix = this._attrs.matrix;\r\n        Util.mat3.rotate(matrix, matrix, radian);\r\n        this.clearTotalMatrix();\r\n        this.attr('matrix', matrix);\r\n        return this;\r\n    },\r\n    scale: function scale(s1, s2) {\r\n        var matrix = this._attrs.matrix;\r\n        Util.mat3.scale(matrix, matrix, [s1, s2]);\r\n        this.clearTotalMatrix();\r\n        this.attr('matrix', matrix);\r\n        return this;\r\n    },\r\n    rotateAtStart: function rotateAtStart(rotate) {\r\n        var x = this._attrs.x || this._cfg.attrs.x;\r\n        var y = this._attrs.y || this._cfg.attrs.y;\r\n        if (Math.abs(rotate) > Math.PI * 2) {\r\n            rotate = rotate / 180 * Math.PI;\r\n        }\r\n        return this.transform([['t', -x, -y], ['r', rotate], ['t', x, y]]);\r\n    },\r\n    move: function move(x, y) {\r\n        var cx = this.get('x') || 0;\r\n        var cy = this.get('y') || 0;\r\n        this.translate(x - cx, y - cy);\r\n        this.set('x', x);\r\n        this.set('y', y);\r\n        return this;\r\n    },\r\n    transform: function transform(ts) {\r\n        var self = this;\r\n        var matrix = this._attrs.matrix;\r\n        Util.each(ts, function (t) {\r\n            switch (t[0]) {\r\n                case 't':\r\n                    self.translate(t[1], t[2]);\r\n                    break;\r\n                case 's':\r\n                    self.scale(t[1], t[2]);\r\n                    break;\r\n                case 'r':\r\n                    self.rotate(t[1]);\r\n                    break;\r\n                case 'm':\r\n                    self.attr('matrix', Util.mat3.multiply([], matrix, t[1]));\r\n                    self.clearTotalMatrix();\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n        return self;\r\n    },\r\n    setTransform: function setTransform(ts) {\r\n        this.attr('matrix', [1, 0, 0, 0, 1, 0, 0, 0, 1]);\r\n        return this.transform(ts);\r\n    },\r\n    getMatrix: function getMatrix() {\r\n        return this.attr('matrix');\r\n    },\r\n    setMatrix: function setMatrix(m) {\r\n        this.attr('matrix', m);\r\n        this.clearTotalMatrix();\r\n        return this;\r\n    },\r\n    apply: function apply(v, root) {\r\n        var m;\r\n        if (root) {\r\n            m = this._getMatrixByRoot(root);\r\n        }\r\n        else {\r\n            m = this.attr('matrix');\r\n        }\r\n        Util.vec3.transformMat3(v, v, m);\r\n        return this;\r\n    },\r\n    _getMatrixByRoot: function _getMatrixByRoot(root) {\r\n        var self = this;\r\n        root = root || self;\r\n        var parent = self;\r\n        var parents = [];\r\n        while (parent !== root) {\r\n            parents.unshift(parent);\r\n            parent = parent.get('parent');\r\n        }\r\n        parents.unshift(parent);\r\n        var m = [1, 0, 0, 0, 1, 0, 0, 0, 1];\r\n        Util.each(parents, function (child) {\r\n            Util.mat3.multiply(m, child.attr('matrix'), m);\r\n        });\r\n        return m;\r\n    },\r\n    getTotalMatrix: function getTotalMatrix() {\r\n        var m = this._cfg.totalMatrix;\r\n        if (!m) {\r\n            m = [1, 0, 0, 0, 1, 0, 0, 0, 1];\r\n            var parent = this._cfg.parent;\r\n            if (parent) {\r\n                var pm = parent.getTotalMatrix();\r\n                multiple(m, pm);\r\n            }\r\n            multiple(m, this.attr('matrix'));\r\n            this._cfg.totalMatrix = m;\r\n        }\r\n        return m;\r\n    },\r\n    clearTotalMatrix: function clearTotalMatrix() {\r\n    },\r\n    invert: function invert(v) {\r\n        var m = this.getTotalMatrix();\r\n        if (isScale(m)) {\r\n            v[0] /= m[0];\r\n            v[1] /= m[4];\r\n        }\r\n        else {\r\n            var inm = Util.mat3.invert([], m);\r\n            if (inm) {\r\n                Util.vec3.transformMat3(v, v, inm);\r\n            }\r\n        }\r\n        return this;\r\n    },\r\n    resetTransform: function resetTransform(context) {\r\n        var mo = this.attr('matrix');\r\n        if (!isUnchanged(mo)) {\r\n            context.transform(mo[0], mo[1], mo[3], mo[4], mo[6], mo[7]);\r\n        }\r\n    }\r\n};\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g\\lib\\core\\mixin\\transform.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g\\lib\\core\\mixin\\transform.js"],"names":[],"mappings":"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","sourcesContent":["var Util = require('../../util/index'); // 是否未改变\n\n\nfunction isUnchanged(m) {\n  return m[0] === 1 && m[1] === 0 && m[3] === 0 && m[4] === 1 && m[6] === 0 && m[7] === 0;\n} // 是否仅仅是scale\n\n\nfunction isScale(m) {\n  return m[1] === 0 && m[3] === 0 && m[6] === 0 && m[7] === 0;\n}\n\nfunction multiple(m1, m2) {\n  if (!isUnchanged(m2)) {\n    if (isScale(m2)) {\n      m1[0] *= m2[0];\n      m1[4] *= m2[4];\n    } else {\n      Util.mat3.multiply(m1, m1, m2);\n    }\n  }\n}\n\nmodule.exports = {\n  initTransform: function initTransform() {},\n  resetMatrix: function resetMatrix() {\n    this.attr('matrix', [1, 0, 0, 0, 1, 0, 0, 0, 1]);\n  },\n  translate: function translate(tx, ty) {\n    var matrix = this._attrs.matrix;\n    Util.mat3.translate(matrix, matrix, [tx, ty]);\n    this.clearTotalMatrix();\n    this.attr('matrix', matrix);\n    return this;\n  },\n  rotate: function rotate(radian) {\n    var matrix = this._attrs.matrix;\n    Util.mat3.rotate(matrix, matrix, radian);\n    this.clearTotalMatrix();\n    this.attr('matrix', matrix);\n    return this;\n  },\n  scale: function scale(s1, s2) {\n    var matrix = this._attrs.matrix;\n    Util.mat3.scale(matrix, matrix, [s1, s2]);\n    this.clearTotalMatrix();\n    this.attr('matrix', matrix);\n    return this;\n  },\n  rotateAtStart: function rotateAtStart(rotate) {\n    var x = this._attrs.x || this._cfg.attrs.x;\n    var y = this._attrs.y || this._cfg.attrs.y;\n\n    if (Math.abs(rotate) > Math.PI * 2) {\n      rotate = rotate / 180 * Math.PI;\n    }\n\n    return this.transform([['t', -x, -y], ['r', rotate], ['t', x, y]]);\n  },\n  move: function move(x, y) {\n    var cx = this.get('x') || 0; // 当前的x\n\n    var cy = this.get('y') || 0; // 当前的y\n\n    this.translate(x - cx, y - cy);\n    this.set('x', x);\n    this.set('y', y);\n    return this;\n  },\n  transform: function transform(ts) {\n    var self = this;\n    var matrix = this._attrs.matrix;\n    Util.each(ts, function (t) {\n      switch (t[0]) {\n        case 't':\n          self.translate(t[1], t[2]);\n          break;\n\n        case 's':\n          self.scale(t[1], t[2]);\n          break;\n\n        case 'r':\n          self.rotate(t[1]);\n          break;\n\n        case 'm':\n          self.attr('matrix', Util.mat3.multiply([], matrix, t[1]));\n          self.clearTotalMatrix();\n          break;\n\n        default:\n          break;\n      }\n    });\n    return self;\n  },\n  setTransform: function setTransform(ts) {\n    this.attr('matrix', [1, 0, 0, 0, 1, 0, 0, 0, 1]);\n    return this.transform(ts);\n  },\n  getMatrix: function getMatrix() {\n    return this.attr('matrix');\n  },\n  setMatrix: function setMatrix(m) {\n    this.attr('matrix', m);\n    this.clearTotalMatrix();\n    return this;\n  },\n  apply: function apply(v, root) {\n    var m;\n\n    if (root) {\n      m = this._getMatrixByRoot(root);\n    } else {\n      m = this.attr('matrix');\n    }\n\n    Util.vec3.transformMat3(v, v, m);\n    return this;\n  },\n  // 获取到达指定根节点的矩阵\n  _getMatrixByRoot: function _getMatrixByRoot(root) {\n    var self = this;\n    root = root || self;\n    var parent = self;\n    var parents = [];\n\n    while (parent !== root) {\n      parents.unshift(parent);\n      parent = parent.get('parent');\n    }\n\n    parents.unshift(parent);\n    var m = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    Util.each(parents, function (child) {\n      Util.mat3.multiply(m, child.attr('matrix'), m);\n    });\n    return m;\n  },\n\n  /**\n   * 应用到当前元素上的总的矩阵\n   * @return {Matrix} 矩阵\n   */\n  getTotalMatrix: function getTotalMatrix() {\n    var m = this._cfg.totalMatrix;\n\n    if (!m) {\n      m = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n      var parent = this._cfg.parent;\n\n      if (parent) {\n        var pm = parent.getTotalMatrix();\n        multiple(m, pm);\n      }\n\n      multiple(m, this.attr('matrix'));\n      this._cfg.totalMatrix = m;\n    }\n\n    return m;\n  },\n  // 清除当前的矩阵\n  clearTotalMatrix: function clearTotalMatrix() {// this._cfg.totalMatrix = null;\n  },\n  invert: function invert(v) {\n    var m = this.getTotalMatrix(); // 单精屏幕下大多数矩阵没变化\n\n    if (isScale(m)) {\n      v[0] /= m[0];\n      v[1] /= m[4];\n    } else {\n      var inm = Util.mat3.invert([], m);\n\n      if (inm) {\n        Util.vec3.transformMat3(v, v, inm);\n      }\n    }\n\n    return this;\n  },\n  resetTransform: function resetTransform(context) {\n    var mo = this.attr('matrix'); // 不改变时\n\n    if (!isUnchanged(mo)) {\n      context.transform(mo[0], mo[1], mo[3], mo[4], mo[6], mo[7]);\n    }\n  }\n};"]}]}