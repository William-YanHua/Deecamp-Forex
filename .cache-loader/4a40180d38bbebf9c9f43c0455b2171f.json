{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\geoms\\heatmap\\linear.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\geoms\\heatmap\\linear.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __assign, __extends } from \"tslib\";\r\nimport { registerGeometry, Geometry } from '../../dependents';\r\nimport { isNumber, get } from '@antv/util';\r\nimport * as colorUtil from '../../util/color';\r\nvar GAUSS_COEF = 0.3989422804014327;\r\nvar ZERO = 1.0 / 255.0 / 16.0;\r\nvar ORIGIN_FIELD = '_origin';\r\nvar LinearHeatmap = (function (_super) {\r\n    __extends(LinearHeatmap, _super);\r\n    function LinearHeatmap(cfg) {\r\n        var _this = _super.call(this, cfg) || this;\r\n        _this.type = 'heatmap';\r\n        _this.paletteCache = {};\r\n        _this.intensity = cfg.intensity;\r\n        _this.radius = cfg.radius;\r\n        return _this;\r\n    }\r\n    LinearHeatmap.prototype.createElements = function (mappingData) {\r\n        var range = this.prepareRange(mappingData);\r\n        this.prepareSize();\r\n        this.prepareBlur();\r\n        this.prepareGreyScaleBlurredCircle(this.radius);\r\n        this.drawWithRange(mappingData, range);\r\n        return null;\r\n    };\r\n    LinearHeatmap.prototype.clear = function () {\r\n        this.clearShadowCanvasCtx();\r\n        _super.prototype.clear.call(this);\r\n    };\r\n    LinearHeatmap.prototype.prepareRange = function (data) {\r\n        var colorAttr = this.getAttribute('color');\r\n        var colorField = colorAttr.getFields()[0];\r\n        var min = Infinity;\r\n        var max = -Infinity;\r\n        data.forEach(function (row) {\r\n            var value = row[ORIGIN_FIELD][colorField];\r\n            if (value > max) {\r\n                max = value;\r\n            }\r\n            if (value < min) {\r\n                min = value;\r\n            }\r\n        });\r\n        if (min === max) {\r\n            min = max - 1;\r\n        }\r\n        return [min, max];\r\n    };\r\n    LinearHeatmap.prototype.prepareSize = function () {\r\n        var radius = this.radius;\r\n        if (!this.radius) {\r\n            radius = this.getDefaultValue('size');\r\n            if (!isNumber(radius)) {\r\n                radius = this.getDefaultSize();\r\n            }\r\n            this.radius = radius;\r\n        }\r\n    };\r\n    LinearHeatmap.prototype.prepareBlur = function () {\r\n        var blur = get(this.styleOption, ['style', 'shadowBlur']);\r\n        if (!isNumber(blur)) {\r\n            blur = this.radius / 2;\r\n        }\r\n        this.blur = blur;\r\n    };\r\n    LinearHeatmap.prototype.getDefaultSize = function () {\r\n        var position = this.getAttribute('position');\r\n        var coord = this.coordinate;\r\n        var radius = Math.min(coord.getWidth() / (position.scales[0].ticks.length * 4), coord.getHeight() / (position.scales[1].ticks.length * 4));\r\n        return radius;\r\n    };\r\n    LinearHeatmap.prototype.colorize = function (img) {\r\n        var colorAttr = this.getAttribute('color');\r\n        var pixels = img.data;\r\n        var paletteCache = this.paletteCache;\r\n        for (var i = 3; i < pixels.length; i += 4) {\r\n            var alpha = pixels[i];\r\n            if (alpha) {\r\n                var palette = void 0;\r\n                if (paletteCache[alpha]) {\r\n                    palette = paletteCache[alpha];\r\n                }\r\n                else {\r\n                    palette = colorUtil.rgb2arr(colorAttr.gradient(alpha / 256));\r\n                    paletteCache[alpha] = palette;\r\n                }\r\n                pixels[i - 3] = palette[0];\r\n                pixels[i - 2] = palette[1];\r\n                pixels[i - 1] = palette[2];\r\n                pixels[i] = alpha;\r\n            }\r\n        }\r\n    };\r\n    LinearHeatmap.prototype.prepareGreyScaleBlurredCircle = function (r) {\r\n        var circleCanvas = this.grayScaleCanvas;\r\n        if (!circleCanvas) {\r\n            circleCanvas = document.createElement('canvas');\r\n            this.grayScaleCanvas = circleCanvas;\r\n        }\r\n        var intensity = this.intensity ? this.intensity : 2;\r\n        var circleRadius = (Math.sqrt(-2.0 * Math.log(ZERO / r / intensity / GAUSS_COEF)) / 3.0) * r;\r\n        var blur = circleRadius - r;\r\n        var r2 = circleRadius + blur;\r\n        var ctx = circleCanvas.getContext('2d');\r\n        circleCanvas.width = circleCanvas.height = r2 * 2;\r\n        ctx.clearRect(0, 0, circleCanvas.width, circleCanvas.height);\r\n        ctx.shadowOffsetX = ctx.shadowOffsetY = r2 * 2;\r\n        ctx.shadowBlur = blur;\r\n        ctx.shadowColor = 'black';\r\n        ctx.beginPath();\r\n        ctx.arc(-r2, -r2, r, 0, Math.PI * 2, true);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    };\r\n    LinearHeatmap.prototype.drawGrayScaleBlurredCircle = function (x, y, r, alpha, ctx) {\r\n        var circleCanvas = this.grayScaleCanvas;\r\n        ctx.globalAlpha = alpha;\r\n        ctx.drawImage(circleCanvas, x - r, y - r);\r\n    };\r\n    LinearHeatmap.prototype.getShadowCanvasCtx = function () {\r\n        var canvas = this.shadowCanvas;\r\n        if (!canvas) {\r\n            canvas = document.createElement('canvas');\r\n            this.shadowCanvas = canvas;\r\n        }\r\n        canvas.width = this.coordinate.getWidth();\r\n        canvas.height = this.coordinate.getHeight();\r\n        var context = canvas.getContext('2d');\r\n        context.globalCompositeOperation = 'lighter';\r\n        return context;\r\n    };\r\n    LinearHeatmap.prototype.clearShadowCanvasCtx = function () {\r\n        var ctx = this.getShadowCanvasCtx();\r\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n    };\r\n    LinearHeatmap.prototype.getImageShape = function () {\r\n        var imageShape = this.imageShape;\r\n        if (imageShape) {\r\n            return imageShape;\r\n        }\r\n        var container = this.container;\r\n        imageShape = container.addShape({\r\n            type: 'image',\r\n            attrs: {},\r\n        });\r\n        this.imageShape = imageShape;\r\n    };\r\n    LinearHeatmap.prototype.drawWithRange = function (data, range) {\r\n        var _a = this.coordinate, start = _a.start, end = _a.end;\r\n        var width = this.coordinate.getWidth();\r\n        var height = this.coordinate.getHeight();\r\n        var colorAttr = this.getAttribute('color');\r\n        var valueField = colorAttr.getFields()[0];\r\n        this.clearShadowCanvasCtx();\r\n        var ctx = this.getShadowCanvasCtx();\r\n        if (range) {\r\n            data = data.filter(function (row) {\r\n                return row[ORIGIN_FIELD][valueField] <= range[1] && row[ORIGIN_FIELD][valueField] >= range[0];\r\n            });\r\n        }\r\n        var scale = this.scales[valueField];\r\n        for (var i = 0; i < data.length; i++) {\r\n            var obj = data[i];\r\n            var cfg = this.getDrawCfg(obj);\r\n            var alpha = scale.scale(obj[ORIGIN_FIELD][valueField]);\r\n            this.drawGrayScaleBlurredCircle(cfg.x - start.x, cfg.y - end.y, this.radius + this.blur, alpha, ctx);\r\n        }\r\n        var colored = ctx.getImageData(0, 0, width, height);\r\n        this.clearShadowCanvasCtx();\r\n        this.colorize(colored);\r\n        ctx.putImageData(colored, 0, 0);\r\n        var image = new Image();\r\n        image.src = ctx.canvas.toDataURL('image/png');\r\n        this.getImageShape();\r\n        this.imageShape.attr('x', start.x);\r\n        this.imageShape.attr('y', end.y);\r\n        this.imageShape.attr('width', width);\r\n        this.imageShape.attr('height', height);\r\n        this.imageShape.attr('img', ctx.canvas);\r\n        this.imageShape.set('origin', this.getShapeInfo(data));\r\n    };\r\n    LinearHeatmap.prototype.getShapeInfo = function (mappingData) {\r\n        var shapeCfg = this.getDrawCfg(mappingData[0]);\r\n        return __assign(__assign({}, shapeCfg), { mappingData: mappingData, data: this.getData(mappingData) });\r\n    };\r\n    LinearHeatmap.prototype.getData = function (mappingData) {\r\n        return mappingData.map(function (obj) {\r\n            return obj[ORIGIN_FIELD];\r\n        });\r\n    };\r\n    return LinearHeatmap;\r\n}(Geometry));\r\nregisterGeometry('linearHeatmap', LinearHeatmap);\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\geoms\\heatmap\\linear.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\geoms\\heatmap\\linear.js"],"names":[],"mappings":"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","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { registerGeometry, Geometry } from '../../dependents';\nimport { isNumber, get } from '@antv/util';\nimport * as colorUtil from '../../util/color';\nvar GAUSS_COEF = 0.3989422804014327;\nvar ZERO = 1.0 / 255.0 / 16.0;\nvar ORIGIN_FIELD = '_origin';\nvar LinearHeatmap = /** @class */ (function (_super) {\n    __extends(LinearHeatmap, _super);\n    function LinearHeatmap(cfg) {\n        var _this = _super.call(this, cfg) || this;\n        _this.type = 'heatmap';\n        _this.paletteCache = {};\n        _this.intensity = cfg.intensity;\n        _this.radius = cfg.radius;\n        return _this;\n    }\n    LinearHeatmap.prototype.createElements = function (mappingData /*index: number, isUpdate: boolean = false*/) {\n        var range = this.prepareRange(mappingData);\n        this.prepareSize();\n        this.prepareBlur();\n        this.prepareGreyScaleBlurredCircle(this.radius);\n        this.drawWithRange(mappingData, range);\n        return null;\n    };\n    LinearHeatmap.prototype.clear = function () {\n        this.clearShadowCanvasCtx();\n        _super.prototype.clear.call(this);\n    };\n    LinearHeatmap.prototype.prepareRange = function (data) {\n        var colorAttr = this.getAttribute('color');\n        var colorField = colorAttr.getFields()[0];\n        var min = Infinity;\n        var max = -Infinity;\n        data.forEach(function (row) {\n            var value = row[ORIGIN_FIELD][colorField];\n            if (value > max) {\n                max = value;\n            }\n            if (value < min) {\n                min = value;\n            }\n        });\n        if (min === max) {\n            min = max - 1;\n        }\n        return [min, max];\n    };\n    LinearHeatmap.prototype.prepareSize = function () {\n        var radius = this.radius;\n        if (!this.radius) {\n            radius = this.getDefaultValue('size');\n            if (!isNumber(radius)) {\n                radius = this.getDefaultSize();\n            }\n            this.radius = radius;\n        }\n    };\n    LinearHeatmap.prototype.prepareBlur = function () {\n        var blur = get(this.styleOption, ['style', 'shadowBlur']);\n        if (!isNumber(blur)) {\n            blur = this.radius / 2;\n        }\n        this.blur = blur;\n    };\n    LinearHeatmap.prototype.getDefaultSize = function () {\n        var position = this.getAttribute('position');\n        var coord = this.coordinate;\n        var radius = Math.min(coord.getWidth() / (position.scales[0].ticks.length * 4), coord.getHeight() / (position.scales[1].ticks.length * 4));\n        return radius;\n    };\n    LinearHeatmap.prototype.colorize = function (img) {\n        var colorAttr = this.getAttribute('color');\n        var pixels = img.data;\n        var paletteCache = this.paletteCache;\n        for (var i = 3; i < pixels.length; i += 4) {\n            var alpha = pixels[i]; // get gradient color from opacity value\n            if (alpha) {\n                var palette = void 0;\n                if (paletteCache[alpha]) {\n                    palette = paletteCache[alpha];\n                }\n                else {\n                    palette = colorUtil.rgb2arr(colorAttr.gradient(alpha / 256));\n                    paletteCache[alpha] = palette;\n                }\n                // const palette = colorUtil.rgb2arr(colorAttr.gradient(alpha / 256));\n                pixels[i - 3] = palette[0];\n                pixels[i - 2] = palette[1];\n                pixels[i - 1] = palette[2];\n                pixels[i] = alpha;\n            }\n        }\n    };\n    LinearHeatmap.prototype.prepareGreyScaleBlurredCircle = function (r) {\n        var circleCanvas = this.grayScaleCanvas;\n        if (!circleCanvas) {\n            circleCanvas = document.createElement('canvas');\n            this.grayScaleCanvas = circleCanvas;\n        }\n        var intensity = this.intensity ? this.intensity : 2;\n        var circleRadius = (Math.sqrt(-2.0 * Math.log(ZERO / r / intensity / GAUSS_COEF)) / 3.0) * r;\n        var blur = circleRadius - r;\n        var r2 = circleRadius + blur;\n        var ctx = circleCanvas.getContext('2d');\n        circleCanvas.width = circleCanvas.height = r2 * 2;\n        ctx.clearRect(0, 0, circleCanvas.width, circleCanvas.height);\n        ctx.shadowOffsetX = ctx.shadowOffsetY = r2 * 2;\n        ctx.shadowBlur = blur;\n        ctx.shadowColor = 'black';\n        ctx.beginPath();\n        ctx.arc(-r2, -r2, r, 0, Math.PI * 2, true);\n        ctx.closePath();\n        ctx.fill();\n    };\n    LinearHeatmap.prototype.drawGrayScaleBlurredCircle = function (x, y, r, alpha, ctx) {\n        var circleCanvas = this.grayScaleCanvas;\n        ctx.globalAlpha = alpha;\n        ctx.drawImage(circleCanvas, x - r, y - r);\n    };\n    LinearHeatmap.prototype.getShadowCanvasCtx = function () {\n        var canvas = this.shadowCanvas;\n        if (!canvas) {\n            canvas = document.createElement('canvas');\n            this.shadowCanvas = canvas;\n        }\n        canvas.width = this.coordinate.getWidth();\n        canvas.height = this.coordinate.getHeight();\n        var context = canvas.getContext('2d');\n        context.globalCompositeOperation = 'lighter';\n        return context;\n    };\n    LinearHeatmap.prototype.clearShadowCanvasCtx = function () {\n        var ctx = this.getShadowCanvasCtx();\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    };\n    LinearHeatmap.prototype.getImageShape = function () {\n        var imageShape = this.imageShape;\n        if (imageShape) {\n            return imageShape;\n        }\n        var container = this.container;\n        imageShape = container.addShape({\n            type: 'image',\n            attrs: {},\n        });\n        this.imageShape = imageShape;\n    };\n    LinearHeatmap.prototype.drawWithRange = function (data, range) {\n        // canvas size\n        var _a = this.coordinate, start = _a.start, end = _a.end;\n        var width = this.coordinate.getWidth();\n        var height = this.coordinate.getHeight();\n        // value, range, etc\n        var colorAttr = this.getAttribute('color');\n        var valueField = colorAttr.getFields()[0];\n        // prepare shadow canvas context\n        this.clearShadowCanvasCtx();\n        var ctx = this.getShadowCanvasCtx();\n        // filter data\n        if (range) {\n            data = data.filter(function (row) {\n                return row[ORIGIN_FIELD][valueField] <= range[1] && row[ORIGIN_FIELD][valueField] >= range[0];\n            });\n        }\n        // step1. draw points with shadow\n        var scale = this.scales[valueField];\n        for (var i = 0; i < data.length; i++) {\n            var obj = data[i];\n            var cfg = this.getDrawCfg(obj);\n            var alpha = scale.scale(obj[ORIGIN_FIELD][valueField]);\n            // @ts-ignore\n            this.drawGrayScaleBlurredCircle(cfg.x - start.x, cfg.y - end.y, this.radius + this.blur, alpha, ctx);\n        }\n        // step2. convert pixels\n        var colored = ctx.getImageData(0, 0, width, height);\n        this.clearShadowCanvasCtx();\n        this.colorize(colored);\n        ctx.putImageData(colored, 0, 0);\n        var image = new Image();\n        image.src = ctx.canvas.toDataURL('image/png');\n        this.getImageShape();\n        this.imageShape.attr('x', start.x);\n        this.imageShape.attr('y', end.y);\n        this.imageShape.attr('width', width);\n        this.imageShape.attr('height', height);\n        this.imageShape.attr('img', ctx.canvas);\n        this.imageShape.set('origin', this.getShapeInfo(data)); // 存储绘图信息数据\n    };\n    LinearHeatmap.prototype.getShapeInfo = function (mappingData) {\n        var shapeCfg = this.getDrawCfg(mappingData[0]);\n        return __assign(__assign({}, shapeCfg), { mappingData: mappingData, data: this.getData(mappingData) });\n    };\n    LinearHeatmap.prototype.getData = function (mappingData) {\n        return mappingData.map(function (obj) {\n            return obj[ORIGIN_FIELD];\n        });\n    };\n    return LinearHeatmap;\n}(Geometry));\nregisterGeometry('linearHeatmap', LinearHeatmap);\n//# sourceMappingURL=linear.js.map"]}]}