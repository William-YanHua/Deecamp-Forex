{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/src/app/api/HttpService.ts","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/src/app/api/HttpService.ts","mtime":1596379644439},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { appendQueryString, HttpMethod, NETWORK_ERROR_CODE, urlJoin } from \"./utils\";\nimport { Injectable } from \"react.di\";\nvar HttpService = (function () {\n    function HttpService() {\n        this.token = \"\";\n    }\n    HttpService.prototype.fetchRaw = function (fetchInfo) {\n        if (fetchInfo === void 0) { fetchInfo = {}; }\n        return __awaiter(this, void 0, Promise, function () {\n            var body, mode;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        body = fetchInfo.body\n                            ? { body: fetchInfo.body }\n                            : null;\n                        mode = fetchInfo.mode\n                            ? { mode: fetchInfo.mode }\n                            : {};\n                        return [4, fetch(appendQueryString(fetchInfo.path, fetchInfo.queryParams), __assign(__assign({ method: fetchInfo.method || HttpMethod.GET, headers: fetchInfo.headers }, mode), body))];\n                    case 1: return [2, _a.sent()];\n                }\n            });\n        });\n    };\n    HttpService.prototype.fetch = function (fetchInfo) {\n        if (fetchInfo === void 0) { fetchInfo = {}; }\n        return __awaiter(this, void 0, Promise, function () {\n            var token, authHeader, response, content, parsedContent, e_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        token = fetchInfo.token || this.token;\n                        authHeader = token\n                            ? { Authorization: \"\" + token }\n                            : {};\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 4, , 5]);\n                        return [4, this.fetchRaw(__assign(__assign({}, fetchInfo), { body: JSON.stringify(fetchInfo.body), path: urlJoin(APIROOTURL, fetchInfo.path), headers: __assign(__assign(__assign({}, authHeader), { \"Content-Type\": \"application/json\" }), fetchInfo.headers) }))];\n                    case 2:\n                        response = _a.sent();\n                        return [4, response.text()];\n                    case 3:\n                        content = _a.sent();\n                        parsedContent = content ? JSON.parse(content) : null;\n                        if (response.ok) {\n                            return [2, {\n                                    statusCode: response.status,\n                                    response: parsedContent,\n                                }];\n                        }\n                        else {\n                            throw {\n                                statusCode: response.status,\n                                info: parsedContent,\n                                isNetworkError: false,\n                                isServerError: true,\n                            };\n                        }\n                        return [3, 5];\n                    case 4:\n                        e_1 = _a.sent();\n                        if (e_1.isServerError) {\n                            throw e_1;\n                        }\n                        throw {\n                            statusCode: NETWORK_ERROR_CODE,\n                            info: e_1,\n                            isNetworkError: true,\n                            isServerError: false\n                        };\n                    case 5: return [2];\n                }\n            });\n        });\n    };\n    HttpService = __decorate([\n        Injectable\n    ], HttpService);\n    return HttpService;\n}());\nexport { HttpService };\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/src/app/api/HttpService.ts","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/src/app/api/HttpService.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,iBAAiB,EAAE,UAAU,EAAE,kBAAkB,EAAE,OAAO,EAAE,MAAM,SAAS,CAAC;AACrF,OAAO,EAAE,UAAU,EAAE,MAAM,UAAU,CAAC;AAgBtC;IAAA;QAEE,UAAK,GAAY,EAAE,CAAC;IA0EtB,CAAC;IAxEO,8BAAQ,GAAd,UAAe,SAAyB;QAAzB,0BAAA,EAAA,cAAyB;uCAAG,OAAO;;;;;wBAC1C,IAAI,GAAG,SAAS,CAAC,IAAI;4BACzB,CAAC,CAAC,EAAC,IAAI,EAAE,SAAS,CAAC,IAAI,EAAC;4BACxB,CAAC,CAAC,IAAI,CAAC;wBAEH,IAAI,GAAG,SAAS,CAAC,IAAI;4BAC3B,CAAC,CAAC,EAAE,IAAI,EAAE,SAAS,CAAC,IAAI,EAAC;4BACzB,CAAC,CAAC,EAAE,CAAC;wBAEE,WAAM,KAAK,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,WAAW,CAAC,sBACvE,MAAM,EAAE,SAAS,CAAC,MAAM,IAAI,UAAU,CAAC,GAAG,EAC1C,OAAO,EAAE,SAAS,CAAC,OAAO,IACvB,IAAI,GACJ,IAAI,EACP,EAAA;4BALJ,WAAO,SAKH,EAAC;;;;KACN;IAUK,2BAAK,GAAX,UAAqB,SAAyB;QAAzB,0BAAA,EAAA,cAAyB;uCAAG,OAAO;;;;;wBAChD,KAAK,GAAG,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC;wBACtC,UAAU,GAAG,KAAK;4BACtB,CAAC,CAAC,EAAC,aAAa,EAAE,KAAG,KAAO,EAAC;4BAC7B,CAAC,CAAC,EAAE,CAAC;;;;wBAEY,WAAM,IAAI,CAAC,QAAQ,uBAC/B,SAAS,KACZ,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,EACpC,IAAI,EAAE,OAAO,CAAC,UAAU,EAAE,SAAS,CAAC,IAAI,CAAC,EACzC,OAAO,iCACF,UAAU,KACb,cAAc,EAAE,kBAAkB,KAC/B,SAAS,CAAC,OAAO,KAEtB,EAAA;;wBATI,QAAQ,GAAG,SASf;wBAEc,WAAM,QAAQ,CAAC,IAAI,EAAE,EAAA;;wBAA/B,OAAO,GAAG,SAAqB;wBAC/B,aAAa,GAAG,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;wBAE3D,IAAI,QAAQ,CAAC,EAAE,EAAE;4BACf,WAAO;oCACL,UAAU,EAAE,QAAQ,CAAC,MAAM;oCAC3B,QAAQ,EAAE,aAAa;iCACxB,EAAC;yBACH;6BAAM;4BACL,MAAM;gCACJ,UAAU,EAAE,QAAQ,CAAC,MAAM;gCAC3B,IAAI,EAAE,aAAa;gCACnB,cAAc,EAAE,KAAK;gCACrB,aAAa,EAAE,IAAI;6BACJ,CAAC;yBACnB;;;;wBAGD,IAAI,GAAC,CAAC,aAAa,EAAE;4BACnB,MAAM,GAAC,CAAC;yBACT;wBACD,MAAM;4BACJ,UAAU,EAAE,kBAAkB;4BAC9B,IAAI,EAAE,GAAC;4BACP,cAAc,EAAE,IAAI;4BACpB,aAAa,EAAE,KAAK;yBACL,CAAC;;;;;KAGrB;IA3EU,WAAW;QADvB,UAAU;OACE,WAAW,CA4EvB;IAAD,kBAAC;CAAA,AA5ED,IA4EC;SA5EY,WAAW","sourcesContent":["import { appendQueryString, HttpMethod, NETWORK_ERROR_CODE, urlJoin } from \"./utils\";\r\nimport { Injectable } from \"react.di\";\r\nimport { NetworkError, NetworkResponse } from \"./NetworkResponse\";\r\n\r\nexport interface FetchInfo {\r\n  path?: string;\r\n  method?: HttpMethod;\r\n  queryParams?: any;\r\n  body?: any;\r\n  headers?: {[s: string]: string};\r\n  mode?: RequestMode;\r\n  token?: string;\r\n}\r\n\r\ndeclare var APIROOTURL: string;\r\n\r\n@Injectable\r\nexport class HttpService {\r\n\r\n  token: string  = \"\";\r\n\r\n  async fetchRaw(fetchInfo: FetchInfo = {}): Promise<Response> {\r\n    const body = fetchInfo.body\r\n      ? {body: fetchInfo.body}\r\n      : null;\r\n\r\n    const mode = fetchInfo.mode\r\n    ? { mode: fetchInfo.mode}\r\n    : {};\r\n\r\n    return await fetch(appendQueryString(fetchInfo.path, fetchInfo.queryParams), {\r\n        method: fetchInfo.method || HttpMethod.GET,\r\n        headers: fetchInfo.headers,\r\n        ...mode,\r\n        ...body,\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Execute the fetch request.\r\n   * @param fetchInfo info\r\n   * @returns If request is successful and status code is [200,300),\r\n   * returns NetworkResponse containing statusCode and response payload\r\n   * @throws If request is not successful or statusCode is >=300,\r\n   * throws NetworkError containing statusCode and error payload\r\n   */\r\n  async fetch<T = any>(fetchInfo: FetchInfo = {}): Promise<NetworkResponse<T>> {\r\n    const token = fetchInfo.token || this.token;\r\n    const authHeader = token\r\n      ? {Authorization: `${token}`}\r\n      : {};\r\n    try {\r\n      const response = await this.fetchRaw({\r\n        ...fetchInfo,\r\n        body: JSON.stringify(fetchInfo.body),\r\n        path: urlJoin(APIROOTURL, fetchInfo.path),\r\n        headers: {\r\n          ...authHeader,\r\n          \"Content-Type\": \"application/json\",\r\n          ...fetchInfo.headers,\r\n        },\r\n      });\r\n\r\n      const content = await response.text();\r\n      const parsedContent = content ? JSON.parse(content) : null;\r\n\r\n      if (response.ok) {\r\n        return {\r\n          statusCode: response.status,\r\n          response: parsedContent,\r\n        };\r\n      } else {\r\n        throw {\r\n          statusCode: response.status,\r\n          info: parsedContent,\r\n          isNetworkError: false,\r\n          isServerError: true,\r\n        } as NetworkError;\r\n      }\r\n\r\n    } catch (e) {\r\n      if (e.isServerError) {\r\n        throw e;\r\n      }\r\n      throw {\r\n        statusCode: NETWORK_ERROR_CODE,\r\n        info: e,\r\n        isNetworkError: true,\r\n        isServerError: false\r\n      } as NetworkError;\r\n    }\r\n\r\n  }\r\n}\r\n"]}]}