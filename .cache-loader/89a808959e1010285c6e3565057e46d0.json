{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\remark-parse\\lib\\tokenize\\thematic-break.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\remark-parse\\lib\\tokenize\\thematic-break.js","mtime":1516191690000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["'use strict';\r\nmodule.exports = thematicBreak;\r\nvar C_NEWLINE = '\\n';\r\nvar C_TAB = '\\t';\r\nvar C_SPACE = ' ';\r\nvar C_ASTERISK = '*';\r\nvar C_UNDERSCORE = '_';\r\nvar C_DASH = '-';\r\nvar THEMATIC_BREAK_MARKER_COUNT = 3;\r\nfunction thematicBreak(eat, value, silent) {\r\n    var index = -1;\r\n    var length = value.length + 1;\r\n    var subvalue = '';\r\n    var character;\r\n    var marker;\r\n    var markerCount;\r\n    var queue;\r\n    while (++index < length) {\r\n        character = value.charAt(index);\r\n        if (character !== C_TAB && character !== C_SPACE) {\r\n            break;\r\n        }\r\n        subvalue += character;\r\n    }\r\n    if (character !== C_ASTERISK &&\r\n        character !== C_DASH &&\r\n        character !== C_UNDERSCORE) {\r\n        return;\r\n    }\r\n    marker = character;\r\n    subvalue += character;\r\n    markerCount = 1;\r\n    queue = '';\r\n    while (++index < length) {\r\n        character = value.charAt(index);\r\n        if (character === marker) {\r\n            markerCount++;\r\n            subvalue += queue + marker;\r\n            queue = '';\r\n        }\r\n        else if (character === C_SPACE) {\r\n            queue += character;\r\n        }\r\n        else if (markerCount >= THEMATIC_BREAK_MARKER_COUNT &&\r\n            (!character || character === C_NEWLINE)) {\r\n            subvalue += queue;\r\n            if (silent) {\r\n                return true;\r\n            }\r\n            return eat(subvalue)({ type: 'thematicBreak' });\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\remark-parse\\lib\\tokenize\\thematic-break.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\remark-parse\\lib\\tokenize\\thematic-break.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;AAEb,MAAM,CAAC,OAAO,GAAG,aAAa,CAAC;AAE/B,IAAI,SAAS,GAAG,IAAI,CAAC;AACrB,IAAI,KAAK,GAAG,IAAI,CAAC;AACjB,IAAI,OAAO,GAAG,GAAG,CAAC;AAClB,IAAI,UAAU,GAAG,GAAG,CAAC;AACrB,IAAI,YAAY,GAAG,GAAG,CAAC;AACvB,IAAI,MAAM,GAAG,GAAG,CAAC;AAEjB,IAAI,2BAA2B,GAAG,CAAC,CAAC;AAEpC,SAAS,aAAa,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM;IACvC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;IACf,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;IAC9B,IAAI,QAAQ,GAAG,EAAE,CAAC;IAClB,IAAI,SAAS,CAAC;IACd,IAAI,MAAM,CAAC;IACX,IAAI,WAAW,CAAC;IAChB,IAAI,KAAK,CAAC;IAEV,OAAO,EAAE,KAAK,GAAG,MAAM,EAAE;QACvB,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAEhC,IAAI,SAAS,KAAK,KAAK,IAAI,SAAS,KAAK,OAAO,EAAE;YAChD,MAAM;SACP;QAED,QAAQ,IAAI,SAAS,CAAC;KACvB;IAED,IACE,SAAS,KAAK,UAAU;QACxB,SAAS,KAAK,MAAM;QACpB,SAAS,KAAK,YAAY,EAC1B;QACA,OAAO;KACR;IAED,MAAM,GAAG,SAAS,CAAC;IACnB,QAAQ,IAAI,SAAS,CAAC;IACtB,WAAW,GAAG,CAAC,CAAC;IAChB,KAAK,GAAG,EAAE,CAAC;IAEX,OAAO,EAAE,KAAK,GAAG,MAAM,EAAE;QACvB,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAEhC,IAAI,SAAS,KAAK,MAAM,EAAE;YACxB,WAAW,EAAE,CAAC;YACd,QAAQ,IAAI,KAAK,GAAG,MAAM,CAAC;YAC3B,KAAK,GAAG,EAAE,CAAC;SACZ;aAAM,IAAI,SAAS,KAAK,OAAO,EAAE;YAChC,KAAK,IAAI,SAAS,CAAC;SACpB;aAAM,IACL,WAAW,IAAI,2BAA2B;YAC1C,CAAC,CAAC,SAAS,IAAI,SAAS,KAAK,SAAS,CAAC,EACvC;YACA,QAAQ,IAAI,KAAK,CAAC;YAElB,IAAI,MAAM,EAAE;gBACV,OAAO,IAAI,CAAC;aACb;YAED,OAAO,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAC,IAAI,EAAE,eAAe,EAAC,CAAC,CAAC;SAC/C;aAAM;YACL,OAAO;SACR;KACF;AACH,CAAC","sourcesContent":["'use strict';\n\nmodule.exports = thematicBreak;\n\nvar C_NEWLINE = '\\n';\nvar C_TAB = '\\t';\nvar C_SPACE = ' ';\nvar C_ASTERISK = '*';\nvar C_UNDERSCORE = '_';\nvar C_DASH = '-';\n\nvar THEMATIC_BREAK_MARKER_COUNT = 3;\n\nfunction thematicBreak(eat, value, silent) {\n  var index = -1;\n  var length = value.length + 1;\n  var subvalue = '';\n  var character;\n  var marker;\n  var markerCount;\n  var queue;\n\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (character !== C_TAB && character !== C_SPACE) {\n      break;\n    }\n\n    subvalue += character;\n  }\n\n  if (\n    character !== C_ASTERISK &&\n    character !== C_DASH &&\n    character !== C_UNDERSCORE\n  ) {\n    return;\n  }\n\n  marker = character;\n  subvalue += character;\n  markerCount = 1;\n  queue = '';\n\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (character === marker) {\n      markerCount++;\n      subvalue += queue + marker;\n      queue = '';\n    } else if (character === C_SPACE) {\n      queue += character;\n    } else if (\n      markerCount >= THEMATIC_BREAK_MARKER_COUNT &&\n      (!character || character === C_NEWLINE)\n    ) {\n      subvalue += queue;\n\n      if (silent) {\n        return true;\n      }\n\n      return eat(subvalue)({type: 'thematicBreak'});\n    } else {\n      return;\n    }\n  }\n}\n"]}]}