{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\rc-select\\es\\DropdownMenu.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\rc-select\\es\\DropdownMenu.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import _extends from 'babel-runtime/helpers/extends';\r\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\r\nimport _createClass from 'babel-runtime/helpers/createClass';\r\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\r\nimport _inherits from 'babel-runtime/helpers/inherits';\r\nimport React, { cloneElement } from 'react';\r\nimport { findDOMNode } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport toArray from 'rc-util/es/Children/toArray';\r\nimport Menu from 'rc-menu';\r\nimport scrollIntoView from 'dom-scroll-into-view';\r\nimport raf from 'raf';\r\nimport { getSelectKeys, preventDefaultEvent, saveRef } from './util';\r\nvar DropdownMenu = function (_React$Component) {\r\n    _inherits(DropdownMenu, _React$Component);\r\n    function DropdownMenu(props) {\r\n        _classCallCheck(this, DropdownMenu);\r\n        var _this = _possibleConstructorReturn(this, (DropdownMenu.__proto__ || Object.getPrototypeOf(DropdownMenu)).call(this, props));\r\n        _this.scrollActiveItemToView = function () {\r\n            var itemComponent = findDOMNode(_this.firstActiveItem);\r\n            var _this$props = _this.props, value = _this$props.value, visible = _this$props.visible, firstActiveValue = _this$props.firstActiveValue;\r\n            if (!itemComponent || !visible) {\r\n                return;\r\n            }\r\n            var scrollIntoViewOpts = {\r\n                onlyScrollIfNeeded: true\r\n            };\r\n            if ((!value || value.length === 0) && firstActiveValue) {\r\n                scrollIntoViewOpts.alignWithTop = true;\r\n            }\r\n            _this.rafInstance = raf(function () {\r\n                scrollIntoView(itemComponent, findDOMNode(_this.menuRef), scrollIntoViewOpts);\r\n            });\r\n        };\r\n        _this.lastInputValue = props.inputValue;\r\n        _this.saveMenuRef = saveRef(_this, 'menuRef');\r\n        return _this;\r\n    }\r\n    _createClass(DropdownMenu, [{\r\n            key: 'componentDidMount',\r\n            value: function componentDidMount() {\r\n                this.scrollActiveItemToView();\r\n                this.lastVisible = this.props.visible;\r\n            }\r\n        }, {\r\n            key: 'shouldComponentUpdate',\r\n            value: function shouldComponentUpdate(nextProps) {\r\n                if (!nextProps.visible) {\r\n                    this.lastVisible = false;\r\n                }\r\n                return nextProps.visible || nextProps.inputValue !== this.props.inputValue;\r\n            }\r\n        }, {\r\n            key: 'componentDidUpdate',\r\n            value: function componentDidUpdate(prevProps) {\r\n                var props = this.props;\r\n                if (!prevProps.visible && props.visible) {\r\n                    this.scrollActiveItemToView();\r\n                }\r\n                this.lastVisible = props.visible;\r\n                this.lastInputValue = props.inputValue;\r\n            }\r\n        }, {\r\n            key: 'componentWillUnmount',\r\n            value: function componentWillUnmount() {\r\n                if (this.rafInstance && this.rafInstance.cancel) {\r\n                    this.rafInstance.cancel();\r\n                }\r\n            }\r\n        }, {\r\n            key: 'renderMenu',\r\n            value: function renderMenu() {\r\n                var _this2 = this;\r\n                var props = this.props;\r\n                var menuItems = props.menuItems, menuItemSelectedIcon = props.menuItemSelectedIcon, defaultActiveFirstOption = props.defaultActiveFirstOption, value = props.value, prefixCls = props.prefixCls, multiple = props.multiple, onMenuSelect = props.onMenuSelect, inputValue = props.inputValue, firstActiveValue = props.firstActiveValue, backfillValue = props.backfillValue;\r\n                if (menuItems && menuItems.length) {\r\n                    var menuProps = {};\r\n                    if (multiple) {\r\n                        menuProps.onDeselect = props.onMenuDeselect;\r\n                        menuProps.onSelect = onMenuSelect;\r\n                    }\r\n                    else {\r\n                        menuProps.onClick = onMenuSelect;\r\n                    }\r\n                    var selectedKeys = getSelectKeys(menuItems, value);\r\n                    var activeKeyProps = {};\r\n                    var clonedMenuItems = menuItems;\r\n                    if (selectedKeys.length || firstActiveValue) {\r\n                        if (props.visible && !this.lastVisible) {\r\n                            activeKeyProps.activeKey = selectedKeys[0] || firstActiveValue;\r\n                        }\r\n                        var foundFirst = false;\r\n                        var clone = function clone(item) {\r\n                            if (!foundFirst && selectedKeys.indexOf(item.key) !== -1 || !foundFirst && !selectedKeys.length && firstActiveValue.indexOf(item.key) !== -1) {\r\n                                foundFirst = true;\r\n                                return cloneElement(item, {\r\n                                    ref: function ref(_ref) {\r\n                                        _this2.firstActiveItem = _ref;\r\n                                    }\r\n                                });\r\n                            }\r\n                            return item;\r\n                        };\r\n                        clonedMenuItems = menuItems.map(function (item) {\r\n                            if (item.type.isMenuItemGroup) {\r\n                                var children = toArray(item.props.children).map(clone);\r\n                                return cloneElement(item, {}, children);\r\n                            }\r\n                            return clone(item);\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.firstActiveItem = null;\r\n                    }\r\n                    var lastValue = value && value[value.length - 1];\r\n                    if (inputValue !== this.lastInputValue && (!lastValue || lastValue !== backfillValue)) {\r\n                        activeKeyProps.activeKey = '';\r\n                    }\r\n                    return React.createElement(Menu, _extends({\r\n                        ref: this.saveMenuRef,\r\n                        style: this.props.dropdownMenuStyle,\r\n                        defaultActiveFirst: defaultActiveFirstOption,\r\n                        role: 'listbox',\r\n                        itemIcon: multiple ? menuItemSelectedIcon : null\r\n                    }, activeKeyProps, {\r\n                        multiple: multiple\r\n                    }, menuProps, {\r\n                        selectedKeys: selectedKeys,\r\n                        prefixCls: prefixCls + '-menu'\r\n                    }), clonedMenuItems);\r\n                }\r\n                return null;\r\n            }\r\n        }, {\r\n            key: 'render',\r\n            value: function render() {\r\n                var renderMenu = this.renderMenu();\r\n                return renderMenu ? React.createElement('div', {\r\n                    style: {\r\n                        overflow: 'auto',\r\n                        transform: 'translateZ(0)'\r\n                    },\r\n                    onFocus: this.props.onPopupFocus,\r\n                    onMouseDown: preventDefaultEvent,\r\n                    onScroll: this.props.onPopupScroll\r\n                }, renderMenu) : null;\r\n            }\r\n        }]);\r\n    return DropdownMenu;\r\n}(React.Component);\r\nDropdownMenu.displayName = 'DropdownMenu';\r\nDropdownMenu.propTypes = {\r\n    defaultActiveFirstOption: PropTypes.bool,\r\n    value: PropTypes.any,\r\n    dropdownMenuStyle: PropTypes.object,\r\n    multiple: PropTypes.bool,\r\n    onPopupFocus: PropTypes.func,\r\n    onPopupScroll: PropTypes.func,\r\n    onMenuDeSelect: PropTypes.func,\r\n    onMenuSelect: PropTypes.func,\r\n    prefixCls: PropTypes.string,\r\n    menuItems: PropTypes.any,\r\n    inputValue: PropTypes.string,\r\n    visible: PropTypes.bool,\r\n    firstActiveValue: PropTypes.string,\r\n    menuItemSelectedIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.node])\r\n};\r\nexport default DropdownMenu;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\rc-select\\es\\DropdownMenu.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\rc-select\\es\\DropdownMenu.js"],"names":[],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { cloneElement } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport toArray from 'rc-util/es/Children/toArray';\nimport Menu from 'rc-menu';\nimport scrollIntoView from 'dom-scroll-into-view';\nimport raf from 'raf';\nimport { getSelectKeys, preventDefaultEvent, saveRef } from './util';\n\nvar DropdownMenu = function (_React$Component) {\n  _inherits(DropdownMenu, _React$Component);\n\n  function DropdownMenu(props) {\n    _classCallCheck(this, DropdownMenu);\n\n    var _this = _possibleConstructorReturn(this, (DropdownMenu.__proto__ || Object.getPrototypeOf(DropdownMenu)).call(this, props));\n\n    _this.scrollActiveItemToView = function () {\n      // scroll into view\n      var itemComponent = findDOMNode(_this.firstActiveItem);\n      var _this$props = _this.props,\n          value = _this$props.value,\n          visible = _this$props.visible,\n          firstActiveValue = _this$props.firstActiveValue;\n\n\n      if (!itemComponent || !visible) {\n        return;\n      }\n      var scrollIntoViewOpts = {\n        onlyScrollIfNeeded: true\n      };\n      if ((!value || value.length === 0) && firstActiveValue) {\n        scrollIntoViewOpts.alignWithTop = true;\n      }\n\n      // Delay to scroll since current frame item position is not ready when pre view is by filter\n      // https://github.com/ant-design/ant-design/issues/11268#issuecomment-406634462\n      _this.rafInstance = raf(function () {\n        scrollIntoView(itemComponent, findDOMNode(_this.menuRef), scrollIntoViewOpts);\n      });\n    };\n\n    _this.lastInputValue = props.inputValue;\n    _this.saveMenuRef = saveRef(_this, 'menuRef');\n    return _this;\n  }\n\n  _createClass(DropdownMenu, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.scrollActiveItemToView();\n      this.lastVisible = this.props.visible;\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps) {\n      if (!nextProps.visible) {\n        this.lastVisible = false;\n      }\n      // freeze when hide\n      return nextProps.visible || nextProps.inputValue !== this.props.inputValue;\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      var props = this.props;\n      if (!prevProps.visible && props.visible) {\n        this.scrollActiveItemToView();\n      }\n      this.lastVisible = props.visible;\n      this.lastInputValue = props.inputValue;\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.rafInstance && this.rafInstance.cancel) {\n        this.rafInstance.cancel();\n      }\n    }\n  }, {\n    key: 'renderMenu',\n    value: function renderMenu() {\n      var _this2 = this;\n\n      var props = this.props;\n      var menuItems = props.menuItems,\n          menuItemSelectedIcon = props.menuItemSelectedIcon,\n          defaultActiveFirstOption = props.defaultActiveFirstOption,\n          value = props.value,\n          prefixCls = props.prefixCls,\n          multiple = props.multiple,\n          onMenuSelect = props.onMenuSelect,\n          inputValue = props.inputValue,\n          firstActiveValue = props.firstActiveValue,\n          backfillValue = props.backfillValue;\n\n      if (menuItems && menuItems.length) {\n        var menuProps = {};\n        if (multiple) {\n          menuProps.onDeselect = props.onMenuDeselect;\n          menuProps.onSelect = onMenuSelect;\n        } else {\n          menuProps.onClick = onMenuSelect;\n        }\n\n        var selectedKeys = getSelectKeys(menuItems, value);\n        var activeKeyProps = {};\n\n        var clonedMenuItems = menuItems;\n        if (selectedKeys.length || firstActiveValue) {\n          if (props.visible && !this.lastVisible) {\n            activeKeyProps.activeKey = selectedKeys[0] || firstActiveValue;\n          }\n          var foundFirst = false;\n          // set firstActiveItem via cloning menus\n          // for scroll into view\n          var clone = function clone(item) {\n            if (!foundFirst && selectedKeys.indexOf(item.key) !== -1 || !foundFirst && !selectedKeys.length && firstActiveValue.indexOf(item.key) !== -1) {\n              foundFirst = true;\n              return cloneElement(item, {\n                ref: function ref(_ref) {\n                  _this2.firstActiveItem = _ref;\n                }\n              });\n            }\n            return item;\n          };\n\n          clonedMenuItems = menuItems.map(function (item) {\n            if (item.type.isMenuItemGroup) {\n              var children = toArray(item.props.children).map(clone);\n              return cloneElement(item, {}, children);\n            }\n            return clone(item);\n          });\n        } else {\n          // Clear firstActiveItem when dropdown menu items was empty\n          // Avoid `Unable to find node on an unmounted component`\n          // https://github.com/ant-design/ant-design/issues/10774\n          this.firstActiveItem = null;\n        }\n\n        // clear activeKey when inputValue change\n        var lastValue = value && value[value.length - 1];\n        if (inputValue !== this.lastInputValue && (!lastValue || lastValue !== backfillValue)) {\n          activeKeyProps.activeKey = '';\n        }\n        return React.createElement(\n          Menu,\n          _extends({\n            ref: this.saveMenuRef,\n            style: this.props.dropdownMenuStyle,\n            defaultActiveFirst: defaultActiveFirstOption,\n            role: 'listbox',\n            itemIcon: multiple ? menuItemSelectedIcon : null\n          }, activeKeyProps, {\n            multiple: multiple\n          }, menuProps, {\n            selectedKeys: selectedKeys,\n            prefixCls: prefixCls + '-menu'\n          }),\n          clonedMenuItems\n        );\n      }\n      return null;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var renderMenu = this.renderMenu();\n      return renderMenu ? React.createElement(\n        'div',\n        {\n          style: {\n            overflow: 'auto',\n            transform: 'translateZ(0)'\n          },\n          onFocus: this.props.onPopupFocus,\n          onMouseDown: preventDefaultEvent,\n          onScroll: this.props.onPopupScroll\n        },\n        renderMenu\n      ) : null;\n    }\n  }]);\n\n  return DropdownMenu;\n}(React.Component);\n\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.propTypes = {\n  defaultActiveFirstOption: PropTypes.bool,\n  value: PropTypes.any,\n  dropdownMenuStyle: PropTypes.object,\n  multiple: PropTypes.bool,\n  onPopupFocus: PropTypes.func,\n  onPopupScroll: PropTypes.func,\n  onMenuDeSelect: PropTypes.func,\n  onMenuSelect: PropTypes.func,\n  prefixCls: PropTypes.string,\n  menuItems: PropTypes.any,\n  inputValue: PropTypes.string,\n  visible: PropTypes.bool,\n  firstActiveValue: PropTypes.string,\n  menuItemSelectedIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.node])\n};\nexport default DropdownMenu;"]}]}