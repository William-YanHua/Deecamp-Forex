{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/util/view.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/util/view.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { head, filter, map, some } from '@antv/util';\nimport { ORIGIN } from '../dependents';\nexport function getAllGeometryByType(view, type) {\n    return filter(view.geometries, function (geometry) { return geometry.type === type; });\n}\nexport function getGeometryByType(view, type) {\n    return head(getAllGeometryByType(view, type));\n}\nexport function getGeometryShapes(geometry) {\n    return map(geometry.elements, function (element) { return element.shape; });\n}\nexport function forEachGeometry(view, callback) {\n    view.geometries.forEach(callback);\n}\nexport function forEachElement(view, callback) {\n    view.geometries.forEach(function (geometry) {\n        geometry.elements.forEach(function (element) {\n            callback(element);\n        });\n    });\n}\nexport function checkOriginEqual(cur, dones, compare) {\n    return some(dones, function (done) {\n        return compare(done.get(ORIGIN), cur.get(ORIGIN));\n    });\n}\nexport function moveInPanel(shape, panel) {\n    var box = shape.getBBox();\n    var deltaX = 0;\n    var deltaY = 0;\n    if (box.minX < panel.minX) {\n        deltaX = box.minX - panel.minX;\n    }\n    else if (box.maxX > panel.maxX) {\n        deltaX = box.maxX - panel.maxX;\n    }\n    if (deltaX) {\n        shape.attr('x', shape.attr('x') - deltaX);\n    }\n    if (box.minY < panel.minY) {\n        deltaY = box.minY - panel.minY;\n    }\n    else if (box.maxY > panel.maxY) {\n        deltaY = box.maxY - panel.maxY;\n    }\n    if (deltaY) {\n        shape.attr('y', shape.attr('y') - deltaY);\n    }\n}\nexport function getOverlapArea(a, b, margin) {\n    if (margin === void 0) {\n        margin = 0;\n    }\n    var xOverlap = Math.max(0, Math.min(a.x + a.width + margin, b.x + b.width + margin) - Math.max(a.x - margin, b.x - margin));\n    var yOverlap = Math.max(0, Math.min(a.y + a.height + margin, b.y + b.height + margin) - Math.max(a.y - margin, b.y - margin));\n    return xOverlap * yOverlap;\n}\nexport function checkShapeOverlap(cur, dones) {\n    var box = cur.getBBox();\n    return some(dones, function (done) {\n        var target = done.getBBox();\n        return getOverlapArea(box, target, 2) > 0;\n    });\n}\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/util/view.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/util/view.js"],"names":[],"mappings":"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","sourcesContent":["import { head, filter, map, some } from '@antv/util';\nimport { ORIGIN } from '../dependents';\nexport function getAllGeometryByType(view, type) {\n    return filter(view.geometries, function (geometry) { return geometry.type === type; });\n}\nexport function getGeometryByType(view, type) {\n    return head(getAllGeometryByType(view, type));\n}\nexport function getGeometryShapes(geometry) {\n    return map(geometry.elements, function (element) { return element.shape; });\n}\nexport function forEachGeometry(view, callback) {\n    view.geometries.forEach(callback);\n}\nexport function forEachElement(view, callback) {\n    view.geometries.forEach(function (geometry) {\n        geometry.elements.forEach(function (element) {\n            callback(element);\n        });\n    });\n}\n/** 检测是否有和已存在的Shape数据`相等`的情况 */\nexport function checkOriginEqual(cur, dones, compare) {\n    return some(dones, function (done) {\n        return compare(done.get(ORIGIN), cur.get(ORIGIN));\n    });\n}\n/** 将label调整到panel内 */\nexport function moveInPanel(shape, panel) {\n    var box = shape.getBBox();\n    var deltaX = 0;\n    var deltaY = 0;\n    if (box.minX < panel.minX) {\n        deltaX = box.minX - panel.minX;\n    }\n    else if (box.maxX > panel.maxX) {\n        deltaX = box.maxX - panel.maxX;\n    }\n    if (deltaX) {\n        shape.attr('x', shape.attr('x') - deltaX);\n    }\n    if (box.minY < panel.minY) {\n        deltaY = box.minY - panel.minY;\n    }\n    else if (box.maxY > panel.maxY) {\n        deltaY = box.maxY - panel.maxY;\n    }\n    if (deltaY) {\n        shape.attr('y', shape.attr('y') - deltaY);\n    }\n}\n/**\n * 计算两个矩形之间的堆叠区域面积\n */\nexport function getOverlapArea(a, b, margin) {\n    if (margin === void 0) { margin = 0; }\n    var xOverlap = Math.max(0, Math.min(a.x + a.width + margin, b.x + b.width + margin) - Math.max(a.x - margin, b.x - margin));\n    var yOverlap = Math.max(0, Math.min(a.y + a.height + margin, b.y + b.height + margin) - Math.max(a.y - margin, b.y - margin));\n    return xOverlap * yOverlap;\n}\n/** 检测是否和已布局的堆叠 */\nexport function checkShapeOverlap(cur, dones) {\n    var box = cur.getBBox();\n    return some(dones, function (done) {\n        var target = done.getBBox();\n        return getOverlapArea(box, target, 2) > 0;\n    });\n}\n//# sourceMappingURL=view.js.map"]}]}