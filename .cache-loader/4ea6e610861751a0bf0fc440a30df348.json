{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\geom\\label\\polar-labels.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\geom\\label\\polar-labels.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\r\nvar Labels = require('./geom-labels');\r\nvar PathUtil = require('../util/path');\r\nvar Util = require('../../util');\r\nvar PolarLabels = function (_Labels) {\r\n    _inheritsLoose(PolarLabels, _Labels);\r\n    function PolarLabels() {\r\n        return _Labels.apply(this, arguments) || this;\r\n    }\r\n    var _proto = PolarLabels.prototype;\r\n    _proto.getPointRauis = function getPointRauis(coord, point) {\r\n        return PathUtil.getPointRadius(coord, point);\r\n    };\r\n    _proto.getCirclePoint = function getCirclePoint(angle, offset, point) {\r\n        var self = this;\r\n        var coord = self.get('coord');\r\n        var center = coord.getCenter();\r\n        var labelEmit = self._isEmitLabels();\r\n        var r = self.getPointRauis(coord, point);\r\n        if (r === 0) {\r\n            return null;\r\n        }\r\n        if (coord.isTransposed) {\r\n            if (r > offset[0] && !labelEmit) {\r\n                var appendAngle = Math.asin(offset[1] / (2 * r));\r\n                r += offset[0];\r\n                angle = angle + appendAngle * 2;\r\n            }\r\n        }\r\n        else {\r\n            var _appendAngle = Math.asin(offset[0] / (2 * r));\r\n            angle = angle + _appendAngle * 2;\r\n            r += offset[1];\r\n        }\r\n        return {\r\n            x: center.x + r * Math.cos(angle),\r\n            y: center.y + r * Math.sin(angle),\r\n            angle: angle,\r\n            r: r\r\n        };\r\n    };\r\n    _proto.getArcPoint = function getArcPoint(point, index) {\r\n        var self = this;\r\n        var outerPoint;\r\n        index = index || 0;\r\n        if (Util.isArray(point.x) || Util.isArray(point.y)) {\r\n            outerPoint = {\r\n                x: Util.isArray(point.x) ? point.x[index] : point.x,\r\n                y: Util.isArray(point.y) ? point.y[index] : point.y\r\n            };\r\n        }\r\n        else {\r\n            outerPoint = point;\r\n        }\r\n        self.transLabelPoint(outerPoint);\r\n        return outerPoint;\r\n    };\r\n    _proto.getPointAngle = function getPointAngle(point) {\r\n        var self = this;\r\n        var coord = self.get('coord');\r\n        return PathUtil.getPointAngle(coord, point);\r\n    };\r\n    _proto.getMiddlePoint = function getMiddlePoint(points) {\r\n        var self = this;\r\n        var coord = self.get('coord');\r\n        var count = points.length;\r\n        var middlePoint = {\r\n            x: 0,\r\n            y: 0\r\n        };\r\n        Util.each(points, function (point) {\r\n            middlePoint.x += point.x;\r\n            middlePoint.y += point.y;\r\n        });\r\n        middlePoint.x /= count;\r\n        middlePoint.y /= count;\r\n        middlePoint = coord.convert(middlePoint);\r\n        return middlePoint;\r\n    };\r\n    _proto._isToMiddle = function _isToMiddle(point) {\r\n        return point.x.length > 2;\r\n    };\r\n    _proto.getLabelPoint = function getLabelPoint(labels, point, index) {\r\n        var self = this;\r\n        var text = labels.text[index];\r\n        var factor = 1;\r\n        var arcPoint;\r\n        if (self._isToMiddle(point)) {\r\n            arcPoint = self.getMiddlePoint(point.points);\r\n        }\r\n        else {\r\n            if (labels.text.length === 1 && index === 0) {\r\n                index = 1;\r\n            }\r\n            else if (index === 0) {\r\n                factor = -1;\r\n            }\r\n            arcPoint = self.getArcPoint(point, index);\r\n        }\r\n        var offset = labels.offset;\r\n        offset = [offset[0] * factor, offset[1] * factor];\r\n        labels._offset = offset;\r\n        var middleAngle = self.getPointAngle(arcPoint);\r\n        var labelPoint = self.getCirclePoint(middleAngle, offset, arcPoint);\r\n        if (!labelPoint) {\r\n            labelPoint = {\r\n                text: ''\r\n            };\r\n        }\r\n        else {\r\n            labelPoint.text = text;\r\n            labelPoint.angle = middleAngle;\r\n            labelPoint.color = point.color;\r\n        }\r\n        labelPoint.rotate = self.getLabelRotate(middleAngle, offset, point);\r\n        return labelPoint;\r\n    };\r\n    _proto._isEmitLabels = function _isEmitLabels() {\r\n        var labels = this.get('label');\r\n        return labels.labelEmit;\r\n    };\r\n    _proto.getLabelRotate = function getLabelRotate(angle) {\r\n        var self = this;\r\n        var rotate;\r\n        rotate = angle * 180 / Math.PI;\r\n        rotate += 90;\r\n        if (self._isEmitLabels()) {\r\n            rotate -= 90;\r\n        }\r\n        if (rotate) {\r\n            if (rotate > 90) {\r\n                rotate = rotate - 180;\r\n            }\r\n            else if (rotate < -90) {\r\n                rotate = rotate + 180;\r\n            }\r\n        }\r\n        return rotate / 180 * Math.PI;\r\n    };\r\n    _proto.getLabelAlign = function getLabelAlign(point) {\r\n        var self = this;\r\n        var coord = self.get('coord');\r\n        var align;\r\n        if (self._isEmitLabels()) {\r\n            if (point.angle <= Math.PI / 2 && point.angle > -Math.PI / 2) {\r\n                align = 'left';\r\n            }\r\n            else {\r\n                align = 'right';\r\n            }\r\n        }\r\n        else if (!coord.isTransposed) {\r\n            align = 'center';\r\n        }\r\n        else {\r\n            var center = coord.getCenter();\r\n            var offset = self.getDefaultOffset(point);\r\n            if (Math.abs(point.x - center.x) < 1) {\r\n                align = 'center';\r\n            }\r\n            else if (point.angle > Math.PI || point.angle <= 0) {\r\n                if (offset > 0) {\r\n                    align = 'left';\r\n                }\r\n                else {\r\n                    align = 'right';\r\n                }\r\n            }\r\n            else {\r\n                if (offset > 0) {\r\n                    align = 'right';\r\n                }\r\n                else {\r\n                    align = 'left';\r\n                }\r\n            }\r\n        }\r\n        return align;\r\n    };\r\n    return PolarLabels;\r\n}(Labels);\r\nmodule.exports = PolarLabels;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\geom\\label\\polar-labels.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\geom\\label\\polar-labels.js"],"names":[],"mappings":"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","sourcesContent":["function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar Labels = require('./geom-labels');\n\nvar PathUtil = require('../util/path');\n\nvar Util = require('../../util');\n\nvar PolarLabels =\n/*#__PURE__*/\nfunction (_Labels) {\n  _inheritsLoose(PolarLabels, _Labels);\n\n  function PolarLabels() {\n    return _Labels.apply(this, arguments) || this;\n  }\n\n  var _proto = PolarLabels.prototype;\n\n  _proto.getPointRauis = function getPointRauis(coord, point) {\n    return PathUtil.getPointRadius(coord, point);\n  };\n\n  _proto.getCirclePoint = function getCirclePoint(angle, offset, point) {\n    var self = this;\n    var coord = self.get('coord');\n    var center = coord.getCenter();\n\n    var labelEmit = self._isEmitLabels();\n\n    var r = self.getPointRauis(coord, point);\n\n    if (r === 0) {\n      return null;\n    }\n\n    if (coord.isTransposed) {\n      if (r > offset[0] && !labelEmit) {\n        var appendAngle = Math.asin(offset[1] / (2 * r));\n        r += offset[0];\n        angle = angle + appendAngle * 2;\n      }\n    } else {\n      var _appendAngle = Math.asin(offset[0] / (2 * r));\n\n      angle = angle + _appendAngle * 2;\n      r += offset[1];\n    }\n    /*    if (coord.isTransposed && r > offset[1] && !labelEmit) {\n          const appendAngle = Math.asin(offset / (2 * r));\n          angle = angle + appendAngle * 2;\n        } else {\n          r = r + offset;\n        }*/\n\n\n    return {\n      x: center.x + r * Math.cos(angle),\n      y: center.y + r * Math.sin(angle),\n      angle: angle,\n      r: r\n    };\n  };\n\n  _proto.getArcPoint = function getArcPoint(point, index) {\n    var self = this;\n    var outerPoint; // 圆弧上的中点\n    // var coord = self.get('coord');\n\n    index = index || 0;\n\n    if (Util.isArray(point.x) || Util.isArray(point.y)) {\n      outerPoint = {\n        x: Util.isArray(point.x) ? point.x[index] : point.x,\n        y: Util.isArray(point.y) ? point.y[index] : point.y\n      };\n    } else {\n      outerPoint = point;\n    }\n\n    self.transLabelPoint(outerPoint);\n    return outerPoint;\n  }; // 获取点所在的角度\n\n\n  _proto.getPointAngle = function getPointAngle(point) {\n    var self = this;\n    var coord = self.get('coord');\n    return PathUtil.getPointAngle(coord, point);\n  }; // 获取中心的位置\n\n\n  _proto.getMiddlePoint = function getMiddlePoint(points) {\n    var self = this;\n    var coord = self.get('coord');\n    var count = points.length;\n    var middlePoint = {\n      x: 0,\n      y: 0\n    };\n    Util.each(points, function (point) {\n      middlePoint.x += point.x;\n      middlePoint.y += point.y;\n    });\n    middlePoint.x /= count;\n    middlePoint.y /= count;\n    middlePoint = coord.convert(middlePoint);\n    return middlePoint;\n  }; // 是否居中\n\n\n  _proto._isToMiddle = function _isToMiddle(point) {\n    return point.x.length > 2;\n  };\n  /**\n   * @protected\n   * 获取文本的位置信息\n   * @param {Array} labels labels\n   * @param {Object} point point\n   * @param {Number} index index\n   * @return {Object} point\n   */\n\n\n  _proto.getLabelPoint = function getLabelPoint(labels, point, index) {\n    var self = this;\n    var text = labels.text[index];\n    var factor = 1;\n    var arcPoint;\n\n    if (self._isToMiddle(point)) {\n      arcPoint = self.getMiddlePoint(point.points);\n    } else {\n      if (labels.text.length === 1 && index === 0) {\n        index = 1;\n      } else if (index === 0) {\n        factor = -1;\n      }\n\n      arcPoint = self.getArcPoint(point, index);\n    }\n\n    var offset = labels.offset;\n    offset = [offset[0] * factor, offset[1] * factor];\n    labels._offset = offset;\n    var middleAngle = self.getPointAngle(arcPoint);\n    var labelPoint = self.getCirclePoint(middleAngle, offset, arcPoint);\n\n    if (!labelPoint) {\n      labelPoint = {\n        text: ''\n      };\n    } else {\n      labelPoint.text = text;\n      labelPoint.angle = middleAngle;\n      labelPoint.color = point.color;\n    }\n\n    labelPoint.rotate = self.getLabelRotate(middleAngle, offset, point);\n    return labelPoint;\n  };\n\n  _proto._isEmitLabels = function _isEmitLabels() {\n    var labels = this.get('label');\n    return labels.labelEmit;\n  };\n  /**\n   * @protected\n   * 获取文本旋转的方向\n   * @param {Number} angle angle\n   * @return {Number} angle\n   */\n\n\n  _proto.getLabelRotate = function getLabelRotate(angle) {\n    var self = this;\n    var rotate;\n    rotate = angle * 180 / Math.PI;\n    rotate += 90;\n\n    if (self._isEmitLabels()) {\n      rotate -= 90;\n    }\n\n    if (rotate) {\n      if (rotate > 90) {\n        rotate = rotate - 180;\n      } else if (rotate < -90) {\n        rotate = rotate + 180;\n      }\n    }\n\n    return rotate / 180 * Math.PI;\n  }; // override\n\n\n  _proto.getLabelAlign = function getLabelAlign(point) {\n    var self = this;\n    var coord = self.get('coord');\n    var align;\n\n    if (self._isEmitLabels()) {\n      if (point.angle <= Math.PI / 2 && point.angle > -Math.PI / 2) {\n        align = 'left';\n      } else {\n        align = 'right';\n      }\n    } else if (!coord.isTransposed) {\n      align = 'center';\n    } else {\n      var center = coord.getCenter();\n      var offset = self.getDefaultOffset(point);\n\n      if (Math.abs(point.x - center.x) < 1) {\n        align = 'center';\n      } else if (point.angle > Math.PI || point.angle <= 0) {\n        if (offset > 0) {\n          align = 'left';\n        } else {\n          align = 'right';\n        }\n      } else {\n        if (offset > 0) {\n          align = 'right';\n        } else {\n          align = 'left';\n        }\n      }\n    }\n\n    return align;\n  };\n\n  return PolarLabels;\n}(Labels);\n\nmodule.exports = PolarLabels;"]}]}