{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\matrix-util\\esm\\ext.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\matrix-util\\esm\\ext.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { mat3, vec2 } from 'gl-matrix';\r\nexport function leftTranslate(out, a, v) {\r\n    var transMat = [0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    mat3.fromTranslation(transMat, v);\r\n    return mat3.multiply(out, transMat, a);\r\n}\r\nexport function leftRotate(out, a, rad) {\r\n    var rotateMat = [0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    mat3.fromRotation(rotateMat, rad);\r\n    return mat3.multiply(out, rotateMat, a);\r\n}\r\nexport function leftScale(out, a, v) {\r\n    var scaleMat = [0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    mat3.fromScaling(scaleMat, v);\r\n    return mat3.multiply(out, scaleMat, a);\r\n}\r\nfunction leftMultiply(out, a, a1) {\r\n    return mat3.multiply(out, a1, a);\r\n}\r\nexport function transform(m, actions) {\r\n    var matrix = m ? [].concat(m) : [1, 0, 0, 0, 1, 0, 0, 0, 1];\r\n    for (var i = 0, len = actions.length; i < len; i++) {\r\n        var action = actions[i];\r\n        switch (action[0]) {\r\n            case 't':\r\n                leftTranslate(matrix, matrix, [action[1], action[2]]);\r\n                break;\r\n            case 's':\r\n                leftScale(matrix, matrix, [action[1], action[2]]);\r\n                break;\r\n            case 'r':\r\n                leftRotate(matrix, matrix, action[1]);\r\n                break;\r\n            case 'm':\r\n                leftMultiply(matrix, matrix, action[1]);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return matrix;\r\n}\r\nexport function direction(v1, v2) {\r\n    return v1[0] * v2[1] - v2[0] * v1[1];\r\n}\r\nexport function angleTo(v1, v2, direct) {\r\n    var ang = vec2.angle(v1, v2);\r\n    var angleLargeThanPI = direction(v1, v2) >= 0;\r\n    if (direct) {\r\n        if (angleLargeThanPI) {\r\n            return Math.PI * 2 - ang;\r\n        }\r\n        return ang;\r\n    }\r\n    if (angleLargeThanPI) {\r\n        return ang;\r\n    }\r\n    return Math.PI * 2 - ang;\r\n}\r\nexport function vertical(out, v, flag) {\r\n    if (flag) {\r\n        out[0] = v[1];\r\n        out[1] = -1 * v[0];\r\n    }\r\n    else {\r\n        out[0] = -1 * v[1];\r\n        out[1] = v[0];\r\n    }\r\n    return out;\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\matrix-util\\esm\\ext.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\matrix-util\\esm\\ext.js"],"names":[],"mappings":"AAGA,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,WAAW,CAAC;AACvC,MAAM,UAAU,aAAa,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC;IACnC,IAAI,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IAClC,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;AAC3C,CAAC;AACD,MAAM,UAAU,UAAU,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG;IAClC,IAAI,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5C,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;IAClC,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;AAC5C,CAAC;AACD,MAAM,UAAU,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC;IAC/B,IAAI,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IAC9B,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;AAC3C,CAAC;AACD,SAAS,YAAY,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE;IAC5B,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AACrC,CAAC;AAMD,MAAM,UAAU,SAAS,CAAC,CAAC,EAAE,OAAO;IAChC,IAAI,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;QAChD,IAAI,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QACxB,QAAQ,MAAM,CAAC,CAAC,CAAC,EAAE;YACf,KAAK,GAAG;gBACJ,aAAa,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtD,MAAM;YACV,KAAK,GAAG;gBACJ,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClD,MAAM;YACV,KAAK,GAAG;gBACJ,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtC,MAAM;YACV,KAAK,GAAG;gBACJ,YAAY,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxC,MAAM;YACV;gBACI,MAAM;SACb;KACJ;IACD,OAAO,MAAM,CAAC;AAClB,CAAC;AAOD,MAAM,UAAU,SAAS,CAAC,EAAE,EAAE,EAAE;IAC5B,OAAO,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC;AAOD,MAAM,UAAU,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM;IAClC,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAC7B,IAAI,gBAAgB,GAAG,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC;IAC9C,IAAI,MAAM,EAAE;QACR,IAAI,gBAAgB,EAAE;YAClB,OAAO,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC;SAC5B;QACD,OAAO,GAAG,CAAC;KACd;IACD,IAAI,gBAAgB,EAAE;QAClB,OAAO,GAAG,CAAC;KACd;IACD,OAAO,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC;AAC7B,CAAC;AAOD,MAAM,UAAU,QAAQ,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI;IACjC,IAAI,IAAI,EAAE;QACN,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACd,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;KACtB;SACI;QACD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACnB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;KACjB;IACD,OAAO,GAAG,CAAC;AACf,CAAC","sourcesContent":["/**\n * @description 扩展方法，提供 gl-matrix 为提供的方法\n * */\nimport { mat3, vec2 } from 'gl-matrix';\nexport function leftTranslate(out, a, v) {\n    var transMat = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n    mat3.fromTranslation(transMat, v);\n    return mat3.multiply(out, transMat, a);\n}\nexport function leftRotate(out, a, rad) {\n    var rotateMat = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n    mat3.fromRotation(rotateMat, rad);\n    return mat3.multiply(out, rotateMat, a);\n}\nexport function leftScale(out, a, v) {\n    var scaleMat = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n    mat3.fromScaling(scaleMat, v);\n    return mat3.multiply(out, scaleMat, a);\n}\nfunction leftMultiply(out, a, a1) {\n    return mat3.multiply(out, a1, a);\n}\n/**\n * 根据 actions 来做 transform\n * @param m\n * @param actions\n */\nexport function transform(m, actions) {\n    var matrix = m ? [].concat(m) : [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    for (var i = 0, len = actions.length; i < len; i++) {\n        var action = actions[i];\n        switch (action[0]) {\n            case 't':\n                leftTranslate(matrix, matrix, [action[1], action[2]]);\n                break;\n            case 's':\n                leftScale(matrix, matrix, [action[1], action[2]]);\n                break;\n            case 'r':\n                leftRotate(matrix, matrix, action[1]);\n                break;\n            case 'm':\n                leftMultiply(matrix, matrix, action[1]);\n                break;\n            default:\n                break;\n        }\n    }\n    return matrix;\n}\n/**\n * 向量 v1 到 向量 v2 夹角的方向\n * @param  {Array} v1 向量\n * @param  {Array} v2 向量\n * @return {Boolean} >= 0 顺时针 < 0 逆时针\n */\nexport function direction(v1, v2) {\n    return v1[0] * v2[1] - v2[0] * v1[1];\n}\n/**\n * 二维向量 v1 到 v2 的夹角\n * @param v1\n * @param v2\n * @param direct\n */\nexport function angleTo(v1, v2, direct) {\n    var ang = vec2.angle(v1, v2);\n    var angleLargeThanPI = direction(v1, v2) >= 0;\n    if (direct) {\n        if (angleLargeThanPI) {\n            return Math.PI * 2 - ang;\n        }\n        return ang;\n    }\n    if (angleLargeThanPI) {\n        return ang;\n    }\n    return Math.PI * 2 - ang;\n}\n/**\n * 计算二维向量的垂直向量\n * @param out\n * @param v\n * @param flag\n */\nexport function vertical(out, v, flag) {\n    if (flag) {\n        out[0] = v[1];\n        out[1] = -1 * v[0];\n    }\n    else {\n        out[0] = -1 * v[1];\n        out[1] = v[0];\n    }\n    return out;\n}\n//# sourceMappingURL=ext.js.map"]}]}