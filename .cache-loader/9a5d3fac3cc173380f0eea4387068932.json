{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/treemap/components/label.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/treemap/components/label.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { each, deepMix, clone, find } from '@antv/util';\nimport { breakText } from '../../../util/common';\nvar LEAF_LABEL_OFFSET = 4;\nvar MIN_FONTSIZE = 8;\nfunction isLeaf(data, maxLevel) {\n    return !data.children || data.depth >= maxLevel;\n}\nfunction textWrapper(label, width, container) {\n    var fontSize = label.attr('fontSize');\n    var textContent = label.attr('text');\n    var tShape = container.addShape('text', {\n        attrs: {\n            text: '',\n            x: 0,\n            y: 0,\n            fontSize: fontSize,\n        },\n    });\n    var textArr = textContent.split('\\n');\n    var wrappedTextArr = textArr.map(function (wrappedText) {\n        var text = '';\n        var chars = wrappedText.split('');\n        var breakIndex = [];\n        for (var i = 0; i < chars.length; i++) {\n            var item = chars[i];\n            tShape.attr('text', (text += item));\n            var currentWidth = tShape.getBBox().width - 1;\n            if (currentWidth > width) {\n                if (i === 0) {\n                    break;\n                }\n                breakIndex.push(i);\n                text = '';\n            }\n        }\n        return breakText(chars, breakIndex);\n    });\n    tShape.remove();\n    return wrappedTextArr.join('\\n');\n}\nfunction textAbbreviate(text, fontSize, width, container) {\n    var tailShape = container.addShape('text', {\n        attrs: {\n            text: '...',\n            x: 0,\n            y: 0,\n            fontSize: fontSize,\n        },\n    });\n    var tailWidth = tailShape.getBBox().width;\n    var tShape = container.addShape('text', {\n        attrs: {\n            text: '',\n            x: 0,\n            y: 0,\n            fontSize: fontSize,\n        },\n    });\n    var t = '';\n    var abbreviateWidth = width - tailWidth;\n    for (var i = 0; i < text.length; i++) {\n        var item = text[i];\n        tShape.attr('text', (t += item));\n        var currentWidth = tShape.getBBox().width;\n        if (currentWidth >= abbreviateWidth) {\n            var string = t.substr(0, t.length - 1);\n            if (string.length > 0) {\n                return string + '...';\n            }\n        }\n    }\n    tShape.remove();\n    tailShape.remove();\n    return t;\n}\nvar TreemapLabel = (function () {\n    function TreemapLabel(cfg) {\n        this.destroyed = false;\n        this.view = cfg.view;\n        this.plot = cfg.plot;\n        var defaultOptions = this.getDefaultOptions();\n        this.options = deepMix(defaultOptions, cfg, {});\n        this.init();\n    }\n    TreemapLabel.prototype.init = function () {\n        var _this = this;\n        this.container = this.getGeometry().labelsContainer;\n        this.view.on('beforerender', function () {\n            _this.clear();\n            _this.plot.canvas.draw();\n        });\n    };\n    TreemapLabel.prototype.render = function () {\n        var _this = this;\n        var elements = this.getGeometry().elements;\n        each(elements, function (ele) {\n            var shape = ele.shape;\n            var data = shape.get('origin').data;\n            var isLeafNode = isLeaf(data, _this.plot.options.maxLevel);\n            if (data.showLabel) {\n                var style = clone(_this.options.style);\n                var position = _this.getPosition(shape, isLeafNode);\n                var formatter = _this.options.formatter;\n                var content = formatter ? formatter(data.name) : data.name;\n                var textBaseline = _this.getTextBaseLine(isLeafNode);\n                var label = _this.container.addShape('text', {\n                    attrs: deepMix({}, style, {\n                        x: position.x,\n                        y: position.y,\n                        text: content,\n                        fill: 'black',\n                        textAlign: 'center',\n                        textBaseline: textBaseline,\n                        fontWeight: isLeafNode ? 300 : 600,\n                    }),\n                    name: 'label',\n                });\n                _this.adjustLabel(label, shape, isLeafNode);\n            }\n        });\n    };\n    TreemapLabel.prototype.clear = function () {\n        if (this.container) {\n            this.container.clear();\n        }\n    };\n    TreemapLabel.prototype.hide = function () {\n        this.container.set('visible', false);\n        this.plot.canvas.draw();\n    };\n    TreemapLabel.prototype.show = function () {\n        this.container.set('visible', true);\n        this.plot.canvas.draw();\n    };\n    TreemapLabel.prototype.destroy = function () {\n        if (this.container) {\n            this.container.remove();\n        }\n        this.destroyed = true;\n    };\n    TreemapLabel.prototype.getBBox = function () {\n        return this.container.getBBox();\n    };\n    TreemapLabel.prototype.getPosition = function (shape, isLeafNode) {\n        var shapeBbox = shape.getBBox();\n        var x = 0;\n        var y = 0;\n        if (!isLeafNode) {\n            x = shapeBbox.x + shapeBbox.width / 2;\n            y = shapeBbox.y + 4;\n        }\n        else {\n            x = shapeBbox.minX + shapeBbox.width / 2;\n            y = shapeBbox.minY + shapeBbox.height / 2;\n        }\n        return { x: x, y: y };\n    };\n    TreemapLabel.prototype.getTextBaseLine = function (isLeafNode) {\n        return isLeafNode ? 'middle' : 'top';\n    };\n    TreemapLabel.prototype.adjustLabel = function (label, shape, isLeafNode) {\n        if (isLeafNode) {\n            this.adjustLeafLabel(label, shape);\n        }\n        else {\n            this.adjustParentLabel(label, shape);\n        }\n    };\n    TreemapLabel.prototype.adjustLeafLabel = function (label, shape) {\n        var bbox = shape.getBBox();\n        var labelBBox = label.getBBox();\n        var labelText = clone(label.attr('text'));\n        var sizeOffset = 2;\n        var fontSize = Math.max(label.attr('fontSize') - sizeOffset, MIN_FONTSIZE);\n        var centerX = bbox.x + bbox.width / 2;\n        var centerY = bbox.y + bbox.height / 2;\n        label.attr({\n            x: centerX,\n            y: centerY,\n            textAlign: 'center',\n            textBaseline: 'middle',\n            lineHeight: fontSize,\n            fontSize: fontSize,\n        });\n        var wrapperWidth = bbox.width - LEAF_LABEL_OFFSET * 2;\n        if (labelBBox.width > bbox.width && labelBBox.height > bbox.height) {\n            label.attr('text', '');\n            return;\n        }\n        else if (wrapperWidth < fontSize) {\n            label.attr('text', '');\n            return;\n        }\n        if (labelBBox.width > bbox.width) {\n            var wrappedText = textWrapper(label, wrapperWidth, this.container);\n            label.attr({\n                lineHeight: label.attr('fontSize'),\n                text: wrappedText,\n            });\n            var tem_bbox = label.getBBox();\n            if (tem_bbox.height > bbox.height) {\n                var text = textAbbreviate(labelText, fontSize, wrapperWidth, this.container);\n                label.attr('text', text);\n            }\n        }\n    };\n    TreemapLabel.prototype.adjustParentLabel = function (label, shape) {\n        var shapeBbox = shape.getBBox();\n        var wrapperWidth = shapeBbox.width - LEAF_LABEL_OFFSET * 2;\n        if (label.getBBox().width > wrapperWidth) {\n            var text = textAbbreviate(label.attr('text'), label.attr('fontSize'), wrapperWidth, this.container);\n            label.attr('text', text);\n        }\n    };\n    TreemapLabel.prototype.getDefaultOptions = function () {\n        var theme = this.plot.theme;\n        var labelStyle = theme.label.style;\n        return {\n            offsetX: 0,\n            offsetY: 0,\n            style: clone(labelStyle),\n        };\n    };\n    TreemapLabel.prototype.getGeometry = function () {\n        return find(this.view.geometries, function (geom) { return geom.type === 'polygon'; });\n    };\n    return TreemapLabel;\n}());\nexport default TreemapLabel;\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/treemap/components/label.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/treemap/components/label.js"],"names":[],"mappings":"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","sourcesContent":["import { each, deepMix, clone, find } from '@antv/util';\nimport { breakText } from '../../../util/common';\nvar LEAF_LABEL_OFFSET = 4;\nvar MIN_FONTSIZE = 8;\nfunction isLeaf(data, maxLevel) {\n    return !data.children || data.depth >= maxLevel;\n}\nfunction textWrapper(label, width, container) {\n    var fontSize = label.attr('fontSize');\n    var textContent = label.attr('text');\n    var tShape = container.addShape('text', {\n        attrs: {\n            text: '',\n            x: 0,\n            y: 0,\n            fontSize: fontSize,\n        },\n    });\n    var textArr = textContent.split('\\n');\n    var wrappedTextArr = textArr.map(function (wrappedText) {\n        var text = '';\n        var chars = wrappedText.split('');\n        var breakIndex = [];\n        for (var i = 0; i < chars.length; i++) {\n            var item = chars[i];\n            tShape.attr('text', (text += item));\n            var currentWidth = tShape.getBBox().width - 1;\n            if (currentWidth > width) {\n                // 如果是第一个字符就大于宽度不做任何换行处理\n                if (i === 0) {\n                    break;\n                }\n                breakIndex.push(i);\n                text = '';\n            }\n        }\n        return breakText(chars, breakIndex);\n    });\n    tShape.remove();\n    return wrappedTextArr.join('\\n');\n}\nfunction textAbbreviate(text, fontSize, width, container) {\n    var tailShape = container.addShape('text', {\n        attrs: {\n            text: '...',\n            x: 0,\n            y: 0,\n            fontSize: fontSize,\n        },\n    });\n    var tailWidth = tailShape.getBBox().width;\n    var tShape = container.addShape('text', {\n        attrs: {\n            text: '',\n            x: 0,\n            y: 0,\n            fontSize: fontSize,\n        },\n    });\n    var t = '';\n    var abbreviateWidth = width - tailWidth;\n    for (var i = 0; i < text.length; i++) {\n        var item = text[i];\n        tShape.attr('text', (t += item));\n        var currentWidth = tShape.getBBox().width;\n        if (currentWidth >= abbreviateWidth) {\n            var string = t.substr(0, t.length - 1);\n            if (string.length > 0) {\n                return string + '...';\n            }\n        }\n    }\n    tShape.remove();\n    tailShape.remove();\n    return t;\n}\nvar TreemapLabel = /** @class */ (function () {\n    function TreemapLabel(cfg) {\n        this.destroyed = false;\n        this.view = cfg.view;\n        this.plot = cfg.plot;\n        var defaultOptions = this.getDefaultOptions();\n        this.options = deepMix(defaultOptions, cfg, {});\n        this.init();\n    }\n    TreemapLabel.prototype.init = function () {\n        var _this = this;\n        this.container = this.getGeometry().labelsContainer;\n        this.view.on('beforerender', function () {\n            _this.clear();\n            _this.plot.canvas.draw();\n        });\n    };\n    TreemapLabel.prototype.render = function () {\n        var _this = this;\n        var elements = this.getGeometry().elements;\n        each(elements, function (ele) {\n            var shape = ele.shape;\n            var data = shape.get('origin').data;\n            var isLeafNode = isLeaf(data, _this.plot.options.maxLevel);\n            if (data.showLabel) {\n                var style = clone(_this.options.style);\n                var position = _this.getPosition(shape, isLeafNode);\n                var formatter = _this.options.formatter;\n                var content = formatter ? formatter(data.name) : data.name;\n                var textBaseline = _this.getTextBaseLine(isLeafNode);\n                var label = _this.container.addShape('text', {\n                    attrs: deepMix({}, style, {\n                        x: position.x,\n                        y: position.y,\n                        text: content,\n                        fill: 'black',\n                        textAlign: 'center',\n                        textBaseline: textBaseline,\n                        fontWeight: isLeafNode ? 300 : 600,\n                    }),\n                    name: 'label',\n                });\n                _this.adjustLabel(label, shape, isLeafNode);\n            }\n        });\n    };\n    TreemapLabel.prototype.clear = function () {\n        if (this.container) {\n            this.container.clear();\n        }\n    };\n    TreemapLabel.prototype.hide = function () {\n        this.container.set('visible', false);\n        this.plot.canvas.draw();\n    };\n    TreemapLabel.prototype.show = function () {\n        this.container.set('visible', true);\n        this.plot.canvas.draw();\n    };\n    TreemapLabel.prototype.destroy = function () {\n        if (this.container) {\n            this.container.remove();\n        }\n        this.destroyed = true;\n    };\n    TreemapLabel.prototype.getBBox = function () {\n        return this.container.getBBox();\n    };\n    TreemapLabel.prototype.getPosition = function (shape, isLeafNode) {\n        var shapeBbox = shape.getBBox();\n        var x = 0;\n        var y = 0;\n        if (!isLeafNode) {\n            x = shapeBbox.x + shapeBbox.width / 2;\n            y = shapeBbox.y + 4;\n        }\n        else {\n            x = shapeBbox.minX + shapeBbox.width / 2;\n            y = shapeBbox.minY + shapeBbox.height / 2;\n        }\n        return { x: x, y: y };\n    };\n    TreemapLabel.prototype.getTextBaseLine = function (isLeafNode) {\n        return isLeafNode ? 'middle' : 'top';\n    };\n    TreemapLabel.prototype.adjustLabel = function (label, shape, isLeafNode) {\n        if (isLeafNode) {\n            this.adjustLeafLabel(label, shape);\n        }\n        else {\n            this.adjustParentLabel(label, shape);\n        }\n    };\n    TreemapLabel.prototype.adjustLeafLabel = function (label, shape) {\n        var bbox = shape.getBBox();\n        var labelBBox = label.getBBox();\n        var labelText = clone(label.attr('text'));\n        var sizeOffset = 2;\n        var fontSize = Math.max(label.attr('fontSize') - sizeOffset, MIN_FONTSIZE);\n        var centerX = bbox.x + bbox.width / 2;\n        var centerY = bbox.y + bbox.height / 2;\n        label.attr({\n            x: centerX,\n            y: centerY,\n            textAlign: 'center',\n            textBaseline: 'middle',\n            lineHeight: fontSize,\n            fontSize: fontSize,\n        });\n        var wrapperWidth = bbox.width - LEAF_LABEL_OFFSET * 2;\n        if (labelBBox.width > bbox.width && labelBBox.height > bbox.height) {\n            label.attr('text', '');\n            return;\n        }\n        else if (wrapperWidth < fontSize) {\n            label.attr('text', '');\n            return;\n        }\n        if (labelBBox.width > bbox.width) {\n            var wrappedText = textWrapper(label, wrapperWidth, this.container);\n            label.attr({\n                lineHeight: label.attr('fontSize'),\n                text: wrappedText,\n            });\n            var tem_bbox = label.getBBox();\n            if (tem_bbox.height > bbox.height) {\n                var text = textAbbreviate(labelText, fontSize, wrapperWidth, this.container);\n                label.attr('text', text);\n            }\n        }\n    };\n    TreemapLabel.prototype.adjustParentLabel = function (label, shape) {\n        var shapeBbox = shape.getBBox();\n        var wrapperWidth = shapeBbox.width - LEAF_LABEL_OFFSET * 2;\n        if (label.getBBox().width > wrapperWidth) {\n            var text = textAbbreviate(label.attr('text'), label.attr('fontSize'), wrapperWidth, this.container);\n            label.attr('text', text);\n        }\n    };\n    TreemapLabel.prototype.getDefaultOptions = function () {\n        var theme = this.plot.theme;\n        var labelStyle = theme.label.style;\n        return {\n            offsetX: 0,\n            offsetY: 0,\n            style: clone(labelStyle),\n        };\n    };\n    TreemapLabel.prototype.getGeometry = function () {\n        return find(this.view.geometries, function (geom) { return geom.type === 'polygon'; });\n    };\n    return TreemapLabel;\n}());\nexport default TreemapLabel;\n//# sourceMappingURL=label.js.map"]}]}