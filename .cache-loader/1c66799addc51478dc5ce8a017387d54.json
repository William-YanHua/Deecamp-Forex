{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\color-util\\esm\\index.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\color-util\\esm\\index.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { map, memoize, isString, each } from '@antv/util';\r\nvar RGB_REG = /rgba?\\(([\\s.,0-9]+)\\)/;\r\nvar regexLG = /^l\\s*\\(\\s*([\\d.]+)\\s*\\)\\s*(.*)/i;\r\nvar regexRG = /^r\\s*\\(\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*\\)\\s*(.*)/i;\r\nvar regexColorStop = /[\\d.]+:(#[^\\s]+|[^\\)]+\\))/gi;\r\nvar isGradientColor = function (val) { return /^[r,R,L,l]{1}[\\s]*\\(/.test(val); };\r\nvar createTmp = function () {\r\n    var i = document.createElement('i');\r\n    i.title = 'Web Colour Picker';\r\n    i.style.display = 'none';\r\n    document.body.appendChild(i);\r\n    return i;\r\n};\r\nvar getValue = function (start, end, percent, index) {\r\n    return start[index] + (end[index] - start[index]) * percent;\r\n};\r\nfunction arr2rgb(arr) {\r\n    return \"#\" + toHex(arr[0]) + toHex(arr[1]) + toHex(arr[2]);\r\n}\r\nvar rgb2arr = function (str) {\r\n    return [\r\n        parseInt(str.substr(1, 2), 16),\r\n        parseInt(str.substr(3, 2), 16),\r\n        parseInt(str.substr(5, 2), 16),\r\n    ];\r\n};\r\nvar toHex = function (value) {\r\n    var x16Value = Math.round(value).toString(16);\r\n    return x16Value.length === 1 ? \"0\" + x16Value : x16Value;\r\n};\r\nvar calColor = function (points, percent) {\r\n    var fixedPercent = isNaN(Number(percent)) || percent < 0 ? 0 :\r\n        percent > 1 ? 1 :\r\n            Number(percent);\r\n    var steps = points.length - 1;\r\n    var step = Math.floor(steps * fixedPercent);\r\n    var left = steps * fixedPercent - step;\r\n    var start = points[step];\r\n    var end = step === steps ? start : points[step + 1];\r\n    return arr2rgb([\r\n        getValue(start, end, left, 0),\r\n        getValue(start, end, left, 1),\r\n        getValue(start, end, left, 2),\r\n    ]);\r\n};\r\nvar iEl;\r\nvar toRGB = function (color) {\r\n    if (color[0] === '#' && color.length === 7) {\r\n        return color;\r\n    }\r\n    if (!iEl) {\r\n        iEl = createTmp();\r\n    }\r\n    iEl.style.color = color;\r\n    var rst = document.defaultView.getComputedStyle(iEl, '').getPropertyValue('color');\r\n    var matches = RGB_REG.exec(rst);\r\n    var cArray = matches[1].split(/\\s*,\\s*/).map(function (s) { return Number(s); });\r\n    rst = arr2rgb(cArray);\r\n    return rst;\r\n};\r\nvar gradient = function (colors) {\r\n    var colorArray = isString(colors) ? colors.split('-') : colors;\r\n    var points = map(colorArray, function (color) {\r\n        return rgb2arr(color.indexOf('#') === -1 ? toRGB(color) : color);\r\n    });\r\n    return function (percent) {\r\n        return calColor(points, percent);\r\n    };\r\n};\r\nvar toCSSGradient = function (gradientColor) {\r\n    if (isGradientColor(gradientColor)) {\r\n        var cssColor_1;\r\n        var steps = void 0;\r\n        if (gradientColor[0] === 'l') {\r\n            var arr = regexLG.exec(gradientColor);\r\n            var angle = +arr[1] + 90;\r\n            steps = arr[2];\r\n            cssColor_1 = \"linear-gradient(\" + angle + \"deg, \";\r\n        }\r\n        else if (gradientColor[0] === 'r') {\r\n            cssColor_1 = 'radial-gradient(';\r\n            var arr = regexRG.exec(gradientColor);\r\n            steps = arr[4];\r\n        }\r\n        var colorStops_1 = steps.match(regexColorStop);\r\n        each(colorStops_1, function (item, index) {\r\n            var itemArr = item.split(':');\r\n            cssColor_1 += itemArr[1] + \" \" + itemArr[0] * 100 + \"%\";\r\n            if (index !== (colorStops_1.length - 1)) {\r\n                cssColor_1 += ', ';\r\n            }\r\n        });\r\n        cssColor_1 += ')';\r\n        return cssColor_1;\r\n    }\r\n    return gradientColor;\r\n};\r\nexport default {\r\n    rgb2arr: rgb2arr,\r\n    gradient: gradient,\r\n    toRGB: memoize(toRGB),\r\n    toCSSGradient: toCSSGradient,\r\n};\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\color-util\\esm\\index.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\color-util\\esm\\index.js"],"names":[],"mappings":"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","sourcesContent":["import { map, memoize, isString, each } from '@antv/util';\nvar RGB_REG = /rgba?\\(([\\s.,0-9]+)\\)/;\nvar regexLG = /^l\\s*\\(\\s*([\\d.]+)\\s*\\)\\s*(.*)/i;\nvar regexRG = /^r\\s*\\(\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*\\)\\s*(.*)/i;\nvar regexColorStop = /[\\d.]+:(#[^\\s]+|[^\\)]+\\))/gi;\nvar isGradientColor = function (val) { return /^[r,R,L,l]{1}[\\s]*\\(/.test(val); };\n// 创建辅助 tag 取颜色\nvar createTmp = function () {\n    var i = document.createElement('i');\n    i.title = 'Web Colour Picker';\n    i.style.display = 'none';\n    document.body.appendChild(i);\n    return i;\n};\n// 获取颜色之间的插值\nvar getValue = function (start, end, percent, index) {\n    return start[index] + (end[index] - start[index]) * percent;\n};\n// 数组转换成颜色\nfunction arr2rgb(arr) {\n    return \"#\" + toHex(arr[0]) + toHex(arr[1]) + toHex(arr[2]);\n}\n// rgb 颜色转换成数组\nvar rgb2arr = function (str) {\n    return [\n        parseInt(str.substr(1, 2), 16),\n        parseInt(str.substr(3, 2), 16),\n        parseInt(str.substr(5, 2), 16),\n    ];\n};\n// 将数值从 0-255 转换成16进制字符串\nvar toHex = function (value) {\n    var x16Value = Math.round(value).toString(16);\n    return x16Value.length === 1 ? \"0\" + x16Value : x16Value;\n};\n// 计算颜色\nvar calColor = function (points, percent) {\n    var fixedPercent = isNaN(Number(percent)) || percent < 0 ? 0 :\n        percent > 1 ? 1 :\n            Number(percent);\n    var steps = points.length - 1;\n    var step = Math.floor(steps * fixedPercent);\n    var left = steps * fixedPercent - step;\n    var start = points[step];\n    var end = step === steps ? start : points[step + 1];\n    return arr2rgb([\n        getValue(start, end, left, 0),\n        getValue(start, end, left, 1),\n        getValue(start, end, left, 2),\n    ]);\n};\n// 用于给 toRGB 的缓存（使用 memoize 方法替换）\n// const colorCache = {};\nvar iEl;\n/**\n * 将颜色转换到 rgb 的格式\n * @param {color} color 颜色\n * @return 将颜色转换到 '#ffffff' 的格式\n */\nvar toRGB = function (color) {\n    // 如果已经是 rgb的格式\n    if (color[0] === '#' && color.length === 7) {\n        return color;\n    }\n    if (!iEl) {\n        // 防止防止在页头报错\n        iEl = createTmp();\n    }\n    iEl.style.color = color;\n    var rst = document.defaultView.getComputedStyle(iEl, '').getPropertyValue('color');\n    var matches = RGB_REG.exec(rst);\n    var cArray = matches[1].split(/\\s*,\\s*/).map(function (s) { return Number(s); });\n    rst = arr2rgb(cArray);\n    return rst;\n};\n/**\n * 获取渐变函数\n * @param colors 多个颜色\n * @return 颜色值\n */\nvar gradient = function (colors) {\n    var colorArray = isString(colors) ? colors.split('-') : colors;\n    var points = map(colorArray, function (color) {\n        return rgb2arr(color.indexOf('#') === -1 ? toRGB(color) : color);\n    });\n    // 返回一个函数\n    return function (percent) {\n        return calColor(points, percent);\n    };\n};\nvar toCSSGradient = function (gradientColor) {\n    if (isGradientColor(gradientColor)) {\n        var cssColor_1;\n        var steps = void 0;\n        if (gradientColor[0] === 'l') {\n            // 线性渐变\n            var arr = regexLG.exec(gradientColor);\n            var angle = +arr[1] + 90; // css 和 g 的渐变起始角度不同\n            steps = arr[2];\n            cssColor_1 = \"linear-gradient(\" + angle + \"deg, \";\n        }\n        else if (gradientColor[0] === 'r') {\n            // 径向渐变\n            cssColor_1 = 'radial-gradient(';\n            var arr = regexRG.exec(gradientColor);\n            steps = arr[4];\n        }\n        var colorStops_1 = steps.match(regexColorStop);\n        each(colorStops_1, function (item, index) {\n            var itemArr = item.split(':');\n            cssColor_1 += itemArr[1] + \" \" + itemArr[0] * 100 + \"%\";\n            if (index !== (colorStops_1.length - 1)) {\n                cssColor_1 += ', ';\n            }\n        });\n        cssColor_1 += ')';\n        return cssColor_1;\n    }\n    return gradientColor;\n};\nexport default {\n    rgb2arr: rgb2arr,\n    gradient: gradient,\n    toRGB: memoize(toRGB),\n    toCSSGradient: toCSSGradient,\n};\n//# sourceMappingURL=index.js.map"]}]}