{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\util\\dom.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\util\\dom.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { MIN_CHART_HEIGHT, MIN_CHART_WIDTH } from '../constant';\r\nfunction getElementSize(ele) {\r\n    var style = getComputedStyle(ele);\r\n    return {\r\n        width: (ele.clientWidth || parseInt(style.width, 10)) -\r\n            parseInt(style.paddingLeft, 10) -\r\n            parseInt(style.paddingRight, 10),\r\n        height: (ele.clientHeight || parseInt(style.height, 10)) -\r\n            parseInt(style.paddingTop, 10) -\r\n            parseInt(style.paddingBottom, 10),\r\n    };\r\n}\r\nfunction isNumber(v) {\r\n    return typeof v === 'number' && !isNaN(v);\r\n}\r\nexport function getChartSize(ele, autoFit, width, height) {\r\n    var w = width;\r\n    var h = height;\r\n    if (autoFit) {\r\n        var size = getElementSize(ele);\r\n        w = size.width ? size.width : w;\r\n        h = size.height ? size.height : h;\r\n    }\r\n    return {\r\n        width: Math.max(isNumber(w) ? w : MIN_CHART_WIDTH, MIN_CHART_WIDTH),\r\n        height: Math.max(isNumber(h) ? h : MIN_CHART_HEIGHT, MIN_CHART_HEIGHT),\r\n    };\r\n}\r\nexport function removeDom(dom) {\r\n    var parent = dom.parentNode;\r\n    if (parent) {\r\n        parent.removeChild(dom);\r\n    }\r\n}\r\nexport { createDom, modifyCSS } from '@antv/dom-util';\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\util\\dom.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\util\\dom.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,gBAAgB,EAAE,eAAe,EAAE,MAAM,aAAa,CAAC;AAMhE,SAAS,cAAc,CAAC,GAAG;IACvB,IAAI,KAAK,GAAG,gBAAgB,CAAC,GAAG,CAAC,CAAC;IAClC,OAAO;QACH,KAAK,EAAE,CAAC,GAAG,CAAC,WAAW,IAAI,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACjD,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,CAAC;YAC/B,QAAQ,CAAC,KAAK,CAAC,YAAY,EAAE,EAAE,CAAC;QACpC,MAAM,EAAE,CAAC,GAAG,CAAC,YAAY,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;YACpD,QAAQ,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE,CAAC;YAC9B,QAAQ,CAAC,KAAK,CAAC,aAAa,EAAE,EAAE,CAAC;KACxC,CAAC;AACN,CAAC;AAMD,SAAS,QAAQ,CAAC,CAAC;IACf,OAAO,OAAO,CAAC,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC;AAUD,MAAM,UAAU,YAAY,CAAC,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM;IACpD,IAAI,CAAC,GAAG,KAAK,CAAC;IACd,IAAI,CAAC,GAAG,MAAM,CAAC;IACf,IAAI,OAAO,EAAE;QACT,IAAI,IAAI,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC;QAC/B,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAChC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;KACrC;IACD,OAAO;QACH,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAe,EAAE,eAAe,CAAC;QACnE,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,gBAAgB,EAAE,gBAAgB,CAAC;KACzE,CAAC;AACN,CAAC;AAMD,MAAM,UAAU,SAAS,CAAC,GAAG;IACzB,IAAI,MAAM,GAAG,GAAG,CAAC,UAAU,CAAC;IAC5B,IAAI,MAAM,EAAE;QACR,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;KAC3B;AACL,CAAC;AAED,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC","sourcesContent":["import { MIN_CHART_HEIGHT, MIN_CHART_WIDTH } from '../constant';\n/**\n * get the element's bounding size\n * @param ele dom element\n * @returns the element width and height\n */\nfunction getElementSize(ele) {\n    var style = getComputedStyle(ele);\n    return {\n        width: (ele.clientWidth || parseInt(style.width, 10)) -\n            parseInt(style.paddingLeft, 10) -\n            parseInt(style.paddingRight, 10),\n        height: (ele.clientHeight || parseInt(style.height, 10)) -\n            parseInt(style.paddingTop, 10) -\n            parseInt(style.paddingBottom, 10),\n    };\n}\n/**\n * is value a valid number\n * @param v the input value\n * @returns whether it is a number\n */\nfunction isNumber(v) {\n    return typeof v === 'number' && !isNaN(v);\n}\n/**\n * @ignore\n * calculate the chart size\n * @param ele DOM element\n * @param autoFit should auto fit\n * @param width chart width which is set by user\n * @param height chart height which is set by user\n * @returns the chart width and height\n */\nexport function getChartSize(ele, autoFit, width, height) {\n    var w = width;\n    var h = height;\n    if (autoFit) {\n        var size = getElementSize(ele);\n        w = size.width ? size.width : w;\n        h = size.height ? size.height : h;\n    }\n    return {\n        width: Math.max(isNumber(w) ? w : MIN_CHART_WIDTH, MIN_CHART_WIDTH),\n        height: Math.max(isNumber(h) ? h : MIN_CHART_HEIGHT, MIN_CHART_HEIGHT),\n    };\n}\n/**\n * @ignore\n * remove html element from its parent\n * @param dom\n */\nexport function removeDom(dom) {\n    var parent = dom.parentNode;\n    if (parent) {\n        parent.removeChild(dom);\n    }\n}\n/** @ignore */\nexport { createDom, modifyCSS } from '@antv/dom-util';\n//# sourceMappingURL=dom.js.map"]}]}