{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/remark-parse/lib/util/remove-indentation.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/remark-parse/lib/util/remove-indentation.js","mtime":1516191690000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["'use strict';\nvar trim = require('trim');\nvar repeat = require('repeat-string');\nvar getIndent = require('./get-indentation');\nmodule.exports = indentation;\nvar C_SPACE = ' ';\nvar C_NEWLINE = '\\n';\nvar C_TAB = '\\t';\nfunction indentation(value, maximum) {\n    var values = value.split(C_NEWLINE);\n    var position = values.length + 1;\n    var minIndent = Infinity;\n    var matrix = [];\n    var index;\n    var indentation;\n    var stops;\n    var padding;\n    values.unshift(repeat(C_SPACE, maximum) + '!');\n    while (position--) {\n        indentation = getIndent(values[position]);\n        matrix[position] = indentation.stops;\n        if (trim(values[position]).length === 0) {\n            continue;\n        }\n        if (indentation.indent) {\n            if (indentation.indent > 0 && indentation.indent < minIndent) {\n                minIndent = indentation.indent;\n            }\n        }\n        else {\n            minIndent = Infinity;\n            break;\n        }\n    }\n    if (minIndent !== Infinity) {\n        position = values.length;\n        while (position--) {\n            stops = matrix[position];\n            index = minIndent;\n            while (index && !(index in stops)) {\n                index--;\n            }\n            if (trim(values[position]).length !== 0 &&\n                minIndent &&\n                index !== minIndent) {\n                padding = C_TAB;\n            }\n            else {\n                padding = '';\n            }\n            values[position] = padding + values[position].slice(index in stops ? stops[index] + 1 : 0);\n        }\n    }\n    values.shift();\n    return values.join(C_NEWLINE);\n}\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/remark-parse/lib/util/remove-indentation.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/remark-parse/lib/util/remove-indentation.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;AAEb,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,MAAM,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AACtC,IAAI,SAAS,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;AAE7C,MAAM,CAAC,OAAO,GAAG,WAAW,CAAC;AAE7B,IAAI,OAAO,GAAG,GAAG,CAAC;AAClB,IAAI,SAAS,GAAG,IAAI,CAAC;AACrB,IAAI,KAAK,GAAG,IAAI,CAAC;AAKjB,SAAS,WAAW,CAAC,KAAK,EAAE,OAAO;IACjC,IAAI,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IACpC,IAAI,QAAQ,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;IACjC,IAAI,SAAS,GAAG,QAAQ,CAAC;IACzB,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,IAAI,KAAK,CAAC;IACV,IAAI,WAAW,CAAC;IAChB,IAAI,KAAK,CAAC;IACV,IAAI,OAAO,CAAC;IAEZ,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC;IAE/C,OAAO,QAAQ,EAAE,EAAE;QACjB,WAAW,GAAG,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;QAE1C,MAAM,CAAC,QAAQ,CAAC,GAAG,WAAW,CAAC,KAAK,CAAC;QAErC,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YACvC,SAAS;SACV;QAED,IAAI,WAAW,CAAC,MAAM,EAAE;YACtB,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,IAAI,WAAW,CAAC,MAAM,GAAG,SAAS,EAAE;gBAC5D,SAAS,GAAG,WAAW,CAAC,MAAM,CAAC;aAChC;SACF;aAAM;YACL,SAAS,GAAG,QAAQ,CAAC;YAErB,MAAM;SACP;KACF;IAED,IAAI,SAAS,KAAK,QAAQ,EAAE;QAC1B,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC;QAEzB,OAAO,QAAQ,EAAE,EAAE;YACjB,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;YACzB,KAAK,GAAG,SAAS,CAAC;YAElB,OAAO,KAAK,IAAI,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,EAAE;gBACjC,KAAK,EAAE,CAAC;aACT;YAED,IACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC;gBACnC,SAAS;gBACT,KAAK,KAAK,SAAS,EACnB;gBACA,OAAO,GAAG,KAAK,CAAC;aACjB;iBAAM;gBACL,OAAO,GAAG,EAAE,CAAC;aACd;YAED,MAAM,CAAC,QAAQ,CAAC,GAAG,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CACjD,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CACtC,CAAC;SACH;KACF;IAED,MAAM,CAAC,KAAK,EAAE,CAAC;IAEf,OAAO,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAChC,CAAC","sourcesContent":["'use strict';\n\nvar trim = require('trim');\nvar repeat = require('repeat-string');\nvar getIndent = require('./get-indentation');\n\nmodule.exports = indentation;\n\nvar C_SPACE = ' ';\nvar C_NEWLINE = '\\n';\nvar C_TAB = '\\t';\n\n/* Remove the minimum indent from every line in `value`.\n * Supports both tab, spaced, and mixed indentation (as\n * well as possible). */\nfunction indentation(value, maximum) {\n  var values = value.split(C_NEWLINE);\n  var position = values.length + 1;\n  var minIndent = Infinity;\n  var matrix = [];\n  var index;\n  var indentation;\n  var stops;\n  var padding;\n\n  values.unshift(repeat(C_SPACE, maximum) + '!');\n\n  while (position--) {\n    indentation = getIndent(values[position]);\n\n    matrix[position] = indentation.stops;\n\n    if (trim(values[position]).length === 0) {\n      continue;\n    }\n\n    if (indentation.indent) {\n      if (indentation.indent > 0 && indentation.indent < minIndent) {\n        minIndent = indentation.indent;\n      }\n    } else {\n      minIndent = Infinity;\n\n      break;\n    }\n  }\n\n  if (minIndent !== Infinity) {\n    position = values.length;\n\n    while (position--) {\n      stops = matrix[position];\n      index = minIndent;\n\n      while (index && !(index in stops)) {\n        index--;\n      }\n\n      if (\n        trim(values[position]).length !== 0 &&\n        minIndent &&\n        index !== minIndent\n      ) {\n        padding = C_TAB;\n      } else {\n        padding = '';\n      }\n\n      values[position] = padding + values[position].slice(\n        index in stops ? stops[index] + 1 : 0\n      );\n    }\n  }\n\n  values.shift();\n\n  return values.join(C_NEWLINE);\n}\n"]}]}