{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/adjust/lib/mixin/dodge.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/adjust/lib/mixin/dodge.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var ArrayUtil = {\n    merge: require('@antv/util/lib/array/merge'),\n    values: require('@antv/util/lib/array/values-of-key')\n};\nvar group = require('@antv/util/lib/group');\nvar each = require('@antv/util/lib/each');\nmodule.exports = {\n    processAdjust: function processAdjust(dataArray) {\n        var self = this;\n        var mergeData = ArrayUtil.merge(dataArray);\n        var dodgeDim = self.dodgeBy;\n        var adjDataArray = dataArray;\n        if (dodgeDim) {\n            adjDataArray = group(mergeData, dodgeDim);\n        }\n        self.cacheMap = {};\n        self.adjDataArray = adjDataArray;\n        self.mergeData = mergeData;\n        self.adjustData(adjDataArray, mergeData);\n        self.adjDataArray = null;\n        self.mergeData = null;\n    },\n    getDistribution: function getDistribution(dim) {\n        var self = this;\n        var dataArray = self.adjDataArray;\n        var cacheMap = self.cacheMap;\n        var map = cacheMap[dim];\n        if (!map) {\n            map = {};\n            each(dataArray, function (data, index) {\n                var values = ArrayUtil.values(data, dim);\n                if (!values.length) {\n                    values.push(0);\n                }\n                each(values, function (val) {\n                    if (!map[val]) {\n                        map[val] = [];\n                    }\n                    map[val].push(index);\n                });\n            });\n            cacheMap[dim] = map;\n        }\n        return map;\n    },\n    adjustDim: function adjustDim(dim, values, data, frameCount, frameIndex) {\n        var self = this;\n        var map = self.getDistribution(dim);\n        var groupData = self.groupData(data, dim);\n        each(groupData, function (group, key) {\n            key = parseFloat(key);\n            var range;\n            if (values.length === 1) {\n                range = {\n                    pre: values[0] - 1,\n                    next: values[0] + 1\n                };\n            }\n            else {\n                range = self.getAdjustRange(dim, key, values);\n            }\n            each(group, function (record) {\n                var value = record[dim];\n                var valueArr = map[value];\n                var valIndex = valueArr.indexOf(frameIndex);\n                record[dim] = self.getDodgeOffset(range, valIndex, valueArr.length);\n            });\n        });\n    }\n};\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/adjust/lib/mixin/dodge.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/adjust/lib/mixin/dodge.js"],"names":[],"mappings":"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","sourcesContent":["var ArrayUtil = {\n  merge: require('@antv/util/lib/array/merge'),\n  values: require('@antv/util/lib/array/values-of-key')\n};\n\nvar group = require('@antv/util/lib/group');\n\nvar each = require('@antv/util/lib/each');\n\nmodule.exports = {\n  /**\n   * @protected\n   * @override\n   */\n  processAdjust: function processAdjust(dataArray) {\n    var self = this;\n    var mergeData = ArrayUtil.merge(dataArray);\n    var dodgeDim = self.dodgeBy;\n    var adjDataArray = dataArray;\n\n    if (dodgeDim) {\n      // 如果指定了分组dim的字段\n      adjDataArray = group(mergeData, dodgeDim);\n    }\n\n    self.cacheMap = {};\n    self.adjDataArray = adjDataArray;\n    self.mergeData = mergeData;\n    self.adjustData(adjDataArray, mergeData);\n    self.adjDataArray = null;\n    self.mergeData = null;\n  },\n  getDistribution: function getDistribution(dim) {\n    var self = this;\n    var dataArray = self.adjDataArray;\n    var cacheMap = self.cacheMap;\n    var map = cacheMap[dim];\n\n    if (!map) {\n      map = {};\n      each(dataArray, function (data, index) {\n        var values = ArrayUtil.values(data, dim);\n\n        if (!values.length) {\n          values.push(0);\n        }\n\n        each(values, function (val) {\n          if (!map[val]) {\n            map[val] = [];\n          }\n\n          map[val].push(index);\n        });\n      });\n      cacheMap[dim] = map;\n    }\n\n    return map;\n  },\n  adjustDim: function adjustDim(dim, values, data, frameCount, frameIndex) {\n    var self = this;\n    var map = self.getDistribution(dim);\n    var groupData = self.groupData(data, dim); // 根据值分组\n\n    each(groupData, function (group, key) {\n      key = parseFloat(key);\n      var range;\n\n      if (values.length === 1) {\n        range = {\n          pre: values[0] - 1,\n          next: values[0] + 1\n        };\n      } else {\n        range = self.getAdjustRange(dim, key, values);\n      }\n\n      each(group, function (record) {\n        var value = record[dim];\n        var valueArr = map[value];\n        var valIndex = valueArr.indexOf(frameIndex);\n        record[dim] = self.getDodgeOffset(range, valIndex, valueArr.length);\n      });\n    });\n  }\n};"]}]}