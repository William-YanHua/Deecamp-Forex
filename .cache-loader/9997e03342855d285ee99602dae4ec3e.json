{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/gauge/layer.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/gauge/layer.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\nimport { deepMix, uniqueId } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport ViewLayer from '../../base/view-layer';\nimport { extractScale } from '../../util/scale';\nimport { GaugeShape } from './geometry/shape/gauge-shape';\nimport * as EventParser from './event';\nvar GaugeLayer = (function (_super) {\n    __extends(GaugeLayer, _super);\n    function GaugeLayer(props) {\n        var _this = _super.call(this, props) || this;\n        _this.type = 'gauge';\n        return _this;\n    }\n    GaugeLayer.getDefaultOptions = function () {\n        return deepMix({}, _super.getDefaultOptions.call(this), {\n            startAngle: -7 / 6,\n            endAngle: 1 / 6,\n            rangeBackgroundStyle: {\n                fill: '#f0f0f0',\n            },\n            rangeSize: 24,\n            statistic: {\n                position: ['50%', '80%'],\n            },\n            axis: {\n                visible: true,\n                offset: -10,\n                tickCount: 21,\n                subTickCount: 4,\n                tickLine: {\n                    visible: true,\n                    length: 5,\n                    style: {\n                        stroke: '#aaa',\n                        lineWidth: 2,\n                    },\n                },\n                label: {\n                    visible: true,\n                    offset: 8,\n                    style: {\n                        fill: '#aaa',\n                        fontSize: 16,\n                        textAlign: 'center',\n                        textBaseline: 'middle',\n                    },\n                },\n            },\n            pivot: {\n                visible: true,\n                thickness: 6,\n                pin: {\n                    visible: true,\n                    size: 2,\n                    style: {\n                        fill: '#2E364B',\n                    },\n                },\n                base: {\n                    visible: true,\n                    style: {\n                        fill: '#EEEEEE',\n                    },\n                },\n                pointer: {\n                    visible: true,\n                    style: {\n                        fill: '#CFCFCF',\n                    },\n                },\n            },\n        });\n    };\n    GaugeLayer.prototype.init = function () {\n        var _a = this.options, value = _a.value, range = _a.range;\n        var rangeSorted = (range || []).map(function (d) { return +d; }).sort(function (a, b) { return a - b; });\n        var _b = this.options, _c = _b.min, min = _c === void 0 ? rangeSorted[0] : _c, _d = _b.max, max = _d === void 0 ? rangeSorted[rangeSorted.length - 1] : _d, _e = _b.format, format = _e === void 0 ? function (d) { return \"\" + d; } : _e;\n        var valueText = format(value);\n        this.options.data = [{ value: value || 0 }];\n        this.options.valueText = valueText;\n        this.options.min = min;\n        this.options.max = max;\n        this.options.format = format;\n        this.initG2Shape();\n        _super.prototype.init.call(this);\n    };\n    GaugeLayer.prototype.initG2Shape = function () {\n        this.gaugeShape = new GaugeShape(uniqueId());\n        this.gaugeShape.setOption(this.type, deepMix({}, this.options, {\n            radius: 0.6,\n            angle: 240,\n            textPosition: '100%',\n        }));\n        this.gaugeShape.render();\n    };\n    GaugeLayer.prototype.geometryParser = function () {\n        return 'gauge';\n    };\n    GaugeLayer.prototype.scale = function () {\n        var _a = this.options, min = _a.min, max = _a.max, format = _a.format;\n        var scales = {\n            value: {},\n        };\n        extractScale(scales.value, {\n            min: min,\n            max: max,\n            minLimit: min,\n            maxLimit: max,\n            nice: true,\n            formatter: format,\n            tickInterval: 20,\n        });\n        this.setConfig('scales', scales);\n        _super.prototype.scale.call(this);\n    };\n    GaugeLayer.prototype.coord = function () {\n        var coordConfig = {\n            type: 'polar',\n            cfg: {\n                radius: 1,\n                startAngle: this.options.startAngle * Math.PI,\n                endAngle: this.options.endAngle * Math.PI,\n            },\n        };\n        this.setConfig('coordinate', coordConfig);\n    };\n    GaugeLayer.prototype.axis = function () {\n        var axis = this.options.axis;\n        var axesConfig = {\n            value: {\n                line: null,\n                grid: null,\n                tickLine: null,\n            },\n        };\n        var offsetValue;\n        if (axis.offset < 0) {\n            offsetValue = axis.offset - this.options.rangeSize - axis.tickLine.length - axis.label.offset;\n        }\n        else {\n            offsetValue = axis.offset + axis.tickLine.length + axis.label.offset;\n        }\n        if (axis.label.visible) {\n            axesConfig.value.label = {\n                offset: offsetValue,\n                textStyle: axis.label.style,\n                autoRotate: true,\n            };\n        }\n        else {\n            axesConfig.value.label = {\n                style: {\n                    opacity: 0,\n                },\n            };\n        }\n        axesConfig['1'] = false;\n        axesConfig['value'] = axis.visible ? axesConfig['value'] : false;\n        this.setConfig('axes', axesConfig);\n    };\n    GaugeLayer.prototype.addGeometry = function () {\n        var pointerColor = this.options.pivot.pointer.style.fill || this.theme.defaultColor;\n        var pointer = {\n            type: 'point',\n            position: {\n                fields: ['value', '1'],\n            },\n            shape: {\n                values: ['gauge'],\n            },\n            color: {\n                values: [pointerColor],\n            },\n        };\n        this.setConfig('geometry', pointer);\n    };\n    GaugeLayer.prototype.annotation = function () {\n        var statistic = this.options.statistic;\n        var annotationConfigs = [];\n        if (statistic && statistic.visible) {\n            var statistics = this.renderStatistic();\n            annotationConfigs.push(statistics);\n        }\n        this.setConfig('annotations', annotationConfigs);\n    };\n    GaugeLayer.prototype.renderStatistic = function () {\n        var containerSize = Math.max(this.options.width, this.options.height) / 20;\n        var statistic = this.options.statistic;\n        var text = {\n            type: 'text',\n            content: statistic.text,\n            top: true,\n            position: statistic.position,\n            style: {\n                fill: statistic.color,\n                fontSize: statistic.size ? statistic.size : containerSize * 1.2,\n                textAlign: 'center',\n                textBaseline: 'middle',\n            },\n        };\n        return text;\n    };\n    GaugeLayer.prototype.parseEvents = function () {\n        _super.prototype.parseEvents.call(this, EventParser);\n    };\n    return GaugeLayer;\n}(ViewLayer));\nexport default GaugeLayer;\nregisterPlotType('gauge', GaugeLayer);\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/gauge/layer.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/gauge/layer.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAKlC,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AAC/C,OAAO,EAAE,gBAAgB,EAAE,MAAM,mBAAmB,CAAC;AACrD,OAAO,SAAS,MAAM,uBAAuB,CAAC;AAC9C,OAAO,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAC;AAChD,OAAO,EAAE,UAAU,EAAE,MAAM,8BAA8B,CAAC;AAC1D,OAAO,KAAK,WAAW,MAAM,SAAS,CAAC;AACvC,IAAI,UAAU,GAAiB,CAAC,UAAU,MAAM;IAC5C,SAAS,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;IAC9B,SAAS,UAAU,CAAC,KAAK;QACrB,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC;QAC7C,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC;QACrB,OAAO,KAAK,CAAC;IACjB,CAAC;IACD,UAAU,CAAC,iBAAiB,GAAG;QAC3B,OAAO,OAAO,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YACpD,UAAU,EAAE,CAAC,CAAC,GAAG,CAAC;YAClB,QAAQ,EAAE,CAAC,GAAG,CAAC;YACf,oBAAoB,EAAE;gBAClB,IAAI,EAAE,SAAS;aAClB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE;gBACP,QAAQ,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;aAC3B;YACD,IAAI,EAAE;gBACF,OAAO,EAAE,IAAI;gBACb,MAAM,EAAE,CAAC,EAAE;gBACX,SAAS,EAAE,EAAE;gBACb,YAAY,EAAE,CAAC;gBACf,QAAQ,EAAE;oBACN,OAAO,EAAE,IAAI;oBACb,MAAM,EAAE,CAAC;oBACT,KAAK,EAAE;wBACH,MAAM,EAAE,MAAM;wBACd,SAAS,EAAE,CAAC;qBACf;iBACJ;gBACD,KAAK,EAAE;oBACH,OAAO,EAAE,IAAI;oBACb,MAAM,EAAE,CAAC;oBACT,KAAK,EAAE;wBACH,IAAI,EAAE,MAAM;wBACZ,QAAQ,EAAE,EAAE;wBACZ,SAAS,EAAE,QAAQ;wBACnB,YAAY,EAAE,QAAQ;qBACzB;iBACJ;aACJ;YACD,KAAK,EAAE;gBACH,OAAO,EAAE,IAAI;gBACb,SAAS,EAAE,CAAC;gBACZ,GAAG,EAAE;oBACD,OAAO,EAAE,IAAI;oBACb,IAAI,EAAE,CAAC;oBACP,KAAK,EAAE;wBACH,IAAI,EAAE,SAAS;qBAClB;iBACJ;gBACD,IAAI,EAAE;oBACF,OAAO,EAAE,IAAI;oBACb,KAAK,EAAE;wBACH,IAAI,EAAE,SAAS;qBAClB;iBACJ;gBACD,OAAO,EAAE;oBACL,OAAO,EAAE,IAAI;oBACb,KAAK,EAAE;wBACH,IAAI,EAAE,SAAS;qBAClB;iBACJ;aACJ;SACJ,CAAC,CAAC;IACP,CAAC,CAAC;IACF,UAAU,CAAC,SAAS,CAAC,IAAI,GAAG;QACxB,IAAI,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,KAAK,GAAG,EAAE,CAAC,KAAK,EAAE,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC;QAC1D,IAAI,WAAW,GAAG,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzG,IAAI,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,MAAM,EAAE,MAAM,GAAG,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC1O,IAAI,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;QAG9B,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC;QAC5C,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;QACnC,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;QAC7B,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC,CAAC;IAIF,UAAU,CAAC,SAAS,CAAC,WAAW,GAAG;QAC/B,IAAI,CAAC,UAAU,GAAG,IAAI,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC7C,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE;YAC3D,MAAM,EAAE,GAAG;YACX,KAAK,EAAE,GAAG;YACV,YAAY,EAAE,MAAM;SACvB,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;IAC7B,CAAC,CAAC;IACF,UAAU,CAAC,SAAS,CAAC,cAAc,GAAG;QAClC,OAAO,OAAO,CAAC;IACnB,CAAC,CAAC;IACF,UAAU,CAAC,SAAS,CAAC,KAAK,GAAG;QACzB,IAAI,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,CAAC,GAAG,EAAE,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC;QACtE,IAAI,MAAM,GAAG;YACT,KAAK,EAAE,EAAE;SACZ,CAAC;QACF,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE;YACvB,GAAG,EAAE,GAAG;YACR,GAAG,EAAE,GAAG;YACR,QAAQ,EAAE,GAAG;YACb,QAAQ,EAAE,GAAG;YACb,IAAI,EAAE,IAAI;YACV,SAAS,EAAE,MAAM;YAEjB,YAAY,EAAE,EAAE;SACnB,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QACjC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC,CAAC;IACF,UAAU,CAAC,SAAS,CAAC,KAAK,GAAG;QACzB,IAAI,WAAW,GAAG;YACd,IAAI,EAAE,OAAO;YACb,GAAG,EAAE;gBACD,MAAM,EAAE,CAAC;gBACT,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE;gBAC7C,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE;aAC5C;SACJ,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;IAC9C,CAAC,CAAC;IACF,UAAU,CAAC,SAAS,CAAC,IAAI,GAAG;QACxB,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QAC7B,IAAI,UAAU,GAAG;YACb,KAAK,EAAE;gBACH,IAAI,EAAE,IAAI;gBACV,IAAI,EAAE,IAAI;gBACV,QAAQ,EAAE,IAAI;aACjB;SACJ,CAAC;QACF,IAAI,WAAW,CAAC;QAChB,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACjB,WAAW,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;SACjG;aACI;YACD,WAAW,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;SACxE;QACD,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;YACpB,UAAU,CAAC,KAAK,CAAC,KAAK,GAAG;gBACrB,MAAM,EAAE,WAAW;gBACnB,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;gBAC3B,UAAU,EAAE,IAAI;aACnB,CAAC;SACL;aACI;YACD,UAAU,CAAC,KAAK,CAAC,KAAK,GAAG;gBACrB,KAAK,EAAE;oBACH,OAAO,EAAE,CAAC;iBACb;aACJ,CAAC;SACL;QACD,UAAU,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACxB,UAAU,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QACjE,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;IACvC,CAAC,CAAC;IACF,UAAU,CAAC,SAAS,CAAC,WAAW,GAAG;QAC/B,IAAI,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;QACpF,IAAI,OAAO,GAAG;YACV,IAAI,EAAE,OAAO;YACb,QAAQ,EAAE;gBACN,MAAM,EAAE,CAAC,OAAO,EAAE,GAAG,CAAC;aACzB;YACD,KAAK,EAAE;gBACH,MAAM,EAAE,CAAC,OAAO,CAAC;aACpB;YACD,KAAK,EAAE;gBACH,MAAM,EAAE,CAAC,YAAY,CAAC;aACzB;SACJ,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;IACxC,CAAC,CAAC;IACF,UAAU,CAAC,SAAS,CAAC,UAAU,GAAG;QAC9B,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;QACvC,IAAI,iBAAiB,GAAG,EAAE,CAAC;QAE3B,IAAI,SAAS,IAAI,SAAS,CAAC,OAAO,EAAE;YAChC,IAAI,UAAU,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;YACxC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACtC;QACD,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,iBAAiB,CAAC,CAAC;IACrD,CAAC,CAAC;IACF,UAAU,CAAC,SAAS,CAAC,eAAe,GAAG;QACnC,IAAI,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;QAC3E,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;QACvC,IAAI,IAAI,GAAG;YACP,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,SAAS,CAAC,IAAI;YACvB,GAAG,EAAE,IAAI;YACT,QAAQ,EAAE,SAAS,CAAC,QAAQ;YAC5B,KAAK,EAAE;gBACH,IAAI,EAAE,SAAS,CAAC,KAAK;gBACrB,QAAQ,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,aAAa,GAAG,GAAG;gBAC/D,SAAS,EAAE,QAAQ;gBACnB,YAAY,EAAE,QAAQ;aACzB;SACJ,CAAC;QACF,OAAO,IAAI,CAAC;IAChB,CAAC,CAAC;IACF,UAAU,CAAC,SAAS,CAAC,WAAW,GAAG;QAC/B,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;IACzD,CAAC,CAAC;IACF,OAAO,UAAU,CAAC;AACtB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;AACd,eAAe,UAAU,CAAC;AAC1B,gBAAgB,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC","sourcesContent":["import { __extends } from \"tslib\";\n/**\n * @author linhuiw\n * @description 仪表盘 layer\n */\nimport { deepMix, uniqueId } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport ViewLayer from '../../base/view-layer';\nimport { extractScale } from '../../util/scale';\nimport { GaugeShape } from './geometry/shape/gauge-shape';\nimport * as EventParser from './event';\nvar GaugeLayer = /** @class */ (function (_super) {\n    __extends(GaugeLayer, _super);\n    function GaugeLayer(props) {\n        var _this = _super.call(this, props) || this;\n        _this.type = 'gauge';\n        return _this;\n    }\n    GaugeLayer.getDefaultOptions = function () {\n        return deepMix({}, _super.getDefaultOptions.call(this), {\n            startAngle: -7 / 6,\n            endAngle: 1 / 6,\n            rangeBackgroundStyle: {\n                fill: '#f0f0f0',\n            },\n            rangeSize: 24,\n            statistic: {\n                position: ['50%', '80%'],\n            },\n            axis: {\n                visible: true,\n                offset: -10,\n                tickCount: 21,\n                subTickCount: 4,\n                tickLine: {\n                    visible: true,\n                    length: 5,\n                    style: {\n                        stroke: '#aaa',\n                        lineWidth: 2,\n                    },\n                },\n                label: {\n                    visible: true,\n                    offset: 8,\n                    style: {\n                        fill: '#aaa',\n                        fontSize: 16,\n                        textAlign: 'center',\n                        textBaseline: 'middle',\n                    },\n                },\n            },\n            pivot: {\n                visible: true,\n                thickness: 6,\n                pin: {\n                    visible: true,\n                    size: 2,\n                    style: {\n                        fill: '#2E364B',\n                    },\n                },\n                base: {\n                    visible: true,\n                    style: {\n                        fill: '#EEEEEE',\n                    },\n                },\n                pointer: {\n                    visible: true,\n                    style: {\n                        fill: '#CFCFCF',\n                    },\n                },\n            },\n        });\n    };\n    GaugeLayer.prototype.init = function () {\n        var _a = this.options, value = _a.value, range = _a.range;\n        var rangeSorted = (range || []).map(function (d) { return +d; }).sort(function (a, b) { return a - b; });\n        var _b = this.options, _c = _b.min, min = _c === void 0 ? rangeSorted[0] : _c, _d = _b.max, max = _d === void 0 ? rangeSorted[rangeSorted.length - 1] : _d, _e = _b.format, format = _e === void 0 ? function (d) { return \"\" + d; } : _e;\n        var valueText = format(value);\n        //const styleMix = this.getStyleMix();\n        //this.options.styleMix = styleMix;\n        this.options.data = [{ value: value || 0 }];\n        this.options.valueText = valueText;\n        this.options.min = min;\n        this.options.max = max;\n        this.options.format = format;\n        this.initG2Shape();\n        _super.prototype.init.call(this);\n    };\n    /**\n     * 绘制指针\n     */\n    GaugeLayer.prototype.initG2Shape = function () {\n        this.gaugeShape = new GaugeShape(uniqueId());\n        this.gaugeShape.setOption(this.type, deepMix({}, this.options, {\n            radius: 0.6,\n            angle: 240,\n            textPosition: '100%',\n        }));\n        this.gaugeShape.render();\n    };\n    GaugeLayer.prototype.geometryParser = function () {\n        return 'gauge';\n    };\n    GaugeLayer.prototype.scale = function () {\n        var _a = this.options, min = _a.min, max = _a.max, format = _a.format;\n        var scales = {\n            value: {},\n        };\n        extractScale(scales.value, {\n            min: min,\n            max: max,\n            minLimit: min,\n            maxLimit: max,\n            nice: true,\n            formatter: format,\n            // 自定义 tick step\n            tickInterval: 20,\n        });\n        // @ts-ignore\n        this.setConfig('scales', scales);\n        _super.prototype.scale.call(this);\n    };\n    GaugeLayer.prototype.coord = function () {\n        var coordConfig = {\n            type: 'polar',\n            cfg: {\n                radius: 1,\n                startAngle: this.options.startAngle * Math.PI,\n                endAngle: this.options.endAngle * Math.PI,\n            },\n        };\n        this.setConfig('coordinate', coordConfig);\n    };\n    GaugeLayer.prototype.axis = function () {\n        var axis = this.options.axis;\n        var axesConfig = {\n            value: {\n                line: null,\n                grid: null,\n                tickLine: null,\n            },\n        };\n        var offsetValue;\n        if (axis.offset < 0) {\n            offsetValue = axis.offset - this.options.rangeSize - axis.tickLine.length - axis.label.offset;\n        }\n        else {\n            offsetValue = axis.offset + axis.tickLine.length + axis.label.offset;\n        }\n        if (axis.label.visible) {\n            axesConfig.value.label = {\n                offset: offsetValue,\n                textStyle: axis.label.style,\n                autoRotate: true,\n            };\n        }\n        else {\n            axesConfig.value.label = {\n                style: {\n                    opacity: 0,\n                },\n            };\n        }\n        axesConfig['1'] = false;\n        axesConfig['value'] = axis.visible ? axesConfig['value'] : false;\n        this.setConfig('axes', axesConfig);\n    };\n    GaugeLayer.prototype.addGeometry = function () {\n        var pointerColor = this.options.pivot.pointer.style.fill || this.theme.defaultColor;\n        var pointer = {\n            type: 'point',\n            position: {\n                fields: ['value', '1'],\n            },\n            shape: {\n                values: ['gauge'],\n            },\n            color: {\n                values: [pointerColor],\n            },\n        };\n        this.setConfig('geometry', pointer);\n    };\n    GaugeLayer.prototype.annotation = function () {\n        var statistic = this.options.statistic;\n        var annotationConfigs = [];\n        // @ts-ignore\n        if (statistic && statistic.visible) {\n            var statistics = this.renderStatistic();\n            annotationConfigs.push(statistics);\n        }\n        this.setConfig('annotations', annotationConfigs);\n    };\n    GaugeLayer.prototype.renderStatistic = function () {\n        var containerSize = Math.max(this.options.width, this.options.height) / 20;\n        var statistic = this.options.statistic;\n        var text = {\n            type: 'text',\n            content: statistic.text,\n            top: true,\n            position: statistic.position,\n            style: {\n                fill: statistic.color,\n                fontSize: statistic.size ? statistic.size : containerSize * 1.2,\n                textAlign: 'center',\n                textBaseline: 'middle',\n            },\n        };\n        return text;\n    };\n    GaugeLayer.prototype.parseEvents = function () {\n        _super.prototype.parseEvents.call(this, EventParser);\n    };\n    return GaugeLayer;\n}(ViewLayer));\nexport default GaugeLayer;\nregisterPlotType('gauge', GaugeLayer);\n//# sourceMappingURL=layer.js.map"]}]}