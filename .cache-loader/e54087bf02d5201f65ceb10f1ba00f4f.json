{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g\\lib\\util\\path.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g\\lib\\util\\path.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["var Util = require('./common');\r\nvar SPACES = \"\\t\\n\\x0B\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\";\r\nvar PATH_COMMAND = new RegExp('([a-z])[' + SPACES + ',]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[' + SPACES + ']*,?[' + SPACES + ']*)+)', 'ig');\r\nvar PATH_VALUES = new RegExp('(-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?)[' + SPACES + ']*,?[' + SPACES + ']*', 'ig');\r\nvar parsePathString = function parsePathString(pathString) {\r\n    if (!pathString) {\r\n        return null;\r\n    }\r\n    if (typeof pathString === typeof []) {\r\n        return pathString;\r\n    }\r\n    var paramCounts = {\r\n        a: 7,\r\n        c: 6,\r\n        o: 2,\r\n        h: 1,\r\n        l: 2,\r\n        m: 2,\r\n        r: 4,\r\n        q: 4,\r\n        s: 4,\r\n        t: 2,\r\n        v: 1,\r\n        u: 3,\r\n        z: 0\r\n    };\r\n    var data = [];\r\n    String(pathString).replace(PATH_COMMAND, function (a, b, c) {\r\n        var params = [];\r\n        var name = b.toLowerCase();\r\n        c.replace(PATH_VALUES, function (a, b) {\r\n            b && params.push(+b);\r\n        });\r\n        if (name === 'm' && params.length > 2) {\r\n            data.push([b].concat(params.splice(0, 2)));\r\n            name = 'l';\r\n            b = b === 'm' ? 'l' : 'L';\r\n        }\r\n        if (name === 'o' && params.length === 1) {\r\n            data.push([b, params[0]]);\r\n        }\r\n        if (name === 'r') {\r\n            data.push([b].concat(params));\r\n        }\r\n        else {\r\n            while (params.length >= paramCounts[name]) {\r\n                data.push([b].concat(params.splice(0, paramCounts[name])));\r\n                if (!paramCounts[name]) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    });\r\n    return data;\r\n};\r\nvar catmullRom2bezier = function catmullRom2bezier(crp, z) {\r\n    var d = [];\r\n    for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\r\n        var p = [{\r\n                x: +crp[i - 2],\r\n                y: +crp[i - 1]\r\n            }, {\r\n                x: +crp[i],\r\n                y: +crp[i + 1]\r\n            }, {\r\n                x: +crp[i + 2],\r\n                y: +crp[i + 3]\r\n            }, {\r\n                x: +crp[i + 4],\r\n                y: +crp[i + 5]\r\n            }];\r\n        if (z) {\r\n            if (!i) {\r\n                p[0] = {\r\n                    x: +crp[iLen - 2],\r\n                    y: +crp[iLen - 1]\r\n                };\r\n            }\r\n            else if (iLen - 4 === i) {\r\n                p[3] = {\r\n                    x: +crp[0],\r\n                    y: +crp[1]\r\n                };\r\n            }\r\n            else if (iLen - 2 === i) {\r\n                p[2] = {\r\n                    x: +crp[0],\r\n                    y: +crp[1]\r\n                };\r\n                p[3] = {\r\n                    x: +crp[2],\r\n                    y: +crp[3]\r\n                };\r\n            }\r\n        }\r\n        else {\r\n            if (iLen - 4 === i) {\r\n                p[3] = p[2];\r\n            }\r\n            else if (!i) {\r\n                p[0] = {\r\n                    x: +crp[i],\r\n                    y: +crp[i + 1]\r\n                };\r\n            }\r\n        }\r\n        d.push(['C', (-p[0].x + 6 * p[1].x + p[2].x) / 6, (-p[0].y + 6 * p[1].y + p[2].y) / 6, (p[1].x + 6 * p[2].x - p[3].x) / 6, (p[1].y + 6 * p[2].y - p[3].y) / 6, p[2].x, p[2].y]);\r\n    }\r\n    return d;\r\n};\r\nvar ellipsePath = function ellipsePath(x, y, rx, ry, a) {\r\n    var res = [];\r\n    if (a === null && ry === null) {\r\n        ry = rx;\r\n    }\r\n    x = +x;\r\n    y = +y;\r\n    rx = +rx;\r\n    ry = +ry;\r\n    if (a !== null) {\r\n        var rad = Math.PI / 180;\r\n        var x1 = x + rx * Math.cos(-ry * rad);\r\n        var x2 = x + rx * Math.cos(-a * rad);\r\n        var y1 = y + rx * Math.sin(-ry * rad);\r\n        var y2 = y + rx * Math.sin(-a * rad);\r\n        res = [['M', x1, y1], ['A', rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\r\n    }\r\n    else {\r\n        res = [['M', x, y], ['m', 0, -ry], ['a', rx, ry, 0, 1, 1, 0, 2 * ry], ['a', rx, ry, 0, 1, 1, 0, -2 * ry], ['z']];\r\n    }\r\n    return res;\r\n};\r\nvar pathToAbsolute = function pathToAbsolute(pathArray) {\r\n    pathArray = parsePathString(pathArray);\r\n    if (!pathArray || !pathArray.length) {\r\n        return [['M', 0, 0]];\r\n    }\r\n    var res = [];\r\n    var x = 0;\r\n    var y = 0;\r\n    var mx = 0;\r\n    var my = 0;\r\n    var start = 0;\r\n    var pa0;\r\n    var dots;\r\n    if (pathArray[0][0] === 'M') {\r\n        x = +pathArray[0][1];\r\n        y = +pathArray[0][2];\r\n        mx = x;\r\n        my = y;\r\n        start++;\r\n        res[0] = ['M', x, y];\r\n    }\r\n    var crz = pathArray.length === 3 && pathArray[0][0] === 'M' && pathArray[1][0].toUpperCase() === 'R' && pathArray[2][0].toUpperCase() === 'Z';\r\n    for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\r\n        res.push(r = []);\r\n        pa = pathArray[i];\r\n        pa0 = pa[0];\r\n        if (pa0 !== pa0.toUpperCase()) {\r\n            r[0] = pa0.toUpperCase();\r\n            switch (r[0]) {\r\n                case 'A':\r\n                    r[1] = pa[1];\r\n                    r[2] = pa[2];\r\n                    r[3] = pa[3];\r\n                    r[4] = pa[4];\r\n                    r[5] = pa[5];\r\n                    r[6] = +pa[6] + x;\r\n                    r[7] = +pa[7] + y;\r\n                    break;\r\n                case 'V':\r\n                    r[1] = +pa[1] + y;\r\n                    break;\r\n                case 'H':\r\n                    r[1] = +pa[1] + x;\r\n                    break;\r\n                case 'R':\r\n                    dots = [x, y].concat(pa.slice(1));\r\n                    for (var j = 2, jj = dots.length; j < jj; j++) {\r\n                        dots[j] = +dots[j] + x;\r\n                        dots[++j] = +dots[j] + y;\r\n                    }\r\n                    res.pop();\r\n                    res = res.concat(catmullRom2bezier(dots, crz));\r\n                    break;\r\n                case 'O':\r\n                    res.pop();\r\n                    dots = ellipsePath(x, y, pa[1], pa[2]);\r\n                    dots.push(dots[0]);\r\n                    res = res.concat(dots);\r\n                    break;\r\n                case 'U':\r\n                    res.pop();\r\n                    res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\r\n                    r = ['U'].concat(res[res.length - 1].slice(-2));\r\n                    break;\r\n                case 'M':\r\n                    mx = +pa[1] + x;\r\n                    my = +pa[2] + y;\r\n                    break;\r\n                default:\r\n                    for (var _j = 1, _jj = pa.length; _j < _jj; _j++) {\r\n                        r[_j] = +pa[_j] + (_j % 2 ? x : y);\r\n                    }\r\n            }\r\n        }\r\n        else if (pa0 === 'R') {\r\n            dots = [x, y].concat(pa.slice(1));\r\n            res.pop();\r\n            res = res.concat(catmullRom2bezier(dots, crz));\r\n            r = ['R'].concat(pa.slice(-2));\r\n        }\r\n        else if (pa0 === 'O') {\r\n            res.pop();\r\n            dots = ellipsePath(x, y, pa[1], pa[2]);\r\n            dots.push(dots[0]);\r\n            res = res.concat(dots);\r\n        }\r\n        else if (pa0 === 'U') {\r\n            res.pop();\r\n            res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\r\n            r = ['U'].concat(res[res.length - 1].slice(-2));\r\n        }\r\n        else {\r\n            for (var k = 0, kk = pa.length; k < kk; k++) {\r\n                r[k] = pa[k];\r\n            }\r\n        }\r\n        pa0 = pa0.toUpperCase();\r\n        if (pa0 !== 'O') {\r\n            switch (r[0]) {\r\n                case 'Z':\r\n                    x = +mx;\r\n                    y = +my;\r\n                    break;\r\n                case 'H':\r\n                    x = r[1];\r\n                    break;\r\n                case 'V':\r\n                    y = r[1];\r\n                    break;\r\n                case 'M':\r\n                    mx = r[r.length - 2];\r\n                    my = r[r.length - 1];\r\n                    break;\r\n                default:\r\n                    x = r[r.length - 2];\r\n                    y = r[r.length - 1];\r\n            }\r\n        }\r\n    }\r\n    return res;\r\n};\r\nvar l2c = function l2c(x1, y1, x2, y2) {\r\n    return [x1, y1, x2, y2, x2, y2];\r\n};\r\nvar q2c = function q2c(x1, y1, ax, ay, x2, y2) {\r\n    var _13 = 1 / 3;\r\n    var _23 = 2 / 3;\r\n    return [_13 * x1 + _23 * ax, _13 * y1 + _23 * ay, _13 * x2 + _23 * ax, _13 * y2 + _23 * ay, x2, y2];\r\n};\r\nvar a2c = function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\r\n    if (rx === ry) {\r\n        rx += 1;\r\n    }\r\n    var _120 = Math.PI * 120 / 180;\r\n    var rad = Math.PI / 180 * (+angle || 0);\r\n    var res = [];\r\n    var xy;\r\n    var f1;\r\n    var f2;\r\n    var cx;\r\n    var cy;\r\n    var rotate = function rotate(x, y, rad) {\r\n        var X = x * Math.cos(rad) - y * Math.sin(rad);\r\n        var Y = x * Math.sin(rad) + y * Math.cos(rad);\r\n        return {\r\n            x: X,\r\n            y: Y\r\n        };\r\n    };\r\n    if (!recursive) {\r\n        xy = rotate(x1, y1, -rad);\r\n        x1 = xy.x;\r\n        y1 = xy.y;\r\n        xy = rotate(x2, y2, -rad);\r\n        x2 = xy.x;\r\n        y2 = xy.y;\r\n        if (x1 === x2 && y1 === y2) {\r\n            x2 += 1;\r\n            y2 += 1;\r\n        }\r\n        var x = (x1 - x2) / 2;\r\n        var y = (y1 - y2) / 2;\r\n        var h = x * x / (rx * rx) + y * y / (ry * ry);\r\n        if (h > 1) {\r\n            h = Math.sqrt(h);\r\n            rx = h * rx;\r\n            ry = h * ry;\r\n        }\r\n        var rx2 = rx * rx;\r\n        var ry2 = ry * ry;\r\n        var k = (large_arc_flag === sweep_flag ? -1 : 1) * Math.sqrt(Math.abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x)));\r\n        cx = k * rx * y / ry + (x1 + x2) / 2;\r\n        cy = k * -ry * x / rx + (y1 + y2) / 2;\r\n        f1 = Math.asin(((y1 - cy) / ry).toFixed(9));\r\n        f2 = Math.asin(((y2 - cy) / ry).toFixed(9));\r\n        f1 = x1 < cx ? Math.PI - f1 : f1;\r\n        f2 = x2 < cx ? Math.PI - f2 : f2;\r\n        f1 < 0 && (f1 = Math.PI * 2 + f1);\r\n        f2 < 0 && (f2 = Math.PI * 2 + f2);\r\n        if (sweep_flag && f1 > f2) {\r\n            f1 = f1 - Math.PI * 2;\r\n        }\r\n        if (!sweep_flag && f2 > f1) {\r\n            f2 = f2 - Math.PI * 2;\r\n        }\r\n    }\r\n    else {\r\n        f1 = recursive[0];\r\n        f2 = recursive[1];\r\n        cx = recursive[2];\r\n        cy = recursive[3];\r\n    }\r\n    var df = f2 - f1;\r\n    if (Math.abs(df) > _120) {\r\n        var f2old = f2;\r\n        var x2old = x2;\r\n        var y2old = y2;\r\n        f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\r\n        x2 = cx + rx * Math.cos(f2);\r\n        y2 = cy + ry * Math.sin(f2);\r\n        res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\r\n    }\r\n    df = f2 - f1;\r\n    var c1 = Math.cos(f1);\r\n    var s1 = Math.sin(f1);\r\n    var c2 = Math.cos(f2);\r\n    var s2 = Math.sin(f2);\r\n    var t = Math.tan(df / 4);\r\n    var hx = 4 / 3 * rx * t;\r\n    var hy = 4 / 3 * ry * t;\r\n    var m1 = [x1, y1];\r\n    var m2 = [x1 + hx * s1, y1 - hy * c1];\r\n    var m3 = [x2 + hx * s2, y2 - hy * c2];\r\n    var m4 = [x2, y2];\r\n    m2[0] = 2 * m1[0] - m2[0];\r\n    m2[1] = 2 * m1[1] - m2[1];\r\n    if (recursive) {\r\n        return [m2, m3, m4].concat(res);\r\n    }\r\n    res = [m2, m3, m4].concat(res).join().split(',');\r\n    var newres = [];\r\n    for (var i = 0, ii = res.length; i < ii; i++) {\r\n        newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\r\n    }\r\n    return newres;\r\n};\r\nvar pathTocurve = function pathTocurve(path, path2) {\r\n    var p = pathToAbsolute(path);\r\n    var p2 = path2 && pathToAbsolute(path2);\r\n    var attrs = {\r\n        x: 0,\r\n        y: 0,\r\n        bx: 0,\r\n        by: 0,\r\n        X: 0,\r\n        Y: 0,\r\n        qx: null,\r\n        qy: null\r\n    };\r\n    var attrs2 = {\r\n        x: 0,\r\n        y: 0,\r\n        bx: 0,\r\n        by: 0,\r\n        X: 0,\r\n        Y: 0,\r\n        qx: null,\r\n        qy: null\r\n    };\r\n    var pcoms1 = [];\r\n    var pcoms2 = [];\r\n    var pfirst = '';\r\n    var pcom = '';\r\n    var ii;\r\n    var processPath = function processPath(path, d, pcom) {\r\n        var nx, ny;\r\n        if (!path) {\r\n            return ['C', d.x, d.y, d.x, d.y, d.x, d.y];\r\n        }\r\n        !(path[0] in {\r\n            T: 1,\r\n            Q: 1\r\n        }) && (d.qx = d.qy = null);\r\n        switch (path[0]) {\r\n            case 'M':\r\n                d.X = path[1];\r\n                d.Y = path[2];\r\n                break;\r\n            case 'A':\r\n                path = ['C'].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\r\n                break;\r\n            case 'S':\r\n                if (pcom === 'C' || pcom === 'S') {\r\n                    nx = d.x * 2 - d.bx;\r\n                    ny = d.y * 2 - d.by;\r\n                }\r\n                else {\r\n                    nx = d.x;\r\n                    ny = d.y;\r\n                }\r\n                path = ['C', nx, ny].concat(path.slice(1));\r\n                break;\r\n            case 'T':\r\n                if (pcom === 'Q' || pcom === 'T') {\r\n                    d.qx = d.x * 2 - d.qx;\r\n                    d.qy = d.y * 2 - d.qy;\r\n                }\r\n                else {\r\n                    d.qx = d.x;\r\n                    d.qy = d.y;\r\n                }\r\n                path = ['C'].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\r\n                break;\r\n            case 'Q':\r\n                d.qx = path[1];\r\n                d.qy = path[2];\r\n                path = ['C'].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\r\n                break;\r\n            case 'L':\r\n                path = ['C'].concat(l2c(d.x, d.y, path[1], path[2]));\r\n                break;\r\n            case 'H':\r\n                path = ['C'].concat(l2c(d.x, d.y, path[1], d.y));\r\n                break;\r\n            case 'V':\r\n                path = ['C'].concat(l2c(d.x, d.y, d.x, path[1]));\r\n                break;\r\n            case 'Z':\r\n                path = ['C'].concat(l2c(d.x, d.y, d.X, d.Y));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return path;\r\n    };\r\n    var fixArc = function fixArc(pp, i) {\r\n        if (pp[i].length > 7) {\r\n            pp[i].shift();\r\n            var pi = pp[i];\r\n            while (pi.length) {\r\n                pcoms1[i] = 'A';\r\n                p2 && (pcoms2[i] = 'A');\r\n                pp.splice(i++, 0, ['C'].concat(pi.splice(0, 6)));\r\n            }\r\n            pp.splice(i, 1);\r\n            ii = Math.max(p.length, p2 && p2.length || 0);\r\n        }\r\n    };\r\n    var fixM = function fixM(path1, path2, a1, a2, i) {\r\n        if (path1 && path2 && path1[i][0] === 'M' && path2[i][0] !== 'M') {\r\n            path2.splice(i, 0, ['M', a2.x, a2.y]);\r\n            a1.bx = 0;\r\n            a1.by = 0;\r\n            a1.x = path1[i][1];\r\n            a1.y = path1[i][2];\r\n            ii = Math.max(p.length, p2 && p2.length || 0);\r\n        }\r\n    };\r\n    ii = Math.max(p.length, p2 && p2.length || 0);\r\n    for (var i = 0; i < ii; i++) {\r\n        p[i] && (pfirst = p[i][0]);\r\n        if (pfirst !== 'C') {\r\n            pcoms1[i] = pfirst;\r\n            i && (pcom = pcoms1[i - 1]);\r\n        }\r\n        p[i] = processPath(p[i], attrs, pcom);\r\n        if (pcoms1[i] !== 'A' && pfirst === 'C')\r\n            pcoms1[i] = 'C';\r\n        fixArc(p, i);\r\n        if (p2) {\r\n            p2[i] && (pfirst = p2[i][0]);\r\n            if (pfirst !== 'C') {\r\n                pcoms2[i] = pfirst;\r\n                i && (pcom = pcoms2[i - 1]);\r\n            }\r\n            p2[i] = processPath(p2[i], attrs2, pcom);\r\n            if (pcoms2[i] !== 'A' && pfirst === 'C') {\r\n                pcoms2[i] = 'C';\r\n            }\r\n            fixArc(p2, i);\r\n        }\r\n        fixM(p, p2, attrs, attrs2, i);\r\n        fixM(p2, p, attrs2, attrs, i);\r\n        var seg = p[i];\r\n        var seg2 = p2 && p2[i];\r\n        var seglen = seg.length;\r\n        var seg2len = p2 && seg2.length;\r\n        attrs.x = seg[seglen - 2];\r\n        attrs.y = seg[seglen - 1];\r\n        attrs.bx = parseFloat(seg[seglen - 4]) || attrs.x;\r\n        attrs.by = parseFloat(seg[seglen - 3]) || attrs.y;\r\n        attrs2.bx = p2 && (parseFloat(seg2[seg2len - 4]) || attrs2.x);\r\n        attrs2.by = p2 && (parseFloat(seg2[seg2len - 3]) || attrs2.y);\r\n        attrs2.x = p2 && seg2[seg2len - 2];\r\n        attrs2.y = p2 && seg2[seg2len - 1];\r\n    }\r\n    return p2 ? [p, p2] : p;\r\n};\r\nvar p2s = /,?([a-z]),?/gi;\r\nvar parsePathArray = function parsePathArray(path) {\r\n    return path.join(',').replace(p2s, '$1');\r\n};\r\nvar base3 = function base3(t, p1, p2, p3, p4) {\r\n    var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4;\r\n    var t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\r\n    return t * t2 - 3 * p1 + 3 * p2;\r\n};\r\nvar bezlen = function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\r\n    if (z === null) {\r\n        z = 1;\r\n    }\r\n    z = z > 1 ? 1 : z < 0 ? 0 : z;\r\n    var z2 = z / 2;\r\n    var n = 12;\r\n    var Tvalues = [-0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873, -0.7699, 0.7699, -0.9041, 0.9041, -0.9816, 0.9816];\r\n    var Cvalues = [0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472];\r\n    var sum = 0;\r\n    for (var i = 0; i < n; i++) {\r\n        var ct = z2 * Tvalues[i] + z2;\r\n        var xbase = base3(ct, x1, x2, x3, x4);\r\n        var ybase = base3(ct, y1, y2, y3, y4);\r\n        var comb = xbase * xbase + ybase * ybase;\r\n        sum += Cvalues[i] * Math.sqrt(comb);\r\n    }\r\n    return z2 * sum;\r\n};\r\nvar curveDim = function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\r\n    var tvalues = [];\r\n    var bounds = [[], []];\r\n    var a;\r\n    var b;\r\n    var c;\r\n    var t;\r\n    for (var i = 0; i < 2; ++i) {\r\n        if (i === 0) {\r\n            b = 6 * x0 - 12 * x1 + 6 * x2;\r\n            a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\r\n            c = 3 * x1 - 3 * x0;\r\n        }\r\n        else {\r\n            b = 6 * y0 - 12 * y1 + 6 * y2;\r\n            a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\r\n            c = 3 * y1 - 3 * y0;\r\n        }\r\n        if (Math.abs(a) < 1e-12) {\r\n            if (Math.abs(b) < 1e-12) {\r\n                continue;\r\n            }\r\n            t = -c / b;\r\n            if (t > 0 && t < 1) {\r\n                tvalues.push(t);\r\n            }\r\n            continue;\r\n        }\r\n        var b2ac = b * b - 4 * c * a;\r\n        var sqrtb2ac = Math.sqrt(b2ac);\r\n        if (b2ac < 0) {\r\n            continue;\r\n        }\r\n        var t1 = (-b + sqrtb2ac) / (2 * a);\r\n        if (t1 > 0 && t1 < 1) {\r\n            tvalues.push(t1);\r\n        }\r\n        var t2 = (-b - sqrtb2ac) / (2 * a);\r\n        if (t2 > 0 && t2 < 1) {\r\n            tvalues.push(t2);\r\n        }\r\n    }\r\n    var j = tvalues.length;\r\n    var jlen = j;\r\n    var mt;\r\n    while (j--) {\r\n        t = tvalues[j];\r\n        mt = 1 - t;\r\n        bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\r\n        bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\r\n    }\r\n    bounds[0][jlen] = x0;\r\n    bounds[1][jlen] = y0;\r\n    bounds[0][jlen + 1] = x3;\r\n    bounds[1][jlen + 1] = y3;\r\n    bounds[0].length = bounds[1].length = jlen + 2;\r\n    return {\r\n        min: {\r\n            x: Math.min.apply(0, bounds[0]),\r\n            y: Math.min.apply(0, bounds[1])\r\n        },\r\n        max: {\r\n            x: Math.max.apply(0, bounds[0]),\r\n            y: Math.max.apply(0, bounds[1])\r\n        }\r\n    };\r\n};\r\nvar intersect = function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\r\n    if (Math.max(x1, x2) < Math.min(x3, x4) || Math.min(x1, x2) > Math.max(x3, x4) || Math.max(y1, y2) < Math.min(y3, y4) || Math.min(y1, y2) > Math.max(y3, y4)) {\r\n        return;\r\n    }\r\n    var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4);\r\n    var ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4);\r\n    var denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\r\n    if (!denominator) {\r\n        return;\r\n    }\r\n    var px = nx / denominator;\r\n    var py = ny / denominator;\r\n    var px2 = +px.toFixed(2);\r\n    var py2 = +py.toFixed(2);\r\n    if (px2 < +Math.min(x1, x2).toFixed(2) || px2 > +Math.max(x1, x2).toFixed(2) || px2 < +Math.min(x3, x4).toFixed(2) || px2 > +Math.max(x3, x4).toFixed(2) || py2 < +Math.min(y1, y2).toFixed(2) || py2 > +Math.max(y1, y2).toFixed(2) || py2 < +Math.min(y3, y4).toFixed(2) || py2 > +Math.max(y3, y4).toFixed(2)) {\r\n        return;\r\n    }\r\n    return {\r\n        x: px,\r\n        y: py\r\n    };\r\n};\r\nvar isPointInsideBBox = function isPointInsideBBox(bbox, x, y) {\r\n    return x >= bbox.x && x <= bbox.x + bbox.width && y >= bbox.y && y <= bbox.y + bbox.height;\r\n};\r\nvar rectPath = function rectPath(x, y, w, h, r) {\r\n    if (r) {\r\n        return [['M', +x + +r, y], ['l', w - r * 2, 0], ['a', r, r, 0, 0, 1, r, r], ['l', 0, h - r * 2], ['a', r, r, 0, 0, 1, -r, r], ['l', r * 2 - w, 0], ['a', r, r, 0, 0, 1, -r, -r], ['l', 0, r * 2 - h], ['a', r, r, 0, 0, 1, r, -r], ['z']];\r\n    }\r\n    var res = [['M', x, y], ['l', w, 0], ['l', 0, h], ['l', -w, 0], ['z']];\r\n    res.parsePathArray = parsePathArray;\r\n    return res;\r\n};\r\nvar box = function box(x, y, width, height) {\r\n    if (x === null) {\r\n        x = y = width = height = 0;\r\n    }\r\n    if (y === null) {\r\n        y = x.y;\r\n        width = x.width;\r\n        height = x.height;\r\n        x = x.x;\r\n    }\r\n    return {\r\n        x: x,\r\n        y: y,\r\n        width: width,\r\n        w: width,\r\n        height: height,\r\n        h: height,\r\n        x2: x + width,\r\n        y2: y + height,\r\n        cx: x + width / 2,\r\n        cy: y + height / 2,\r\n        r1: Math.min(width, height) / 2,\r\n        r2: Math.max(width, height) / 2,\r\n        r0: Math.sqrt(width * width + height * height) / 2,\r\n        path: rectPath(x, y, width, height),\r\n        vb: [x, y, width, height].join(' ')\r\n    };\r\n};\r\nvar isBBoxIntersect = function isBBoxIntersect(bbox1, bbox2) {\r\n    bbox1 = box(bbox1);\r\n    bbox2 = box(bbox2);\r\n    return isPointInsideBBox(bbox2, bbox1.x, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2) || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x) && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\r\n};\r\nvar bezierBBox = function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\r\n    if (!Util.isArray(p1x)) {\r\n        p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\r\n    }\r\n    var bbox = curveDim.apply(null, p1x);\r\n    return box(bbox.min.x, bbox.min.y, bbox.max.x - bbox.min.x, bbox.max.y - bbox.min.y);\r\n};\r\nvar findDotsAtSegment = function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\r\n    var t1 = 1 - t;\r\n    var t13 = Math.pow(t1, 3);\r\n    var t12 = Math.pow(t1, 2);\r\n    var t2 = t * t;\r\n    var t3 = t2 * t;\r\n    var x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x;\r\n    var y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y;\r\n    var mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x);\r\n    var my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y);\r\n    var nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x);\r\n    var ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y);\r\n    var ax = t1 * p1x + t * c1x;\r\n    var ay = t1 * p1y + t * c1y;\r\n    var cx = t1 * c2x + t * p2x;\r\n    var cy = t1 * c2y + t * p2y;\r\n    var alpha = 90 - Math.atan2(mx - nx, my - ny) * 180 / Math.PI;\r\n    return {\r\n        x: x,\r\n        y: y,\r\n        m: {\r\n            x: mx,\r\n            y: my\r\n        },\r\n        n: {\r\n            x: nx,\r\n            y: ny\r\n        },\r\n        start: {\r\n            x: ax,\r\n            y: ay\r\n        },\r\n        end: {\r\n            x: cx,\r\n            y: cy\r\n        },\r\n        alpha: alpha\r\n    };\r\n};\r\nvar interHelper = function interHelper(bez1, bez2, justCount) {\r\n    var bbox1 = bezierBBox(bez1);\r\n    var bbox2 = bezierBBox(bez2);\r\n    if (!isBBoxIntersect(bbox1, bbox2)) {\r\n        return justCount ? 0 : [];\r\n    }\r\n    var l1 = bezlen.apply(0, bez1);\r\n    var l2 = bezlen.apply(0, bez2);\r\n    var n1 = ~~(l1 / 8);\r\n    var n2 = ~~(l2 / 8);\r\n    var dots1 = [];\r\n    var dots2 = [];\r\n    var xy = {};\r\n    var res = justCount ? 0 : [];\r\n    for (var i = 0; i < n1 + 1; i++) {\r\n        var d = findDotsAtSegment.apply(0, bez1.concat(i / n1));\r\n        dots1.push({\r\n            x: d.x,\r\n            y: d.y,\r\n            t: i / n1\r\n        });\r\n    }\r\n    for (var _i = 0; _i < n2 + 1; _i++) {\r\n        var _d = findDotsAtSegment.apply(0, bez2.concat(_i / n2));\r\n        dots2.push({\r\n            x: _d.x,\r\n            y: _d.y,\r\n            t: _i / n2\r\n        });\r\n    }\r\n    for (var _i2 = 0; _i2 < n1; _i2++) {\r\n        for (var j = 0; j < n2; j++) {\r\n            var di = dots1[_i2];\r\n            var di1 = dots1[_i2 + 1];\r\n            var dj = dots2[j];\r\n            var dj1 = dots2[j + 1];\r\n            var ci = Math.abs(di1.x - di.x) < 0.001 ? 'y' : 'x';\r\n            var cj = Math.abs(dj1.x - dj.x) < 0.001 ? 'y' : 'x';\r\n            var is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\r\n            if (is) {\r\n                if (xy[is.x.toFixed(4)] === is.y.toFixed(4)) {\r\n                    continue;\r\n                }\r\n                xy[is.x.toFixed(4)] = is.y.toFixed(4);\r\n                var t1 = di.t + Math.abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t);\r\n                var t2 = dj.t + Math.abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\r\n                if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\r\n                    if (justCount) {\r\n                        res++;\r\n                    }\r\n                    else {\r\n                        res.push({\r\n                            x: is.x,\r\n                            y: is.y,\r\n                            t1: t1,\r\n                            t2: t2\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return res;\r\n};\r\nvar interPathHelper = function interPathHelper(path1, path2, justCount) {\r\n    path1 = pathTocurve(path1);\r\n    path2 = pathTocurve(path2);\r\n    var x1;\r\n    var y1;\r\n    var x2;\r\n    var y2;\r\n    var x1m;\r\n    var y1m;\r\n    var x2m;\r\n    var y2m;\r\n    var bez1;\r\n    var bez2;\r\n    var res = justCount ? 0 : [];\r\n    for (var i = 0, ii = path1.length; i < ii; i++) {\r\n        var pi = path1[i];\r\n        if (pi[0] === 'M') {\r\n            x1 = x1m = pi[1];\r\n            y1 = y1m = pi[2];\r\n        }\r\n        else {\r\n            if (pi[0] === 'C') {\r\n                bez1 = [x1, y1].concat(pi.slice(1));\r\n                x1 = bez1[6];\r\n                y1 = bez1[7];\r\n            }\r\n            else {\r\n                bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\r\n                x1 = x1m;\r\n                y1 = y1m;\r\n            }\r\n            for (var j = 0, jj = path2.length; j < jj; j++) {\r\n                var pj = path2[j];\r\n                if (pj[0] === 'M') {\r\n                    x2 = x2m = pj[1];\r\n                    y2 = y2m = pj[2];\r\n                }\r\n                else {\r\n                    if (pj[0] === 'C') {\r\n                        bez2 = [x2, y2].concat(pj.slice(1));\r\n                        x2 = bez2[6];\r\n                        y2 = bez2[7];\r\n                    }\r\n                    else {\r\n                        bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\r\n                        x2 = x2m;\r\n                        y2 = y2m;\r\n                    }\r\n                    var intr = interHelper(bez1, bez2, justCount);\r\n                    if (justCount) {\r\n                        res += intr;\r\n                    }\r\n                    else {\r\n                        for (var k = 0, kk = intr.length; k < kk; k++) {\r\n                            intr[k].segment1 = i;\r\n                            intr[k].segment2 = j;\r\n                            intr[k].bez1 = bez1;\r\n                            intr[k].bez2 = bez2;\r\n                        }\r\n                        res = res.concat(intr);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return res;\r\n};\r\nvar pathIntersection = function pathIntersection(path1, path2) {\r\n    return interPathHelper(path1, path2);\r\n};\r\nfunction decasteljau(points, t) {\r\n    var left = [];\r\n    var right = [];\r\n    function recurse(points, t) {\r\n        if (points.length === 1) {\r\n            left.push(points[0]);\r\n            right.push(points[0]);\r\n        }\r\n        else {\r\n            var middlePoints = [];\r\n            for (var i = 0; i < points.length - 1; i++) {\r\n                if (i === 0) {\r\n                    left.push(points[0]);\r\n                }\r\n                if (i === points.length - 2) {\r\n                    right.push(points[i + 1]);\r\n                }\r\n                middlePoints[i] = [(1 - t) * points[i][0] + t * points[i + 1][0], (1 - t) * points[i][1] + t * points[i + 1][1]];\r\n            }\r\n            recurse(middlePoints, t);\r\n        }\r\n    }\r\n    if (points.length) {\r\n        recurse(points, t);\r\n    }\r\n    return {\r\n        left: left,\r\n        right: right.reverse()\r\n    };\r\n}\r\nfunction splitCurve(start, end, count) {\r\n    var points = [[start[1], start[2]]];\r\n    count = count || 2;\r\n    var segments = [];\r\n    if (end[0] === 'A') {\r\n        points.push(end[6]);\r\n        points.push(end[7]);\r\n    }\r\n    else if (end[0] === 'C') {\r\n        points.push([end[1], end[2]]);\r\n        points.push([end[3], end[4]]);\r\n        points.push([end[5], end[6]]);\r\n    }\r\n    else if (end[0] === 'S' || end[0] === 'Q') {\r\n        points.push([end[1], end[2]]);\r\n        points.push([end[3], end[4]]);\r\n    }\r\n    else {\r\n        points.push([end[1], end[2]]);\r\n    }\r\n    var leftSegments = points;\r\n    var t = 1 / count;\r\n    for (var i = 0; i < count - 1; i++) {\r\n        var rt = t / (1 - t * i);\r\n        var split = decasteljau(leftSegments, rt);\r\n        segments.push(split.left);\r\n        leftSegments = split.right;\r\n    }\r\n    segments.push(leftSegments);\r\n    var result = segments.map(function (segment) {\r\n        var cmd = [];\r\n        if (segment.length === 4) {\r\n            cmd.push('C');\r\n            cmd = cmd.concat(segment[2]);\r\n        }\r\n        if (segment.length >= 3) {\r\n            if (segment.length === 3) {\r\n                cmd.push('Q');\r\n            }\r\n            cmd = cmd.concat(segment[1]);\r\n        }\r\n        if (segment.length === 2) {\r\n            cmd.push('L');\r\n        }\r\n        cmd = cmd.concat(segment[segment.length - 1]);\r\n        return cmd;\r\n    });\r\n    return result;\r\n}\r\nvar splitSegment = function splitSegment(start, end, count) {\r\n    if (count === 1) {\r\n        return [[].concat(start)];\r\n    }\r\n    var segments = [];\r\n    if (end[0] === 'L' || end[0] === 'C' || end[0] === 'Q') {\r\n        segments = segments.concat(splitCurve(start, end, count));\r\n    }\r\n    else {\r\n        var temp = [].concat(start);\r\n        if (temp[0] === 'M') {\r\n            temp[0] = 'L';\r\n        }\r\n        for (var i = 0; i <= count - 1; i++) {\r\n            segments.push(temp);\r\n        }\r\n    }\r\n    return segments;\r\n};\r\nvar fillPath = function fillPath(source, target) {\r\n    if (source.length === 1) {\r\n        return source;\r\n    }\r\n    var sourceLen = source.length - 1;\r\n    var targetLen = target.length - 1;\r\n    var ratio = sourceLen / targetLen;\r\n    var segmentsToFill = [];\r\n    if (source.length === 1 && source[0][0] === 'M') {\r\n        for (var i = 0; i < targetLen - sourceLen; i++) {\r\n            source.push(source[0]);\r\n        }\r\n        return source;\r\n    }\r\n    for (var _i3 = 0; _i3 < targetLen; _i3++) {\r\n        var index = Math.floor(ratio * _i3);\r\n        segmentsToFill[index] = (segmentsToFill[index] || 0) + 1;\r\n    }\r\n    var filled = segmentsToFill.reduce(function (filled, count, i) {\r\n        if (i === sourceLen) {\r\n            return filled.concat(source[sourceLen]);\r\n        }\r\n        return filled.concat(splitSegment(source[i], source[i + 1], count));\r\n    }, []);\r\n    filled.unshift(source[0]);\r\n    if (target[targetLen] === 'Z' || target[targetLen] === 'z') {\r\n        filled.push('Z');\r\n    }\r\n    return filled;\r\n};\r\nvar isEqual = function isEqual(obj1, obj2) {\r\n    if (obj1.length !== obj2.length) {\r\n        return false;\r\n    }\r\n    var result = true;\r\n    Util.each(obj1, function (item, i) {\r\n        if (item !== obj2[i]) {\r\n            result = false;\r\n            return false;\r\n        }\r\n    });\r\n    return result;\r\n};\r\nfunction getMinDiff(del, add, modify) {\r\n    var type = null;\r\n    var min = modify;\r\n    if (add < min) {\r\n        min = add;\r\n        type = 'add';\r\n    }\r\n    if (del < min) {\r\n        min = del;\r\n        type = 'del';\r\n    }\r\n    return {\r\n        type: type,\r\n        min: min\r\n    };\r\n}\r\nvar levenshteinDistance = function levenshteinDistance(source, target) {\r\n    var sourceLen = source.length;\r\n    var targetLen = target.length;\r\n    var sourceSegment, targetSegment;\r\n    var temp = 0;\r\n    if (sourceLen === 0 || targetLen === 0) {\r\n        return null;\r\n    }\r\n    var dist = [];\r\n    for (var i = 0; i <= sourceLen; i++) {\r\n        dist[i] = [];\r\n        dist[i][0] = {\r\n            min: i\r\n        };\r\n    }\r\n    for (var j = 0; j <= targetLen; j++) {\r\n        dist[0][j] = {\r\n            min: j\r\n        };\r\n    }\r\n    for (var _i4 = 1; _i4 <= sourceLen; _i4++) {\r\n        sourceSegment = source[_i4 - 1];\r\n        for (var _j2 = 1; _j2 <= targetLen; _j2++) {\r\n            targetSegment = target[_j2 - 1];\r\n            if (isEqual(sourceSegment, targetSegment)) {\r\n                temp = 0;\r\n            }\r\n            else {\r\n                temp = 1;\r\n            }\r\n            var del = dist[_i4 - 1][_j2].min + 1;\r\n            var add = dist[_i4][_j2 - 1].min + 1;\r\n            var modify = dist[_i4 - 1][_j2 - 1].min + temp;\r\n            dist[_i4][_j2] = getMinDiff(del, add, modify);\r\n        }\r\n    }\r\n    return dist;\r\n};\r\nvar fillPathByDiff = function fillPathByDiff(source, target) {\r\n    var diffMatrix = levenshteinDistance(source, target);\r\n    var sourceLen = source.length;\r\n    var targetLen = target.length;\r\n    var changes = [];\r\n    var index = 1;\r\n    var minPos = 1;\r\n    if (diffMatrix[sourceLen][targetLen] !== sourceLen) {\r\n        for (var i = 1; i <= sourceLen; i++) {\r\n            var min = diffMatrix[i][i].min;\r\n            minPos = i;\r\n            for (var j = index; j <= targetLen; j++) {\r\n                if (diffMatrix[i][j].min < min) {\r\n                    min = diffMatrix[i][j].min;\r\n                    minPos = j;\r\n                }\r\n            }\r\n            index = minPos;\r\n            if (diffMatrix[i][index].type) {\r\n                changes.push({\r\n                    index: i - 1,\r\n                    type: diffMatrix[i][index].type\r\n                });\r\n            }\r\n        }\r\n        for (var _i5 = changes.length - 1; _i5 >= 0; _i5--) {\r\n            index = changes[_i5].index;\r\n            if (changes[_i5].type === 'add') {\r\n                source.splice(index, 0, [].concat(source[index]));\r\n            }\r\n            else {\r\n                source.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n    sourceLen = source.length;\r\n    var diff = targetLen - sourceLen;\r\n    if (sourceLen < targetLen) {\r\n        for (var _i6 = 0; _i6 < diff; _i6++) {\r\n            if (source[sourceLen - 1][0] === 'z' || source[sourceLen - 1][0] === 'Z') {\r\n                source.splice(sourceLen - 2, 0, source[sourceLen - 2]);\r\n            }\r\n            else {\r\n                source.push(source[sourceLen - 1]);\r\n            }\r\n            sourceLen += 1;\r\n        }\r\n    }\r\n    return source;\r\n};\r\nfunction _splitPoints(points, former, count) {\r\n    var result = [].concat(points);\r\n    var index;\r\n    var t = 1 / (count + 1);\r\n    var formerEnd = _getSegmentPoints(former)[0];\r\n    for (var i = 1; i <= count; i++) {\r\n        t *= i;\r\n        index = Math.floor(points.length * t);\r\n        if (index === 0) {\r\n            result.unshift([formerEnd[0] * t + points[index][0] * (1 - t), formerEnd[1] * t + points[index][1] * (1 - t)]);\r\n        }\r\n        else {\r\n            result.splice(index, 0, [formerEnd[0] * t + points[index][0] * (1 - t), formerEnd[1] * t + points[index][1] * (1 - t)]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction _getSegmentPoints(segment) {\r\n    var points = [];\r\n    switch (segment[0]) {\r\n        case 'M':\r\n            points.push([segment[1], segment[2]]);\r\n            break;\r\n        case 'L':\r\n            points.push([segment[1], segment[2]]);\r\n            break;\r\n        case 'A':\r\n            points.push([segment[6], segment[7]]);\r\n            break;\r\n        case 'Q':\r\n            points.push([segment[3], segment[4]]);\r\n            points.push([segment[1], segment[2]]);\r\n            break;\r\n        case 'T':\r\n            points.push([segment[1], segment[2]]);\r\n            break;\r\n        case 'C':\r\n            points.push([segment[5], segment[6]]);\r\n            points.push([segment[1], segment[2]]);\r\n            points.push([segment[3], segment[4]]);\r\n            break;\r\n        case 'S':\r\n            points.push([segment[3], segment[4]]);\r\n            points.push([segment[1], segment[2]]);\r\n            break;\r\n        case 'H':\r\n            points.push([segment[1], segment[1]]);\r\n            break;\r\n        case 'V':\r\n            points.push([segment[1], segment[1]]);\r\n            break;\r\n        default:\r\n    }\r\n    return points;\r\n}\r\nvar formatPath = function formatPath(fromPath, toPath) {\r\n    if (fromPath.length <= 1) {\r\n        return fromPath;\r\n    }\r\n    var points;\r\n    for (var i = 0; i < toPath.length; i++) {\r\n        if (fromPath[i][0] !== toPath[i][0]) {\r\n            points = _getSegmentPoints(fromPath[i]);\r\n            switch (toPath[i][0]) {\r\n                case 'M':\r\n                    fromPath[i] = ['M'].concat(points[0]);\r\n                    break;\r\n                case 'L':\r\n                    fromPath[i] = ['L'].concat(points[0]);\r\n                    break;\r\n                case 'A':\r\n                    fromPath[i] = [].concat(toPath[i]);\r\n                    fromPath[i][6] = points[0][0];\r\n                    fromPath[i][7] = points[0][1];\r\n                    break;\r\n                case 'Q':\r\n                    if (points.length < 2) {\r\n                        if (i > 0) {\r\n                            points = _splitPoints(points, fromPath[i - 1], 1);\r\n                        }\r\n                        else {\r\n                            fromPath[i] = toPath[i];\r\n                            break;\r\n                        }\r\n                    }\r\n                    fromPath[i] = ['Q'].concat(points.reduce(function (arr, i) {\r\n                        return arr.concat(i);\r\n                    }, []));\r\n                    break;\r\n                case 'T':\r\n                    fromPath[i] = ['T'].concat(points[0]);\r\n                    break;\r\n                case 'C':\r\n                    if (points.length < 3) {\r\n                        if (i > 0) {\r\n                            points = _splitPoints(points, fromPath[i - 1], 2);\r\n                        }\r\n                        else {\r\n                            fromPath[i] = toPath[i];\r\n                            break;\r\n                        }\r\n                    }\r\n                    fromPath[i] = ['C'].concat(points.reduce(function (arr, i) {\r\n                        return arr.concat(i);\r\n                    }, []));\r\n                    break;\r\n                case 'S':\r\n                    if (points.length < 2) {\r\n                        if (i > 0) {\r\n                            points = _splitPoints(points, fromPath[i - 1], 1);\r\n                        }\r\n                        else {\r\n                            fromPath[i] = toPath[i];\r\n                            break;\r\n                        }\r\n                    }\r\n                    fromPath[i] = ['S'].concat(points.reduce(function (arr, i) {\r\n                        return arr.concat(i);\r\n                    }, []));\r\n                    break;\r\n                default:\r\n                    fromPath[i] = toPath[i];\r\n            }\r\n        }\r\n    }\r\n    return fromPath;\r\n};\r\nmodule.exports = {\r\n    parsePathString: parsePathString,\r\n    parsePathArray: parsePathArray,\r\n    pathTocurve: pathTocurve,\r\n    pathToAbsolute: pathToAbsolute,\r\n    catmullRomToBezier: catmullRom2bezier,\r\n    rectPath: rectPath,\r\n    fillPath: fillPath,\r\n    fillPathByDiff: fillPathByDiff,\r\n    formatPath: formatPath,\r\n    intersection: pathIntersection\r\n};\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g\\lib\\util\\path.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g\\lib\\util\\path.js"],"names":[],"mappings":"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","sourcesContent":["var Util = require('./common');\n\nvar SPACES = \"\\t\\n\\x0B\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\";\nvar PATH_COMMAND = new RegExp('([a-z])[' + SPACES + ',]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[' + SPACES + ']*,?[' + SPACES + ']*)+)', 'ig');\nvar PATH_VALUES = new RegExp('(-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?)[' + SPACES + ']*,?[' + SPACES + ']*', 'ig'); // Parses given path string into an array of arrays of path segments\n\nvar parsePathString = function parsePathString(pathString) {\n  if (!pathString) {\n    return null;\n  }\n\n  if (typeof pathString === typeof []) {\n    return pathString;\n  }\n\n  var paramCounts = {\n    a: 7,\n    c: 6,\n    o: 2,\n    h: 1,\n    l: 2,\n    m: 2,\n    r: 4,\n    q: 4,\n    s: 4,\n    t: 2,\n    v: 1,\n    u: 3,\n    z: 0\n  };\n  var data = [];\n  String(pathString).replace(PATH_COMMAND, function (a, b, c) {\n    var params = [];\n    var name = b.toLowerCase();\n    c.replace(PATH_VALUES, function (a, b) {\n      b && params.push(+b);\n    });\n\n    if (name === 'm' && params.length > 2) {\n      data.push([b].concat(params.splice(0, 2)));\n      name = 'l';\n      b = b === 'm' ? 'l' : 'L';\n    }\n\n    if (name === 'o' && params.length === 1) {\n      data.push([b, params[0]]);\n    }\n\n    if (name === 'r') {\n      data.push([b].concat(params));\n    } else {\n      while (params.length >= paramCounts[name]) {\n        data.push([b].concat(params.splice(0, paramCounts[name])));\n\n        if (!paramCounts[name]) {\n          break;\n        }\n      }\n    }\n  });\n  return data;\n}; // http://schepers.cc/getting-to-the-point\n\n\nvar catmullRom2bezier = function catmullRom2bezier(crp, z) {\n  var d = [];\n\n  for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n    var p = [{\n      x: +crp[i - 2],\n      y: +crp[i - 1]\n    }, {\n      x: +crp[i],\n      y: +crp[i + 1]\n    }, {\n      x: +crp[i + 2],\n      y: +crp[i + 3]\n    }, {\n      x: +crp[i + 4],\n      y: +crp[i + 5]\n    }];\n\n    if (z) {\n      if (!i) {\n        p[0] = {\n          x: +crp[iLen - 2],\n          y: +crp[iLen - 1]\n        };\n      } else if (iLen - 4 === i) {\n        p[3] = {\n          x: +crp[0],\n          y: +crp[1]\n        };\n      } else if (iLen - 2 === i) {\n        p[2] = {\n          x: +crp[0],\n          y: +crp[1]\n        };\n        p[3] = {\n          x: +crp[2],\n          y: +crp[3]\n        };\n      }\n    } else {\n      if (iLen - 4 === i) {\n        p[3] = p[2];\n      } else if (!i) {\n        p[0] = {\n          x: +crp[i],\n          y: +crp[i + 1]\n        };\n      }\n    }\n\n    d.push(['C', (-p[0].x + 6 * p[1].x + p[2].x) / 6, (-p[0].y + 6 * p[1].y + p[2].y) / 6, (p[1].x + 6 * p[2].x - p[3].x) / 6, (p[1].y + 6 * p[2].y - p[3].y) / 6, p[2].x, p[2].y]);\n  }\n\n  return d;\n};\n\nvar ellipsePath = function ellipsePath(x, y, rx, ry, a) {\n  var res = [];\n\n  if (a === null && ry === null) {\n    ry = rx;\n  }\n\n  x = +x;\n  y = +y;\n  rx = +rx;\n  ry = +ry;\n\n  if (a !== null) {\n    var rad = Math.PI / 180;\n    var x1 = x + rx * Math.cos(-ry * rad);\n    var x2 = x + rx * Math.cos(-a * rad);\n    var y1 = y + rx * Math.sin(-ry * rad);\n    var y2 = y + rx * Math.sin(-a * rad);\n    res = [['M', x1, y1], ['A', rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n  } else {\n    res = [['M', x, y], ['m', 0, -ry], ['a', rx, ry, 0, 1, 1, 0, 2 * ry], ['a', rx, ry, 0, 1, 1, 0, -2 * ry], ['z']];\n  }\n\n  return res;\n};\n\nvar pathToAbsolute = function pathToAbsolute(pathArray) {\n  pathArray = parsePathString(pathArray);\n\n  if (!pathArray || !pathArray.length) {\n    return [['M', 0, 0]];\n  }\n\n  var res = [];\n  var x = 0;\n  var y = 0;\n  var mx = 0;\n  var my = 0;\n  var start = 0;\n  var pa0;\n  var dots;\n\n  if (pathArray[0][0] === 'M') {\n    x = +pathArray[0][1];\n    y = +pathArray[0][2];\n    mx = x;\n    my = y;\n    start++;\n    res[0] = ['M', x, y];\n  }\n\n  var crz = pathArray.length === 3 && pathArray[0][0] === 'M' && pathArray[1][0].toUpperCase() === 'R' && pathArray[2][0].toUpperCase() === 'Z';\n\n  for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n    res.push(r = []);\n    pa = pathArray[i];\n    pa0 = pa[0];\n\n    if (pa0 !== pa0.toUpperCase()) {\n      r[0] = pa0.toUpperCase();\n\n      switch (r[0]) {\n        case 'A':\n          r[1] = pa[1];\n          r[2] = pa[2];\n          r[3] = pa[3];\n          r[4] = pa[4];\n          r[5] = pa[5];\n          r[6] = +pa[6] + x;\n          r[7] = +pa[7] + y;\n          break;\n\n        case 'V':\n          r[1] = +pa[1] + y;\n          break;\n\n        case 'H':\n          r[1] = +pa[1] + x;\n          break;\n\n        case 'R':\n          dots = [x, y].concat(pa.slice(1));\n\n          for (var j = 2, jj = dots.length; j < jj; j++) {\n            dots[j] = +dots[j] + x;\n            dots[++j] = +dots[j] + y;\n          }\n\n          res.pop();\n          res = res.concat(catmullRom2bezier(dots, crz));\n          break;\n\n        case 'O':\n          res.pop();\n          dots = ellipsePath(x, y, pa[1], pa[2]);\n          dots.push(dots[0]);\n          res = res.concat(dots);\n          break;\n\n        case 'U':\n          res.pop();\n          res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n          r = ['U'].concat(res[res.length - 1].slice(-2));\n          break;\n\n        case 'M':\n          mx = +pa[1] + x;\n          my = +pa[2] + y;\n          break;\n        // for lint\n\n        default:\n          for (var _j = 1, _jj = pa.length; _j < _jj; _j++) {\n            r[_j] = +pa[_j] + (_j % 2 ? x : y);\n          }\n\n      }\n    } else if (pa0 === 'R') {\n      dots = [x, y].concat(pa.slice(1));\n      res.pop();\n      res = res.concat(catmullRom2bezier(dots, crz));\n      r = ['R'].concat(pa.slice(-2));\n    } else if (pa0 === 'O') {\n      res.pop();\n      dots = ellipsePath(x, y, pa[1], pa[2]);\n      dots.push(dots[0]);\n      res = res.concat(dots);\n    } else if (pa0 === 'U') {\n      res.pop();\n      res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n      r = ['U'].concat(res[res.length - 1].slice(-2));\n    } else {\n      for (var k = 0, kk = pa.length; k < kk; k++) {\n        r[k] = pa[k];\n      }\n    }\n\n    pa0 = pa0.toUpperCase();\n\n    if (pa0 !== 'O') {\n      switch (r[0]) {\n        case 'Z':\n          x = +mx;\n          y = +my;\n          break;\n\n        case 'H':\n          x = r[1];\n          break;\n\n        case 'V':\n          y = r[1];\n          break;\n\n        case 'M':\n          mx = r[r.length - 2];\n          my = r[r.length - 1];\n          break;\n        // for lint\n\n        default:\n          x = r[r.length - 2];\n          y = r[r.length - 1];\n      }\n    }\n  }\n\n  return res;\n};\n\nvar l2c = function l2c(x1, y1, x2, y2) {\n  return [x1, y1, x2, y2, x2, y2];\n};\n\nvar q2c = function q2c(x1, y1, ax, ay, x2, y2) {\n  var _13 = 1 / 3;\n\n  var _23 = 2 / 3;\n\n  return [_13 * x1 + _23 * ax, _13 * y1 + _23 * ay, _13 * x2 + _23 * ax, _13 * y2 + _23 * ay, x2, y2];\n};\n\nvar a2c = function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n  // for more information of where this math came from visit:\n  // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n  if (rx === ry) {\n    rx += 1;\n  }\n\n  var _120 = Math.PI * 120 / 180;\n\n  var rad = Math.PI / 180 * (+angle || 0);\n  var res = [];\n  var xy;\n  var f1;\n  var f2;\n  var cx;\n  var cy;\n\n  var rotate = function rotate(x, y, rad) {\n    var X = x * Math.cos(rad) - y * Math.sin(rad);\n    var Y = x * Math.sin(rad) + y * Math.cos(rad);\n    return {\n      x: X,\n      y: Y\n    };\n  };\n\n  if (!recursive) {\n    xy = rotate(x1, y1, -rad);\n    x1 = xy.x;\n    y1 = xy.y;\n    xy = rotate(x2, y2, -rad);\n    x2 = xy.x;\n    y2 = xy.y;\n\n    if (x1 === x2 && y1 === y2) {\n      // 若弧的起始点和终点重叠则错开一点\n      x2 += 1;\n      y2 += 1;\n    } // const cos = Math.cos(Math.PI / 180 * angle);\n    // const sin = Math.sin(Math.PI / 180 * angle);\n\n\n    var x = (x1 - x2) / 2;\n    var y = (y1 - y2) / 2;\n    var h = x * x / (rx * rx) + y * y / (ry * ry);\n\n    if (h > 1) {\n      h = Math.sqrt(h);\n      rx = h * rx;\n      ry = h * ry;\n    }\n\n    var rx2 = rx * rx;\n    var ry2 = ry * ry;\n    var k = (large_arc_flag === sweep_flag ? -1 : 1) * Math.sqrt(Math.abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x)));\n    cx = k * rx * y / ry + (x1 + x2) / 2;\n    cy = k * -ry * x / rx + (y1 + y2) / 2;\n    f1 = Math.asin(((y1 - cy) / ry).toFixed(9));\n    f2 = Math.asin(((y2 - cy) / ry).toFixed(9));\n    f1 = x1 < cx ? Math.PI - f1 : f1;\n    f2 = x2 < cx ? Math.PI - f2 : f2;\n    f1 < 0 && (f1 = Math.PI * 2 + f1);\n    f2 < 0 && (f2 = Math.PI * 2 + f2);\n\n    if (sweep_flag && f1 > f2) {\n      f1 = f1 - Math.PI * 2;\n    }\n\n    if (!sweep_flag && f2 > f1) {\n      f2 = f2 - Math.PI * 2;\n    }\n  } else {\n    f1 = recursive[0];\n    f2 = recursive[1];\n    cx = recursive[2];\n    cy = recursive[3];\n  }\n\n  var df = f2 - f1;\n\n  if (Math.abs(df) > _120) {\n    var f2old = f2;\n    var x2old = x2;\n    var y2old = y2;\n    f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n    x2 = cx + rx * Math.cos(f2);\n    y2 = cy + ry * Math.sin(f2);\n    res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n  }\n\n  df = f2 - f1;\n  var c1 = Math.cos(f1);\n  var s1 = Math.sin(f1);\n  var c2 = Math.cos(f2);\n  var s2 = Math.sin(f2);\n  var t = Math.tan(df / 4);\n  var hx = 4 / 3 * rx * t;\n  var hy = 4 / 3 * ry * t;\n  var m1 = [x1, y1];\n  var m2 = [x1 + hx * s1, y1 - hy * c1];\n  var m3 = [x2 + hx * s2, y2 - hy * c2];\n  var m4 = [x2, y2];\n  m2[0] = 2 * m1[0] - m2[0];\n  m2[1] = 2 * m1[1] - m2[1];\n\n  if (recursive) {\n    return [m2, m3, m4].concat(res);\n  }\n\n  res = [m2, m3, m4].concat(res).join().split(',');\n  var newres = [];\n\n  for (var i = 0, ii = res.length; i < ii; i++) {\n    newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n  }\n\n  return newres;\n};\n\nvar pathTocurve = function pathTocurve(path, path2) {\n  var p = pathToAbsolute(path);\n  var p2 = path2 && pathToAbsolute(path2);\n  var attrs = {\n    x: 0,\n    y: 0,\n    bx: 0,\n    by: 0,\n    X: 0,\n    Y: 0,\n    qx: null,\n    qy: null\n  };\n  var attrs2 = {\n    x: 0,\n    y: 0,\n    bx: 0,\n    by: 0,\n    X: 0,\n    Y: 0,\n    qx: null,\n    qy: null\n  };\n  var pcoms1 = []; // path commands of original path p\n\n  var pcoms2 = []; // path commands of original path p2\n\n  var pfirst = ''; // temporary holder for original path command\n\n  var pcom = ''; // holder for previous path command of original path\n\n  var ii;\n\n  var processPath = function processPath(path, d, pcom) {\n    var nx, ny;\n\n    if (!path) {\n      return ['C', d.x, d.y, d.x, d.y, d.x, d.y];\n    }\n\n    !(path[0] in {\n      T: 1,\n      Q: 1\n    }) && (d.qx = d.qy = null);\n\n    switch (path[0]) {\n      case 'M':\n        d.X = path[1];\n        d.Y = path[2];\n        break;\n\n      case 'A':\n        path = ['C'].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n        break;\n\n      case 'S':\n        if (pcom === 'C' || pcom === 'S') {\n          // In \"S\" case we have to take into account, if the previous command is C/S.\n          nx = d.x * 2 - d.bx; // And reflect the previous\n\n          ny = d.y * 2 - d.by; // command's control point relative to the current point.\n        } else {\n          // or some else or nothing\n          nx = d.x;\n          ny = d.y;\n        }\n\n        path = ['C', nx, ny].concat(path.slice(1));\n        break;\n\n      case 'T':\n        if (pcom === 'Q' || pcom === 'T') {\n          // In \"T\" case we have to take into account, if the previous command is Q/T.\n          d.qx = d.x * 2 - d.qx; // And make a reflection similar\n\n          d.qy = d.y * 2 - d.qy; // to case \"S\".\n        } else {\n          // or something else or nothing\n          d.qx = d.x;\n          d.qy = d.y;\n        }\n\n        path = ['C'].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n        break;\n\n      case 'Q':\n        d.qx = path[1];\n        d.qy = path[2];\n        path = ['C'].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n        break;\n\n      case 'L':\n        path = ['C'].concat(l2c(d.x, d.y, path[1], path[2]));\n        break;\n\n      case 'H':\n        path = ['C'].concat(l2c(d.x, d.y, path[1], d.y));\n        break;\n\n      case 'V':\n        path = ['C'].concat(l2c(d.x, d.y, d.x, path[1]));\n        break;\n\n      case 'Z':\n        path = ['C'].concat(l2c(d.x, d.y, d.X, d.Y));\n        break;\n\n      default:\n        break;\n    }\n\n    return path;\n  };\n\n  var fixArc = function fixArc(pp, i) {\n    if (pp[i].length > 7) {\n      pp[i].shift();\n      var pi = pp[i];\n\n      while (pi.length) {\n        pcoms1[i] = 'A'; // if created multiple C:s, their original seg is saved\n\n        p2 && (pcoms2[i] = 'A'); // the same as above\n\n        pp.splice(i++, 0, ['C'].concat(pi.splice(0, 6)));\n      }\n\n      pp.splice(i, 1);\n      ii = Math.max(p.length, p2 && p2.length || 0);\n    }\n  };\n\n  var fixM = function fixM(path1, path2, a1, a2, i) {\n    if (path1 && path2 && path1[i][0] === 'M' && path2[i][0] !== 'M') {\n      path2.splice(i, 0, ['M', a2.x, a2.y]);\n      a1.bx = 0;\n      a1.by = 0;\n      a1.x = path1[i][1];\n      a1.y = path1[i][2];\n      ii = Math.max(p.length, p2 && p2.length || 0);\n    }\n  };\n\n  ii = Math.max(p.length, p2 && p2.length || 0);\n\n  for (var i = 0; i < ii; i++) {\n    p[i] && (pfirst = p[i][0]); // save current path command\n\n    if (pfirst !== 'C') {\n      // C is not saved yet, because it may be result of conversion\n      pcoms1[i] = pfirst; // Save current path command\n\n      i && (pcom = pcoms1[i - 1]); // Get previous path command pcom\n    }\n\n    p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n    if (pcoms1[i] !== 'A' && pfirst === 'C') pcoms1[i] = 'C'; // A is the only command\n    // which may produce multiple C:s\n    // so we have to make sure that C is also C in original path\n\n    fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n    if (p2) {\n      // the same procedures is done to p2\n      p2[i] && (pfirst = p2[i][0]);\n\n      if (pfirst !== 'C') {\n        pcoms2[i] = pfirst;\n        i && (pcom = pcoms2[i - 1]);\n      }\n\n      p2[i] = processPath(p2[i], attrs2, pcom);\n\n      if (pcoms2[i] !== 'A' && pfirst === 'C') {\n        pcoms2[i] = 'C';\n      }\n\n      fixArc(p2, i);\n    }\n\n    fixM(p, p2, attrs, attrs2, i);\n    fixM(p2, p, attrs2, attrs, i);\n    var seg = p[i];\n    var seg2 = p2 && p2[i];\n    var seglen = seg.length;\n    var seg2len = p2 && seg2.length;\n    attrs.x = seg[seglen - 2];\n    attrs.y = seg[seglen - 1];\n    attrs.bx = parseFloat(seg[seglen - 4]) || attrs.x;\n    attrs.by = parseFloat(seg[seglen - 3]) || attrs.y;\n    attrs2.bx = p2 && (parseFloat(seg2[seg2len - 4]) || attrs2.x);\n    attrs2.by = p2 && (parseFloat(seg2[seg2len - 3]) || attrs2.y);\n    attrs2.x = p2 && seg2[seg2len - 2];\n    attrs2.y = p2 && seg2[seg2len - 1];\n  }\n\n  return p2 ? [p, p2] : p;\n};\n\nvar p2s = /,?([a-z]),?/gi;\n\nvar parsePathArray = function parsePathArray(path) {\n  return path.join(',').replace(p2s, '$1');\n};\n\nvar base3 = function base3(t, p1, p2, p3, p4) {\n  var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4;\n  var t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n  return t * t2 - 3 * p1 + 3 * p2;\n};\n\nvar bezlen = function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n  if (z === null) {\n    z = 1;\n  }\n\n  z = z > 1 ? 1 : z < 0 ? 0 : z;\n  var z2 = z / 2;\n  var n = 12;\n  var Tvalues = [-0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873, -0.7699, 0.7699, -0.9041, 0.9041, -0.9816, 0.9816];\n  var Cvalues = [0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472];\n  var sum = 0;\n\n  for (var i = 0; i < n; i++) {\n    var ct = z2 * Tvalues[i] + z2;\n    var xbase = base3(ct, x1, x2, x3, x4);\n    var ybase = base3(ct, y1, y2, y3, y4);\n    var comb = xbase * xbase + ybase * ybase;\n    sum += Cvalues[i] * Math.sqrt(comb);\n  }\n\n  return z2 * sum;\n};\n\nvar curveDim = function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var tvalues = [];\n  var bounds = [[], []];\n  var a;\n  var b;\n  var c;\n  var t;\n\n  for (var i = 0; i < 2; ++i) {\n    if (i === 0) {\n      b = 6 * x0 - 12 * x1 + 6 * x2;\n      a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n      c = 3 * x1 - 3 * x0;\n    } else {\n      b = 6 * y0 - 12 * y1 + 6 * y2;\n      a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n      c = 3 * y1 - 3 * y0;\n    }\n\n    if (Math.abs(a) < 1e-12) {\n      if (Math.abs(b) < 1e-12) {\n        continue;\n      }\n\n      t = -c / b;\n\n      if (t > 0 && t < 1) {\n        tvalues.push(t);\n      }\n\n      continue;\n    }\n\n    var b2ac = b * b - 4 * c * a;\n    var sqrtb2ac = Math.sqrt(b2ac);\n\n    if (b2ac < 0) {\n      continue;\n    }\n\n    var t1 = (-b + sqrtb2ac) / (2 * a);\n\n    if (t1 > 0 && t1 < 1) {\n      tvalues.push(t1);\n    }\n\n    var t2 = (-b - sqrtb2ac) / (2 * a);\n\n    if (t2 > 0 && t2 < 1) {\n      tvalues.push(t2);\n    }\n  }\n\n  var j = tvalues.length;\n  var jlen = j;\n  var mt;\n\n  while (j--) {\n    t = tvalues[j];\n    mt = 1 - t;\n    bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n    bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n  }\n\n  bounds[0][jlen] = x0;\n  bounds[1][jlen] = y0;\n  bounds[0][jlen + 1] = x3;\n  bounds[1][jlen + 1] = y3;\n  bounds[0].length = bounds[1].length = jlen + 2;\n  return {\n    min: {\n      x: Math.min.apply(0, bounds[0]),\n      y: Math.min.apply(0, bounds[1])\n    },\n    max: {\n      x: Math.max.apply(0, bounds[0]),\n      y: Math.max.apply(0, bounds[1])\n    }\n  };\n};\n\nvar intersect = function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n  if (Math.max(x1, x2) < Math.min(x3, x4) || Math.min(x1, x2) > Math.max(x3, x4) || Math.max(y1, y2) < Math.min(y3, y4) || Math.min(y1, y2) > Math.max(y3, y4)) {\n    return;\n  }\n\n  var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4);\n  var ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4);\n  var denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n  if (!denominator) {\n    return;\n  }\n\n  var px = nx / denominator;\n  var py = ny / denominator;\n  var px2 = +px.toFixed(2);\n  var py2 = +py.toFixed(2);\n\n  if (px2 < +Math.min(x1, x2).toFixed(2) || px2 > +Math.max(x1, x2).toFixed(2) || px2 < +Math.min(x3, x4).toFixed(2) || px2 > +Math.max(x3, x4).toFixed(2) || py2 < +Math.min(y1, y2).toFixed(2) || py2 > +Math.max(y1, y2).toFixed(2) || py2 < +Math.min(y3, y4).toFixed(2) || py2 > +Math.max(y3, y4).toFixed(2)) {\n    return;\n  }\n\n  return {\n    x: px,\n    y: py\n  };\n};\n\nvar isPointInsideBBox = function isPointInsideBBox(bbox, x, y) {\n  return x >= bbox.x && x <= bbox.x + bbox.width && y >= bbox.y && y <= bbox.y + bbox.height;\n};\n\nvar rectPath = function rectPath(x, y, w, h, r) {\n  if (r) {\n    return [['M', +x + +r, y], ['l', w - r * 2, 0], ['a', r, r, 0, 0, 1, r, r], ['l', 0, h - r * 2], ['a', r, r, 0, 0, 1, -r, r], ['l', r * 2 - w, 0], ['a', r, r, 0, 0, 1, -r, -r], ['l', 0, r * 2 - h], ['a', r, r, 0, 0, 1, r, -r], ['z']];\n  }\n\n  var res = [['M', x, y], ['l', w, 0], ['l', 0, h], ['l', -w, 0], ['z']];\n  res.parsePathArray = parsePathArray;\n  return res;\n};\n\nvar box = function box(x, y, width, height) {\n  if (x === null) {\n    x = y = width = height = 0;\n  }\n\n  if (y === null) {\n    y = x.y;\n    width = x.width;\n    height = x.height;\n    x = x.x;\n  }\n\n  return {\n    x: x,\n    y: y,\n    width: width,\n    w: width,\n    height: height,\n    h: height,\n    x2: x + width,\n    y2: y + height,\n    cx: x + width / 2,\n    cy: y + height / 2,\n    r1: Math.min(width, height) / 2,\n    r2: Math.max(width, height) / 2,\n    r0: Math.sqrt(width * width + height * height) / 2,\n    path: rectPath(x, y, width, height),\n    vb: [x, y, width, height].join(' ')\n  };\n};\n\nvar isBBoxIntersect = function isBBoxIntersect(bbox1, bbox2) {\n  bbox1 = box(bbox1);\n  bbox2 = box(bbox2);\n  return isPointInsideBBox(bbox2, bbox1.x, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2) || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x) && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n};\n\nvar bezierBBox = function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n  if (!Util.isArray(p1x)) {\n    p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n  }\n\n  var bbox = curveDim.apply(null, p1x);\n  return box(bbox.min.x, bbox.min.y, bbox.max.x - bbox.min.x, bbox.max.y - bbox.min.y);\n};\n\nvar findDotsAtSegment = function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n  var t1 = 1 - t;\n  var t13 = Math.pow(t1, 3);\n  var t12 = Math.pow(t1, 2);\n  var t2 = t * t;\n  var t3 = t2 * t;\n  var x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x;\n  var y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y;\n  var mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x);\n  var my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y);\n  var nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x);\n  var ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y);\n  var ax = t1 * p1x + t * c1x;\n  var ay = t1 * p1y + t * c1y;\n  var cx = t1 * c2x + t * p2x;\n  var cy = t1 * c2y + t * p2y;\n  var alpha = 90 - Math.atan2(mx - nx, my - ny) * 180 / Math.PI; // (mx > nx || my < ny) && (alpha += 180);\n\n  return {\n    x: x,\n    y: y,\n    m: {\n      x: mx,\n      y: my\n    },\n    n: {\n      x: nx,\n      y: ny\n    },\n    start: {\n      x: ax,\n      y: ay\n    },\n    end: {\n      x: cx,\n      y: cy\n    },\n    alpha: alpha\n  };\n};\n\nvar interHelper = function interHelper(bez1, bez2, justCount) {\n  var bbox1 = bezierBBox(bez1);\n  var bbox2 = bezierBBox(bez2);\n\n  if (!isBBoxIntersect(bbox1, bbox2)) {\n    return justCount ? 0 : [];\n  }\n\n  var l1 = bezlen.apply(0, bez1);\n  var l2 = bezlen.apply(0, bez2);\n  var n1 = ~~(l1 / 8);\n  var n2 = ~~(l2 / 8);\n  var dots1 = [];\n  var dots2 = [];\n  var xy = {};\n  var res = justCount ? 0 : [];\n\n  for (var i = 0; i < n1 + 1; i++) {\n    var d = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n    dots1.push({\n      x: d.x,\n      y: d.y,\n      t: i / n1\n    });\n  }\n\n  for (var _i = 0; _i < n2 + 1; _i++) {\n    var _d = findDotsAtSegment.apply(0, bez2.concat(_i / n2));\n\n    dots2.push({\n      x: _d.x,\n      y: _d.y,\n      t: _i / n2\n    });\n  }\n\n  for (var _i2 = 0; _i2 < n1; _i2++) {\n    for (var j = 0; j < n2; j++) {\n      var di = dots1[_i2];\n      var di1 = dots1[_i2 + 1];\n      var dj = dots2[j];\n      var dj1 = dots2[j + 1];\n      var ci = Math.abs(di1.x - di.x) < 0.001 ? 'y' : 'x';\n      var cj = Math.abs(dj1.x - dj.x) < 0.001 ? 'y' : 'x';\n      var is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n\n      if (is) {\n        if (xy[is.x.toFixed(4)] === is.y.toFixed(4)) {\n          continue;\n        }\n\n        xy[is.x.toFixed(4)] = is.y.toFixed(4);\n        var t1 = di.t + Math.abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t);\n        var t2 = dj.t + Math.abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n\n        if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n          if (justCount) {\n            res++;\n          } else {\n            res.push({\n              x: is.x,\n              y: is.y,\n              t1: t1,\n              t2: t2\n            });\n          }\n        }\n      }\n    }\n  }\n\n  return res;\n};\n\nvar interPathHelper = function interPathHelper(path1, path2, justCount) {\n  path1 = pathTocurve(path1);\n  path2 = pathTocurve(path2);\n  var x1;\n  var y1;\n  var x2;\n  var y2;\n  var x1m;\n  var y1m;\n  var x2m;\n  var y2m;\n  var bez1;\n  var bez2;\n  var res = justCount ? 0 : [];\n\n  for (var i = 0, ii = path1.length; i < ii; i++) {\n    var pi = path1[i];\n\n    if (pi[0] === 'M') {\n      x1 = x1m = pi[1];\n      y1 = y1m = pi[2];\n    } else {\n      if (pi[0] === 'C') {\n        bez1 = [x1, y1].concat(pi.slice(1));\n        x1 = bez1[6];\n        y1 = bez1[7];\n      } else {\n        bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n        x1 = x1m;\n        y1 = y1m;\n      }\n\n      for (var j = 0, jj = path2.length; j < jj; j++) {\n        var pj = path2[j];\n\n        if (pj[0] === 'M') {\n          x2 = x2m = pj[1];\n          y2 = y2m = pj[2];\n        } else {\n          if (pj[0] === 'C') {\n            bez2 = [x2, y2].concat(pj.slice(1));\n            x2 = bez2[6];\n            y2 = bez2[7];\n          } else {\n            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n            x2 = x2m;\n            y2 = y2m;\n          }\n\n          var intr = interHelper(bez1, bez2, justCount);\n\n          if (justCount) {\n            res += intr;\n          } else {\n            for (var k = 0, kk = intr.length; k < kk; k++) {\n              intr[k].segment1 = i;\n              intr[k].segment2 = j;\n              intr[k].bez1 = bez1;\n              intr[k].bez2 = bez2;\n            }\n\n            res = res.concat(intr);\n          }\n        }\n      }\n    }\n  }\n\n  return res;\n};\n\nvar pathIntersection = function pathIntersection(path1, path2) {\n  return interPathHelper(path1, path2);\n};\n\nfunction decasteljau(points, t) {\n  var left = [];\n  var right = [];\n\n  function recurse(points, t) {\n    if (points.length === 1) {\n      left.push(points[0]);\n      right.push(points[0]);\n    } else {\n      var middlePoints = [];\n\n      for (var i = 0; i < points.length - 1; i++) {\n        if (i === 0) {\n          left.push(points[0]);\n        }\n\n        if (i === points.length - 2) {\n          right.push(points[i + 1]);\n        }\n\n        middlePoints[i] = [(1 - t) * points[i][0] + t * points[i + 1][0], (1 - t) * points[i][1] + t * points[i + 1][1]];\n      }\n\n      recurse(middlePoints, t);\n    }\n  }\n\n  if (points.length) {\n    recurse(points, t);\n  }\n\n  return {\n    left: left,\n    right: right.reverse()\n  };\n}\n\nfunction splitCurve(start, end, count) {\n  var points = [[start[1], start[2]]];\n  count = count || 2;\n  var segments = [];\n\n  if (end[0] === 'A') {\n    points.push(end[6]);\n    points.push(end[7]);\n  } else if (end[0] === 'C') {\n    points.push([end[1], end[2]]);\n    points.push([end[3], end[4]]);\n    points.push([end[5], end[6]]);\n  } else if (end[0] === 'S' || end[0] === 'Q') {\n    points.push([end[1], end[2]]);\n    points.push([end[3], end[4]]);\n  } else {\n    points.push([end[1], end[2]]);\n  }\n\n  var leftSegments = points;\n  var t = 1 / count;\n\n  for (var i = 0; i < count - 1; i++) {\n    var rt = t / (1 - t * i);\n    var split = decasteljau(leftSegments, rt);\n    segments.push(split.left);\n    leftSegments = split.right;\n  }\n\n  segments.push(leftSegments);\n  var result = segments.map(function (segment) {\n    var cmd = [];\n\n    if (segment.length === 4) {\n      cmd.push('C');\n      cmd = cmd.concat(segment[2]);\n    }\n\n    if (segment.length >= 3) {\n      if (segment.length === 3) {\n        cmd.push('Q');\n      }\n\n      cmd = cmd.concat(segment[1]);\n    }\n\n    if (segment.length === 2) {\n      cmd.push('L');\n    }\n\n    cmd = cmd.concat(segment[segment.length - 1]);\n    return cmd;\n  });\n  return result;\n}\n\nvar splitSegment = function splitSegment(start, end, count) {\n  if (count === 1) {\n    return [[].concat(start)];\n  }\n\n  var segments = [];\n\n  if (end[0] === 'L' || end[0] === 'C' || end[0] === 'Q') {\n    segments = segments.concat(splitCurve(start, end, count));\n  } else {\n    var temp = [].concat(start);\n\n    if (temp[0] === 'M') {\n      temp[0] = 'L';\n    }\n\n    for (var i = 0; i <= count - 1; i++) {\n      segments.push(temp);\n    }\n  }\n\n  return segments;\n};\n\nvar fillPath = function fillPath(source, target) {\n  if (source.length === 1) {\n    return source;\n  }\n\n  var sourceLen = source.length - 1;\n  var targetLen = target.length - 1;\n  var ratio = sourceLen / targetLen;\n  var segmentsToFill = [];\n\n  if (source.length === 1 && source[0][0] === 'M') {\n    for (var i = 0; i < targetLen - sourceLen; i++) {\n      source.push(source[0]);\n    }\n\n    return source;\n  }\n\n  for (var _i3 = 0; _i3 < targetLen; _i3++) {\n    var index = Math.floor(ratio * _i3);\n    segmentsToFill[index] = (segmentsToFill[index] || 0) + 1;\n  }\n\n  var filled = segmentsToFill.reduce(function (filled, count, i) {\n    if (i === sourceLen) {\n      return filled.concat(source[sourceLen]);\n    }\n\n    return filled.concat(splitSegment(source[i], source[i + 1], count));\n  }, []);\n  filled.unshift(source[0]);\n\n  if (target[targetLen] === 'Z' || target[targetLen] === 'z') {\n    filled.push('Z');\n  }\n\n  return filled;\n};\n\nvar isEqual = function isEqual(obj1, obj2) {\n  if (obj1.length !== obj2.length) {\n    return false;\n  }\n\n  var result = true;\n  Util.each(obj1, function (item, i) {\n    if (item !== obj2[i]) {\n      result = false;\n      return false;\n    }\n  });\n  return result;\n};\n\nfunction getMinDiff(del, add, modify) {\n  var type = null;\n  var min = modify;\n\n  if (add < min) {\n    min = add;\n    type = 'add';\n  }\n\n  if (del < min) {\n    min = del;\n    type = 'del';\n  }\n\n  return {\n    type: type,\n    min: min\n  };\n}\n/*\n * https://en.wikipedia.org/wiki/Levenshtein_distance\n * 计算两条path的编辑距离\n */\n\n\nvar levenshteinDistance = function levenshteinDistance(source, target) {\n  var sourceLen = source.length;\n  var targetLen = target.length;\n  var sourceSegment, targetSegment;\n  var temp = 0;\n\n  if (sourceLen === 0 || targetLen === 0) {\n    return null;\n  }\n\n  var dist = [];\n\n  for (var i = 0; i <= sourceLen; i++) {\n    dist[i] = [];\n    dist[i][0] = {\n      min: i\n    };\n  }\n\n  for (var j = 0; j <= targetLen; j++) {\n    dist[0][j] = {\n      min: j\n    };\n  }\n\n  for (var _i4 = 1; _i4 <= sourceLen; _i4++) {\n    sourceSegment = source[_i4 - 1];\n\n    for (var _j2 = 1; _j2 <= targetLen; _j2++) {\n      targetSegment = target[_j2 - 1];\n\n      if (isEqual(sourceSegment, targetSegment)) {\n        temp = 0;\n      } else {\n        temp = 1;\n      }\n\n      var del = dist[_i4 - 1][_j2].min + 1;\n      var add = dist[_i4][_j2 - 1].min + 1;\n      var modify = dist[_i4 - 1][_j2 - 1].min + temp;\n      dist[_i4][_j2] = getMinDiff(del, add, modify);\n    }\n  }\n\n  return dist;\n};\n\nvar fillPathByDiff = function fillPathByDiff(source, target) {\n  var diffMatrix = levenshteinDistance(source, target);\n  var sourceLen = source.length;\n  var targetLen = target.length;\n  var changes = [];\n  var index = 1;\n  var minPos = 1; // 如果source和target不是完全不相等\n\n  if (diffMatrix[sourceLen][targetLen] !== sourceLen) {\n    // 获取从source到target所需改动\n    for (var i = 1; i <= sourceLen; i++) {\n      var min = diffMatrix[i][i].min;\n      minPos = i;\n\n      for (var j = index; j <= targetLen; j++) {\n        if (diffMatrix[i][j].min < min) {\n          min = diffMatrix[i][j].min;\n          minPos = j;\n        }\n      }\n\n      index = minPos;\n\n      if (diffMatrix[i][index].type) {\n        changes.push({\n          index: i - 1,\n          type: diffMatrix[i][index].type\n        });\n      }\n    } // 对source进行增删path\n\n\n    for (var _i5 = changes.length - 1; _i5 >= 0; _i5--) {\n      index = changes[_i5].index;\n\n      if (changes[_i5].type === 'add') {\n        source.splice(index, 0, [].concat(source[index]));\n      } else {\n        source.splice(index, 1);\n      }\n    }\n  } // source尾部补齐\n\n\n  sourceLen = source.length;\n  var diff = targetLen - sourceLen;\n\n  if (sourceLen < targetLen) {\n    for (var _i6 = 0; _i6 < diff; _i6++) {\n      if (source[sourceLen - 1][0] === 'z' || source[sourceLen - 1][0] === 'Z') {\n        source.splice(sourceLen - 2, 0, source[sourceLen - 2]);\n      } else {\n        source.push(source[sourceLen - 1]);\n      }\n\n      sourceLen += 1;\n    }\n  }\n\n  return source;\n}; // 将两个点均分成count个点\n\n\nfunction _splitPoints(points, former, count) {\n  var result = [].concat(points);\n  var index;\n  var t = 1 / (count + 1);\n\n  var formerEnd = _getSegmentPoints(former)[0];\n\n  for (var i = 1; i <= count; i++) {\n    t *= i;\n    index = Math.floor(points.length * t);\n\n    if (index === 0) {\n      result.unshift([formerEnd[0] * t + points[index][0] * (1 - t), formerEnd[1] * t + points[index][1] * (1 - t)]);\n    } else {\n      result.splice(index, 0, [formerEnd[0] * t + points[index][0] * (1 - t), formerEnd[1] * t + points[index][1] * (1 - t)]);\n    }\n  }\n\n  return result;\n}\n/*\n * 抽取pathSegment中的关键点\n * M,L,A,Q,H,V一个端点\n * Q, S抽取一个端点，一个控制点\n * C抽取一个端点，两个控制点\n */\n\n\nfunction _getSegmentPoints(segment) {\n  var points = [];\n\n  switch (segment[0]) {\n    case 'M':\n      points.push([segment[1], segment[2]]);\n      break;\n\n    case 'L':\n      points.push([segment[1], segment[2]]);\n      break;\n\n    case 'A':\n      points.push([segment[6], segment[7]]);\n      break;\n\n    case 'Q':\n      points.push([segment[3], segment[4]]);\n      points.push([segment[1], segment[2]]);\n      break;\n\n    case 'T':\n      points.push([segment[1], segment[2]]);\n      break;\n\n    case 'C':\n      points.push([segment[5], segment[6]]);\n      points.push([segment[1], segment[2]]);\n      points.push([segment[3], segment[4]]);\n      break;\n\n    case 'S':\n      points.push([segment[3], segment[4]]);\n      points.push([segment[1], segment[2]]);\n      break;\n\n    case 'H':\n      points.push([segment[1], segment[1]]);\n      break;\n\n    case 'V':\n      points.push([segment[1], segment[1]]);\n      break;\n\n    default:\n  }\n\n  return points;\n}\n\nvar formatPath = function formatPath(fromPath, toPath) {\n  if (fromPath.length <= 1) {\n    return fromPath;\n  }\n\n  var points;\n\n  for (var i = 0; i < toPath.length; i++) {\n    if (fromPath[i][0] !== toPath[i][0]) {\n      // 获取fromPath的pathSegment的端点，根据toPath的指令对其改造\n      points = _getSegmentPoints(fromPath[i]);\n\n      switch (toPath[i][0]) {\n        case 'M':\n          fromPath[i] = ['M'].concat(points[0]);\n          break;\n\n        case 'L':\n          fromPath[i] = ['L'].concat(points[0]);\n          break;\n\n        case 'A':\n          fromPath[i] = [].concat(toPath[i]);\n          fromPath[i][6] = points[0][0];\n          fromPath[i][7] = points[0][1];\n          break;\n\n        case 'Q':\n          if (points.length < 2) {\n            if (i > 0) {\n              points = _splitPoints(points, fromPath[i - 1], 1);\n            } else {\n              fromPath[i] = toPath[i];\n              break;\n            }\n          }\n\n          fromPath[i] = ['Q'].concat(points.reduce(function (arr, i) {\n            return arr.concat(i);\n          }, []));\n          break;\n\n        case 'T':\n          fromPath[i] = ['T'].concat(points[0]);\n          break;\n\n        case 'C':\n          if (points.length < 3) {\n            if (i > 0) {\n              points = _splitPoints(points, fromPath[i - 1], 2);\n            } else {\n              fromPath[i] = toPath[i];\n              break;\n            }\n          }\n\n          fromPath[i] = ['C'].concat(points.reduce(function (arr, i) {\n            return arr.concat(i);\n          }, []));\n          break;\n\n        case 'S':\n          if (points.length < 2) {\n            if (i > 0) {\n              points = _splitPoints(points, fromPath[i - 1], 1);\n            } else {\n              fromPath[i] = toPath[i];\n              break;\n            }\n          }\n\n          fromPath[i] = ['S'].concat(points.reduce(function (arr, i) {\n            return arr.concat(i);\n          }, []));\n          break;\n\n        default:\n          fromPath[i] = toPath[i];\n      }\n    }\n  }\n\n  return fromPath;\n};\n\nmodule.exports = {\n  parsePathString: parsePathString,\n  parsePathArray: parsePathArray,\n  pathTocurve: pathTocurve,\n  pathToAbsolute: pathToAbsolute,\n  catmullRomToBezier: catmullRom2bezier,\n  rectPath: rectPath,\n  fillPath: fillPath,\n  fillPathByDiff: fillPathByDiff,\n  formatPath: formatPath,\n  intersection: pathIntersection\n};"]}]}