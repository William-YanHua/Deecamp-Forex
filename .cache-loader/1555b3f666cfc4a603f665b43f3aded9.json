{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/prop-types/factoryWithThrowingShims.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/prop-types/factoryWithThrowingShims.js","mtime":1549836454000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["'use strict';\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nfunction emptyFunction() { }\nfunction emptyFunctionWithReset() { }\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\nmodule.exports = function () {\n    function shim(props, propName, componentName, location, propFullName, secret) {\n        if (secret === ReactPropTypesSecret) {\n            return;\n        }\n        var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use PropTypes.checkPropTypes() to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types');\n        err.name = 'Invariant Violation';\n        throw err;\n    }\n    ;\n    shim.isRequired = shim;\n    function getShim() {\n        return shim;\n    }\n    ;\n    var ReactPropTypes = {\n        array: shim,\n        bool: shim,\n        func: shim,\n        number: shim,\n        object: shim,\n        string: shim,\n        symbol: shim,\n        any: shim,\n        arrayOf: getShim,\n        element: shim,\n        elementType: shim,\n        instanceOf: getShim,\n        node: shim,\n        objectOf: getShim,\n        oneOf: getShim,\n        oneOfType: getShim,\n        shape: getShim,\n        exact: getShim,\n        checkPropTypes: emptyFunctionWithReset,\n        resetWarningCache: emptyFunction\n    };\n    ReactPropTypes.PropTypes = ReactPropTypes;\n    return ReactPropTypes;\n};\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/prop-types/factoryWithThrowingShims.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/prop-types/factoryWithThrowingShims.js"],"names":[],"mappings":"AAOA,YAAY,CAAC;AAEb,IAAI,oBAAoB,GAAG,OAAO,CAAC,4BAA4B,CAAC,CAAC;AAEjE,SAAS,aAAa,KAAI,CAAC;AAC3B,SAAS,sBAAsB,KAAI,CAAC;AACpC,sBAAsB,CAAC,iBAAiB,GAAG,aAAa,CAAC;AAEzD,MAAM,CAAC,OAAO,GAAG;IACf,SAAS,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE,aAAa,EAAE,QAAQ,EAAE,YAAY,EAAE,MAAM;QAC1E,IAAI,MAAM,KAAK,oBAAoB,EAAE;YAEnC,OAAO;SACR;QACD,IAAI,GAAG,GAAG,IAAI,KAAK,CACjB,sFAAsF;YACtF,+CAA+C;YAC/C,gDAAgD,CACjD,CAAC;QACF,GAAG,CAAC,IAAI,GAAG,qBAAqB,CAAC;QACjC,MAAM,GAAG,CAAC;IACZ,CAAC;IAAA,CAAC;IACF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACvB,SAAS,OAAO;QACd,OAAO,IAAI,CAAC;IACd,CAAC;IAAA,CAAC;IAGF,IAAI,cAAc,GAAG;QACnB,KAAK,EAAE,IAAI;QACX,IAAI,EAAE,IAAI;QACV,IAAI,EAAE,IAAI;QACV,MAAM,EAAE,IAAI;QACZ,MAAM,EAAE,IAAI;QACZ,MAAM,EAAE,IAAI;QACZ,MAAM,EAAE,IAAI;QAEZ,GAAG,EAAE,IAAI;QACT,OAAO,EAAE,OAAO;QAChB,OAAO,EAAE,IAAI;QACb,WAAW,EAAE,IAAI;QACjB,UAAU,EAAE,OAAO;QACnB,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,OAAO;QACjB,KAAK,EAAE,OAAO;QACd,SAAS,EAAE,OAAO;QAClB,KAAK,EAAE,OAAO;QACd,KAAK,EAAE,OAAO;QAEd,cAAc,EAAE,sBAAsB;QACtC,iBAAiB,EAAE,aAAa;KACjC,CAAC;IAEF,cAAc,CAAC,SAAS,GAAG,cAAc,CAAC;IAE1C,OAAO,cAAc,CAAC;AACxB,CAAC,CAAC","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n"]}]}