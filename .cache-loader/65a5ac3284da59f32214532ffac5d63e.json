{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/inversify/lib/planning/planner.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/inversify/lib/planning/planner.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar binding_count_1 = require(\"../bindings/binding_count\");\nvar ERROR_MSGS = require(\"../constants/error_msgs\");\nvar literal_types_1 = require(\"../constants/literal_types\");\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar serialization_1 = require(\"../utils/serialization\");\nvar context_1 = require(\"./context\");\nvar metadata_1 = require(\"./metadata\");\nvar plan_1 = require(\"./plan\");\nvar reflection_utils_1 = require(\"./reflection_utils\");\nvar request_1 = require(\"./request\");\nvar target_1 = require(\"./target\");\nfunction getBindingDictionary(cntnr) {\n    return cntnr._bindingDictionary;\n}\nexports.getBindingDictionary = getBindingDictionary;\nfunction _createTarget(isMultiInject, targetType, serviceIdentifier, name, key, value) {\n    var metadataKey = isMultiInject ? METADATA_KEY.MULTI_INJECT_TAG : METADATA_KEY.INJECT_TAG;\n    var injectMetadata = new metadata_1.Metadata(metadataKey, serviceIdentifier);\n    var target = new target_1.Target(targetType, name, serviceIdentifier, injectMetadata);\n    if (key !== undefined) {\n        var tagMetadata = new metadata_1.Metadata(key, value);\n        target.metadata.push(tagMetadata);\n    }\n    return target;\n}\nfunction _getActiveBindings(metadataReader, avoidConstraints, context, parentRequest, target) {\n    var bindings = getBindings(context.container, target.serviceIdentifier);\n    var activeBindings = [];\n    if (bindings.length === binding_count_1.BindingCount.NoBindingsAvailable &&\n        context.container.options.autoBindInjectable &&\n        typeof target.serviceIdentifier === \"function\" &&\n        metadataReader.getConstructorMetadata(target.serviceIdentifier).compilerGeneratedMetadata) {\n        context.container.bind(target.serviceIdentifier).toSelf();\n        bindings = getBindings(context.container, target.serviceIdentifier);\n    }\n    if (!avoidConstraints) {\n        activeBindings = bindings.filter(function (binding) {\n            var request = new request_1.Request(binding.serviceIdentifier, context, parentRequest, binding, target);\n            return binding.constraint(request);\n        });\n    }\n    else {\n        activeBindings = bindings;\n    }\n    _validateActiveBindingCount(target.serviceIdentifier, activeBindings, target, context.container);\n    return activeBindings;\n}\nfunction _validateActiveBindingCount(serviceIdentifier, bindings, target, container) {\n    switch (bindings.length) {\n        case binding_count_1.BindingCount.NoBindingsAvailable:\n            if (target.isOptional()) {\n                return bindings;\n            }\n            else {\n                var serviceIdentifierString = serialization_1.getServiceIdentifierAsString(serviceIdentifier);\n                var msg = ERROR_MSGS.NOT_REGISTERED;\n                msg += serialization_1.listMetadataForTarget(serviceIdentifierString, target);\n                msg += serialization_1.listRegisteredBindingsForServiceIdentifier(container, serviceIdentifierString, getBindings);\n                throw new Error(msg);\n            }\n        case binding_count_1.BindingCount.OnlyOneBindingAvailable:\n            if (!target.isArray()) {\n                return bindings;\n            }\n        case binding_count_1.BindingCount.MultipleBindingsAvailable:\n        default:\n            if (!target.isArray()) {\n                var serviceIdentifierString = serialization_1.getServiceIdentifierAsString(serviceIdentifier);\n                var msg = ERROR_MSGS.AMBIGUOUS_MATCH + \" \" + serviceIdentifierString;\n                msg += serialization_1.listRegisteredBindingsForServiceIdentifier(container, serviceIdentifierString, getBindings);\n                throw new Error(msg);\n            }\n            else {\n                return bindings;\n            }\n    }\n}\nfunction _createSubRequests(metadataReader, avoidConstraints, serviceIdentifier, context, parentRequest, target) {\n    var activeBindings;\n    var childRequest;\n    if (parentRequest === null) {\n        activeBindings = _getActiveBindings(metadataReader, avoidConstraints, context, null, target);\n        childRequest = new request_1.Request(serviceIdentifier, context, null, activeBindings, target);\n        var thePlan = new plan_1.Plan(context, childRequest);\n        context.addPlan(thePlan);\n    }\n    else {\n        activeBindings = _getActiveBindings(metadataReader, avoidConstraints, context, parentRequest, target);\n        childRequest = parentRequest.addChildRequest(target.serviceIdentifier, activeBindings, target);\n    }\n    activeBindings.forEach(function (binding) {\n        var subChildRequest = null;\n        if (target.isArray()) {\n            subChildRequest = childRequest.addChildRequest(binding.serviceIdentifier, binding, target);\n        }\n        else {\n            if (binding.cache) {\n                return;\n            }\n            subChildRequest = childRequest;\n        }\n        if (binding.type === literal_types_1.BindingTypeEnum.Instance && binding.implementationType !== null) {\n            var dependencies = reflection_utils_1.getDependencies(metadataReader, binding.implementationType);\n            if (!context.container.options.skipBaseClassChecks) {\n                var baseClassDependencyCount = reflection_utils_1.getBaseClassDependencyCount(metadataReader, binding.implementationType);\n                if (dependencies.length < baseClassDependencyCount) {\n                    var error = ERROR_MSGS.ARGUMENTS_LENGTH_MISMATCH(reflection_utils_1.getFunctionName(binding.implementationType));\n                    throw new Error(error);\n                }\n            }\n            dependencies.forEach(function (dependency) {\n                _createSubRequests(metadataReader, false, dependency.serviceIdentifier, context, subChildRequest, dependency);\n            });\n        }\n    });\n}\nfunction getBindings(container, serviceIdentifier) {\n    var bindings = [];\n    var bindingDictionary = getBindingDictionary(container);\n    if (bindingDictionary.hasKey(serviceIdentifier)) {\n        bindings = bindingDictionary.get(serviceIdentifier);\n    }\n    else if (container.parent !== null) {\n        bindings = getBindings(container.parent, serviceIdentifier);\n    }\n    return bindings;\n}\nfunction plan(metadataReader, container, isMultiInject, targetType, serviceIdentifier, key, value, avoidConstraints) {\n    if (avoidConstraints === void 0) {\n        avoidConstraints = false;\n    }\n    var context = new context_1.Context(container);\n    var target = _createTarget(isMultiInject, targetType, serviceIdentifier, \"\", key, value);\n    try {\n        _createSubRequests(metadataReader, avoidConstraints, serviceIdentifier, context, null, target);\n        return context;\n    }\n    catch (error) {\n        if (exceptions_1.isStackOverflowExeption(error)) {\n            if (context.plan) {\n                serialization_1.circularDependencyToException(context.plan.rootRequest);\n            }\n        }\n        throw error;\n    }\n}\nexports.plan = plan;\nfunction createMockRequest(container, serviceIdentifier, key, value) {\n    var target = new target_1.Target(literal_types_1.TargetTypeEnum.Variable, \"\", serviceIdentifier, new metadata_1.Metadata(key, value));\n    var context = new context_1.Context(container);\n    var request = new request_1.Request(serviceIdentifier, context, null, [], target);\n    return request;\n}\nexports.createMockRequest = createMockRequest;\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/inversify/lib/planning/planner.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/inversify/lib/planning/planner.js"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar binding_count_1 = require(\"../bindings/binding_count\");\nvar ERROR_MSGS = require(\"../constants/error_msgs\");\nvar literal_types_1 = require(\"../constants/literal_types\");\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar serialization_1 = require(\"../utils/serialization\");\nvar context_1 = require(\"./context\");\nvar metadata_1 = require(\"./metadata\");\nvar plan_1 = require(\"./plan\");\nvar reflection_utils_1 = require(\"./reflection_utils\");\nvar request_1 = require(\"./request\");\nvar target_1 = require(\"./target\");\nfunction getBindingDictionary(cntnr) {\n    return cntnr._bindingDictionary;\n}\nexports.getBindingDictionary = getBindingDictionary;\nfunction _createTarget(isMultiInject, targetType, serviceIdentifier, name, key, value) {\n    var metadataKey = isMultiInject ? METADATA_KEY.MULTI_INJECT_TAG : METADATA_KEY.INJECT_TAG;\n    var injectMetadata = new metadata_1.Metadata(metadataKey, serviceIdentifier);\n    var target = new target_1.Target(targetType, name, serviceIdentifier, injectMetadata);\n    if (key !== undefined) {\n        var tagMetadata = new metadata_1.Metadata(key, value);\n        target.metadata.push(tagMetadata);\n    }\n    return target;\n}\nfunction _getActiveBindings(metadataReader, avoidConstraints, context, parentRequest, target) {\n    var bindings = getBindings(context.container, target.serviceIdentifier);\n    var activeBindings = [];\n    if (bindings.length === binding_count_1.BindingCount.NoBindingsAvailable &&\n        context.container.options.autoBindInjectable &&\n        typeof target.serviceIdentifier === \"function\" &&\n        metadataReader.getConstructorMetadata(target.serviceIdentifier).compilerGeneratedMetadata) {\n        context.container.bind(target.serviceIdentifier).toSelf();\n        bindings = getBindings(context.container, target.serviceIdentifier);\n    }\n    if (!avoidConstraints) {\n        activeBindings = bindings.filter(function (binding) {\n            var request = new request_1.Request(binding.serviceIdentifier, context, parentRequest, binding, target);\n            return binding.constraint(request);\n        });\n    }\n    else {\n        activeBindings = bindings;\n    }\n    _validateActiveBindingCount(target.serviceIdentifier, activeBindings, target, context.container);\n    return activeBindings;\n}\nfunction _validateActiveBindingCount(serviceIdentifier, bindings, target, container) {\n    switch (bindings.length) {\n        case binding_count_1.BindingCount.NoBindingsAvailable:\n            if (target.isOptional()) {\n                return bindings;\n            }\n            else {\n                var serviceIdentifierString = serialization_1.getServiceIdentifierAsString(serviceIdentifier);\n                var msg = ERROR_MSGS.NOT_REGISTERED;\n                msg += serialization_1.listMetadataForTarget(serviceIdentifierString, target);\n                msg += serialization_1.listRegisteredBindingsForServiceIdentifier(container, serviceIdentifierString, getBindings);\n                throw new Error(msg);\n            }\n        case binding_count_1.BindingCount.OnlyOneBindingAvailable:\n            if (!target.isArray()) {\n                return bindings;\n            }\n        case binding_count_1.BindingCount.MultipleBindingsAvailable:\n        default:\n            if (!target.isArray()) {\n                var serviceIdentifierString = serialization_1.getServiceIdentifierAsString(serviceIdentifier);\n                var msg = ERROR_MSGS.AMBIGUOUS_MATCH + \" \" + serviceIdentifierString;\n                msg += serialization_1.listRegisteredBindingsForServiceIdentifier(container, serviceIdentifierString, getBindings);\n                throw new Error(msg);\n            }\n            else {\n                return bindings;\n            }\n    }\n}\nfunction _createSubRequests(metadataReader, avoidConstraints, serviceIdentifier, context, parentRequest, target) {\n    var activeBindings;\n    var childRequest;\n    if (parentRequest === null) {\n        activeBindings = _getActiveBindings(metadataReader, avoidConstraints, context, null, target);\n        childRequest = new request_1.Request(serviceIdentifier, context, null, activeBindings, target);\n        var thePlan = new plan_1.Plan(context, childRequest);\n        context.addPlan(thePlan);\n    }\n    else {\n        activeBindings = _getActiveBindings(metadataReader, avoidConstraints, context, parentRequest, target);\n        childRequest = parentRequest.addChildRequest(target.serviceIdentifier, activeBindings, target);\n    }\n    activeBindings.forEach(function (binding) {\n        var subChildRequest = null;\n        if (target.isArray()) {\n            subChildRequest = childRequest.addChildRequest(binding.serviceIdentifier, binding, target);\n        }\n        else {\n            if (binding.cache) {\n                return;\n            }\n            subChildRequest = childRequest;\n        }\n        if (binding.type === literal_types_1.BindingTypeEnum.Instance && binding.implementationType !== null) {\n            var dependencies = reflection_utils_1.getDependencies(metadataReader, binding.implementationType);\n            if (!context.container.options.skipBaseClassChecks) {\n                var baseClassDependencyCount = reflection_utils_1.getBaseClassDependencyCount(metadataReader, binding.implementationType);\n                if (dependencies.length < baseClassDependencyCount) {\n                    var error = ERROR_MSGS.ARGUMENTS_LENGTH_MISMATCH(reflection_utils_1.getFunctionName(binding.implementationType));\n                    throw new Error(error);\n                }\n            }\n            dependencies.forEach(function (dependency) {\n                _createSubRequests(metadataReader, false, dependency.serviceIdentifier, context, subChildRequest, dependency);\n            });\n        }\n    });\n}\nfunction getBindings(container, serviceIdentifier) {\n    var bindings = [];\n    var bindingDictionary = getBindingDictionary(container);\n    if (bindingDictionary.hasKey(serviceIdentifier)) {\n        bindings = bindingDictionary.get(serviceIdentifier);\n    }\n    else if (container.parent !== null) {\n        bindings = getBindings(container.parent, serviceIdentifier);\n    }\n    return bindings;\n}\nfunction plan(metadataReader, container, isMultiInject, targetType, serviceIdentifier, key, value, avoidConstraints) {\n    if (avoidConstraints === void 0) { avoidConstraints = false; }\n    var context = new context_1.Context(container);\n    var target = _createTarget(isMultiInject, targetType, serviceIdentifier, \"\", key, value);\n    try {\n        _createSubRequests(metadataReader, avoidConstraints, serviceIdentifier, context, null, target);\n        return context;\n    }\n    catch (error) {\n        if (exceptions_1.isStackOverflowExeption(error)) {\n            if (context.plan) {\n                serialization_1.circularDependencyToException(context.plan.rootRequest);\n            }\n        }\n        throw error;\n    }\n}\nexports.plan = plan;\nfunction createMockRequest(container, serviceIdentifier, key, value) {\n    var target = new target_1.Target(literal_types_1.TargetTypeEnum.Variable, \"\", serviceIdentifier, new metadata_1.Metadata(key, value));\n    var context = new context_1.Context(container);\n    var request = new request_1.Request(serviceIdentifier, context, null, [], target);\n    return request;\n}\nexports.createMockRequest = createMockRequest;\n"]}]}