{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-hierarchy\\src\\hierarchy\\index.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-hierarchy\\src\\hierarchy\\index.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import node_count from \"./count\";\r\nimport node_each from \"./each\";\r\nimport node_eachBefore from \"./eachBefore\";\r\nimport node_eachAfter from \"./eachAfter\";\r\nimport node_sum from \"./sum\";\r\nimport node_sort from \"./sort\";\r\nimport node_path from \"./path\";\r\nimport node_ancestors from \"./ancestors\";\r\nimport node_descendants from \"./descendants\";\r\nimport node_leaves from \"./leaves\";\r\nimport node_links from \"./links\";\r\nexport default function hierarchy(data, children) {\r\n    var root = new Node(data), valued = +data.value && (root.value = data.value), node, nodes = [root], child, childs, i, n;\r\n    if (children == null)\r\n        children = defaultChildren;\r\n    while (node = nodes.pop()) {\r\n        if (valued)\r\n            node.value = +node.data.value;\r\n        if ((childs = children(node.data)) && (n = childs.length)) {\r\n            node.children = new Array(n);\r\n            for (i = n - 1; i >= 0; --i) {\r\n                nodes.push(child = node.children[i] = new Node(childs[i]));\r\n                child.parent = node;\r\n                child.depth = node.depth + 1;\r\n            }\r\n        }\r\n    }\r\n    return root.eachBefore(computeHeight);\r\n}\r\nfunction node_copy() {\r\n    return hierarchy(this).eachBefore(copyData);\r\n}\r\nfunction defaultChildren(d) {\r\n    return d.children;\r\n}\r\nfunction copyData(node) {\r\n    node.data = node.data.data;\r\n}\r\nexport function computeHeight(node) {\r\n    var height = 0;\r\n    do\r\n        node.height = height;\r\n    while ((node = node.parent) && (node.height < ++height));\r\n}\r\nexport function Node(data) {\r\n    this.data = data;\r\n    this.depth =\r\n        this.height = 0;\r\n    this.parent = null;\r\n}\r\nNode.prototype = hierarchy.prototype = {\r\n    constructor: Node,\r\n    count: node_count,\r\n    each: node_each,\r\n    eachAfter: node_eachAfter,\r\n    eachBefore: node_eachBefore,\r\n    sum: node_sum,\r\n    sort: node_sort,\r\n    path: node_path,\r\n    ancestors: node_ancestors,\r\n    descendants: node_descendants,\r\n    leaves: node_leaves,\r\n    links: node_links,\r\n    copy: node_copy\r\n};\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-hierarchy\\src\\hierarchy\\index.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-hierarchy\\src\\hierarchy\\index.js"],"names":[],"mappings":"AAAA,OAAO,UAAU,MAAM,SAAS,CAAC;AACjC,OAAO,SAAS,MAAM,QAAQ,CAAC;AAC/B,OAAO,eAAe,MAAM,cAAc,CAAC;AAC3C,OAAO,cAAc,MAAM,aAAa,CAAC;AACzC,OAAO,QAAQ,MAAM,OAAO,CAAC;AAC7B,OAAO,SAAS,MAAM,QAAQ,CAAC;AAC/B,OAAO,SAAS,MAAM,QAAQ,CAAC;AAC/B,OAAO,cAAc,MAAM,aAAa,CAAC;AACzC,OAAO,gBAAgB,MAAM,eAAe,CAAC;AAC7C,OAAO,WAAW,MAAM,UAAU,CAAC;AACnC,OAAO,UAAU,MAAM,SAAS,CAAC;AAEjC,MAAM,CAAC,OAAO,UAAU,SAAS,CAAC,IAAI,EAAE,QAAQ;IAC9C,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,EACrB,MAAM,GAAG,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EACjD,IAAI,EACJ,KAAK,GAAG,CAAC,IAAI,CAAC,EACd,KAAK,EACL,MAAM,EACN,CAAC,EACD,CAAC,CAAC;IAEN,IAAI,QAAQ,IAAI,IAAI;QAAE,QAAQ,GAAG,eAAe,CAAC;IAEjD,OAAO,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,EAAE;QACzB,IAAI,MAAM;YAAE,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAC1C,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE;YACzD,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;YAC7B,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;gBAC3B,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3D,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;gBACpB,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;aAC9B;SACF;KACF;IAED,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;AACxC,CAAC;AAED,SAAS,SAAS;IAChB,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;AAC9C,CAAC;AAED,SAAS,eAAe,CAAC,CAAC;IACxB,OAAO,CAAC,CAAC,QAAQ,CAAC;AACpB,CAAC;AAED,SAAS,QAAQ,CAAC,IAAI;IACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AAC7B,CAAC;AAED,MAAM,UAAU,aAAa,CAAC,IAAI;IAChC,IAAI,MAAM,GAAG,CAAC,CAAC;IACf;QAAG,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;WACjB,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE;AAC3D,CAAC;AAED,MAAM,UAAU,IAAI,CAAC,IAAI;IACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACjB,IAAI,CAAC,KAAK;QACV,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAChB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACrB,CAAC;AAED,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,SAAS,GAAG;IACrC,WAAW,EAAE,IAAI;IACjB,KAAK,EAAE,UAAU;IACjB,IAAI,EAAE,SAAS;IACf,SAAS,EAAE,cAAc;IACzB,UAAU,EAAE,eAAe;IAC3B,GAAG,EAAE,QAAQ;IACb,IAAI,EAAE,SAAS;IACf,IAAI,EAAE,SAAS;IACf,SAAS,EAAE,cAAc;IACzB,WAAW,EAAE,gBAAgB;IAC7B,MAAM,EAAE,WAAW;IACnB,KAAK,EAAE,UAAU;IACjB,IAAI,EAAE,SAAS;CAChB,CAAC","sourcesContent":["import node_count from \"./count\";\nimport node_each from \"./each\";\nimport node_eachBefore from \"./eachBefore\";\nimport node_eachAfter from \"./eachAfter\";\nimport node_sum from \"./sum\";\nimport node_sort from \"./sort\";\nimport node_path from \"./path\";\nimport node_ancestors from \"./ancestors\";\nimport node_descendants from \"./descendants\";\nimport node_leaves from \"./leaves\";\nimport node_links from \"./links\";\n\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n"]}]}