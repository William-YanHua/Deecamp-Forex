{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/graphlib/lib/alg/dijkstra.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/graphlib/lib/alg/dijkstra.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _ = require(\"../lodash\");\nvar PriorityQueue = require(\"../data/priority-queue\");\nmodule.exports = dijkstra;\nvar DEFAULT_WEIGHT_FUNC = _.constant(1);\nfunction dijkstra(g, source, weightFn, edgeFn) {\n    return runDijkstra(g, String(source), weightFn || DEFAULT_WEIGHT_FUNC, edgeFn || function (v) { return g.outEdges(v); });\n}\nfunction runDijkstra(g, source, weightFn, edgeFn) {\n    var results = {};\n    var pq = new PriorityQueue();\n    var v, vEntry;\n    var updateNeighbors = function (edge) {\n        var w = edge.v !== v ? edge.v : edge.w;\n        var wEntry = results[w];\n        var weight = weightFn(edge);\n        var distance = vEntry.distance + weight;\n        if (weight < 0) {\n            throw new Error(\"dijkstra does not allow negative edge weights. \" +\n                \"Bad edge: \" + edge + \" Weight: \" + weight);\n        }\n        if (distance < wEntry.distance) {\n            wEntry.distance = distance;\n            wEntry.predecessor = v;\n            pq.decrease(w, distance);\n        }\n    };\n    g.nodes().forEach(function (v) {\n        var distance = v === source ? 0 : Number.POSITIVE_INFINITY;\n        results[v] = { distance: distance };\n        pq.add(v, distance);\n    });\n    while (pq.size() > 0) {\n        v = pq.removeMin();\n        vEntry = results[v];\n        if (vEntry.distance === Number.POSITIVE_INFINITY) {\n            break;\n        }\n        edgeFn(v).forEach(updateNeighbors);\n    }\n    return results;\n}\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/graphlib/lib/alg/dijkstra.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/graphlib/lib/alg/dijkstra.js"],"names":[],"mappings":"AAAA,IAAI,CAAC,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AAC7B,IAAI,aAAa,GAAG,OAAO,CAAC,wBAAwB,CAAC,CAAC;AAEtD,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC;AAE1B,IAAI,mBAAmB,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAExC,SAAS,QAAQ,CAAC,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM;IAC3C,OAAO,WAAW,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,EAClC,QAAQ,IAAI,mBAAmB,EAC/B,MAAM,IAAI,UAAS,CAAC,IAAI,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC;AAED,SAAS,WAAW,CAAC,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM;IAC9C,IAAI,OAAO,GAAG,EAAE,CAAC;IACjB,IAAI,EAAE,GAAG,IAAI,aAAa,EAAE,CAAC;IAC7B,IAAI,CAAC,EAAE,MAAM,CAAC;IAEd,IAAI,eAAe,GAAG,UAAS,IAAI;QACjC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QACvC,IAAI,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QACxB,IAAI,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC5B,IAAI,QAAQ,GAAG,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC;QAExC,IAAI,MAAM,GAAG,CAAC,EAAE;YACd,MAAM,IAAI,KAAK,CAAC,iDAAiD;gBACjD,YAAY,GAAG,IAAI,GAAG,WAAW,GAAG,MAAM,CAAC,CAAC;SAC7D;QAED,IAAI,QAAQ,GAAG,MAAM,CAAC,QAAQ,EAAE;YAC9B,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAC3B,MAAM,CAAC,WAAW,GAAG,CAAC,CAAC;YACvB,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;SAC1B;IACH,CAAC,CAAC;IAEF,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,UAAS,CAAC;QAC1B,IAAI,QAAQ,GAAG,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,iBAAiB,CAAC;QAC3D,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC;QACpC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;IACtB,CAAC,CAAC,CAAC;IAEH,OAAO,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;QACpB,CAAC,GAAG,EAAE,CAAC,SAAS,EAAE,CAAC;QACnB,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QACpB,IAAI,MAAM,CAAC,QAAQ,KAAK,MAAM,CAAC,iBAAiB,EAAE;YAChD,MAAM;SACP;QAED,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;KACpC;IAED,OAAO,OAAO,CAAC;AACjB,CAAC","sourcesContent":["var _ = require(\"../lodash\");\nvar PriorityQueue = require(\"../data/priority-queue\");\n\nmodule.exports = dijkstra;\n\nvar DEFAULT_WEIGHT_FUNC = _.constant(1);\n\nfunction dijkstra(g, source, weightFn, edgeFn) {\n  return runDijkstra(g, String(source),\n    weightFn || DEFAULT_WEIGHT_FUNC,\n    edgeFn || function(v) { return g.outEdges(v); });\n}\n\nfunction runDijkstra(g, source, weightFn, edgeFn) {\n  var results = {};\n  var pq = new PriorityQueue();\n  var v, vEntry;\n\n  var updateNeighbors = function(edge) {\n    var w = edge.v !== v ? edge.v : edge.w;\n    var wEntry = results[w];\n    var weight = weightFn(edge);\n    var distance = vEntry.distance + weight;\n\n    if (weight < 0) {\n      throw new Error(\"dijkstra does not allow negative edge weights. \" +\n                      \"Bad edge: \" + edge + \" Weight: \" + weight);\n    }\n\n    if (distance < wEntry.distance) {\n      wEntry.distance = distance;\n      wEntry.predecessor = v;\n      pq.decrease(w, distance);\n    }\n  };\n\n  g.nodes().forEach(function(v) {\n    var distance = v === source ? 0 : Number.POSITIVE_INFINITY;\n    results[v] = { distance: distance };\n    pq.add(v, distance);\n  });\n\n  while (pq.size() > 0) {\n    v = pq.removeMin();\n    vEntry = results[v];\n    if (vEntry.distance === Number.POSITIVE_INFINITY) {\n      break;\n    }\n\n    edgeFn(v).forEach(updateNeighbors);\n  }\n\n  return results;\n}\n"]}]}