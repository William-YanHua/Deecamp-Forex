{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/d3-geo-projection/src/eckert3.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/d3-geo-projection/src/eckert3.js","mtime":1467599198000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { geoProjection as projection } from \"d3-geo\";\nimport { pi, sqrt } from \"./math\";\nexport function eckert3Raw(lambda, phi) {\n    var k = sqrt(pi * (4 + pi));\n    return [\n        2 / k * lambda * (1 + sqrt(1 - 4 * phi * phi / (pi * pi))),\n        4 / k * phi\n    ];\n}\neckert3Raw.invert = function (x, y) {\n    var k = sqrt(pi * (4 + pi)) / 2;\n    return [\n        x * k / (1 + sqrt(1 - y * y * (4 + pi) / (4 * pi))),\n        y * k / 2\n    ];\n};\nexport default function () {\n    return projection(eckert3Raw)\n        .scale(180.739);\n}\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/d3-geo-projection/src/eckert3.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/d3-geo-projection/src/eckert3.js"],"names":[],"mappings":"AAAA,OAAO,EAAC,aAAa,IAAI,UAAU,EAAC,MAAM,QAAQ,CAAC;AACnD,OAAO,EAAC,EAAE,EAAE,IAAI,EAAC,MAAM,QAAQ,CAAC;AAEhC,MAAM,UAAU,UAAU,CAAC,MAAM,EAAE,GAAG;IACpC,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IAC5B,OAAO;QACL,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QAC1D,CAAC,GAAG,CAAC,GAAG,GAAG;KACZ,CAAC;AACJ,CAAC;AAED,UAAU,CAAC,MAAM,GAAG,UAAS,CAAC,EAAE,CAAC;IAC/B,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;IAChC,OAAO;QACL,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACnD,CAAC,GAAG,CAAC,GAAG,CAAC;KACV,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,OAAO;IACZ,OAAO,UAAU,CAAC,UAAU,CAAC;SACxB,KAAK,CAAC,OAAO,CAAC,CAAC;AACtB,CAAC","sourcesContent":["import {geoProjection as projection} from \"d3-geo\";\nimport {pi, sqrt} from \"./math\";\n\nexport function eckert3Raw(lambda, phi) {\n  var k = sqrt(pi * (4 + pi));\n  return [\n    2 / k * lambda * (1 + sqrt(1 - 4 * phi * phi / (pi * pi))),\n    4 / k * phi\n  ];\n}\n\neckert3Raw.invert = function(x, y) {\n  var k = sqrt(pi * (4 + pi)) / 2;\n  return [\n    x * k / (1 + sqrt(1 - y * y * (4 + pi) / (4 * pi))),\n    y * k / 2\n  ];\n};\n\nexport default function() {\n  return projection(eckert3Raw)\n      .scale(180.739);\n}\n"]}]}