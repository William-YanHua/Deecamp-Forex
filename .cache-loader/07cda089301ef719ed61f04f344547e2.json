{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/g/lib/shapes/polygon.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/g/lib/shapes/polygon.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var Util = require('../util/index');\nvar Shape = require('../core/shape');\nvar Polygon = function Polygon(cfg) {\n    Polygon.superclass.constructor.call(this, cfg);\n};\nPolygon.ATTRS = {\n    points: null,\n    lineWidth: 1\n};\nUtil.extend(Polygon, Shape);\nUtil.augment(Polygon, {\n    canFill: true,\n    canStroke: true,\n    type: 'polygon',\n    getDefaultAttrs: function getDefaultAttrs() {\n        return {\n            lineWidth: 1\n        };\n    },\n    calculateBox: function calculateBox() {\n        var self = this;\n        var attrs = self._attrs;\n        var points = attrs.points;\n        var lineWidth = this.getHitLineWidth();\n        if (!points || points.length === 0) {\n            return null;\n        }\n        var minX = Infinity;\n        var minY = Infinity;\n        var maxX = -Infinity;\n        var maxY = -Infinity;\n        Util.each(points, function (point) {\n            var x = point[0];\n            var y = point[1];\n            if (x < minX) {\n                minX = x;\n            }\n            if (x > maxX) {\n                maxX = x;\n            }\n            if (y < minY) {\n                minY = y;\n            }\n            if (y > maxY) {\n                maxY = y;\n            }\n        });\n        var halfWidth = lineWidth / 2;\n        return {\n            minX: minX - halfWidth,\n            minY: minY - halfWidth,\n            maxX: maxX + halfWidth,\n            maxY: maxY + halfWidth\n        };\n    },\n    createPath: function createPath(context) {\n        var self = this;\n        var attrs = self._attrs;\n        var points = attrs.points;\n        if (points.length < 2) {\n            return;\n        }\n        context = context || self.get('context');\n        context.beginPath();\n        Util.each(points, function (point, index) {\n            if (index === 0) {\n                context.moveTo(point[0], point[1]);\n            }\n            else {\n                context.lineTo(point[0], point[1]);\n            }\n        });\n        context.closePath();\n    }\n});\nmodule.exports = Polygon;\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/g/lib/shapes/polygon.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/g/lib/shapes/polygon.js"],"names":[],"mappings":"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","sourcesContent":["var Util = require('../util/index');\n\nvar Shape = require('../core/shape');\n\nvar Polygon = function Polygon(cfg) {\n  Polygon.superclass.constructor.call(this, cfg);\n};\n\nPolygon.ATTRS = {\n  points: null,\n  lineWidth: 1\n};\nUtil.extend(Polygon, Shape);\nUtil.augment(Polygon, {\n  canFill: true,\n  canStroke: true,\n  type: 'polygon',\n  getDefaultAttrs: function getDefaultAttrs() {\n    return {\n      lineWidth: 1\n    };\n  },\n  calculateBox: function calculateBox() {\n    var self = this;\n    var attrs = self._attrs;\n    var points = attrs.points;\n    var lineWidth = this.getHitLineWidth();\n\n    if (!points || points.length === 0) {\n      return null;\n    }\n\n    var minX = Infinity;\n    var minY = Infinity;\n    var maxX = -Infinity;\n    var maxY = -Infinity;\n    Util.each(points, function (point) {\n      var x = point[0];\n      var y = point[1];\n\n      if (x < minX) {\n        minX = x;\n      }\n\n      if (x > maxX) {\n        maxX = x;\n      }\n\n      if (y < minY) {\n        minY = y;\n      }\n\n      if (y > maxY) {\n        maxY = y;\n      }\n    });\n    var halfWidth = lineWidth / 2;\n    return {\n      minX: minX - halfWidth,\n      minY: minY - halfWidth,\n      maxX: maxX + halfWidth,\n      maxY: maxY + halfWidth\n    };\n  },\n  createPath: function createPath(context) {\n    var self = this;\n    var attrs = self._attrs;\n    var points = attrs.points;\n\n    if (points.length < 2) {\n      return;\n    }\n\n    context = context || self.get('context');\n    context.beginPath();\n    Util.each(points, function (point, index) {\n      if (index === 0) {\n        context.moveTo(point[0], point[1]);\n      } else {\n        context.lineTo(point[0], point[1]);\n      }\n    });\n    context.closePath();\n  }\n});\nmodule.exports = Polygon;"]}]}