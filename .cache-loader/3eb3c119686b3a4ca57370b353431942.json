{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\rc-animate\\es\\AnimateChild.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\rc-animate\\es\\AnimateChild.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\r\nimport _createClass from 'babel-runtime/helpers/createClass';\r\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\r\nimport _inherits from 'babel-runtime/helpers/inherits';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport cssAnimate, { isCssAnimationSupported } from 'css-animation';\r\nimport animUtil from './util/animate';\r\nvar transitionMap = {\r\n    enter: 'transitionEnter',\r\n    appear: 'transitionAppear',\r\n    leave: 'transitionLeave'\r\n};\r\nvar AnimateChild = function (_React$Component) {\r\n    _inherits(AnimateChild, _React$Component);\r\n    function AnimateChild() {\r\n        _classCallCheck(this, AnimateChild);\r\n        return _possibleConstructorReturn(this, (AnimateChild.__proto__ || Object.getPrototypeOf(AnimateChild)).apply(this, arguments));\r\n    }\r\n    _createClass(AnimateChild, [{\r\n            key: 'componentWillUnmount',\r\n            value: function componentWillUnmount() {\r\n                this.stop();\r\n            }\r\n        }, {\r\n            key: 'componentWillEnter',\r\n            value: function componentWillEnter(done) {\r\n                if (animUtil.isEnterSupported(this.props)) {\r\n                    this.transition('enter', done);\r\n                }\r\n                else {\r\n                    done();\r\n                }\r\n            }\r\n        }, {\r\n            key: 'componentWillAppear',\r\n            value: function componentWillAppear(done) {\r\n                if (animUtil.isAppearSupported(this.props)) {\r\n                    this.transition('appear', done);\r\n                }\r\n                else {\r\n                    done();\r\n                }\r\n            }\r\n        }, {\r\n            key: 'componentWillLeave',\r\n            value: function componentWillLeave(done) {\r\n                if (animUtil.isLeaveSupported(this.props)) {\r\n                    this.transition('leave', done);\r\n                }\r\n                else {\r\n                    done();\r\n                }\r\n            }\r\n        }, {\r\n            key: 'transition',\r\n            value: function transition(animationType, finishCallback) {\r\n                var _this2 = this;\r\n                var node = ReactDOM.findDOMNode(this);\r\n                var props = this.props;\r\n                var transitionName = props.transitionName;\r\n                var nameIsObj = typeof transitionName === 'object';\r\n                this.stop();\r\n                var end = function end() {\r\n                    _this2.stopper = null;\r\n                    finishCallback();\r\n                };\r\n                if ((isCssAnimationSupported || !props.animation[animationType]) && transitionName && props[transitionMap[animationType]]) {\r\n                    var name = nameIsObj ? transitionName[animationType] : transitionName + '-' + animationType;\r\n                    var activeName = name + '-active';\r\n                    if (nameIsObj && transitionName[animationType + 'Active']) {\r\n                        activeName = transitionName[animationType + 'Active'];\r\n                    }\r\n                    this.stopper = cssAnimate(node, {\r\n                        name: name,\r\n                        active: activeName\r\n                    }, end);\r\n                }\r\n                else {\r\n                    this.stopper = props.animation[animationType](node, end);\r\n                }\r\n            }\r\n        }, {\r\n            key: 'stop',\r\n            value: function stop() {\r\n                var stopper = this.stopper;\r\n                if (stopper) {\r\n                    this.stopper = null;\r\n                    stopper.stop();\r\n                }\r\n            }\r\n        }, {\r\n            key: 'render',\r\n            value: function render() {\r\n                return this.props.children;\r\n            }\r\n        }]);\r\n    return AnimateChild;\r\n}(React.Component);\r\nAnimateChild.propTypes = {\r\n    children: PropTypes.any\r\n};\r\nexport default AnimateChild;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\rc-animate\\es\\AnimateChild.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\rc-animate\\es\\AnimateChild.js"],"names":[],"mappings":"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","sourcesContent":["import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport cssAnimate, { isCssAnimationSupported } from 'css-animation';\nimport animUtil from './util/animate';\n\nvar transitionMap = {\n  enter: 'transitionEnter',\n  appear: 'transitionAppear',\n  leave: 'transitionLeave'\n};\n\nvar AnimateChild = function (_React$Component) {\n  _inherits(AnimateChild, _React$Component);\n\n  function AnimateChild() {\n    _classCallCheck(this, AnimateChild);\n\n    return _possibleConstructorReturn(this, (AnimateChild.__proto__ || Object.getPrototypeOf(AnimateChild)).apply(this, arguments));\n  }\n\n  _createClass(AnimateChild, [{\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.stop();\n    }\n  }, {\n    key: 'componentWillEnter',\n    value: function componentWillEnter(done) {\n      if (animUtil.isEnterSupported(this.props)) {\n        this.transition('enter', done);\n      } else {\n        done();\n      }\n    }\n  }, {\n    key: 'componentWillAppear',\n    value: function componentWillAppear(done) {\n      if (animUtil.isAppearSupported(this.props)) {\n        this.transition('appear', done);\n      } else {\n        done();\n      }\n    }\n  }, {\n    key: 'componentWillLeave',\n    value: function componentWillLeave(done) {\n      if (animUtil.isLeaveSupported(this.props)) {\n        this.transition('leave', done);\n      } else {\n        // always sync, do not interupt with react component life cycle\n        // update hidden -> animate hidden ->\n        // didUpdate -> animate leave -> unmount (if animate is none)\n        done();\n      }\n    }\n  }, {\n    key: 'transition',\n    value: function transition(animationType, finishCallback) {\n      var _this2 = this;\n\n      var node = ReactDOM.findDOMNode(this);\n      var props = this.props;\n      var transitionName = props.transitionName;\n      var nameIsObj = typeof transitionName === 'object';\n      this.stop();\n      var end = function end() {\n        _this2.stopper = null;\n        finishCallback();\n      };\n      if ((isCssAnimationSupported || !props.animation[animationType]) && transitionName && props[transitionMap[animationType]]) {\n        var name = nameIsObj ? transitionName[animationType] : transitionName + '-' + animationType;\n        var activeName = name + '-active';\n        if (nameIsObj && transitionName[animationType + 'Active']) {\n          activeName = transitionName[animationType + 'Active'];\n        }\n        this.stopper = cssAnimate(node, {\n          name: name,\n          active: activeName\n        }, end);\n      } else {\n        this.stopper = props.animation[animationType](node, end);\n      }\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      var stopper = this.stopper;\n      if (stopper) {\n        this.stopper = null;\n        stopper.stop();\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n\n  return AnimateChild;\n}(React.Component);\n\nAnimateChild.propTypes = {\n  children: PropTypes.any\n};\nexport default AnimateChild;"]}]}