{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-voronoi\\src\\Edge.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-voronoi\\src\\Edge.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { cells, edges, epsilon } from \"./Diagram\";\r\nexport function createEdge(left, right, v0, v1) {\r\n    var edge = [null, null], index = edges.push(edge) - 1;\r\n    edge.left = left;\r\n    edge.right = right;\r\n    if (v0)\r\n        setEdgeEnd(edge, left, right, v0);\r\n    if (v1)\r\n        setEdgeEnd(edge, right, left, v1);\r\n    cells[left.index].halfedges.push(index);\r\n    cells[right.index].halfedges.push(index);\r\n    return edge;\r\n}\r\nexport function createBorderEdge(left, v0, v1) {\r\n    var edge = [v0, v1];\r\n    edge.left = left;\r\n    return edge;\r\n}\r\nexport function setEdgeEnd(edge, left, right, vertex) {\r\n    if (!edge[0] && !edge[1]) {\r\n        edge[0] = vertex;\r\n        edge.left = left;\r\n        edge.right = right;\r\n    }\r\n    else if (edge.left === right) {\r\n        edge[1] = vertex;\r\n    }\r\n    else {\r\n        edge[0] = vertex;\r\n    }\r\n}\r\nfunction clipEdge(edge, x0, y0, x1, y1) {\r\n    var a = edge[0], b = edge[1], ax = a[0], ay = a[1], bx = b[0], by = b[1], t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\r\n    r = x0 - ax;\r\n    if (!dx && r > 0)\r\n        return;\r\n    r /= dx;\r\n    if (dx < 0) {\r\n        if (r < t0)\r\n            return;\r\n        if (r < t1)\r\n            t1 = r;\r\n    }\r\n    else if (dx > 0) {\r\n        if (r > t1)\r\n            return;\r\n        if (r > t0)\r\n            t0 = r;\r\n    }\r\n    r = x1 - ax;\r\n    if (!dx && r < 0)\r\n        return;\r\n    r /= dx;\r\n    if (dx < 0) {\r\n        if (r > t1)\r\n            return;\r\n        if (r > t0)\r\n            t0 = r;\r\n    }\r\n    else if (dx > 0) {\r\n        if (r < t0)\r\n            return;\r\n        if (r < t1)\r\n            t1 = r;\r\n    }\r\n    r = y0 - ay;\r\n    if (!dy && r > 0)\r\n        return;\r\n    r /= dy;\r\n    if (dy < 0) {\r\n        if (r < t0)\r\n            return;\r\n        if (r < t1)\r\n            t1 = r;\r\n    }\r\n    else if (dy > 0) {\r\n        if (r > t1)\r\n            return;\r\n        if (r > t0)\r\n            t0 = r;\r\n    }\r\n    r = y1 - ay;\r\n    if (!dy && r < 0)\r\n        return;\r\n    r /= dy;\r\n    if (dy < 0) {\r\n        if (r > t1)\r\n            return;\r\n        if (r > t0)\r\n            t0 = r;\r\n    }\r\n    else if (dy > 0) {\r\n        if (r < t0)\r\n            return;\r\n        if (r < t1)\r\n            t1 = r;\r\n    }\r\n    if (!(t0 > 0) && !(t1 < 1))\r\n        return true;\r\n    if (t0 > 0)\r\n        edge[0] = [ax + t0 * dx, ay + t0 * dy];\r\n    if (t1 < 1)\r\n        edge[1] = [ax + t1 * dx, ay + t1 * dy];\r\n    return true;\r\n}\r\nfunction connectEdge(edge, x0, y0, x1, y1) {\r\n    var v1 = edge[1];\r\n    if (v1)\r\n        return true;\r\n    var v0 = edge[0], left = edge.left, right = edge.right, lx = left[0], ly = left[1], rx = right[0], ry = right[1], fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\r\n    if (ry === ly) {\r\n        if (fx < x0 || fx >= x1)\r\n            return;\r\n        if (lx > rx) {\r\n            if (!v0)\r\n                v0 = [fx, y0];\r\n            else if (v0[1] >= y1)\r\n                return;\r\n            v1 = [fx, y1];\r\n        }\r\n        else {\r\n            if (!v0)\r\n                v0 = [fx, y1];\r\n            else if (v0[1] < y0)\r\n                return;\r\n            v1 = [fx, y0];\r\n        }\r\n    }\r\n    else {\r\n        fm = (lx - rx) / (ry - ly);\r\n        fb = fy - fm * fx;\r\n        if (fm < -1 || fm > 1) {\r\n            if (lx > rx) {\r\n                if (!v0)\r\n                    v0 = [(y0 - fb) / fm, y0];\r\n                else if (v0[1] >= y1)\r\n                    return;\r\n                v1 = [(y1 - fb) / fm, y1];\r\n            }\r\n            else {\r\n                if (!v0)\r\n                    v0 = [(y1 - fb) / fm, y1];\r\n                else if (v0[1] < y0)\r\n                    return;\r\n                v1 = [(y0 - fb) / fm, y0];\r\n            }\r\n        }\r\n        else {\r\n            if (ly < ry) {\r\n                if (!v0)\r\n                    v0 = [x0, fm * x0 + fb];\r\n                else if (v0[0] >= x1)\r\n                    return;\r\n                v1 = [x1, fm * x1 + fb];\r\n            }\r\n            else {\r\n                if (!v0)\r\n                    v0 = [x1, fm * x1 + fb];\r\n                else if (v0[0] < x0)\r\n                    return;\r\n                v1 = [x0, fm * x0 + fb];\r\n            }\r\n        }\r\n    }\r\n    edge[0] = v0;\r\n    edge[1] = v1;\r\n    return true;\r\n}\r\nexport function clipEdges(x0, y0, x1, y1) {\r\n    var i = edges.length, edge;\r\n    while (i--) {\r\n        if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\r\n            || !clipEdge(edge, x0, y0, x1, y1)\r\n            || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\r\n                || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\r\n            delete edges[i];\r\n        }\r\n    }\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-voronoi\\src\\Edge.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-voronoi\\src\\Edge.js"],"names":[],"mappings":"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","sourcesContent":["import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n"]}]}