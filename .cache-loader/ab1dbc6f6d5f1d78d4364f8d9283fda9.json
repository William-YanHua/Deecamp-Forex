{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/src/api/hierarchy.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/src/api/hierarchy.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var assign = require('@antv/util/lib/mix');\nvar View = require('../view');\nassign(View.prototype, {\n    getAllNodes: function () {\n        var self = this;\n        var nodes = [];\n        var root = self.root;\n        if (root.each) {\n            root.each(function (node) {\n                nodes.push(node);\n            });\n        }\n        else if (root.eachNode) {\n            root.eachNode(function (node) {\n                nodes.push(node);\n            });\n        }\n        return nodes;\n    },\n    getAllLinks: function () {\n        var links = [];\n        var nodes = [this.root];\n        var node;\n        while (node = nodes.pop()) {\n            var children = node.children;\n            if (children) {\n                children.forEach(function (child) {\n                    links.push({\n                        source: node,\n                        target: child\n                    });\n                    nodes.push(child);\n                });\n            }\n        }\n        return links;\n    }\n});\nassign(View.prototype, {\n    getAllEdges: View.prototype.getAllLinks\n});\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/src/api/hierarchy.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/src/api/hierarchy.js"],"names":[],"mappings":"AACA,IAAM,MAAM,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;AAC7C,IAAM,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAEhC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE;IACrB,WAAW;QACT,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAM,KAAK,GAAG,EAAE,CAAC;QACjB,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAI,CAAC,IAAI,CAAC,UAAA,IAAI;gBACZ,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC;SACJ;aAAM,IAAI,IAAI,CAAC,QAAQ,EAAE;YACxB,IAAI,CAAC,QAAQ,CAAC,UAAA,IAAI;gBAChB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC;SACJ;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IACD,WAAW;QACT,IAAM,KAAK,GAAG,EAAE,CAAC;QACjB,IAAM,KAAK,GAAG,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC;QAC5B,IAAI,IAAI,CAAC;QACT,OAAO,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,EAAE;YACzB,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC/B,IAAI,QAAQ,EAAE;gBACZ,QAAQ,CAAC,OAAO,CAAC,UAAA,KAAK;oBACpB,KAAK,CAAC,IAAI,CAAC;wBACT,MAAM,EAAE,IAAI;wBACZ,MAAM,EAAE,KAAK;qBACd,CAAC,CAAC;oBACH,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACpB,CAAC,CAAC,CAAC;aACJ;SACF;QACD,OAAO,KAAK,CAAC;IACf,CAAC;CACF,CAAC,CAAC;AAEH,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE;IACrB,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW;CACxC,CAAC,CAAC","sourcesContent":["/* eslint-disable no-cond-assign, no-loop-func */\nconst assign = require('@antv/util/lib/mix');\nconst View = require('../view');\n\nassign(View.prototype, {\n  getAllNodes() {\n    const self = this;\n    const nodes = [];\n    const root = self.root;\n    if (root.each) { // d3-hierarchy\n      root.each(node => {\n        nodes.push(node);\n      });\n    } else if (root.eachNode) { // @antv/hierarchy\n      root.eachNode(node => {\n        nodes.push(node);\n      });\n    }\n    return nodes;\n  },\n  getAllLinks() {\n    const links = [];\n    const nodes = [ this.root ];\n    let node;\n    while (node = nodes.pop()) {\n      const children = node.children;\n      if (children) {\n        children.forEach(child => {\n          links.push({\n            source: node,\n            target: child\n          });\n          nodes.push(child);\n        });\n      }\n    }\n    return links;\n  }\n});\n\nassign(View.prototype, {\n  getAllEdges: View.prototype.getAllLinks\n});\n"]}]}