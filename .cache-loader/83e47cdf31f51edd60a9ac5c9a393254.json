{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\line\\layer.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\line\\layer.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __assign, __extends } from \"tslib\";\r\nimport { deepMix, has, map, each, some } from '@antv/util';\r\nimport { registerPlotType } from '../../base/global';\r\nimport ViewLayer from '../../base/view-layer';\r\nimport { getGeom } from '../../geoms/factory';\r\nimport { extractScale, trySetScaleMinToZero } from '../../util/scale';\r\nimport { getPlotOption } from './animation/clipIn-with-data';\r\nimport responsiveMethods from './apply-responsive';\r\nimport '../../components/label/point';\r\nimport '../../components/label/point-auto';\r\nimport LineLabel from './component/label/line-label';\r\nimport * as EventParser from './event';\r\nimport MarkerPoint from '../../components/marker-point';\r\nimport './theme';\r\nimport './apply-responsive/theme';\r\nimport { LineActive, LineSelect } from './interaction/index';\r\nimport { getGeometryByType } from '../../util/view';\r\nvar GEOM_MAP = {\r\n    line: 'line',\r\n    point: 'point',\r\n};\r\nvar LineLayer = (function (_super) {\r\n    __extends(LineLayer, _super);\r\n    function LineLayer() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.type = 'line';\r\n        _this.markerPoints = [];\r\n        return _this;\r\n    }\r\n    LineLayer.getDefaultOptions = function () {\r\n        return deepMix({}, _super.getDefaultOptions.call(this), {\r\n            connectNulls: false,\r\n            smooth: false,\r\n            lineSize: 2,\r\n            lineStyle: {\r\n                lineJoin: 'round',\r\n                lineCap: 'round',\r\n            },\r\n            point: {\r\n                visible: false,\r\n                size: 3,\r\n                shape: 'circle',\r\n            },\r\n            label: {\r\n                visible: false,\r\n                type: 'point',\r\n            },\r\n            legend: {\r\n                visible: true,\r\n                position: 'top-left',\r\n                wordSpacing: 4,\r\n            },\r\n            tooltip: {\r\n                showContent: true,\r\n                crosshairs: {\r\n                    line: {\r\n                        style: {\r\n                            stroke: 'rgba(0,0,0,0.45)',\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n            markerPoints: [],\r\n        });\r\n    };\r\n    LineLayer.prototype.afterRender = function () {\r\n        var _this = this;\r\n        var options = this.options;\r\n        this.renderLabel();\r\n        if (options.markerPoints) {\r\n            each(this.markerPoints, function (markerPoint) { return markerPoint.destroy(); });\r\n            this.markerPoints = [];\r\n            options.markerPoints.forEach(function (markerPointOpt) {\r\n                if (markerPointOpt.visible) {\r\n                    var markerPoint = new MarkerPoint(__assign(__assign({}, markerPointOpt), { view: _this.view }));\r\n                    _this.markerPoints.push(markerPoint);\r\n                }\r\n            });\r\n        }\r\n        if (options.responsive && options.padding !== 'auto') {\r\n            this.applyResponsive('afterRender');\r\n        }\r\n        _super.prototype.afterRender.call(this);\r\n    };\r\n    LineLayer.prototype.getColorScale = function () {\r\n        var seriesField = this.options.seriesField;\r\n        if (seriesField) {\r\n            return this.view.getScaleByField(seriesField);\r\n        }\r\n    };\r\n    LineLayer.prototype.geometryParser = function (dim, type) {\r\n        return GEOM_MAP[type];\r\n    };\r\n    LineLayer.prototype.scale = function () {\r\n        var props = this.options;\r\n        var scales = {};\r\n        scales[props.xField] = {};\r\n        if (has(props, 'xAxis')) {\r\n            extractScale(scales[props.xField], props.xAxis);\r\n        }\r\n        scales[props.yField] = {};\r\n        if (has(props, 'yAxis')) {\r\n            extractScale(scales[props.yField], props.yAxis);\r\n        }\r\n        this.setConfig('scales', scales);\r\n        trySetScaleMinToZero(scales[props.yField], map(props.data || [], function (item) { return item[props.yField]; }));\r\n        _super.prototype.scale.call(this);\r\n    };\r\n    LineLayer.prototype.coord = function () {\r\n        return;\r\n    };\r\n    LineLayer.prototype.tooltip = function () {\r\n        if (some(this.options.markerPoints, function (markerPointOpt) { return markerPointOpt.visible; })) {\r\n            this.options.tooltip.showMarkers = false;\r\n        }\r\n        _super.prototype.tooltip.call(this);\r\n    };\r\n    LineLayer.prototype.addGeometry = function () {\r\n        this.addLine();\r\n        this.addPoint();\r\n    };\r\n    LineLayer.prototype.addLine = function () {\r\n        var props = this.options;\r\n        this.line = getGeom('line', 'main', {\r\n            plot: this,\r\n        });\r\n        if (props.tooltip && (props.tooltip.fields || props.tooltip.formatter)) {\r\n            this.geometryTooltip();\r\n        }\r\n        this.setConfig('geometry', this.line);\r\n    };\r\n    LineLayer.prototype.addPoint = function () {\r\n        var props = this.options;\r\n        var defaultConfig = { visible: false };\r\n        if (props.point) {\r\n            props.point = deepMix(defaultConfig, props.point);\r\n        }\r\n        if (props.point && props.point.visible) {\r\n            this.point = getGeom('point', 'guide', {\r\n                plot: this,\r\n            });\r\n            this.setConfig('geometry', this.point);\r\n        }\r\n    };\r\n    LineLayer.prototype.renderLabel = function () {\r\n        var scales = this.config.scales;\r\n        var _a = this.options, label = _a.label, yField = _a.yField;\r\n        var scale = scales[yField];\r\n        if (label.visible) {\r\n            var geometry = getGeometryByType(this.view, 'line');\r\n            if (label.type === 'line') {\r\n                var label_1 = new LineLabel(__assign({ view: this.view, plot: this }, this.options.label));\r\n                label_1.render();\r\n            }\r\n            else {\r\n                this.doRenderLabel(geometry, __assign({ type: 'point', formatter: scale.formatter && (function (value) { return scale.formatter(value); }) }, this.options.label));\r\n            }\r\n        }\r\n    };\r\n    LineLayer.prototype.geometryTooltip = function () {\r\n        this.line.tooltip = {};\r\n        var tooltipOptions = this.options.tooltip;\r\n        if (tooltipOptions.fields) {\r\n            this.line.tooltip.fields = tooltipOptions.fields;\r\n        }\r\n        if (tooltipOptions.formatter) {\r\n            this.line.tooltip.callback = tooltipOptions.formatter;\r\n            if (!tooltipOptions.fields) {\r\n                this.line.tooltip.fields = [this.options.xField, this.options.yField];\r\n                if (this.options.seriesField) {\r\n                    this.line.tooltip.fields.push(this.options.seriesField);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    LineLayer.prototype.animation = function () {\r\n        _super.prototype.animation.call(this);\r\n        var props = this.options;\r\n        if (!props.animation) {\r\n            this.line.animate = false;\r\n            if (this.point)\r\n                this.point.animate = false;\r\n        }\r\n        else {\r\n            getPlotOption({\r\n                options: this.options,\r\n                view: this.view,\r\n            });\r\n            this.line.animate = props.animation;\r\n        }\r\n    };\r\n    LineLayer.prototype.applyInteractions = function () {\r\n        _super.prototype.applyInteractions.call(this);\r\n        this.interactions.push(new LineActive({\r\n            view: this.view,\r\n        }));\r\n        this.interactions.push(new LineSelect({\r\n            view: this.view,\r\n        }));\r\n    };\r\n    LineLayer.prototype.parseEvents = function () {\r\n        _super.prototype.parseEvents.call(this, EventParser);\r\n    };\r\n    LineLayer.prototype.applyResponsive = function (stage) {\r\n        var _this = this;\r\n        var methods = responsiveMethods[stage];\r\n        each(methods, function (r) {\r\n            var responsive = r;\r\n            responsive.method(_this);\r\n        });\r\n    };\r\n    LineLayer.prototype.singleLineLabelCheck = function () {\r\n        return !this.options.seriesField && this.options.label.type && this.options.label.type === 'line';\r\n    };\r\n    return LineLayer;\r\n}(ViewLayer));\r\nexport default LineLayer;\r\nregisterPlotType('line', LineLayer);\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\line\\layer.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\line\\layer.js"],"names":[],"mappings":"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","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { deepMix, has, map, each, some } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport ViewLayer from '../../base/view-layer';\nimport { getGeom } from '../../geoms/factory';\nimport { extractScale, trySetScaleMinToZero } from '../../util/scale';\nimport { getPlotOption } from './animation/clipIn-with-data';\nimport responsiveMethods from './apply-responsive';\nimport '../../components/label/point';\nimport '../../components/label/point-auto';\nimport LineLabel from './component/label/line-label';\nimport * as EventParser from './event';\nimport MarkerPoint from '../../components/marker-point';\nimport './theme';\nimport './apply-responsive/theme';\nimport { LineActive, LineSelect } from './interaction/index';\nimport { getGeometryByType } from '../../util/view';\nvar GEOM_MAP = {\n    line: 'line',\n    point: 'point',\n};\nvar LineLayer = /** @class */ (function (_super) {\n    __extends(LineLayer, _super);\n    function LineLayer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'line';\n        _this.markerPoints = [];\n        return _this;\n    }\n    LineLayer.getDefaultOptions = function () {\n        return deepMix({}, _super.getDefaultOptions.call(this), {\n            connectNulls: false,\n            smooth: false,\n            lineSize: 2,\n            lineStyle: {\n                lineJoin: 'round',\n                lineCap: 'round',\n            },\n            point: {\n                visible: false,\n                size: 3,\n                shape: 'circle',\n            },\n            label: {\n                visible: false,\n                type: 'point',\n            },\n            legend: {\n                visible: true,\n                position: 'top-left',\n                wordSpacing: 4,\n            },\n            tooltip: {\n                showContent: true,\n                crosshairs: {\n                    line: {\n                        style: {\n                            stroke: 'rgba(0,0,0,0.45)',\n                        },\n                    },\n                },\n            },\n            markerPoints: [],\n        });\n    };\n    LineLayer.prototype.afterRender = function () {\n        var _this = this;\n        var options = this.options;\n        this.renderLabel();\n        if (options.markerPoints) {\n            // 清空\n            each(this.markerPoints, function (markerPoint) { return markerPoint.destroy(); });\n            this.markerPoints = [];\n            options.markerPoints.forEach(function (markerPointOpt) {\n                if (markerPointOpt.visible) {\n                    var markerPoint = new MarkerPoint(__assign(__assign({}, markerPointOpt), { view: _this.view }));\n                    _this.markerPoints.push(markerPoint);\n                }\n            });\n        }\n        // 响应式\n        if (options.responsive && options.padding !== 'auto') {\n            this.applyResponsive('afterRender');\n        }\n        _super.prototype.afterRender.call(this);\n    };\n    LineLayer.prototype.getColorScale = function () {\n        var seriesField = this.options.seriesField;\n        if (seriesField) {\n            return this.view.getScaleByField(seriesField);\n        }\n    };\n    LineLayer.prototype.geometryParser = function (dim, type) {\n        return GEOM_MAP[type];\n    };\n    LineLayer.prototype.scale = function () {\n        var props = this.options;\n        var scales = {};\n        /** 配置x-scale */\n        scales[props.xField] = {};\n        if (has(props, 'xAxis')) {\n            extractScale(scales[props.xField], props.xAxis);\n        }\n        /** 配置y-scale */\n        scales[props.yField] = {};\n        if (has(props, 'yAxis')) {\n            extractScale(scales[props.yField], props.yAxis);\n        }\n        this.setConfig('scales', scales);\n        trySetScaleMinToZero(scales[props.yField], map(props.data || [], function (item) { return item[props.yField]; }));\n        _super.prototype.scale.call(this);\n    };\n    LineLayer.prototype.coord = function () {\n        return;\n    };\n    LineLayer.prototype.tooltip = function () {\n        // 如果有标注点，则不展示markers\n        if (some(this.options.markerPoints, function (markerPointOpt) { return markerPointOpt.visible; })) {\n            this.options.tooltip.showMarkers = false;\n        }\n        _super.prototype.tooltip.call(this);\n    };\n    LineLayer.prototype.addGeometry = function () {\n        // 配置线\n        this.addLine();\n        // 配置数据点\n        this.addPoint();\n    };\n    LineLayer.prototype.addLine = function () {\n        var props = this.options;\n        this.line = getGeom('line', 'main', {\n            plot: this,\n        });\n        if (props.tooltip && (props.tooltip.fields || props.tooltip.formatter)) {\n            this.geometryTooltip();\n        }\n        this.setConfig('geometry', this.line);\n    };\n    LineLayer.prototype.addPoint = function () {\n        var props = this.options;\n        var defaultConfig = { visible: false };\n        if (props.point) {\n            props.point = deepMix(defaultConfig, props.point);\n        }\n        if (props.point && props.point.visible) {\n            this.point = getGeom('point', 'guide', {\n                plot: this,\n            });\n            this.setConfig('geometry', this.point);\n        }\n    };\n    LineLayer.prototype.renderLabel = function () {\n        var scales = this.config.scales;\n        var _a = this.options, label = _a.label, yField = _a.yField;\n        var scale = scales[yField];\n        if (label.visible) {\n            var geometry = getGeometryByType(this.view, 'line');\n            if (label.type === 'line') {\n                // TODO: Line Label 迁移\n                var label_1 = new LineLabel(__assign({ view: this.view, plot: this }, this.options.label));\n                label_1.render();\n            }\n            else {\n                this.doRenderLabel(geometry, __assign({ type: 'point', formatter: scale.formatter && (function (value) { return scale.formatter(value); }) }, this.options.label));\n            }\n        }\n    };\n    LineLayer.prototype.geometryTooltip = function () {\n        this.line.tooltip = {};\n        var tooltipOptions = this.options.tooltip;\n        if (tooltipOptions.fields) {\n            this.line.tooltip.fields = tooltipOptions.fields;\n        }\n        if (tooltipOptions.formatter) {\n            this.line.tooltip.callback = tooltipOptions.formatter;\n            if (!tooltipOptions.fields) {\n                this.line.tooltip.fields = [this.options.xField, this.options.yField];\n                if (this.options.seriesField) {\n                    this.line.tooltip.fields.push(this.options.seriesField);\n                }\n            }\n        }\n    };\n    LineLayer.prototype.animation = function () {\n        _super.prototype.animation.call(this);\n        var props = this.options;\n        if (!props.animation) {\n            // 关闭动画\n            this.line.animate = false;\n            if (this.point)\n                this.point.animate = false;\n        }\n        else {\n            getPlotOption({\n                options: this.options,\n                view: this.view,\n            });\n            this.line.animate = props.animation;\n        }\n    };\n    LineLayer.prototype.applyInteractions = function () {\n        _super.prototype.applyInteractions.call(this);\n        this.interactions.push(new LineActive({\n            view: this.view,\n        }));\n        this.interactions.push(new LineSelect({\n            view: this.view,\n        }));\n    };\n    LineLayer.prototype.parseEvents = function () {\n        _super.prototype.parseEvents.call(this, EventParser);\n    };\n    LineLayer.prototype.applyResponsive = function (stage) {\n        var _this = this;\n        var methods = responsiveMethods[stage];\n        each(methods, function (r) {\n            var responsive = r;\n            responsive.method(_this);\n        });\n    };\n    LineLayer.prototype.singleLineLabelCheck = function () {\n        // 不允许单折线设置尾部跟随label\n        return !this.options.seriesField && this.options.label.type && this.options.label.type === 'line';\n    };\n    return LineLayer;\n}(ViewLayer));\nexport default LineLayer;\nregisterPlotType('line', LineLayer);\n//# sourceMappingURL=layer.js.map"]}]}