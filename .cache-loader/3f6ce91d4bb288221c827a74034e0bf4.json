{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\geom\\util\\spline.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\geom\\util\\spline.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["var MatrixUtil = require('../../util').MatrixUtil;\r\nvar Vector2 = MatrixUtil.vec2;\r\nfunction smoothBezier(points, smooth, isLoop, constraint) {\r\n    var cps = [];\r\n    var prevPoint;\r\n    var nextPoint;\r\n    var hasConstraint = !!constraint;\r\n    var min, max;\r\n    if (hasConstraint) {\r\n        min = [Infinity, Infinity];\r\n        max = [-Infinity, -Infinity];\r\n        for (var i = 0, l = points.length; i < l; i++) {\r\n            var point = points[i];\r\n            min = Vector2.min([], min, point);\r\n            max = Vector2.max([], max, point);\r\n        }\r\n        min = Vector2.min([], min, constraint[0]);\r\n        max = Vector2.max([], max, constraint[1]);\r\n    }\r\n    for (var _i = 0, len = points.length; _i < len; _i++) {\r\n        var _point = points[_i];\r\n        if (isLoop) {\r\n            prevPoint = points[_i ? _i - 1 : len - 1];\r\n            nextPoint = points[(_i + 1) % len];\r\n        }\r\n        else {\r\n            if (_i === 0 || _i === len - 1) {\r\n                cps.push(_point);\r\n                continue;\r\n            }\r\n            else {\r\n                prevPoint = points[_i - 1];\r\n                nextPoint = points[_i + 1];\r\n            }\r\n        }\r\n        var v = [];\r\n        v = Vector2.sub(v, nextPoint, prevPoint);\r\n        v = Vector2.scale(v, v, smooth);\r\n        var d0 = Vector2.distance(_point, prevPoint);\r\n        var d1 = Vector2.distance(_point, nextPoint);\r\n        var sum = d0 + d1;\r\n        if (sum !== 0) {\r\n            d0 /= sum;\r\n            d1 /= sum;\r\n        }\r\n        var v1 = Vector2.scale([], v, -d0);\r\n        var v2 = Vector2.scale([], v, d1);\r\n        var cp0 = Vector2.add([], _point, v1);\r\n        var cp1 = Vector2.add([], _point, v2);\r\n        if (hasConstraint) {\r\n            cp0 = Vector2.max([], cp0, min);\r\n            cp0 = Vector2.min([], cp0, max);\r\n            cp1 = Vector2.max([], cp1, min);\r\n            cp1 = Vector2.min([], cp1, max);\r\n        }\r\n        cps.push(cp0);\r\n        cps.push(cp1);\r\n    }\r\n    if (isLoop) {\r\n        cps.push(cps.shift());\r\n    }\r\n    return cps;\r\n}\r\nfunction catmullRom2bezier(crp, z, constraint) {\r\n    var isLoop = !!z;\r\n    var pointList = [];\r\n    for (var i = 0, l = crp.length; i < l; i += 2) {\r\n        pointList.push([crp[i], crp[i + 1]]);\r\n    }\r\n    var controlPointList = smoothBezier(pointList, 0.4, isLoop, constraint);\r\n    var len = pointList.length;\r\n    var d1 = [];\r\n    var cp1;\r\n    var cp2;\r\n    var p;\r\n    for (var _i2 = 0; _i2 < len - 1; _i2++) {\r\n        cp1 = controlPointList[_i2 * 2];\r\n        cp2 = controlPointList[_i2 * 2 + 1];\r\n        p = pointList[_i2 + 1];\r\n        d1.push(['C', cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]]);\r\n    }\r\n    if (isLoop) {\r\n        cp1 = controlPointList[len];\r\n        cp2 = controlPointList[len + 1];\r\n        p = pointList[0];\r\n        d1.push(['C', cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]]);\r\n    }\r\n    return d1;\r\n}\r\nmodule.exports = {\r\n    catmullRom2bezier: catmullRom2bezier\r\n};\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\geom\\util\\spline.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\lib\\geom\\util\\spline.js"],"names":[],"mappings":"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","sourcesContent":["var MatrixUtil = require('../../util').MatrixUtil;\n\nvar Vector2 = MatrixUtil.vec2;\n\nfunction smoothBezier(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var prevPoint;\n  var nextPoint;\n  var hasConstraint = !!constraint;\n  var min, max;\n\n  if (hasConstraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, l = points.length; i < l; i++) {\n      var point = points[i];\n      min = Vector2.min([], min, point);\n      max = Vector2.max([], max, point);\n    }\n\n    min = Vector2.min([], min, constraint[0]);\n    max = Vector2.max([], max, constraint[1]);\n  }\n\n  for (var _i = 0, len = points.length; _i < len; _i++) {\n    var _point = points[_i];\n\n    if (isLoop) {\n      prevPoint = points[_i ? _i - 1 : len - 1];\n      nextPoint = points[(_i + 1) % len];\n    } else {\n      if (_i === 0 || _i === len - 1) {\n        cps.push(_point);\n        continue;\n      } else {\n        prevPoint = points[_i - 1];\n        nextPoint = points[_i + 1];\n      }\n    }\n\n    var v = [];\n    v = Vector2.sub(v, nextPoint, prevPoint);\n    v = Vector2.scale(v, v, smooth);\n    var d0 = Vector2.distance(_point, prevPoint);\n    var d1 = Vector2.distance(_point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    var v1 = Vector2.scale([], v, -d0);\n    var v2 = Vector2.scale([], v, d1);\n    var cp0 = Vector2.add([], _point, v1);\n    var cp1 = Vector2.add([], _point, v2);\n\n    if (hasConstraint) {\n      cp0 = Vector2.max([], cp0, min);\n      cp0 = Vector2.min([], cp0, max);\n      cp1 = Vector2.max([], cp1, min);\n      cp1 = Vector2.min([], cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nfunction catmullRom2bezier(crp, z, constraint) {\n  var isLoop = !!z;\n  var pointList = [];\n\n  for (var i = 0, l = crp.length; i < l; i += 2) {\n    pointList.push([crp[i], crp[i + 1]]);\n  }\n\n  var controlPointList = smoothBezier(pointList, 0.4, isLoop, constraint);\n  var len = pointList.length;\n  var d1 = [];\n  var cp1;\n  var cp2;\n  var p;\n\n  for (var _i2 = 0; _i2 < len - 1; _i2++) {\n    cp1 = controlPointList[_i2 * 2];\n    cp2 = controlPointList[_i2 * 2 + 1];\n    p = pointList[_i2 + 1];\n    d1.push(['C', cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]]);\n  }\n\n  if (isLoop) {\n    cp1 = controlPointList[len];\n    cp2 = controlPointList[len + 1];\n    p = pointList[0];\n    d1.push(['C', cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]]);\n  }\n\n  return d1;\n}\n\nmodule.exports = {\n  catmullRom2bezier: catmullRom2bezier\n};"]}]}