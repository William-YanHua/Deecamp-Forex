{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\dom-align\\es\\getVisibleRectForElement.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\dom-align\\es\\getVisibleRectForElement.js","mtime":1529911611000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import utils from './utils';\r\nimport getOffsetParent from './getOffsetParent';\r\nimport isAncestorFixed from './isAncestorFixed';\r\nfunction getVisibleRectForElement(element) {\r\n    var visibleRect = {\r\n        left: 0,\r\n        right: Infinity,\r\n        top: 0,\r\n        bottom: Infinity\r\n    };\r\n    var el = getOffsetParent(element);\r\n    var doc = utils.getDocument(element);\r\n    var win = doc.defaultView || doc.parentWindow;\r\n    var body = doc.body;\r\n    var documentElement = doc.documentElement;\r\n    while (el) {\r\n        if ((navigator.userAgent.indexOf('MSIE') === -1 || el.clientWidth !== 0) &&\r\n            el !== body && el !== documentElement && utils.css(el, 'overflow') !== 'visible') {\r\n            var pos = utils.offset(el);\r\n            pos.left += el.clientLeft;\r\n            pos.top += el.clientTop;\r\n            visibleRect.top = Math.max(visibleRect.top, pos.top);\r\n            visibleRect.right = Math.min(visibleRect.right, pos.left + el.clientWidth);\r\n            visibleRect.bottom = Math.min(visibleRect.bottom, pos.top + el.clientHeight);\r\n            visibleRect.left = Math.max(visibleRect.left, pos.left);\r\n        }\r\n        else if (el === body || el === documentElement) {\r\n            break;\r\n        }\r\n        el = getOffsetParent(el);\r\n    }\r\n    var originalPosition = null;\r\n    if (!utils.isWindow(element) && element.nodeType !== 9) {\r\n        originalPosition = element.style.position;\r\n        var position = utils.css(element, 'position');\r\n        if (position === 'absolute') {\r\n            element.style.position = 'fixed';\r\n        }\r\n    }\r\n    var scrollX = utils.getWindowScrollLeft(win);\r\n    var scrollY = utils.getWindowScrollTop(win);\r\n    var viewportWidth = utils.viewportWidth(win);\r\n    var viewportHeight = utils.viewportHeight(win);\r\n    var documentWidth = documentElement.scrollWidth;\r\n    var documentHeight = documentElement.scrollHeight;\r\n    if (element.style) {\r\n        element.style.position = originalPosition;\r\n    }\r\n    if (isAncestorFixed(element)) {\r\n        visibleRect.left = Math.max(visibleRect.left, scrollX);\r\n        visibleRect.top = Math.max(visibleRect.top, scrollY);\r\n        visibleRect.right = Math.min(visibleRect.right, scrollX + viewportWidth);\r\n        visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + viewportHeight);\r\n    }\r\n    else {\r\n        var maxVisibleWidth = Math.max(documentWidth, scrollX + viewportWidth);\r\n        visibleRect.right = Math.min(visibleRect.right, maxVisibleWidth);\r\n        var maxVisibleHeight = Math.max(documentHeight, scrollY + viewportHeight);\r\n        visibleRect.bottom = Math.min(visibleRect.bottom, maxVisibleHeight);\r\n    }\r\n    return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null;\r\n}\r\nexport default getVisibleRectForElement;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\dom-align\\es\\getVisibleRectForElement.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\dom-align\\es\\getVisibleRectForElement.js"],"names":[],"mappings":"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","sourcesContent":["import utils from './utils';\nimport getOffsetParent from './getOffsetParent';\nimport isAncestorFixed from './isAncestorFixed';\n\n/**\n * 获得元素的显示部分的区域\n */\nfunction getVisibleRectForElement(element) {\n  var visibleRect = {\n    left: 0,\n    right: Infinity,\n    top: 0,\n    bottom: Infinity\n  };\n  var el = getOffsetParent(element);\n  var doc = utils.getDocument(element);\n  var win = doc.defaultView || doc.parentWindow;\n  var body = doc.body;\n  var documentElement = doc.documentElement;\n\n  // Determine the size of the visible rect by climbing the dom accounting for\n  // all scrollable containers.\n  while (el) {\n    // clientWidth is zero for inline block elements in ie.\n    if ((navigator.userAgent.indexOf('MSIE') === -1 || el.clientWidth !== 0) &&\n    // body may have overflow set on it, yet we still get the entire\n    // viewport. In some browsers, el.offsetParent may be\n    // document.documentElement, so check for that too.\n    el !== body && el !== documentElement && utils.css(el, 'overflow') !== 'visible') {\n      var pos = utils.offset(el);\n      // add border\n      pos.left += el.clientLeft;\n      pos.top += el.clientTop;\n      visibleRect.top = Math.max(visibleRect.top, pos.top);\n      visibleRect.right = Math.min(visibleRect.right,\n      // consider area without scrollBar\n      pos.left + el.clientWidth);\n      visibleRect.bottom = Math.min(visibleRect.bottom, pos.top + el.clientHeight);\n      visibleRect.left = Math.max(visibleRect.left, pos.left);\n    } else if (el === body || el === documentElement) {\n      break;\n    }\n    el = getOffsetParent(el);\n  }\n\n  // Set element position to fixed\n  // make sure absolute element itself don't affect it's visible area\n  // https://github.com/ant-design/ant-design/issues/7601\n  var originalPosition = null;\n  if (!utils.isWindow(element) && element.nodeType !== 9) {\n    originalPosition = element.style.position;\n    var position = utils.css(element, 'position');\n    if (position === 'absolute') {\n      element.style.position = 'fixed';\n    }\n  }\n\n  var scrollX = utils.getWindowScrollLeft(win);\n  var scrollY = utils.getWindowScrollTop(win);\n  var viewportWidth = utils.viewportWidth(win);\n  var viewportHeight = utils.viewportHeight(win);\n  var documentWidth = documentElement.scrollWidth;\n  var documentHeight = documentElement.scrollHeight;\n\n  // Reset element position after calculate the visible area\n  if (element.style) {\n    element.style.position = originalPosition;\n  }\n\n  if (isAncestorFixed(element)) {\n    // Clip by viewport's size.\n    visibleRect.left = Math.max(visibleRect.left, scrollX);\n    visibleRect.top = Math.max(visibleRect.top, scrollY);\n    visibleRect.right = Math.min(visibleRect.right, scrollX + viewportWidth);\n    visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + viewportHeight);\n  } else {\n    // Clip by document's size.\n    var maxVisibleWidth = Math.max(documentWidth, scrollX + viewportWidth);\n    visibleRect.right = Math.min(visibleRect.right, maxVisibleWidth);\n\n    var maxVisibleHeight = Math.max(documentHeight, scrollY + viewportHeight);\n    visibleRect.bottom = Math.min(visibleRect.bottom, maxVisibleHeight);\n  }\n\n  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null;\n}\n\nexport default getVisibleRectForElement;"]}]}