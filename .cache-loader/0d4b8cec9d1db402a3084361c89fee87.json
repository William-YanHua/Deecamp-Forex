{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/scale/lib/log.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/scale/lib/log.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\nvar each = require('@antv/util/lib/each');\nvar Base = require('./base');\nvar Linear = require('./linear');\nfunction log(a, b) {\n    if (a === 1) {\n        return 1;\n    }\n    return Math.log(b) / Math.log(a);\n}\nvar Log = function (_Linear) {\n    _inheritsLoose(Log, _Linear);\n    function Log() {\n        return _Linear.apply(this, arguments) || this;\n    }\n    var _proto = Log.prototype;\n    _proto._initDefaultCfg = function _initDefaultCfg() {\n        _Linear.prototype._initDefaultCfg.call(this);\n        this.type = 'log';\n        this.tickCount = 10;\n        this.base = 2;\n        this._minTick = null;\n    };\n    _proto.calculateTicks = function calculateTicks() {\n        var self = this;\n        var base = self.base;\n        var minTick;\n        if (self.min < 0) {\n            throw new Error('The minimum value must be greater than zero!');\n        }\n        var maxTick = log(base, self.max);\n        if (self.min > 0) {\n            minTick = Math.floor(log(base, self.min));\n        }\n        else {\n            var values = self.values;\n            var positiveMin = self.max;\n            each(values, function (value) {\n                if (value > 0 && value < positiveMin) {\n                    positiveMin = value;\n                }\n            });\n            if (positiveMin === self.max) {\n                positiveMin = self.max / base;\n            }\n            if (positiveMin > 1) {\n                positiveMin = 1;\n            }\n            minTick = Math.floor(log(base, positiveMin));\n            self._minTick = minTick;\n            self.positiveMin = positiveMin;\n        }\n        var count = maxTick - minTick;\n        var tickCount = self.tickCount;\n        var avg = Math.ceil(count / tickCount);\n        var ticks = [];\n        for (var i = minTick; i < maxTick + avg; i = i + avg) {\n            ticks.push(Math.pow(base, i));\n        }\n        if (self.min === 0) {\n            ticks.unshift(0);\n        }\n        return ticks;\n    };\n    _proto._getScalePercent = function _getScalePercent(value) {\n        var max = this.max;\n        var min = this.min;\n        if (max === min) {\n            return 0;\n        }\n        if (value <= 0) {\n            return 0;\n        }\n        var base = this.base;\n        var positiveMin = this.positiveMin;\n        if (positiveMin) {\n            min = positiveMin * 1 / base;\n        }\n        var percent;\n        if (value < positiveMin) {\n            percent = value / positiveMin / (log(base, max) - log(base, min));\n        }\n        else {\n            percent = (log(base, value) - log(base, min)) / (log(base, max) - log(base, min));\n        }\n        return percent;\n    };\n    _proto.scale = function scale(value) {\n        var percent = this._getScalePercent(value);\n        var rangeMin = this.rangeMin();\n        var rangeMax = this.rangeMax();\n        return rangeMin + percent * (rangeMax - rangeMin);\n    };\n    _proto.invert = function invert(value) {\n        var base = this.base;\n        var max = log(base, this.max);\n        var rangeMin = this.rangeMin();\n        var range = this.rangeMax() - rangeMin;\n        var min;\n        var positiveMin = this.positiveMin;\n        if (positiveMin) {\n            if (value === 0) {\n                return 0;\n            }\n            min = log(base, positiveMin / base);\n            var appendPercent = 1 / (max - min) * range;\n            if (value < appendPercent) {\n                return value / appendPercent * positiveMin;\n            }\n        }\n        else {\n            min = log(base, this.min);\n        }\n        var percent = (value - rangeMin) / range;\n        var tmp = percent * (max - min) + min;\n        return Math.pow(base, tmp);\n    };\n    return Log;\n}(Linear);\nBase.Log = Log;\nmodule.exports = Log;\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/scale/lib/log.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/bizcharts/node_modules/@antv/scale/lib/log.js"],"names":[],"mappings":"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","sourcesContent":["function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * @fileOverview 使用度量，进行log转换\n * @author dxq613@gmail.com\n */\nvar each = require('@antv/util/lib/each');\n\nvar Base = require('./base');\n\nvar Linear = require('./linear'); // 计算log\n\n\nfunction log(a, b) {\n  if (a === 1) {\n    return 1;\n  }\n\n  return Math.log(b) / Math.log(a);\n}\n/**\n * 度量的log计算\n * @class Scale.Log\n */\n\n\nvar Log = /*#__PURE__*/function (_Linear) {\n  _inheritsLoose(Log, _Linear);\n\n  function Log() {\n    return _Linear.apply(this, arguments) || this;\n  }\n\n  var _proto = Log.prototype;\n\n  _proto._initDefaultCfg = function _initDefaultCfg() {\n    _Linear.prototype._initDefaultCfg.call(this);\n\n    this.type = 'log';\n    /**\n     * @override\n     * log 的坐标点的个数控制在10个以下\n     * @type {Number}\n     */\n\n    this.tickCount = 10;\n    /**\n     * 进行log计算的基数\n     * @type {Number}\n     */\n\n    this.base = 2; // 最小的tick，仅内部使用\n\n    this._minTick = null;\n  }\n  /**\n   * @override\n   */\n  ;\n\n  _proto.calculateTicks = function calculateTicks() {\n    var self = this;\n    var base = self.base;\n    var minTick;\n\n    if (self.min < 0) {\n      throw new Error('The minimum value must be greater than zero!');\n    }\n\n    var maxTick = log(base, self.max);\n\n    if (self.min > 0) {\n      minTick = Math.floor(log(base, self.min));\n    } else {\n      var values = self.values;\n      var positiveMin = self.max; // 查找大于0的第一个值, 如果都小于0，默认为1\n\n      each(values, function (value) {\n        if (value > 0 && value < positiveMin) {\n          positiveMin = value;\n        }\n      });\n\n      if (positiveMin === self.max) {\n        positiveMin = self.max / base;\n      }\n\n      if (positiveMin > 1) {\n        positiveMin = 1;\n      }\n\n      minTick = Math.floor(log(base, positiveMin));\n      self._minTick = minTick;\n      self.positiveMin = positiveMin;\n    }\n\n    var count = maxTick - minTick;\n    var tickCount = self.tickCount;\n    var avg = Math.ceil(count / tickCount);\n    var ticks = [];\n\n    for (var i = minTick; i < maxTick + avg; i = i + avg) {\n      ticks.push(Math.pow(base, i));\n    }\n\n    if (self.min === 0) {\n      ticks.unshift(0);\n    }\n\n    return ticks;\n  } // 获取度量计算时，value占的定义域百分比\n  ;\n\n  _proto._getScalePercent = function _getScalePercent(value) {\n    var max = this.max;\n    var min = this.min;\n\n    if (max === min) {\n      return 0;\n    } // 如果值小于等于0，则按照0处理\n\n\n    if (value <= 0) {\n      return 0;\n    }\n\n    var base = this.base;\n    var positiveMin = this.positiveMin; // 如果min == 0, 则根据比0大的最小值，计算比例关系。这个最小值作为坐标轴上的第二个tick，第一个是0但是不显示\n\n    if (positiveMin) {\n      min = positiveMin * 1 / base;\n    }\n\n    var percent; // 如果数值小于次小值，那么就计算 value / 次小值 占整体的比例\n\n    if (value < positiveMin) {\n      percent = value / positiveMin / (log(base, max) - log(base, min));\n    } else {\n      percent = (log(base, value) - log(base, min)) / (log(base, max) - log(base, min));\n    }\n\n    return percent;\n  }\n  /**\n   * @override\n   */\n  ;\n\n  _proto.scale = function scale(value) {\n    var percent = this._getScalePercent(value);\n\n    var rangeMin = this.rangeMin();\n    var rangeMax = this.rangeMax();\n    return rangeMin + percent * (rangeMax - rangeMin);\n  }\n  /**\n   * @override\n   */\n  ;\n\n  _proto.invert = function invert(value) {\n    var base = this.base;\n    var max = log(base, this.max);\n    var rangeMin = this.rangeMin();\n    var range = this.rangeMax() - rangeMin;\n    var min;\n    var positiveMin = this.positiveMin;\n\n    if (positiveMin) {\n      if (value === 0) {\n        return 0;\n      }\n\n      min = log(base, positiveMin / base);\n      var appendPercent = 1 / (max - min) * range; // 0 到 positiveMin的占比\n\n      if (value < appendPercent) {\n        // 落到 0 - positiveMin 之间\n        return value / appendPercent * positiveMin;\n      }\n    } else {\n      min = log(base, this.min);\n    }\n\n    var percent = (value - rangeMin) / range;\n    var tmp = percent * (max - min) + min;\n    return Math.pow(base, tmp);\n  };\n\n  return Log;\n}(Linear);\n\nBase.Log = Log;\nmodule.exports = Log;"]}]}