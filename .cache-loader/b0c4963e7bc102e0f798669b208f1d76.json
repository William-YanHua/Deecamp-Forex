{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\grouped-column\\layer.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\grouped-column\\layer.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\r\nimport { deepMix } from '@antv/util';\r\nimport { registerPlotType } from '../../base/global';\r\nimport BaseColumnLayer from '../column/layer';\r\nimport './theme';\r\nvar GroupedColumnLayer = (function (_super) {\r\n    __extends(GroupedColumnLayer, _super);\r\n    function GroupedColumnLayer() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.type = 'groupedColumn';\r\n        return _this;\r\n    }\r\n    GroupedColumnLayer.getDefaultOptions = function () {\r\n        return deepMix({}, _super.getDefaultOptions.call(this), {\r\n            yAxis: {\r\n                title: {\r\n                    visible: true,\r\n                },\r\n            },\r\n        });\r\n    };\r\n    GroupedColumnLayer.prototype.getResponsiveTheme = function () {\r\n        return this.themeController.getResponsiveTheme('column');\r\n    };\r\n    GroupedColumnLayer.prototype.getColorScale = function () {\r\n        var groupField = this.options.groupField;\r\n        if (groupField) {\r\n            return this.view.getScaleByField(groupField);\r\n        }\r\n    };\r\n    GroupedColumnLayer.prototype.addGeometry = function () {\r\n        _super.prototype.addGeometry.call(this);\r\n    };\r\n    GroupedColumnLayer.prototype.adjustColumn = function (column) {\r\n        column.adjust = [\r\n            {\r\n                type: 'dodge',\r\n                marginRatio: 0.1,\r\n            },\r\n        ];\r\n    };\r\n    GroupedColumnLayer.prototype.geometryTooltip = function () {\r\n        this.column.tooltip = {};\r\n        var tooltipOptions = this.options.tooltip;\r\n        if (tooltipOptions.fields) {\r\n            this.column.tooltip.fields = tooltipOptions.fields;\r\n        }\r\n        if (tooltipOptions.formatter) {\r\n            this.column.tooltip.callback = tooltipOptions.formatter;\r\n            if (!tooltipOptions.fields) {\r\n                this.column.tooltip.fields = [this.options.xField, this.options.yField, this.options.groupField];\r\n            }\r\n        }\r\n    };\r\n    return GroupedColumnLayer;\r\n}(BaseColumnLayer));\r\nexport default GroupedColumnLayer;\r\nregisterPlotType('groupedColumn', GroupedColumnLayer);\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\grouped-column\\layer.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\grouped-column\\layer.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAClC,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AACrC,OAAO,EAAE,gBAAgB,EAAE,MAAM,mBAAmB,CAAC;AACrD,OAAO,eAAe,MAAM,iBAAiB,CAAC;AAC9C,OAAO,SAAS,CAAC;AACjB,IAAI,kBAAkB,GAAiB,CAAC,UAAU,MAAM;IACpD,SAAS,CAAC,kBAAkB,EAAE,MAAM,CAAC,CAAC;IACtC,SAAS,kBAAkB;QACvB,IAAI,KAAK,GAAG,MAAM,KAAK,IAAI,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,IAAI,CAAC;QACrE,KAAK,CAAC,IAAI,GAAG,eAAe,CAAC;QAC7B,OAAO,KAAK,CAAC;IACjB,CAAC;IACD,kBAAkB,CAAC,iBAAiB,GAAG;QACnC,OAAO,OAAO,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YACpD,KAAK,EAAE;gBACH,KAAK,EAAE;oBACH,OAAO,EAAE,IAAI;iBAChB;aACJ;SACJ,CAAC,CAAC;IACP,CAAC,CAAC;IACF,kBAAkB,CAAC,SAAS,CAAC,kBAAkB,GAAG;QAC9C,OAAO,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;IAC7D,CAAC,CAAC;IACF,kBAAkB,CAAC,SAAS,CAAC,aAAa,GAAG;QACzC,IAAI,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;QACzC,IAAI,UAAU,EAAE;YACZ,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;SAChD;IACL,CAAC,CAAC;IACF,kBAAkB,CAAC,SAAS,CAAC,WAAW,GAAG;QACvC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5C,CAAC,CAAC;IACF,kBAAkB,CAAC,SAAS,CAAC,YAAY,GAAG,UAAU,MAAM;QACxD,MAAM,CAAC,MAAM,GAAG;YACZ;gBACI,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,GAAG;aACnB;SACJ,CAAC;IACN,CAAC,CAAC;IACF,kBAAkB,CAAC,SAAS,CAAC,eAAe,GAAG;QAC3C,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC;QACzB,IAAI,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QAC1C,IAAI,cAAc,CAAC,MAAM,EAAE;YACvB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,cAAc,CAAC,MAAM,CAAC;SACtD;QACD,IAAI,cAAc,CAAC,SAAS,EAAE;YAC1B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,GAAG,cAAc,CAAC,SAAS,CAAC;YACxD,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;gBACxB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;aACpG;SACJ;IACL,CAAC,CAAC;IACF,OAAO,kBAAkB,CAAC;AAC9B,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;AACpB,eAAe,kBAAkB,CAAC;AAClC,gBAAgB,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC","sourcesContent":["import { __extends } from \"tslib\";\nimport { deepMix } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport BaseColumnLayer from '../column/layer';\nimport './theme';\nvar GroupedColumnLayer = /** @class */ (function (_super) {\n    __extends(GroupedColumnLayer, _super);\n    function GroupedColumnLayer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'groupedColumn';\n        return _this;\n    }\n    GroupedColumnLayer.getDefaultOptions = function () {\n        return deepMix({}, _super.getDefaultOptions.call(this), {\n            yAxis: {\n                title: {\n                    visible: true,\n                },\n            },\n        });\n    };\n    GroupedColumnLayer.prototype.getResponsiveTheme = function () {\n        return this.themeController.getResponsiveTheme('column');\n    };\n    GroupedColumnLayer.prototype.getColorScale = function () {\n        var groupField = this.options.groupField;\n        if (groupField) {\n            return this.view.getScaleByField(groupField);\n        }\n    };\n    GroupedColumnLayer.prototype.addGeometry = function () {\n        _super.prototype.addGeometry.call(this);\n    };\n    GroupedColumnLayer.prototype.adjustColumn = function (column) {\n        column.adjust = [\n            {\n                type: 'dodge',\n                marginRatio: 0.1,\n            },\n        ];\n    };\n    GroupedColumnLayer.prototype.geometryTooltip = function () {\n        this.column.tooltip = {};\n        var tooltipOptions = this.options.tooltip;\n        if (tooltipOptions.fields) {\n            this.column.tooltip.fields = tooltipOptions.fields;\n        }\n        if (tooltipOptions.formatter) {\n            this.column.tooltip.callback = tooltipOptions.formatter;\n            if (!tooltipOptions.fields) {\n                this.column.tooltip.fields = [this.options.xField, this.options.yField, this.options.groupField];\n            }\n        }\n    };\n    return GroupedColumnLayer;\n}(BaseColumnLayer));\nexport default GroupedColumnLayer;\nregisterPlotType('groupedColumn', GroupedColumnLayer);\n//# sourceMappingURL=layer.js.map"]}]}