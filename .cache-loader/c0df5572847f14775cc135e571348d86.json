{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\connector\\geo-graticule.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\connector\\geo-graticule.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["var geoGraticule = require('d3-geo').geoGraticule;\r\nvar registerConnector = require('../data-set').registerConnector;\r\nfunction connector(options, dataView) {\r\n    dataView.dataType = 'geo-graticule';\r\n    var data = geoGraticule().lines();\r\n    data.map(function (row, index) {\r\n        row.index = \"\" + index;\r\n        return row;\r\n    });\r\n    dataView.rows = data;\r\n    return data;\r\n}\r\nregisterConnector('geo-graticule', connector);\r\nmodule.exports = connector;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\connector\\geo-graticule.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\connector\\geo-graticule.js"],"names":[],"mappings":"AACE,IAAA,6CAAY,CACQ;AAEpB,IAAA,4DAAiB,CACQ;AAE3B,SAAS,SAAS,CAAC,OAAO,EAAE,QAAQ;IAClC,QAAQ,CAAC,QAAQ,GAAG,eAAe,CAAC;IACpC,IAAM,IAAI,GAAG,YAAY,EAAE,CAAC,KAAK,EAAE,CAAC;IAEpC,IAAI,CAAC,GAAG,CAAC,UAAC,GAAG,EAAE,KAAK;QAClB,GAAG,CAAC,KAAK,GAAG,KAAG,KAAO,CAAC;QACvB,OAAO,GAAG,CAAC;IACb,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,OAAO,IAAI,CAAC;AACd,CAAC;AAED,iBAAiB,CAAC,eAAe,EAAE,SAAS,CAAC,CAAC;AAE9C,MAAM,CAAC,OAAO,GAAG,SAAS,CAAC","sourcesContent":["const {\n  geoGraticule\n} = require('d3-geo');\nconst {\n  registerConnector\n} = require('../data-set');\n\nfunction connector(options, dataView) {\n  dataView.dataType = 'geo-graticule';\n  const data = geoGraticule().lines();\n\n  data.map((row, index) => {\n    row.index = `${index}`;\n    return row;\n  });\n\n  dataView.rows = data;\n  return data;\n}\n\nregisterConnector('geo-graticule', connector);\n\nmodule.exports = connector;\n"]}]}