{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/remark-parse/lib/tokenize/heading-setext.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/remark-parse/lib/tokenize/heading-setext.js","mtime":1516191690000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["'use strict';\nmodule.exports = setextHeading;\nvar C_NEWLINE = '\\n';\nvar C_TAB = '\\t';\nvar C_SPACE = ' ';\nvar C_EQUALS = '=';\nvar C_DASH = '-';\nvar MAX_HEADING_INDENT = 3;\nvar SETEXT_MARKERS = {};\nSETEXT_MARKERS[C_EQUALS] = 1;\nSETEXT_MARKERS[C_DASH] = 2;\nfunction setextHeading(eat, value, silent) {\n    var self = this;\n    var now = eat.now();\n    var length = value.length;\n    var index = -1;\n    var subvalue = '';\n    var content;\n    var queue;\n    var character;\n    var marker;\n    var depth;\n    while (++index < length) {\n        character = value.charAt(index);\n        if (character !== C_SPACE || index >= MAX_HEADING_INDENT) {\n            index--;\n            break;\n        }\n        subvalue += character;\n    }\n    content = '';\n    queue = '';\n    while (++index < length) {\n        character = value.charAt(index);\n        if (character === C_NEWLINE) {\n            index--;\n            break;\n        }\n        if (character === C_SPACE || character === C_TAB) {\n            queue += character;\n        }\n        else {\n            content += queue + character;\n            queue = '';\n        }\n    }\n    now.column += subvalue.length;\n    now.offset += subvalue.length;\n    subvalue += content + queue;\n    character = value.charAt(++index);\n    marker = value.charAt(++index);\n    if (character !== C_NEWLINE || !SETEXT_MARKERS[marker]) {\n        return;\n    }\n    subvalue += character;\n    queue = marker;\n    depth = SETEXT_MARKERS[marker];\n    while (++index < length) {\n        character = value.charAt(index);\n        if (character !== marker) {\n            if (character !== C_NEWLINE) {\n                return;\n            }\n            index--;\n            break;\n        }\n        queue += character;\n    }\n    if (silent) {\n        return true;\n    }\n    return eat(subvalue + queue)({\n        type: 'heading',\n        depth: depth,\n        children: self.tokenizeInline(content, now)\n    });\n}\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/remark-parse/lib/tokenize/heading-setext.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/remark-parse/lib/tokenize/heading-setext.js"],"names":[],"mappings":"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","sourcesContent":["'use strict';\n\nmodule.exports = setextHeading;\n\nvar C_NEWLINE = '\\n';\nvar C_TAB = '\\t';\nvar C_SPACE = ' ';\nvar C_EQUALS = '=';\nvar C_DASH = '-';\n\nvar MAX_HEADING_INDENT = 3;\n\n/* Map of characters which can be used to mark setext\n * headers, mapping to their corresponding depth. */\nvar SETEXT_MARKERS = {};\n\nSETEXT_MARKERS[C_EQUALS] = 1;\nSETEXT_MARKERS[C_DASH] = 2;\n\nfunction setextHeading(eat, value, silent) {\n  var self = this;\n  var now = eat.now();\n  var length = value.length;\n  var index = -1;\n  var subvalue = '';\n  var content;\n  var queue;\n  var character;\n  var marker;\n  var depth;\n\n  /* Eat initial indentation. */\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (character !== C_SPACE || index >= MAX_HEADING_INDENT) {\n      index--;\n      break;\n    }\n\n    subvalue += character;\n  }\n\n  /* Eat content. */\n  content = '';\n  queue = '';\n\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (character === C_NEWLINE) {\n      index--;\n      break;\n    }\n\n    if (character === C_SPACE || character === C_TAB) {\n      queue += character;\n    } else {\n      content += queue + character;\n      queue = '';\n    }\n  }\n\n  now.column += subvalue.length;\n  now.offset += subvalue.length;\n  subvalue += content + queue;\n\n  /* Ensure the content is followed by a newline and a\n   * valid marker. */\n  character = value.charAt(++index);\n  marker = value.charAt(++index);\n\n  if (character !== C_NEWLINE || !SETEXT_MARKERS[marker]) {\n    return;\n  }\n\n  subvalue += character;\n\n  /* Eat Setext-line. */\n  queue = marker;\n  depth = SETEXT_MARKERS[marker];\n\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (character !== marker) {\n      if (character !== C_NEWLINE) {\n        return;\n      }\n\n      index--;\n      break;\n    }\n\n    queue += character;\n  }\n\n  if (silent) {\n    return true;\n  }\n\n  return eat(subvalue + queue)({\n    type: 'heading',\n    depth: depth,\n    children: self.tokenizeInline(content, now)\n  });\n}\n"]}]}