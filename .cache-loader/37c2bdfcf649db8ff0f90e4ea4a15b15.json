{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-canvas\\esm\\shape\\ellipse.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-canvas\\esm\\shape\\ellipse.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __assign, __extends } from \"tslib\";\r\nimport ShapeBase from './base';\r\nfunction ellipseDistance(squareX, squareY, rx, ry) {\r\n    return squareX / (rx * rx) + squareY / (ry * ry);\r\n}\r\nvar Ellipse = (function (_super) {\r\n    __extends(Ellipse, _super);\r\n    function Ellipse() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Ellipse.prototype.getDefaultAttrs = function () {\r\n        var attrs = _super.prototype.getDefaultAttrs.call(this);\r\n        return __assign(__assign({}, attrs), { x: 0, y: 0, rx: 0, ry: 0 });\r\n    };\r\n    Ellipse.prototype.isInStrokeOrPath = function (x, y, isStroke, isFill, lineWidth) {\r\n        var attrs = this.attr();\r\n        var halfLineWith = lineWidth / 2;\r\n        var cx = attrs.x;\r\n        var cy = attrs.y;\r\n        var rx = attrs.rx, ry = attrs.ry;\r\n        var squareX = (x - cx) * (x - cx);\r\n        var squareY = (y - cy) * (y - cy);\r\n        if (isFill && isStroke) {\r\n            return ellipseDistance(squareX, squareY, rx + halfLineWith, ry + halfLineWith) <= 1;\r\n        }\r\n        if (isFill) {\r\n            return ellipseDistance(squareX, squareY, rx, ry) <= 1;\r\n        }\r\n        if (isStroke) {\r\n            return (ellipseDistance(squareX, squareY, rx - halfLineWith, ry - halfLineWith) >= 1 &&\r\n                ellipseDistance(squareX, squareY, rx + halfLineWith, ry + halfLineWith) <= 1);\r\n        }\r\n        return false;\r\n    };\r\n    Ellipse.prototype.createPath = function (context) {\r\n        var attrs = this.attr();\r\n        var cx = attrs.x;\r\n        var cy = attrs.y;\r\n        var rx = attrs.rx;\r\n        var ry = attrs.ry;\r\n        context.beginPath();\r\n        if (context.ellipse) {\r\n            context.ellipse(cx, cy, rx, ry, 0, 0, Math.PI * 2, false);\r\n        }\r\n        else {\r\n            var r = rx > ry ? rx : ry;\r\n            var scaleX = rx > ry ? 1 : rx / ry;\r\n            var scaleY = rx > ry ? ry / rx : 1;\r\n            context.save();\r\n            context.translate(cx, cy);\r\n            context.scale(scaleX, scaleY);\r\n            context.arc(0, 0, r, 0, Math.PI * 2);\r\n            context.restore();\r\n            context.closePath();\r\n        }\r\n    };\r\n    return Ellipse;\r\n}(ShapeBase));\r\nexport default Ellipse;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-canvas\\esm\\shape\\ellipse.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-canvas\\esm\\shape\\ellipse.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * @fileoverview 椭圆\n * @author dxq613@gmail.com\n */\nimport { __assign, __extends } from \"tslib\";\nimport ShapeBase from './base';\n// 暂时不需要\n// import EllipseUtil from '@antv/g-math/lib/ellipse';\n// 根据椭圆公式计算 x*x/rx*rx + y*y/ry*ry;\nfunction ellipseDistance(squareX, squareY, rx, ry) {\n    return squareX / (rx * rx) + squareY / (ry * ry);\n}\nvar Ellipse = /** @class */ (function (_super) {\n    __extends(Ellipse, _super);\n    function Ellipse() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Ellipse.prototype.getDefaultAttrs = function () {\n        var attrs = _super.prototype.getDefaultAttrs.call(this);\n        return __assign(__assign({}, attrs), { x: 0, y: 0, rx: 0, ry: 0 });\n    };\n    Ellipse.prototype.isInStrokeOrPath = function (x, y, isStroke, isFill, lineWidth) {\n        var attrs = this.attr();\n        var halfLineWith = lineWidth / 2;\n        var cx = attrs.x;\n        var cy = attrs.y;\n        var rx = attrs.rx, ry = attrs.ry;\n        var squareX = (x - cx) * (x - cx);\n        var squareY = (y - cy) * (y - cy);\n        // 使用椭圆的公式： x*x/rx*rx + y*y/ry*ry = 1;\n        if (isFill && isStroke) {\n            return ellipseDistance(squareX, squareY, rx + halfLineWith, ry + halfLineWith) <= 1;\n        }\n        if (isFill) {\n            return ellipseDistance(squareX, squareY, rx, ry) <= 1;\n        }\n        if (isStroke) {\n            return (ellipseDistance(squareX, squareY, rx - halfLineWith, ry - halfLineWith) >= 1 &&\n                ellipseDistance(squareX, squareY, rx + halfLineWith, ry + halfLineWith) <= 1);\n        }\n        return false;\n    };\n    Ellipse.prototype.createPath = function (context) {\n        var attrs = this.attr();\n        var cx = attrs.x;\n        var cy = attrs.y;\n        var rx = attrs.rx;\n        var ry = attrs.ry;\n        context.beginPath();\n        // 兼容逻辑\n        if (context.ellipse) {\n            context.ellipse(cx, cy, rx, ry, 0, 0, Math.PI * 2, false);\n        }\n        else {\n            // 如果不支持，则使用圆来绘制，进行变形\n            var r = rx > ry ? rx : ry;\n            var scaleX = rx > ry ? 1 : rx / ry;\n            var scaleY = rx > ry ? ry / rx : 1;\n            context.save();\n            context.translate(cx, cy);\n            context.scale(scaleX, scaleY);\n            context.arc(0, 0, r, 0, Math.PI * 2);\n            context.restore();\n            context.closePath();\n        }\n    };\n    return Ellipse;\n}(ShapeBase));\nexport default Ellipse;\n//# sourceMappingURL=ellipse.js.map"]}]}