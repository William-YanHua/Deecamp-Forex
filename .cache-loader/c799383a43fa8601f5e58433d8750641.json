{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\liquid\\layer.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\liquid\\layer.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\r\nimport { deepMix, isFunction, get, forIn, isNumber } from '@antv/util';\r\nimport BBox from '../../util/bbox';\r\nimport { registerPlotType } from '../../base/global';\r\nimport ViewLayer from '../../base/view-layer';\r\nimport { getGeom } from '../../geoms/factory';\r\nimport { extractScale } from '../../util/scale';\r\nimport { rgb2arr } from '../../util/color';\r\nimport * as EventParser from './event';\r\nimport './geometry/shape/liquid';\r\nimport './animation/liquid-move-in';\r\nvar G2_GEOM_MAP = {\r\n    column: 'interval',\r\n};\r\nvar PLOT_GEOM_MAP = {\r\n    interval: 'liquid',\r\n};\r\nvar LiquidLayer = (function (_super) {\r\n    __extends(LiquidLayer, _super);\r\n    function LiquidLayer() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.type = 'liquid';\r\n        _this.shouldFadeInAnnotation = true;\r\n        return _this;\r\n    }\r\n    LiquidLayer.getDefaultOptions = function () {\r\n        var cfg = {\r\n            padding: [0, 0, 0, 0],\r\n            animation: {\r\n                factor: 0.4,\r\n                easing: 'easeExpOut',\r\n                duration: 800,\r\n            },\r\n            liquidStyle: {\r\n                lineWidth: 2,\r\n            },\r\n            color: '#6a99f9',\r\n            interactions: [],\r\n            statistic: {\r\n                visible: true,\r\n            },\r\n        };\r\n        return deepMix({}, _super.getDefaultOptions.call(this), cfg);\r\n    };\r\n    LiquidLayer.prototype.beforeInit = function () {\r\n        var _a = this.options, min = _a.min, max = _a.max, value = _a.value;\r\n        if (!isNumber(min)) {\r\n            throw new Error('The min value of Liquid is required, and the type of min must be Number.');\r\n        }\r\n        if (!isNumber(max)) {\r\n            throw new Error('The max value of Liquid is required, and the type of max must be Number.');\r\n        }\r\n        if (!isNumber(value)) {\r\n            throw new Error('The value of Liquid is required, and the type of value must be Number.');\r\n        }\r\n    };\r\n    LiquidLayer.prototype.init = function () {\r\n        this.options.data = [{}];\r\n        _super.prototype.init.call(this);\r\n    };\r\n    LiquidLayer.prototype.coord = function () {\r\n        return;\r\n    };\r\n    LiquidLayer.prototype.scale = function () {\r\n        var props = this.options;\r\n        var min = props.min, max = props.max;\r\n        var scales = {\r\n            value: {},\r\n        };\r\n        extractScale(scales.value, {\r\n            min: Math.min(min, max),\r\n            max: Math.max(min, max),\r\n        });\r\n        this.setConfig('scales', scales);\r\n        _super.prototype.scale.call(this);\r\n    };\r\n    LiquidLayer.prototype.axis = function () {\r\n        this.setConfig('axes', false);\r\n    };\r\n    LiquidLayer.prototype.adjustLiquid = function (liquid) {\r\n        var props = this.options;\r\n        liquid.shape = {\r\n            values: ['liquid-fill-gauge'],\r\n        };\r\n        liquid.tooltip = false;\r\n        var liquidStyle = props.liquidStyle;\r\n        if (isFunction(liquidStyle))\r\n            liquidStyle = liquidStyle();\r\n        if (liquidStyle) {\r\n            liquid.style = liquidStyle;\r\n        }\r\n    };\r\n    LiquidLayer.prototype.addGeometry = function () {\r\n        var liquid = getGeom('interval', 'main', {\r\n            positionFields: [1, 'value'],\r\n            plot: this,\r\n        });\r\n        this.adjustLiquid(liquid);\r\n        var viewRange = this.getViewRange();\r\n        var defaultSize = Math.min(viewRange.width, viewRange.height) * 0.8;\r\n        var liquidSize = this.options.liquidSize ? this.options.liquidSize : defaultSize;\r\n        liquid.size = { values: [liquidSize] };\r\n        this.liquid = liquid;\r\n        this.setConfig('geometry', liquid);\r\n    };\r\n    LiquidLayer.prototype.animation = function () {\r\n        var props = this.options;\r\n        if (props.animation === false) {\r\n            this.liquid.animate = false;\r\n        }\r\n        else {\r\n            var factor = get(props, 'animation.factor');\r\n            var easing = get(props, 'animation.easing');\r\n            var duration = get(props, 'animation.duration');\r\n            this.liquid.animate = {\r\n                appear: {\r\n                    animation: 'liquidMoveIn',\r\n                    factor: factor,\r\n                    easing: easing,\r\n                    duration: duration,\r\n                },\r\n            };\r\n        }\r\n    };\r\n    LiquidLayer.prototype.geometryParser = function (dim, type) {\r\n        if (dim === 'g2') {\r\n            return G2_GEOM_MAP[type];\r\n        }\r\n        return PLOT_GEOM_MAP[type];\r\n    };\r\n    LiquidLayer.prototype.annotation = function () {\r\n        var annotationConfigs = [];\r\n        var statisticConfig = this.extractStatistic();\r\n        annotationConfigs.push(statisticConfig);\r\n        this.setConfig('annotations', annotationConfigs);\r\n    };\r\n    LiquidLayer.prototype.extractStatistic = function () {\r\n        var props = this.options;\r\n        var statistic = props.statistic || {};\r\n        var content;\r\n        if (isFunction(statistic.formatter)) {\r\n            content = statistic.formatter(props.value);\r\n        }\r\n        else {\r\n            content = \"\" + props.value;\r\n        }\r\n        var fontSize;\r\n        var shadowBlur;\r\n        if (content) {\r\n            var contentWidth = Math.min(this.width, this.height);\r\n            fontSize = (contentWidth / content.length) * 0.5;\r\n            shadowBlur = Math.max(1, Math.ceil(0.025 * fontSize));\r\n        }\r\n        var opacity;\r\n        if (statistic.visible === false) {\r\n            return;\r\n        }\r\n        var statisticConfig = deepMix({\r\n            style: {\r\n                fontSize: fontSize,\r\n                shadowBlur: shadowBlur,\r\n            },\r\n        }, statistic, {\r\n            top: true,\r\n            content: content,\r\n            type: 'text',\r\n            position: ['50%', '50%'],\r\n            style: {\r\n                opacity: opacity,\r\n                fill: 'transparent',\r\n                shadowColor: 'transparent',\r\n                textAlign: 'center',\r\n            },\r\n        });\r\n        delete statisticConfig.visible;\r\n        delete statisticConfig.formatter;\r\n        delete statisticConfig.adjustColor;\r\n        return statisticConfig;\r\n    };\r\n    LiquidLayer.prototype.parseEvents = function () {\r\n        _super.prototype.parseEvents.call(this, EventParser);\r\n    };\r\n    LiquidLayer.prototype.afterRender = function () {\r\n        var _a;\r\n        if ((_a = this.options.statistic) === null || _a === void 0 ? void 0 : _a.visible) {\r\n            this.fadeInAnnotation();\r\n        }\r\n        var options = this.options;\r\n        var padding = options.padding ? options.padding : this.config.theme.padding;\r\n        if (options.defaultState && padding !== 'auto') {\r\n            this.stateController.defaultStates(options.defaultState);\r\n        }\r\n        if (padding === 'auto') {\r\n            this.paddingController.processAutoPadding();\r\n        }\r\n    };\r\n    LiquidLayer.prototype.processData = function () {\r\n        var props = this.options;\r\n        return [{ _: '_', value: props.value }];\r\n    };\r\n    LiquidLayer.prototype.changeValue = function (value) {\r\n        var props = this.options;\r\n        props.value = value;\r\n        this.changeData([]);\r\n    };\r\n    LiquidLayer.prototype.fadeInAnnotation = function () {\r\n        var _this = this;\r\n        var props = this.options;\r\n        var textShape = this.view.foregroundGroup.findAll(function (el) {\r\n            return el.get('name') === 'annotation-text';\r\n        })[0];\r\n        var animation = props.animation || {};\r\n        var colorStyle = this.calcAnnotationColorStyle();\r\n        if (this.shouldFadeInAnnotation) {\r\n            textShape.animate(colorStyle, animation.duration * Math.min(1, 1.5 * animation.factor), null, function () {\r\n                _this.shouldFadeInAnnotation = false;\r\n            });\r\n        }\r\n        else {\r\n            forIn(colorStyle, function (v, k) { return textShape.attr(k, v); });\r\n        }\r\n    };\r\n    LiquidLayer.prototype.calcAnnotationColorStyle = function () {\r\n        var props = this.options;\r\n        var lightColorStyle = { fill: '#f6f6f6', shadowColor: 'black' };\r\n        var darkColorStyle = { fill: '#303030', shadowColor: 'white' };\r\n        if (get(props, 'statistic.adjustColor') === false) {\r\n            return {\r\n                fill: get(props, 'statistic.style.fill', darkColorStyle.fill),\r\n                shadowColor: get(props, 'statistic.style.shadowColor', darkColorStyle.shadowColor),\r\n            };\r\n        }\r\n        var min = props.min, max = props.max;\r\n        var value = props.value;\r\n        min = Math.min(min, max);\r\n        max = Math.max(min, max);\r\n        var percent;\r\n        if (min == max) {\r\n            percent = 1;\r\n        }\r\n        else {\r\n            percent = (value - min) / (max - min);\r\n        }\r\n        if (percent > 0.55) {\r\n            var waveColor = this.options.color;\r\n            var waveOpacity = 0.8;\r\n            var rgb = rgb2arr(waveColor);\r\n            var gray = Math.round(rgb[0] * 0.299 + rgb[1] * 0.587 + rgb[2] * 0.114) / waveOpacity;\r\n            return gray < 156 ? lightColorStyle : darkColorStyle;\r\n        }\r\n        return darkColorStyle;\r\n    };\r\n    LiquidLayer.prototype.updateConfig = function (cfg) {\r\n        _super.prototype.updateConfig.call(this, cfg);\r\n        this.shouldFadeInAnnotation = true;\r\n    };\r\n    LiquidLayer.prototype.getViewRange = function () {\r\n        var viewRange = _super.prototype.getViewRange.call(this);\r\n        var liquidStyle = this.options.liquidStyle;\r\n        var strokeWidth = liquidStyle.lineWidth ? liquidStyle.lineWidth : 2;\r\n        var minX = viewRange.minX, minY = viewRange.minY, width = viewRange.width, height = viewRange.height;\r\n        var size = Math.min(width, height) - strokeWidth * 2;\r\n        var cx = minX + width / 2;\r\n        var cy = minY + height / 2;\r\n        var x = cx - size / 2;\r\n        var y = cy - size / 2;\r\n        return new BBox(x, y, size, size);\r\n    };\r\n    return LiquidLayer;\r\n}(ViewLayer));\r\nexport default LiquidLayer;\r\nregisterPlotType('liquid', LiquidLayer);\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\liquid\\layer.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\liquid\\layer.js"],"names":[],"mappings":"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","sourcesContent":["import { __extends } from \"tslib\";\nimport { deepMix, isFunction, get, forIn, isNumber } from '@antv/util';\nimport BBox from '../../util/bbox';\nimport { registerPlotType } from '../../base/global';\nimport ViewLayer from '../../base/view-layer';\nimport { getGeom } from '../../geoms/factory';\nimport { extractScale } from '../../util/scale';\nimport { rgb2arr } from '../../util/color';\nimport * as EventParser from './event';\nimport './geometry/shape/liquid';\nimport './animation/liquid-move-in';\nvar G2_GEOM_MAP = {\n    column: 'interval',\n};\nvar PLOT_GEOM_MAP = {\n    interval: 'liquid',\n};\nvar LiquidLayer = /** @class */ (function (_super) {\n    __extends(LiquidLayer, _super);\n    function LiquidLayer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'liquid';\n        _this.shouldFadeInAnnotation = true;\n        return _this;\n    }\n    LiquidLayer.getDefaultOptions = function () {\n        var cfg = {\n            padding: [0, 0, 0, 0],\n            animation: {\n                factor: 0.4,\n                easing: 'easeExpOut',\n                duration: 800,\n            },\n            liquidStyle: {\n                lineWidth: 2,\n            },\n            color: '#6a99f9',\n            interactions: [],\n            statistic: {\n                visible: true,\n            },\n        };\n        return deepMix({}, _super.getDefaultOptions.call(this), cfg);\n    };\n    LiquidLayer.prototype.beforeInit = function () {\n        var _a = this.options, min = _a.min, max = _a.max, value = _a.value;\n        if (!isNumber(min)) {\n            throw new Error('The min value of Liquid is required, and the type of min must be Number.');\n        }\n        if (!isNumber(max)) {\n            throw new Error('The max value of Liquid is required, and the type of max must be Number.');\n        }\n        if (!isNumber(value)) {\n            throw new Error('The value of Liquid is required, and the type of value must be Number.');\n        }\n    };\n    LiquidLayer.prototype.init = function () {\n        this.options.data = [{}];\n        _super.prototype.init.call(this);\n    };\n    LiquidLayer.prototype.coord = function () {\n        return;\n    };\n    LiquidLayer.prototype.scale = function () {\n        var props = this.options;\n        var min = props.min, max = props.max;\n        var scales = {\n            value: {},\n        };\n        extractScale(scales.value, {\n            min: Math.min(min, max),\n            max: Math.max(min, max),\n        });\n        // @ts-ignore\n        this.setConfig('scales', scales);\n        _super.prototype.scale.call(this);\n    };\n    LiquidLayer.prototype.axis = function () {\n        this.setConfig('axes', false);\n    };\n    LiquidLayer.prototype.adjustLiquid = function (liquid) {\n        var props = this.options;\n        liquid.shape = {\n            values: ['liquid-fill-gauge'],\n        };\n        liquid.tooltip = false;\n        var liquidStyle = props.liquidStyle;\n        if (isFunction(liquidStyle))\n            liquidStyle = liquidStyle();\n        if (liquidStyle) {\n            liquid.style = liquidStyle;\n        }\n    };\n    LiquidLayer.prototype.addGeometry = function () {\n        var liquid = getGeom('interval', 'main', {\n            positionFields: [1, 'value'],\n            plot: this,\n        });\n        this.adjustLiquid(liquid);\n        var viewRange = this.getViewRange();\n        var defaultSize = Math.min(viewRange.width, viewRange.height) * 0.8;\n        var liquidSize = this.options.liquidSize ? this.options.liquidSize : defaultSize;\n        liquid.size = { values: [liquidSize] };\n        this.liquid = liquid;\n        this.setConfig('geometry', liquid);\n    };\n    LiquidLayer.prototype.animation = function () {\n        var props = this.options;\n        if (props.animation === false) {\n            /** 关闭动画 */\n            this.liquid.animate = false;\n        }\n        else {\n            var factor = get(props, 'animation.factor');\n            var easing = get(props, 'animation.easing');\n            var duration = get(props, 'animation.duration');\n            this.liquid.animate = {\n                appear: {\n                    animation: 'liquidMoveIn',\n                    factor: factor,\n                    easing: easing,\n                    duration: duration,\n                },\n            };\n        }\n    };\n    LiquidLayer.prototype.geometryParser = function (dim, type) {\n        if (dim === 'g2') {\n            return G2_GEOM_MAP[type];\n        }\n        return PLOT_GEOM_MAP[type];\n    };\n    LiquidLayer.prototype.annotation = function () {\n        var annotationConfigs = [];\n        var statisticConfig = this.extractStatistic();\n        annotationConfigs.push(statisticConfig);\n        this.setConfig('annotations', annotationConfigs);\n    };\n    LiquidLayer.prototype.extractStatistic = function () {\n        var props = this.options;\n        var statistic = props.statistic || {};\n        var content;\n        if (isFunction(statistic.formatter)) {\n            content = statistic.formatter(props.value);\n        }\n        else {\n            content = \"\" + props.value;\n        }\n        var fontSize;\n        var shadowBlur;\n        if (content) {\n            var contentWidth = Math.min(this.width, this.height);\n            fontSize = (contentWidth / content.length) * 0.5;\n            shadowBlur = Math.max(1, Math.ceil(0.025 * fontSize));\n        }\n        var opacity;\n        if (statistic.visible === false) {\n            return;\n        }\n        var statisticConfig = deepMix({\n            style: {\n                fontSize: fontSize,\n                shadowBlur: shadowBlur,\n            },\n        }, statistic, {\n            top: true,\n            content: content,\n            type: 'text',\n            position: ['50%', '50%'],\n            style: {\n                opacity: opacity,\n                fill: 'transparent',\n                shadowColor: 'transparent',\n                textAlign: 'center',\n            },\n        });\n        delete statisticConfig.visible;\n        delete statisticConfig.formatter;\n        delete statisticConfig.adjustColor;\n        return statisticConfig;\n    };\n    LiquidLayer.prototype.parseEvents = function () {\n        _super.prototype.parseEvents.call(this, EventParser);\n    };\n    LiquidLayer.prototype.afterRender = function () {\n        var _a;\n        if ((_a = this.options.statistic) === null || _a === void 0 ? void 0 : _a.visible) {\n            this.fadeInAnnotation();\n        }\n        var options = this.options;\n        var padding = options.padding ? options.padding : this.config.theme.padding;\n        /** defaultState */\n        if (options.defaultState && padding !== 'auto') {\n            this.stateController.defaultStates(options.defaultState);\n        }\n        /** autopadding */\n        if (padding === 'auto') {\n            this.paddingController.processAutoPadding();\n        }\n    };\n    LiquidLayer.prototype.processData = function () {\n        var props = this.options;\n        return [{ _: '_', value: props.value }];\n    };\n    LiquidLayer.prototype.changeValue = function (value) {\n        var props = this.options;\n        props.value = value;\n        this.changeData([]);\n    };\n    LiquidLayer.prototype.fadeInAnnotation = function () {\n        var _this = this;\n        var props = this.options;\n        var textShape = this.view.foregroundGroup.findAll(function (el) {\n            return el.get('name') === 'annotation-text';\n        })[0];\n        var animation = props.animation || {};\n        var colorStyle = this.calcAnnotationColorStyle();\n        if (this.shouldFadeInAnnotation) {\n            textShape.animate(colorStyle, animation.duration * Math.min(1, 1.5 * animation.factor), null, function () {\n                _this.shouldFadeInAnnotation = false;\n            });\n        }\n        else {\n            forIn(colorStyle, function (v, k) { return textShape.attr(k, v); });\n        }\n    };\n    LiquidLayer.prototype.calcAnnotationColorStyle = function () {\n        var props = this.options;\n        var lightColorStyle = { fill: '#f6f6f6', shadowColor: 'black' };\n        var darkColorStyle = { fill: '#303030', shadowColor: 'white' };\n        if (get(props, 'statistic.adjustColor') === false) {\n            return {\n                fill: get(props, 'statistic.style.fill', darkColorStyle.fill),\n                shadowColor: get(props, 'statistic.style.shadowColor', darkColorStyle.shadowColor),\n            };\n        }\n        var min = props.min, max = props.max;\n        var value = props.value;\n        min = Math.min(min, max);\n        max = Math.max(min, max);\n        var percent;\n        if (min == max) {\n            percent = 1;\n        }\n        else {\n            percent = (value - min) / (max - min);\n        }\n        if (percent > 0.55) {\n            var waveColor = this.options.color;\n            var waveOpacity = 0.8;\n            var rgb = rgb2arr(waveColor);\n            var gray = Math.round(rgb[0] * 0.299 + rgb[1] * 0.587 + rgb[2] * 0.114) / waveOpacity;\n            return gray < 156 ? lightColorStyle : darkColorStyle;\n        }\n        return darkColorStyle;\n    };\n    LiquidLayer.prototype.updateConfig = function (cfg) {\n        _super.prototype.updateConfig.call(this, cfg);\n        this.shouldFadeInAnnotation = true;\n    };\n    LiquidLayer.prototype.getViewRange = function () {\n        var viewRange = _super.prototype.getViewRange.call(this);\n        var liquidStyle = this.options.liquidStyle;\n        var strokeWidth = liquidStyle.lineWidth ? liquidStyle.lineWidth : 2;\n        var minX = viewRange.minX, minY = viewRange.minY, width = viewRange.width, height = viewRange.height;\n        var size = Math.min(width, height) - strokeWidth * 2;\n        var cx = minX + width / 2;\n        var cy = minY + height / 2;\n        var x = cx - size / 2;\n        var y = cy - size / 2;\n        return new BBox(x, y, size, size);\n    };\n    return LiquidLayer;\n}(ViewLayer));\nexport default LiquidLayer;\nregisterPlotType('liquid', LiquidLayer);\n//# sourceMappingURL=layer.js.map"]}]}