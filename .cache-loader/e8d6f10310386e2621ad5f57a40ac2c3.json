{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\lodash\\_toSource.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\lodash\\_toSource.js","mtime":1517704209000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["var funcProto = Function.prototype;\r\nvar funcToString = funcProto.toString;\r\nfunction toSource(func) {\r\n    if (func != null) {\r\n        try {\r\n            return funcToString.call(func);\r\n        }\r\n        catch (e) { }\r\n        try {\r\n            return (func + '');\r\n        }\r\n        catch (e) { }\r\n    }\r\n    return '';\r\n}\r\nmodule.exports = toSource;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\lodash\\_toSource.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\lodash\\_toSource.js"],"names":[],"mappings":"AACA,IAAI,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;AAGnC,IAAI,YAAY,GAAG,SAAS,CAAC,QAAQ,CAAC;AAStC,SAAS,QAAQ,CAAC,IAAI;IACpB,IAAI,IAAI,IAAI,IAAI,EAAE;QAChB,IAAI;YACF,OAAO,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAChC;QAAC,OAAO,CAAC,EAAE,GAAE;QACd,IAAI;YACF,OAAO,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;SACpB;QAAC,OAAO,CAAC,EAAE,GAAE;KACf;IACD,OAAO,EAAE,CAAC;AACZ,CAAC;AAED,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC","sourcesContent":["/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n"]}]}