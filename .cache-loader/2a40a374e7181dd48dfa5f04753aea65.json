{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\graphlib\\lib\\alg\\tarjan.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\graphlib\\lib\\alg\\tarjan.js","mtime":1513986947000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["var _ = require(\"../lodash\");\r\nmodule.exports = tarjan;\r\nfunction tarjan(g) {\r\n    var index = 0, stack = [], visited = {}, results = [];\r\n    function dfs(v) {\r\n        var entry = visited[v] = {\r\n            onStack: true,\r\n            lowlink: index,\r\n            index: index++\r\n        };\r\n        stack.push(v);\r\n        g.successors(v).forEach(function (w) {\r\n            if (!_.has(visited, w)) {\r\n                dfs(w);\r\n                entry.lowlink = Math.min(entry.lowlink, visited[w].lowlink);\r\n            }\r\n            else if (visited[w].onStack) {\r\n                entry.lowlink = Math.min(entry.lowlink, visited[w].index);\r\n            }\r\n        });\r\n        if (entry.lowlink === entry.index) {\r\n            var cmpt = [], w;\r\n            do {\r\n                w = stack.pop();\r\n                visited[w].onStack = false;\r\n                cmpt.push(w);\r\n            } while (v !== w);\r\n            results.push(cmpt);\r\n        }\r\n    }\r\n    g.nodes().forEach(function (v) {\r\n        if (!_.has(visited, v)) {\r\n            dfs(v);\r\n        }\r\n    });\r\n    return results;\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\graphlib\\lib\\alg\\tarjan.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\graphlib\\lib\\alg\\tarjan.js"],"names":[],"mappings":"AAAA,IAAI,CAAC,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AAE7B,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC;AAExB,SAAS,MAAM,CAAC,CAAC;IACf,IAAI,KAAK,GAAG,CAAC,EACT,KAAK,GAAG,EAAE,EACV,OAAO,GAAG,EAAE,EACZ,OAAO,GAAG,EAAE,CAAC;IAEjB,SAAS,GAAG,CAAC,CAAC;QACZ,IAAI,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG;YACvB,OAAO,EAAE,IAAI;YACb,OAAO,EAAE,KAAK;YACd,KAAK,EAAE,KAAK,EAAE;SACf,CAAC;QACF,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAEd,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,UAAS,CAAC;YAChC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE;gBACtB,GAAG,CAAC,CAAC,CAAC,CAAC;gBACP,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;aAC7D;iBAAM,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;gBAC7B,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;aAC3D;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,KAAK,CAAC,OAAO,KAAK,KAAK,CAAC,KAAK,EAAE;YACjC,IAAI,IAAI,GAAG,EAAE,EACT,CAAC,CAAC;YACN,GAAG;gBACD,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;gBAChB,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC;gBAC3B,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACd,QAAQ,CAAC,KAAK,CAAC,EAAE;YAClB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACpB;IACH,CAAC;IAED,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,UAAS,CAAC;QAC1B,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE;YACtB,GAAG,CAAC,CAAC,CAAC,CAAC;SACR;IACH,CAAC,CAAC,CAAC;IAEH,OAAO,OAAO,CAAC;AACjB,CAAC","sourcesContent":["var _ = require(\"../lodash\");\n\nmodule.exports = tarjan;\n\nfunction tarjan(g) {\n  var index = 0,\n      stack = [],\n      visited = {}, // node id -> { onStack, lowlink, index }\n      results = [];\n\n  function dfs(v) {\n    var entry = visited[v] = {\n      onStack: true,\n      lowlink: index,\n      index: index++\n    };\n    stack.push(v);\n\n    g.successors(v).forEach(function(w) {\n      if (!_.has(visited, w)) {\n        dfs(w);\n        entry.lowlink = Math.min(entry.lowlink, visited[w].lowlink);\n      } else if (visited[w].onStack) {\n        entry.lowlink = Math.min(entry.lowlink, visited[w].index);\n      }\n    });\n\n    if (entry.lowlink === entry.index) {\n      var cmpt = [],\n          w;\n      do {\n        w = stack.pop();\n        visited[w].onStack = false;\n        cmpt.push(w);\n      } while (v !== w);\n      results.push(cmpt);\n    }\n  }\n\n  g.nodes().forEach(function(v) {\n    if (!_.has(visited, v)) {\n      dfs(v);\n    }\n  });\n\n  return results;\n}\n"]}]}