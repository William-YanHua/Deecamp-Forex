{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-gesture\\esm\\event\\wheel.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-gesture\\esm\\event\\wheel.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __assign, __extends } from \"tslib\";\r\nimport EE from '@antv/event-emitter';\r\nimport * as d3Ease from 'd3-ease';\r\nimport { GM } from '../gm';\r\nimport { clock } from '../utils/clock';\r\nvar ease = d3Ease.easeCubicIn;\r\nvar TOTAL_MS = 800;\r\nvar SWIPE = 'swipe';\r\nvar PAN = 'pan';\r\nvar WHEEL = 'wheel';\r\nvar Wheel = (function (_super) {\r\n    __extends(Wheel, _super);\r\n    function Wheel(element) {\r\n        var _this = _super.call(this) || this;\r\n        _this.rafMs = 0;\r\n        _this.onPan = function (ev) {\r\n            var deltaX = ev.deltaX, deltaY = ev.deltaY;\r\n            var e = _this.getWrapperEvent(ev, deltaX, deltaY);\r\n            _this.emit(WHEEL, e);\r\n        };\r\n        _this.onSwipe = function (ev) {\r\n            var speedX = ev.speedX, speedY = ev.speedY;\r\n            _this.rafMs = clock.now();\r\n            _this.ms = _this.rafMs;\r\n            if (speedX !== 0 || speedY !== 0) {\r\n                _this.rafInertia(ev);\r\n            }\r\n        };\r\n        _this.element = element;\r\n        _this.gm = new GM(element, { gestures: ['Pan', 'Swipe'] });\r\n        _this.gm.on(SWIPE, _this.onSwipe);\r\n        _this.gm.on(PAN, _this.onPan);\r\n        return _this;\r\n    }\r\n    Wheel.prototype.destroy = function () {\r\n        window.cancelAnimationFrame(this.raf);\r\n        this.gm.destroy();\r\n        this.off();\r\n    };\r\n    Wheel.prototype.rafInertia = function (ev) {\r\n        var _this = this;\r\n        var speedX = ev.speedX, speedY = ev.speedY;\r\n        this.raf = window.requestAnimationFrame(function () {\r\n            var now = clock.now();\r\n            var ratio = (now - _this.ms) / TOTAL_MS;\r\n            if (ratio < 1) {\r\n                ratio = ease(1 - ratio);\r\n                var t = now - _this.rafMs;\r\n                var movedX = speedX * ratio * t;\r\n                var movedY = speedY * ratio * t;\r\n                var e = _this.getWrapperEvent(ev, movedX, movedY);\r\n                _this.emit(WHEEL, e);\r\n                _this.rafMs = now;\r\n                _this.rafInertia(ev);\r\n            }\r\n        });\r\n    };\r\n    Wheel.prototype.getWrapperEvent = function (ev, deltaX, deltaY) {\r\n        return __assign(__assign({}, ev), { deltaX: -deltaX, deltaY: -deltaY });\r\n    };\r\n    return Wheel;\r\n}(EE));\r\nexport { Wheel };\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-gesture\\esm\\event\\wheel.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-gesture\\esm\\event\\wheel.js"],"names":[],"mappings":"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","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport EE from '@antv/event-emitter';\nimport * as d3Ease from 'd3-ease';\nimport { GM } from '../gm';\nimport { clock } from '../utils/clock';\n// 看那个曲线跟合适了\nvar ease = d3Ease.easeCubicIn;\nvar TOTAL_MS = 800; // 惯性滚动时间；调参工程师，或者根据速度来计算这个时间\nvar SWIPE = 'swipe';\nvar PAN = 'pan';\nvar WHEEL = 'wheel';\n/**\n * 给 view 添加移动端的滚动能力：\n *  - 监听 touch 事件，emit wheel 事件\n *  - 滚动惯性包装\n *  - 和 pc 的 wheel 事件保持基本一致\n */\nvar Wheel = /** @class */ (function (_super) {\n    __extends(Wheel, _super);\n    function Wheel(element) {\n        var _this = _super.call(this) || this;\n        _this.rafMs = 0;\n        /**\n         * pan 事件\n         * @param ev\n         */\n        _this.onPan = function (ev) {\n            var deltaX = ev.deltaX, deltaY = ev.deltaY;\n            var e = _this.getWrapperEvent(ev, deltaX, deltaY);\n            _this.emit(WHEEL, e);\n        };\n        /**\n         * 当出现 swipe 事件的时候\n         * @param ev\n         */\n        _this.onSwipe = function (ev) {\n            var speedX = ev.speedX, speedY = ev.speedY;\n            // raf 循环执行的时间戳\n            _this.rafMs = clock.now();\n            _this.ms = _this.rafMs;\n            // 对于没有滑动的情况下，不做处理\n            if (speedX !== 0 || speedY !== 0) {\n                _this.rafInertia(ev);\n            }\n        };\n        _this.element = element;\n        _this.gm = new GM(element, { gestures: ['Pan', 'Swipe'] });\n        _this.gm.on(SWIPE, _this.onSwipe);\n        _this.gm.on(PAN, _this.onPan);\n        return _this;\n    }\n    Wheel.prototype.destroy = function () {\n        window.cancelAnimationFrame(this.raf);\n        this.gm.destroy();\n        this.off();\n    };\n    // 使用 raf 进行惯性滑动\n    Wheel.prototype.rafInertia = function (ev) {\n        var _this = this;\n        var speedX = ev.speedX, speedY = ev.speedY;\n        this.raf = window.requestAnimationFrame(function () {\n            var now = clock.now();\n            var ratio = (now - _this.ms) / TOTAL_MS;\n            if (ratio < 1) {\n                ratio = ease(1 - ratio);\n                // 折损之后的速度 * 时间，等于距离\n                var t = now - _this.rafMs;\n                var movedX = speedX * ratio * t;\n                var movedY = speedY * ratio * t;\n                var e = _this.getWrapperEvent(ev, movedX, movedY);\n                // 发出 wheel 事件\n                _this.emit(WHEEL, e);\n                _this.rafMs = now; // 记录时间\n                // 进行下一次\n                _this.rafInertia(ev);\n            }\n        });\n    };\n    Wheel.prototype.getWrapperEvent = function (ev, deltaX, deltaY) {\n        // 移动端的滑动应该是跟随手指\n        return __assign(__assign({}, ev), { deltaX: -deltaX, deltaY: -deltaY });\n    };\n    return Wheel;\n}(EE));\nexport { Wheel };\n//# sourceMappingURL=wheel.js.map"]}]}