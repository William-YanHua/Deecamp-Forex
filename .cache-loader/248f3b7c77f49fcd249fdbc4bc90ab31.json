{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/adjust/esm/adjusts/dodge.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/adjust/esm/adjusts/dodge.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\nimport * as _ from '@antv/util';\nimport { DODGE_RATIO, MARGIN_RATIO } from '../constant';\nimport Adjust from './adjust';\nvar Dodge = (function (_super) {\n    __extends(Dodge, _super);\n    function Dodge(cfg) {\n        var _this = _super.call(this, cfg) || this;\n        _this.cacheMap = {};\n        _this.adjustDataArray = [];\n        _this.mergeData = [];\n        var _a = cfg.marginRatio, marginRatio = _a === void 0 ? MARGIN_RATIO : _a, _b = cfg.dodgeRatio, dodgeRatio = _b === void 0 ? DODGE_RATIO : _b, dodgeBy = cfg.dodgeBy;\n        _this.marginRatio = marginRatio;\n        _this.dodgeRatio = dodgeRatio;\n        _this.dodgeBy = dodgeBy;\n        return _this;\n    }\n    Dodge.prototype.process = function (groupDataArray) {\n        var groupedDataArray = _.clone(groupDataArray);\n        var mergeData = _.flatten(groupedDataArray);\n        var dodgeBy = this.dodgeBy;\n        var adjustDataArray = dodgeBy ? _.group(mergeData, dodgeBy) : groupedDataArray;\n        this.cacheMap = {};\n        this.adjustDataArray = adjustDataArray;\n        this.mergeData = mergeData;\n        this.adjustData(adjustDataArray, mergeData);\n        this.adjustDataArray = [];\n        this.mergeData = [];\n        return groupedDataArray;\n    };\n    Dodge.prototype.adjustDim = function (dim, values, data, frameIndex) {\n        var _this = this;\n        var map = this.getDistribution(dim);\n        var groupData = this.groupData(data, dim);\n        _.each(groupData, function (group, key) {\n            var range;\n            if (values.length === 1) {\n                range = {\n                    pre: values[0] - 1,\n                    next: values[0] + 1,\n                };\n            }\n            else {\n                range = _this.getAdjustRange(dim, parseFloat(key), values);\n            }\n            _.each(group, function (d) {\n                var value = d[dim];\n                var valueArr = map[value];\n                var valIndex = valueArr.indexOf(frameIndex);\n                d[dim] = _this.getDodgeOffset(range, valIndex, valueArr.length);\n            });\n        });\n        return [];\n    };\n    Dodge.prototype.getDodgeOffset = function (range, idx, len) {\n        var _a = this, dodgeRatio = _a.dodgeRatio, marginRatio = _a.marginRatio;\n        var pre = range.pre, next = range.next;\n        var tickLength = next - pre;\n        var width = (tickLength * dodgeRatio) / len;\n        var margin = marginRatio * width;\n        var offset = (1 / 2) * (tickLength - len * width - (len - 1) * margin) +\n            ((idx + 1) * width + idx * margin) -\n            (1 / 2) * width -\n            (1 / 2) * tickLength;\n        return (pre + next) / 2 + offset;\n    };\n    Dodge.prototype.getDistribution = function (dim) {\n        var groupedDataArray = this.adjustDataArray;\n        var cacheMap = this.cacheMap;\n        var map = cacheMap[dim];\n        if (!map) {\n            map = {};\n            _.each(groupedDataArray, function (data, index) {\n                var values = _.valuesOfKey(data, dim);\n                if (!values.length) {\n                    values.push(0);\n                }\n                _.each(values, function (val) {\n                    if (!map[val]) {\n                        map[val] = [];\n                    }\n                    map[val].push(index);\n                });\n            });\n            cacheMap[dim] = map;\n        }\n        return map;\n    };\n    return Dodge;\n}(Adjust));\nexport default Dodge;\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/adjust/esm/adjusts/dodge.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/adjust/esm/adjusts/dodge.js"],"names":[],"mappings":"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","sourcesContent":["import { __extends } from \"tslib\";\nimport * as _ from '@antv/util';\nimport { DODGE_RATIO, MARGIN_RATIO } from '../constant';\nimport Adjust from './adjust';\nvar Dodge = /** @class */ (function (_super) {\n    __extends(Dodge, _super);\n    function Dodge(cfg) {\n        var _this = _super.call(this, cfg) || this;\n        _this.cacheMap = {};\n        _this.adjustDataArray = [];\n        _this.mergeData = [];\n        var _a = cfg.marginRatio, marginRatio = _a === void 0 ? MARGIN_RATIO : _a, _b = cfg.dodgeRatio, dodgeRatio = _b === void 0 ? DODGE_RATIO : _b, dodgeBy = cfg.dodgeBy;\n        _this.marginRatio = marginRatio;\n        _this.dodgeRatio = dodgeRatio;\n        _this.dodgeBy = dodgeBy;\n        return _this;\n    }\n    Dodge.prototype.process = function (groupDataArray) {\n        var groupedDataArray = _.clone(groupDataArray);\n        // 将数据数组展开一层\n        var mergeData = _.flatten(groupedDataArray);\n        var dodgeBy = this.dodgeBy;\n        // 如果指定了分组 dim 的字段\n        var adjustDataArray = dodgeBy ? _.group(mergeData, dodgeBy) : groupedDataArray;\n        this.cacheMap = {};\n        this.adjustDataArray = adjustDataArray;\n        this.mergeData = mergeData;\n        this.adjustData(adjustDataArray, mergeData);\n        this.adjustDataArray = [];\n        this.mergeData = [];\n        return groupedDataArray;\n    };\n    Dodge.prototype.adjustDim = function (dim, values, data, frameIndex) {\n        var _this = this;\n        var map = this.getDistribution(dim);\n        var groupData = this.groupData(data, dim); // 根据值分组\n        _.each(groupData, function (group, key) {\n            var range;\n            // xField 中只有一个值，不需要做 dodge\n            if (values.length === 1) {\n                range = {\n                    pre: values[0] - 1,\n                    next: values[0] + 1,\n                };\n            }\n            else {\n                // 如果有多个，则需要获取调整的范围\n                range = _this.getAdjustRange(dim, parseFloat(key), values);\n            }\n            _.each(group, function (d) {\n                var value = d[dim];\n                var valueArr = map[value];\n                var valIndex = valueArr.indexOf(frameIndex);\n                d[dim] = _this.getDodgeOffset(range, valIndex, valueArr.length);\n            });\n        });\n        return [];\n    };\n    Dodge.prototype.getDodgeOffset = function (range, idx, len) {\n        var _a = this, dodgeRatio = _a.dodgeRatio, marginRatio = _a.marginRatio;\n        var pre = range.pre, next = range.next;\n        var tickLength = next - pre;\n        var width = (tickLength * dodgeRatio) / len;\n        var margin = marginRatio * width;\n        var offset = (1 / 2) * (tickLength - len * width - (len - 1) * margin) +\n            ((idx + 1) * width + idx * margin) -\n            (1 / 2) * width -\n            (1 / 2) * tickLength;\n        return (pre + next) / 2 + offset;\n    };\n    Dodge.prototype.getDistribution = function (dim) {\n        var groupedDataArray = this.adjustDataArray;\n        var cacheMap = this.cacheMap;\n        var map = cacheMap[dim];\n        if (!map) {\n            map = {};\n            _.each(groupedDataArray, function (data, index) {\n                var values = _.valuesOfKey(data, dim);\n                if (!values.length) {\n                    values.push(0);\n                }\n                _.each(values, function (val) {\n                    if (!map[val]) {\n                        map[val] = [];\n                    }\n                    map[val].push(index);\n                });\n            });\n            cacheMap[dim] = map;\n        }\n        return map;\n    };\n    return Dodge;\n}(Adjust));\nexport default Dodge;\n//# sourceMappingURL=dodge.js.map"]}]}