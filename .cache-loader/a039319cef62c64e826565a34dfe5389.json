{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-regression\\src\\utils\\points.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-regression\\src\\utils\\points.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["export function points(data, x, y, sort) {\r\n    data = data.filter(function (d) {\r\n        var u = x(d), v = y(d);\r\n        return u != null && isFinite(u) && v != null && isFinite(v);\r\n    });\r\n    if (sort) {\r\n        data.sort(function (a, b) { return x(a) - x(b); });\r\n    }\r\n    var n = data.length, X = new Float64Array(n), Y = new Float64Array(n);\r\n    var ux = 0, uy = 0, xv, yv, d;\r\n    for (var i = 0; i < n;) {\r\n        d = data[i];\r\n        X[i] = xv = +x(d);\r\n        Y[i] = yv = +y(d);\r\n        ++i;\r\n        ux += (xv - ux) / i;\r\n        uy += (yv - uy) / i;\r\n    }\r\n    for (var i = 0; i < n; ++i) {\r\n        X[i] -= ux;\r\n        Y[i] -= uy;\r\n    }\r\n    return [X, Y, ux, uy];\r\n}\r\nexport function visitPoints(data, x, y, cb) {\r\n    var iterations = 0;\r\n    for (var i = 0, n = data.length; i < n; i++) {\r\n        var d = data[i], dx = +x(d), dy = +y(d);\r\n        if (dx != null && isFinite(dx) && dy != null && isFinite(dy)) {\r\n            cb(dx, dy, iterations++);\r\n        }\r\n    }\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-regression\\src\\utils\\points.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\d3-regression\\src\\utils\\points.js"],"names":[],"mappings":"AAGA,MAAM,UAAU,MAAM,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI;IACrC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,UAAA,CAAC;QAClB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACvB,OAAO,CAAC,IAAI,IAAI,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,CAAC;IAEH,IAAI,IAAI,EAAE;QACR,IAAI,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAX,CAAW,CAAC,CAAC;KAClC;IAED,IAAM,CAAC,GAAG,IAAI,CAAC,MAAM,EACf,CAAC,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,EACvB,CAAC,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;IAG9B,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAI;QACvB,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClB,EAAE,CAAC,CAAC;QACJ,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;QACpB,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;KACrB;IAGD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;QAC1B,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;QACX,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;KACZ;IAED,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACxB,CAAC;AAGD,MAAM,UAAU,WAAW,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IACxC,IAAI,UAAU,GAAG,CAAC,CAAC;IAEnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QAC3C,IAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EACX,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EACV,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAEjB,IAAI,EAAE,IAAI,IAAI,IAAI,QAAQ,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,IAAI,IAAI,QAAQ,CAAC,EAAE,CAAC,EAAE;YAC5D,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,CAAC;SAC1B;KACF;AACH,CAAC","sourcesContent":["// Adapted from vega-statistics by Jeffrey Heer\n// License: https://github.com/vega/vega/blob/f058b099decad9db78301405dd0d2e9d8ba3d51a/LICENSE\n// Source: https://github.com/vega/vega/blob/f058b099decad9db78301405dd0d2e9d8ba3d51a/packages/vega-statistics/src/regression/points.js\nexport function points(data, x, y, sort) {\n  data = data.filter(d => {\n    let u = x(d), v = y(d);\n    return u != null && isFinite(u) && v != null && isFinite(v);\n  });\n\n  if (sort) {\n    data.sort((a, b) => x(a) - x(b));\n  }\n\n  const n = data.length,\n        X = new Float64Array(n),\n        Y = new Float64Array(n);\n\n  // extract values, calculate means\n  let ux = 0, uy = 0, xv, yv, d;\n  for (let i = 0; i < n; ) {\n    d = data[i];\n    X[i] = xv = +x(d);\n    Y[i] = yv = +y(d);\n    ++i;\n    ux += (xv - ux) / i;\n    uy += (yv - uy) / i;\n  }\n\n  // mean center the data\n  for (let i = 0; i < n; ++i) {\n    X[i] -= ux;\n    Y[i] -= uy;\n  }\n\n  return [X, Y, ux, uy];\n}\n\n\nexport function visitPoints(data, x, y, cb){\n  let iterations = 0;\n\n  for (let i = 0, n = data.length; i < n; i++) {\n    const d = data[i],\n          dx = +x(d),\n          dy = +y(d);\n    \n    if (dx != null && isFinite(dx) && dy != null && isFinite(dy)) {\n      cb(dx, dy, iterations++);\n    }\n  }\n}"]}]}