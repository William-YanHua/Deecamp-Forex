{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g-svg/esm/canvas.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g-svg/esm/canvas.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { __assign, __extends } from \"tslib\";\nimport { AbstractCanvas } from '@antv/g-base';\nimport { SHAPE_TO_TAGS } from './constant';\nimport { drawChildren } from './util/draw';\nimport { setTransform, setClip } from './util/svg';\nimport { sortDom, createSVGElement } from './util/dom';\nimport * as Shape from './shape';\nimport Group from './group';\nimport Defs from './defs';\nvar Canvas = (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas(cfg) {\n        return _super.call(this, __assign(__assign({}, cfg), { autoDraw: true,\n            renderer: 'svg' })) || this;\n    }\n    Canvas.prototype.getShapeBase = function () {\n        return Shape;\n    };\n    Canvas.prototype.getGroupBase = function () {\n        return Group;\n    };\n    Canvas.prototype.getShape = function (x, y, ev) {\n        var target = ev.target || ev.srcElement;\n        if (!SHAPE_TO_TAGS[target.tagName]) {\n            var parent_1 = target.parentNode;\n            while (parent_1 && !SHAPE_TO_TAGS[parent_1.tagName]) {\n                parent_1 = parent_1.parentNode;\n            }\n            target = parent_1;\n        }\n        return this.find(function (child) { return child.get('el') === target; });\n    };\n    Canvas.prototype.createDom = function () {\n        var element = createSVGElement('svg');\n        var context = new Defs(element);\n        element.setAttribute('width', \"\" + this.get('width'));\n        element.setAttribute('height', \"\" + this.get('height'));\n        this.set('context', context);\n        return element;\n    };\n    Canvas.prototype.onCanvasChange = function (changeType) {\n        var context = this.get('context');\n        var el = this.get('el');\n        if (changeType === 'sort') {\n            var children_1 = this.get('children');\n            if (children_1 && children_1.length) {\n                sortDom(this, function (a, b) {\n                    return children_1.indexOf(a) - children_1.indexOf(b) ? 1 : 0;\n                });\n            }\n        }\n        else if (changeType === 'clear') {\n            if (el) {\n                el.innerHTML = '';\n                var defsEl = context.el;\n                defsEl.innerHTML = '';\n                el.appendChild(defsEl);\n            }\n        }\n        else if (changeType === 'matrix') {\n            setTransform(this);\n        }\n        else if (changeType === 'clip') {\n            setClip(this, context);\n        }\n        else if (changeType === 'changeSize') {\n            el.setAttribute('width', \"\" + this.get('width'));\n            el.setAttribute('height', \"\" + this.get('height'));\n        }\n    };\n    Canvas.prototype.draw = function () {\n        var context = this.get('context');\n        var children = this.getChildren();\n        setClip(this, context);\n        if (children.length) {\n            drawChildren(context, children);\n        }\n    };\n    return Canvas;\n}(AbstractCanvas));\nexport default Canvas;\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g-svg/esm/canvas.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g-svg/esm/canvas.js"],"names":[],"mappings":"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","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { AbstractCanvas } from '@antv/g-base';\nimport { SHAPE_TO_TAGS } from './constant';\nimport { drawChildren } from './util/draw';\nimport { setTransform, setClip } from './util/svg';\nimport { sortDom, createSVGElement } from './util/dom';\nimport * as Shape from './shape';\nimport Group from './group';\nimport Defs from './defs';\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas(cfg) {\n        return _super.call(this, __assign(__assign({}, cfg), { autoDraw: true, \n            // 设置渲染引擎为 canvas，只读属性\n            renderer: 'svg' })) || this;\n    }\n    Canvas.prototype.getShapeBase = function () {\n        return Shape;\n    };\n    Canvas.prototype.getGroupBase = function () {\n        return Group;\n    };\n    // 覆盖 Container 中通过遍历的方式获取 shape 对象的逻辑，直接走 SVG 的 dom 拾取即可\n    Canvas.prototype.getShape = function (x, y, ev) {\n        var target = ev.target || ev.srcElement;\n        if (!SHAPE_TO_TAGS[target.tagName]) {\n            var parent_1 = target.parentNode;\n            while (parent_1 && !SHAPE_TO_TAGS[parent_1.tagName]) {\n                parent_1 = parent_1.parentNode;\n            }\n            target = parent_1;\n        }\n        return this.find(function (child) { return child.get('el') === target; });\n    };\n    // 复写基类的方法生成标签\n    Canvas.prototype.createDom = function () {\n        var element = createSVGElement('svg');\n        var context = new Defs(element);\n        element.setAttribute('width', \"\" + this.get('width'));\n        element.setAttribute('height', \"\" + this.get('height'));\n        // 缓存 context 对象\n        this.set('context', context);\n        return element;\n    };\n    /**\n     * 一些方法调用会引起画布变化\n     * @param {ChangeType} changeType 改变的类型\n     */\n    Canvas.prototype.onCanvasChange = function (changeType) {\n        var context = this.get('context');\n        var el = this.get('el');\n        if (changeType === 'sort') {\n            var children_1 = this.get('children');\n            if (children_1 && children_1.length) {\n                sortDom(this, function (a, b) {\n                    return children_1.indexOf(a) - children_1.indexOf(b) ? 1 : 0;\n                });\n            }\n        }\n        else if (changeType === 'clear') {\n            // el maybe null for canvas\n            if (el) {\n                // 清空 SVG 元素\n                el.innerHTML = '';\n                var defsEl = context.el;\n                // 清空 defs 元素\n                defsEl.innerHTML = '';\n                // 将清空后的 defs 元素挂载到 el 下\n                el.appendChild(defsEl);\n            }\n        }\n        else if (changeType === 'matrix') {\n            setTransform(this);\n        }\n        else if (changeType === 'clip') {\n            setClip(this, context);\n        }\n        else if (changeType === 'changeSize') {\n            el.setAttribute('width', \"\" + this.get('width'));\n            el.setAttribute('height', \"\" + this.get('height'));\n        }\n    };\n    // 复写基类的 draw 方法\n    Canvas.prototype.draw = function () {\n        var context = this.get('context');\n        var children = this.getChildren();\n        setClip(this, context);\n        if (children.length) {\n            drawChildren(context, children);\n        }\n    };\n    return Canvas;\n}(AbstractCanvas));\nexport default Canvas;\n//# sourceMappingURL=canvas.js.map"]}]}