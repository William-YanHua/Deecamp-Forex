{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/src/app/api/UserService.ts","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/src/app/api/UserService.ts","mtime":1596379644447},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { HttpService } from \"./HttpService\";\nimport { HttpMethod } from \"./utils\";\nimport { Inject, Injectable } from \"react.di\";\nimport * as RSA from \"./CitiRSA.js\";\nfunction encryptPassword(password) {\n    return password;\n}\nvar UserService = (function () {\n    function UserService(http) {\n        this.http = http;\n    }\n    UserService.prototype.login = function (username, password) {\n        return __awaiter(this, void 0, Promise, function () {\n            var res;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        password = encryptPassword(password);\n                        return [4, this.http.fetch({\n                                path: \"user\",\n                                queryParams: { name_mail: username, password: password },\n                            })];\n                    case 1:\n                        res = _a.sent();\n                        return [2, res.response];\n                }\n            });\n        });\n    };\n    Object.defineProperty(UserService.prototype, \"token\", {\n        set: function (token) {\n            this.http.token = token;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    UserService.prototype.logout = function () {\n        this.http.token = \"\";\n    };\n    UserService.prototype.register = function (params) {\n        return __awaiter(this, void 0, Promise, function () {\n            var res;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        params.password = encryptPassword(params.password);\n                        return [4, this.http.fetch({\n                                path: \"user\",\n                                body: params,\n                                method: HttpMethod.POST,\n                            })];\n                    case 1:\n                        res = _a.sent();\n                        return [2, res.response];\n                }\n            });\n        });\n    };\n    UserService.prototype.requestEmailValidation = function (token) {\n        return __awaiter(this, void 0, Promise, function () {\n            var res;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, this.http.fetch({\n                            path: \"user/validation/email\",\n                            token: token,\n                        })];\n                    case 1:\n                        res = _a.sent();\n                        return [2, res.response];\n                }\n            });\n        });\n    };\n    UserService.prototype.validateEmail = function (token, code, userToken) {\n        return __awaiter(this, void 0, Promise, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, this.http.fetch({\n                            path: \"user/validation/email\",\n                            method: HttpMethod.POST,\n                            body: { validationToken: token, validationCode: code },\n                            token: userToken,\n                        })];\n                    case 1:\n                        _a.sent();\n                        return [2];\n                }\n            });\n        });\n    };\n    UserService.prototype.getUserProfile = function (username) {\n        return __awaiter(this, void 0, Promise, function () {\n            var res;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, this.http.fetch({\n                            path: \"/user/info\",\n                        })];\n                    case 1:\n                        res = _a.sent();\n                        return [2, res.response];\n                }\n            });\n        });\n    };\n    UserService.prototype.getUserInvestmentPreference = function (username) {\n        return __awaiter(this, void 0, Promise, function () {\n            var res;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, this.http.fetch({\n                            path: \"/user/invpref/\" + username,\n                            method: HttpMethod.GET,\n                        })];\n                    case 1:\n                        res = _a.sent();\n                        return [2, res.response];\n                }\n            });\n        });\n    };\n    UserService.prototype.setUserInvestmentPreference = function (username, pref) {\n        return __awaiter(this, void 0, Promise, function () {\n            var res;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, this.http.fetch({\n                            path: \"/user/invpref/\" + username,\n                            method: HttpMethod.PUT,\n                            body: pref,\n                        })];\n                    case 1:\n                        res = _a.sent();\n                        return [2];\n                }\n            });\n        });\n    };\n    UserService.prototype.evaluatePreference = function (answers) {\n        return __awaiter(this, void 0, Promise, function () {\n            var res;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, this.http.fetch({\n                            path: \"/user/invpref\",\n                            method: HttpMethod.POST,\n                            body: { answers: answers },\n                        })];\n                    case 1:\n                        res = _a.sent();\n                        return [2, res.response];\n                }\n            });\n        });\n    };\n    UserService.prototype.encrypt = function (parameters, password) {\n        var modulus = parameters.modulus, exponent = parameters.exponent, eventId = parameters.eventId;\n        var pub = new RSA.RSAKey();\n        pub.setPublic(modulus, exponent);\n        var unencrypted = eventId + \",b\" + password;\n        var encryptedPassword = pub.encryptB(RSA.getByteArray(unencrypted)).toString(16);\n        return encryptedPassword;\n    };\n    UserService.prototype.setCitiAccount = function (username, password) {\n        return __awaiter(this, void 0, Promise, function () {\n            var parameters;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, this.http.fetch({\n                            path: \"/user/bindingParameters\",\n                        })];\n                    case 1:\n                        parameters = _a.sent();\n                        console.log(parameters);\n                        return [4, this.http.fetch({\n                                path: \"/user/citiAccount\",\n                                method: HttpMethod.POST,\n                                body: { username: username, password: this.encrypt(parameters.response, password) },\n                            })];\n                    case 2:\n                        _a.sent();\n                        return [2];\n                }\n            });\n        });\n    };\n    UserService.prototype.getCitiAccount = function () {\n        return __awaiter(this, void 0, Promise, function () {\n            var res;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, this.http.fetch({\n                            path: \"/user/citiAccount\",\n                        })];\n                    case 1:\n                        res = _a.sent();\n                        return [2, res.response];\n                }\n            });\n        });\n    };\n    var _a;\n    UserService = __decorate([\n        Injectable,\n        __param(0, Inject),\n        __metadata(\"design:paramtypes\", [typeof (_a = typeof HttpService !== \"undefined\" && HttpService) === \"function\" ? _a : Object])\n    ], UserService);\n    return UserService;\n}());\nexport { UserService };\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/src/app/api/UserService.ts","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/src/app/api/UserService.ts"],"names":[],"mappings":"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","sourcesContent":["import { HttpService } from \"./HttpService\";\r\nimport { HttpMethod } from \"./utils\";\r\nimport { Inject, Injectable } from \"react.di\";\r\nimport { LoginResponse } from \"../models/user/LoginResponse\";\r\nimport { EmailValidationRequestReceipt } from \"../models/user/EmailValidation\";\r\nimport { RegisterParams, RegisterResponse } from \"../models/user/Register\";\r\nimport { UserProfile } from \"../models/user/UserProfile\";\r\nimport { InvestmentPreference } from \"../models/user/InvestmentPreference\";\r\nimport { PreferenceEvaluationAnswer, PreferenceEvaluationResult } from \"../models/user/PreferenceEvaluation\";\r\nimport * as RSA from \"./CitiRSA.js\";\r\nimport { CitiAccountBindingParameters } from \"../models/user/CitiAccountBindingParameters\";\r\nimport { waitForMs } from \"../../utils/Wait\";\r\n\r\n// declare class RSAKey {\r\n//   setPublic(modulus: string, exponent: string);\r\n//\r\n//   encryptB(data: any): any;\r\n// }\r\n//\r\n// declare function getByteArray(data: string);\r\n\r\nfunction encryptPassword(password: string) {\r\n  return password;\r\n}\r\n\r\n\r\n@Injectable\r\nexport class UserService {\r\n\r\n  constructor(@Inject private http: HttpService) {\r\n  }\r\n\r\n  async login(username: string, password: string): Promise<LoginResponse> {\r\n    password = encryptPassword(password);\r\n\r\n    const res = await this.http.fetch({\r\n      path: \"user\",\r\n      queryParams: {name_mail: username, password},\r\n    });\r\n\r\n    return res.response;\r\n  }\r\n\r\n  set token(token: string) {\r\n    this.http.token = token;\r\n  }\r\n\r\n  logout() {\r\n    this.http.token = \"\";\r\n  }\r\n\r\n  async register(params: RegisterParams): Promise<RegisterResponse> {\r\n    params.password = encryptPassword(params.password);\r\n    const res = await this.http.fetch({\r\n      path: \"user\",\r\n      body: params,\r\n      method: HttpMethod.POST,\r\n    });\r\n\r\n    return res.response;\r\n  }\r\n\r\n  async requestEmailValidation(token: string): Promise<EmailValidationRequestReceipt> {\r\n    const res = await this.http.fetch({\r\n      path: \"user/validation/email\",\r\n      token,\r\n    });\r\n\r\n    return res.response;\r\n  }\r\n\r\n  async validateEmail(token: string, code: string, userToken: string): Promise<void> {\r\n    await this.http.fetch({\r\n      path: \"user/validation/email\",\r\n      method: HttpMethod.POST,\r\n      body: { validationToken: token, validationCode: code },\r\n      token: userToken,\r\n\r\n    });\r\n  }\r\n\r\n  async getUserProfile(username: string): Promise<UserProfile> {\r\n    const res = await this.http.fetch({\r\n      path: `/user/info`,\r\n    });\r\n\r\n    return res.response as UserProfile;\r\n  }\r\n\r\n  async getUserInvestmentPreference(username: string): Promise<InvestmentPreference> {\r\n    const res = await this.http.fetch({\r\n      path: `/user/invpref/${username}`,\r\n      method: HttpMethod.GET,\r\n    });\r\n\r\n    return res.response;\r\n  }\r\n\r\n  async setUserInvestmentPreference(username: string, pref: InvestmentPreference): Promise<void> {\r\n    const res = await this.http.fetch({\r\n      path: `/user/invpref/${username}`,\r\n      method: HttpMethod.PUT,\r\n      body: pref,\r\n    });\r\n  }\r\n\r\n  async evaluatePreference(answers: PreferenceEvaluationAnswer): Promise<PreferenceEvaluationResult> {\r\n    const res = await this.http.fetch({\r\n      path: `/user/invpref`,\r\n      method: HttpMethod.POST,\r\n      body: {answers},\r\n    });\r\n\r\n    return res.response;\r\n  }\r\n\r\n  encrypt(parameters: CitiAccountBindingParameters, password: string) {\r\n    const { modulus, exponent, eventId } = parameters;\r\n\r\n    const pub = new RSA.RSAKey();\r\n\r\n    pub.setPublic(modulus, exponent);\r\n\r\n    const unencrypted = `${eventId},b${password}`;\r\n\r\n    const encryptedPassword = pub.encryptB(RSA.getByteArray(unencrypted)).toString(16);\r\n\r\n    return encryptedPassword;\r\n  }\r\n\r\n  async setCitiAccount(username: string, password: string): Promise<void> {\r\n    const parameters = await this.http.fetch<CitiAccountBindingParameters>({\r\n      path: `/user/bindingParameters`,\r\n    });\r\n\r\n    console.log(parameters);\r\n\r\n    await this.http.fetch({\r\n      path: `/user/citiAccount`,\r\n      method: HttpMethod.POST,\r\n      body: {username, password: this.encrypt(parameters.response, password)},\r\n    });\r\n  }\r\n\r\n  async getCitiAccount(): Promise<{username: string}> {\r\n    const res = await this.http.fetch({\r\n      path: `/user/citiAccount`,\r\n    });\r\n\r\n    return res.response;\r\n  }\r\n\r\n}\r\n"]}]}