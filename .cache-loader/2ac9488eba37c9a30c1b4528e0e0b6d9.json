{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\connector\\dsv.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\connector\\dsv.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["var isString = require('@antv/util/lib/type/is-string');\r\nvar _a = require('d3-dsv'), dsvFormat = _a.dsvFormat, csvParse = _a.csvParse, tsvParse = _a.tsvParse;\r\nvar registerConnector = require('../data-set').registerConnector;\r\nregisterConnector('dsv', function (str, options) {\r\n    if (options === void 0) { options = {}; }\r\n    var delimiter = options.delimiter || ',';\r\n    if (!isString(delimiter)) {\r\n        throw new TypeError('Invalid delimiter: must be a string!');\r\n    }\r\n    return dsvFormat(delimiter).parse(str);\r\n});\r\nregisterConnector('csv', function (str) {\r\n    return csvParse(str);\r\n});\r\nregisterConnector('tsv', function (str) {\r\n    return tsvParse(str);\r\n});\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\connector\\dsv.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\data-set\\src\\connector\\dsv.js"],"names":[],"mappings":"AAAA,IAAM,QAAQ,GAAG,OAAO,CAAC,+BAA+B,CAAC,CAAC;AACpD,IAAA,sBAIe,EAHnB,wBAAS,EACT,sBAAQ,EACR,sBACmB,CAAC;AAEpB,IAAA,4DAAiB,CACQ;AAE3B,iBAAiB,CAAC,KAAK,EAAE,UAAC,GAAG,EAAE,OAAY;IAAZ,wBAAA,EAAA,YAAY;IACzC,IAAM,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,GAAG,CAAC;IAC3C,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;QACxB,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAC;KAC7D;IACD,OAAO,SAAS,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC;AAEH,iBAAiB,CAAC,KAAK,EAAE,UAAA,GAAG;IAC1B,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC;AAEH,iBAAiB,CAAC,KAAK,EAAE,UAAA,GAAG;IAC1B,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC","sourcesContent":["const isString = require('@antv/util/lib/type/is-string');\nconst {\n  dsvFormat,\n  csvParse,\n  tsvParse\n} = require('d3-dsv');\nconst {\n  registerConnector\n} = require('../data-set');\n\nregisterConnector('dsv', (str, options = {}) => {\n  const delimiter = options.delimiter || ',';\n  if (!isString(delimiter)) {\n    throw new TypeError('Invalid delimiter: must be a string!');\n  }\n  return dsvFormat(delimiter).parse(str);\n});\n\nregisterConnector('csv', str => {\n  return csvParse(str);\n});\n\nregisterConnector('tsv', str => {\n  return tsvParse(str);\n});\n"]}]}