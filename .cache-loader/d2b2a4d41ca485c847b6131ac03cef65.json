{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/line/component/label/line-label.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/line/component/label/line-label.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { each, deepMix, clone, find } from '@antv/util';\nvar DEFAULT_OFFSET = 8;\nvar LineLabel = (function () {\n    function LineLabel(cfg) {\n        this.destroyed = false;\n        this.view = cfg.view;\n        this.plot = cfg.plot;\n        var defaultOptions = this.getDefaultOptions();\n        this.options = deepMix(defaultOptions, cfg, {});\n        this.init();\n    }\n    LineLabel.prototype.init = function () {\n        var _this = this;\n        this.container = this.getGeometry().labelsContainer;\n        this.view.on('beforerender', function () {\n            _this.clear();\n            _this.plot.canvas.draw();\n        });\n    };\n    LineLabel.prototype.render = function () {\n        var _this = this;\n        var elements = this.getGeometry().elements;\n        each(elements, function (ele) {\n            var shapeInfo = _this.getShapeInfo(ele.shape);\n            var _a = _this.options, style = _a.style, offsetX = _a.offsetX, offsetY = _a.offsetY;\n            var formatter = _this.options.formatter;\n            var content = formatter ? formatter(shapeInfo.name) : shapeInfo.name;\n            _this.container.addShape('text', {\n                attrs: deepMix({}, {\n                    x: shapeInfo.x + offsetX,\n                    y: shapeInfo.y + offsetY,\n                    text: content,\n                    fill: shapeInfo.color,\n                    textAlign: 'left',\n                    textBaseline: 'middle',\n                }, style),\n                name: 'label',\n            });\n        });\n    };\n    LineLabel.prototype.clear = function () {\n        if (this.container) {\n            this.container.clear();\n        }\n    };\n    LineLabel.prototype.hide = function () {\n        this.container.set('visible', false);\n        this.plot.canvas.draw();\n    };\n    LineLabel.prototype.show = function () {\n        this.container.set('visible', true);\n        this.plot.canvas.draw();\n    };\n    LineLabel.prototype.destroy = function () {\n        if (this.container) {\n            this.container.remove();\n        }\n        this.destroyed = true;\n    };\n    LineLabel.prototype.getBBox = function () {\n        return this.container.getBBox();\n    };\n    LineLabel.prototype.getDefaultOptions = function () {\n        var theme = this.plot.theme;\n        var labelStyle = clone(theme.label.style);\n        delete labelStyle.fill;\n        return {\n            offsetX: DEFAULT_OFFSET,\n            offsetY: 0,\n            style: labelStyle,\n        };\n    };\n    LineLabel.prototype.getGeometry = function () {\n        return find(this.view.geometries, function (geom) { return geom.type === 'line'; });\n    };\n    LineLabel.prototype.getShapeInfo = function (shape) {\n        var originPoints = shape.get('origin').points;\n        var lastPoint = originPoints[originPoints.length - 1];\n        var color = shape.attr('stroke');\n        var seriesField = this.plot.options.seriesField;\n        var name = shape.get('origin').data[0][seriesField];\n        return { x: lastPoint.x, y: lastPoint.y, color: color, name: name };\n    };\n    return LineLabel;\n}());\nexport default LineLabel;\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/line/component/label/line-label.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/line/component/label/line-label.js"],"names":[],"mappings":"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","sourcesContent":["import { each, deepMix, clone, find } from '@antv/util';\nvar DEFAULT_OFFSET = 8;\nvar LineLabel = /** @class */ (function () {\n    function LineLabel(cfg) {\n        this.destroyed = false;\n        this.view = cfg.view;\n        this.plot = cfg.plot;\n        var defaultOptions = this.getDefaultOptions();\n        this.options = deepMix(defaultOptions, cfg, {});\n        this.init();\n    }\n    LineLabel.prototype.init = function () {\n        var _this = this;\n        this.container = this.getGeometry().labelsContainer;\n        this.view.on('beforerender', function () {\n            _this.clear();\n            _this.plot.canvas.draw();\n        });\n    };\n    LineLabel.prototype.render = function () {\n        var _this = this;\n        var elements = this.getGeometry().elements;\n        each(elements, function (ele) {\n            var shapeInfo = _this.getShapeInfo(ele.shape);\n            var _a = _this.options, style = _a.style, offsetX = _a.offsetX, offsetY = _a.offsetY;\n            var formatter = _this.options.formatter;\n            var content = formatter ? formatter(shapeInfo.name) : shapeInfo.name;\n            _this.container.addShape('text', {\n                attrs: deepMix({}, {\n                    x: shapeInfo.x + offsetX,\n                    y: shapeInfo.y + offsetY,\n                    text: content,\n                    fill: shapeInfo.color,\n                    textAlign: 'left',\n                    textBaseline: 'middle',\n                }, style),\n                name: 'label',\n            });\n        });\n    };\n    LineLabel.prototype.clear = function () {\n        if (this.container) {\n            this.container.clear();\n        }\n    };\n    LineLabel.prototype.hide = function () {\n        this.container.set('visible', false);\n        this.plot.canvas.draw();\n    };\n    LineLabel.prototype.show = function () {\n        this.container.set('visible', true);\n        this.plot.canvas.draw();\n    };\n    LineLabel.prototype.destroy = function () {\n        if (this.container) {\n            this.container.remove();\n        }\n        this.destroyed = true;\n    };\n    LineLabel.prototype.getBBox = function () {\n        return this.container.getBBox();\n    };\n    LineLabel.prototype.getDefaultOptions = function () {\n        var theme = this.plot.theme;\n        var labelStyle = clone(theme.label.style);\n        delete labelStyle.fill;\n        return {\n            offsetX: DEFAULT_OFFSET,\n            offsetY: 0,\n            style: labelStyle,\n        };\n    };\n    LineLabel.prototype.getGeometry = function () {\n        return find(this.view.geometries, function (geom) { return geom.type === 'line'; });\n    };\n    LineLabel.prototype.getShapeInfo = function (shape) {\n        var originPoints = shape.get('origin').points;\n        var lastPoint = originPoints[originPoints.length - 1];\n        var color = shape.attr('stroke');\n        var seriesField = this.plot.options.seriesField;\n        var name = shape.get('origin').data[0][seriesField];\n        return { x: lastPoint.x, y: lastPoint.y, color: color, name: name };\n    };\n    return LineLabel;\n}());\nexport default LineLabel;\n//# sourceMappingURL=line-label.js.map"]}]}