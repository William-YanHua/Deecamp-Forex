{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\rc-table\\es\\ColumnManager.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\rc-table\\es\\ColumnManager.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\r\nimport _extends from 'babel-runtime/helpers/extends';\r\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\r\nimport _createClass from 'babel-runtime/helpers/createClass';\r\nimport React from 'react';\r\nvar ColumnManager = function () {\r\n    function ColumnManager(columns, elements) {\r\n        _classCallCheck(this, ColumnManager);\r\n        this._cached = {};\r\n        this.columns = columns || this.normalize(elements);\r\n    }\r\n    _createClass(ColumnManager, [{\r\n            key: 'isAnyColumnsFixed',\r\n            value: function isAnyColumnsFixed() {\r\n                var _this = this;\r\n                return this._cache('isAnyColumnsFixed', function () {\r\n                    return _this.columns.some(function (column) {\r\n                        return !!column.fixed;\r\n                    });\r\n                });\r\n            }\r\n        }, {\r\n            key: 'isAnyColumnsLeftFixed',\r\n            value: function isAnyColumnsLeftFixed() {\r\n                var _this2 = this;\r\n                return this._cache('isAnyColumnsLeftFixed', function () {\r\n                    return _this2.columns.some(function (column) {\r\n                        return column.fixed === 'left' || column.fixed === true;\r\n                    });\r\n                });\r\n            }\r\n        }, {\r\n            key: 'isAnyColumnsRightFixed',\r\n            value: function isAnyColumnsRightFixed() {\r\n                var _this3 = this;\r\n                return this._cache('isAnyColumnsRightFixed', function () {\r\n                    return _this3.columns.some(function (column) {\r\n                        return column.fixed === 'right';\r\n                    });\r\n                });\r\n            }\r\n        }, {\r\n            key: 'leftColumns',\r\n            value: function leftColumns() {\r\n                var _this4 = this;\r\n                return this._cache('leftColumns', function () {\r\n                    return _this4.groupedColumns().filter(function (column) {\r\n                        return column.fixed === 'left' || column.fixed === true;\r\n                    });\r\n                });\r\n            }\r\n        }, {\r\n            key: 'rightColumns',\r\n            value: function rightColumns() {\r\n                var _this5 = this;\r\n                return this._cache('rightColumns', function () {\r\n                    return _this5.groupedColumns().filter(function (column) {\r\n                        return column.fixed === 'right';\r\n                    });\r\n                });\r\n            }\r\n        }, {\r\n            key: 'leafColumns',\r\n            value: function leafColumns() {\r\n                var _this6 = this;\r\n                return this._cache('leafColumns', function () {\r\n                    return _this6._leafColumns(_this6.columns);\r\n                });\r\n            }\r\n        }, {\r\n            key: 'leftLeafColumns',\r\n            value: function leftLeafColumns() {\r\n                var _this7 = this;\r\n                return this._cache('leftLeafColumns', function () {\r\n                    return _this7._leafColumns(_this7.leftColumns());\r\n                });\r\n            }\r\n        }, {\r\n            key: 'rightLeafColumns',\r\n            value: function rightLeafColumns() {\r\n                var _this8 = this;\r\n                return this._cache('rightLeafColumns', function () {\r\n                    return _this8._leafColumns(_this8.rightColumns());\r\n                });\r\n            }\r\n        }, {\r\n            key: 'groupedColumns',\r\n            value: function groupedColumns() {\r\n                var _this9 = this;\r\n                return this._cache('groupedColumns', function () {\r\n                    var _groupColumns = function _groupColumns(columns) {\r\n                        var currentRow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\r\n                        var parentColumn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n                        var rows = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\r\n                        rows[currentRow] = rows[currentRow] || [];\r\n                        var grouped = [];\r\n                        var setRowSpan = function setRowSpan(column) {\r\n                            var rowSpan = rows.length - currentRow;\r\n                            if (column && !column.children &&\r\n                                rowSpan > 1 && (!column.rowSpan || column.rowSpan < rowSpan)) {\r\n                                column.rowSpan = rowSpan;\r\n                            }\r\n                        };\r\n                        columns.forEach(function (column, index) {\r\n                            var newColumn = _extends({}, column);\r\n                            rows[currentRow].push(newColumn);\r\n                            parentColumn.colSpan = parentColumn.colSpan || 0;\r\n                            if (newColumn.children && newColumn.children.length > 0) {\r\n                                newColumn.children = _groupColumns(newColumn.children, currentRow + 1, newColumn, rows);\r\n                                parentColumn.colSpan += newColumn.colSpan;\r\n                            }\r\n                            else {\r\n                                parentColumn.colSpan++;\r\n                            }\r\n                            for (var i = 0; i < rows[currentRow].length - 1; ++i) {\r\n                                setRowSpan(rows[currentRow][i]);\r\n                            }\r\n                            if (index + 1 === columns.length) {\r\n                                setRowSpan(newColumn);\r\n                            }\r\n                            grouped.push(newColumn);\r\n                        });\r\n                        return grouped;\r\n                    };\r\n                    return _groupColumns(_this9.columns);\r\n                });\r\n            }\r\n        }, {\r\n            key: 'normalize',\r\n            value: function normalize(elements) {\r\n                var _this10 = this;\r\n                var columns = [];\r\n                React.Children.forEach(elements, function (element) {\r\n                    if (!React.isValidElement(element)) {\r\n                        return;\r\n                    }\r\n                    var column = _extends({}, element.props);\r\n                    if (element.key) {\r\n                        column.key = element.key;\r\n                    }\r\n                    if (element.type.isTableColumnGroup) {\r\n                        column.children = _this10.normalize(column.children);\r\n                    }\r\n                    columns.push(column);\r\n                });\r\n                return columns;\r\n            }\r\n        }, {\r\n            key: 'reset',\r\n            value: function reset(columns, elements) {\r\n                this.columns = columns || this.normalize(elements);\r\n                this._cached = {};\r\n            }\r\n        }, {\r\n            key: '_cache',\r\n            value: function _cache(name, fn) {\r\n                if (name in this._cached) {\r\n                    return this._cached[name];\r\n                }\r\n                this._cached[name] = fn();\r\n                return this._cached[name];\r\n            }\r\n        }, {\r\n            key: '_leafColumns',\r\n            value: function _leafColumns(columns) {\r\n                var _this11 = this;\r\n                var leafColumns = [];\r\n                columns.forEach(function (column) {\r\n                    if (!column.children) {\r\n                        leafColumns.push(column);\r\n                    }\r\n                    else {\r\n                        leafColumns.push.apply(leafColumns, _toConsumableArray(_this11._leafColumns(column.children)));\r\n                    }\r\n                });\r\n                return leafColumns;\r\n            }\r\n        }]);\r\n    return ColumnManager;\r\n}();\r\nexport default ColumnManager;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\rc-table\\es\\ColumnManager.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\rc-table\\es\\ColumnManager.js"],"names":[],"mappings":"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","sourcesContent":["import _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport React from 'react';\n\nvar ColumnManager = function () {\n  function ColumnManager(columns, elements) {\n    _classCallCheck(this, ColumnManager);\n\n    this._cached = {};\n\n    this.columns = columns || this.normalize(elements);\n  }\n\n  _createClass(ColumnManager, [{\n    key: 'isAnyColumnsFixed',\n    value: function isAnyColumnsFixed() {\n      var _this = this;\n\n      return this._cache('isAnyColumnsFixed', function () {\n        return _this.columns.some(function (column) {\n          return !!column.fixed;\n        });\n      });\n    }\n  }, {\n    key: 'isAnyColumnsLeftFixed',\n    value: function isAnyColumnsLeftFixed() {\n      var _this2 = this;\n\n      return this._cache('isAnyColumnsLeftFixed', function () {\n        return _this2.columns.some(function (column) {\n          return column.fixed === 'left' || column.fixed === true;\n        });\n      });\n    }\n  }, {\n    key: 'isAnyColumnsRightFixed',\n    value: function isAnyColumnsRightFixed() {\n      var _this3 = this;\n\n      return this._cache('isAnyColumnsRightFixed', function () {\n        return _this3.columns.some(function (column) {\n          return column.fixed === 'right';\n        });\n      });\n    }\n  }, {\n    key: 'leftColumns',\n    value: function leftColumns() {\n      var _this4 = this;\n\n      return this._cache('leftColumns', function () {\n        return _this4.groupedColumns().filter(function (column) {\n          return column.fixed === 'left' || column.fixed === true;\n        });\n      });\n    }\n  }, {\n    key: 'rightColumns',\n    value: function rightColumns() {\n      var _this5 = this;\n\n      return this._cache('rightColumns', function () {\n        return _this5.groupedColumns().filter(function (column) {\n          return column.fixed === 'right';\n        });\n      });\n    }\n  }, {\n    key: 'leafColumns',\n    value: function leafColumns() {\n      var _this6 = this;\n\n      return this._cache('leafColumns', function () {\n        return _this6._leafColumns(_this6.columns);\n      });\n    }\n  }, {\n    key: 'leftLeafColumns',\n    value: function leftLeafColumns() {\n      var _this7 = this;\n\n      return this._cache('leftLeafColumns', function () {\n        return _this7._leafColumns(_this7.leftColumns());\n      });\n    }\n  }, {\n    key: 'rightLeafColumns',\n    value: function rightLeafColumns() {\n      var _this8 = this;\n\n      return this._cache('rightLeafColumns', function () {\n        return _this8._leafColumns(_this8.rightColumns());\n      });\n    }\n\n    // add appropriate rowspan and colspan to column\n\n  }, {\n    key: 'groupedColumns',\n    value: function groupedColumns() {\n      var _this9 = this;\n\n      return this._cache('groupedColumns', function () {\n        var _groupColumns = function _groupColumns(columns) {\n          var currentRow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n          var parentColumn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n          var rows = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n\n          // track how many rows we got\n          rows[currentRow] = rows[currentRow] || [];\n          var grouped = [];\n          var setRowSpan = function setRowSpan(column) {\n            var rowSpan = rows.length - currentRow;\n            if (column && !column.children && // parent columns are supposed to be one row\n            rowSpan > 1 && (!column.rowSpan || column.rowSpan < rowSpan)) {\n              column.rowSpan = rowSpan;\n            }\n          };\n          columns.forEach(function (column, index) {\n            var newColumn = _extends({}, column);\n            rows[currentRow].push(newColumn);\n            parentColumn.colSpan = parentColumn.colSpan || 0;\n            if (newColumn.children && newColumn.children.length > 0) {\n              newColumn.children = _groupColumns(newColumn.children, currentRow + 1, newColumn, rows);\n              parentColumn.colSpan += newColumn.colSpan;\n            } else {\n              parentColumn.colSpan++;\n            }\n            // update rowspan to all same row columns\n            for (var i = 0; i < rows[currentRow].length - 1; ++i) {\n              setRowSpan(rows[currentRow][i]);\n            }\n            // last column, update rowspan immediately\n            if (index + 1 === columns.length) {\n              setRowSpan(newColumn);\n            }\n            grouped.push(newColumn);\n          });\n          return grouped;\n        };\n        return _groupColumns(_this9.columns);\n      });\n    }\n  }, {\n    key: 'normalize',\n    value: function normalize(elements) {\n      var _this10 = this;\n\n      var columns = [];\n      React.Children.forEach(elements, function (element) {\n        if (!React.isValidElement(element)) {\n          return;\n        }\n        var column = _extends({}, element.props);\n        if (element.key) {\n          column.key = element.key;\n        }\n        if (element.type.isTableColumnGroup) {\n          column.children = _this10.normalize(column.children);\n        }\n        columns.push(column);\n      });\n      return columns;\n    }\n  }, {\n    key: 'reset',\n    value: function reset(columns, elements) {\n      this.columns = columns || this.normalize(elements);\n      this._cached = {};\n    }\n  }, {\n    key: '_cache',\n    value: function _cache(name, fn) {\n      if (name in this._cached) {\n        return this._cached[name];\n      }\n      this._cached[name] = fn();\n      return this._cached[name];\n    }\n  }, {\n    key: '_leafColumns',\n    value: function _leafColumns(columns) {\n      var _this11 = this;\n\n      var leafColumns = [];\n      columns.forEach(function (column) {\n        if (!column.children) {\n          leafColumns.push(column);\n        } else {\n          leafColumns.push.apply(leafColumns, _toConsumableArray(_this11._leafColumns(column.children)));\n        }\n      });\n      return leafColumns;\n    }\n  }]);\n\n  return ColumnManager;\n}();\n\nexport default ColumnManager;"]}]}