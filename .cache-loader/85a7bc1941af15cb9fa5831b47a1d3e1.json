{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/src/connector/geo-graticule.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/src/connector/geo-graticule.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var geoGraticule = require('d3-geo').geoGraticule;\nvar registerConnector = require('../data-set').registerConnector;\nfunction connector(options, dataView) {\n    dataView.dataType = 'geo-graticule';\n    var data = geoGraticule().lines();\n    data.map(function (row, index) {\n        row.index = \"\" + index;\n        return row;\n    });\n    dataView.rows = data;\n    return data;\n}\nregisterConnector('geo-graticule', connector);\nmodule.exports = connector;\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/src/connector/geo-graticule.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/data-set/src/connector/geo-graticule.js"],"names":[],"mappings":"AACE,IAAA,YAAY,GACV,OAAO,CAAC,QAAQ,CAAC,aADP,CACQ;AAEpB,IAAA,iBAAiB,GACf,OAAO,CAAC,aAAa,CAAC,kBADP,CACQ;AAE3B,SAAS,SAAS,CAAC,OAAO,EAAE,QAAQ;IAClC,QAAQ,CAAC,QAAQ,GAAG,eAAe,CAAC;IACpC,IAAM,IAAI,GAAG,YAAY,EAAE,CAAC,KAAK,EAAE,CAAC;IAEpC,IAAI,CAAC,GAAG,CAAC,UAAC,GAAG,EAAE,KAAK;QAClB,GAAG,CAAC,KAAK,GAAG,KAAG,KAAO,CAAC;QACvB,OAAO,GAAG,CAAC;IACb,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,OAAO,IAAI,CAAC;AACd,CAAC;AAED,iBAAiB,CAAC,eAAe,EAAE,SAAS,CAAC,CAAC;AAE9C,MAAM,CAAC,OAAO,GAAG,SAAS,CAAC","sourcesContent":["const {\n  geoGraticule\n} = require('d3-geo');\nconst {\n  registerConnector\n} = require('../data-set');\n\nfunction connector(options, dataView) {\n  dataView.dataType = 'geo-graticule';\n  const data = geoGraticule().lines();\n\n  data.map((row, index) => {\n    row.index = `${index}`;\n    return row;\n  });\n\n  dataView.rows = data;\n  return data;\n}\n\nregisterConnector('geo-graticule', connector);\n\nmodule.exports = connector;\n"]}]}