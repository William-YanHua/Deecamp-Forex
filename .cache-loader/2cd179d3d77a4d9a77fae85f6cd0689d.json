{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g-svg/esm/shape/base.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g-svg/esm/shape/base.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { __assign, __extends } from \"tslib\";\nimport { AbstractShape } from '@antv/g-base';\nimport { setShadow, setTransform, setClip } from '../util/svg';\nimport { createDom } from '../util/dom';\nimport { refreshElement } from '../util/draw';\nimport { SVG_ATTR_MAP } from '../constant';\nimport * as Shape from './index';\nimport Group from '../group';\nimport { getBBoxMethod } from '@antv/g-base/lib/bbox/index';\nvar ShapeBase = (function (_super) {\n    __extends(ShapeBase, _super);\n    function ShapeBase() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'svg';\n        _this.canFill = false;\n        _this.canStroke = false;\n        return _this;\n    }\n    ShapeBase.prototype.getDefaultAttrs = function () {\n        var attrs = _super.prototype.getDefaultAttrs.call(this);\n        return __assign(__assign({}, attrs), { lineWidth: 1, lineAppendWidth: 0, strokeOpacity: 1, fillOpacity: 1 });\n    };\n    ShapeBase.prototype.afterAttrsChange = function (targetAttrs) {\n        _super.prototype.afterAttrsChange.call(this, targetAttrs);\n        var canvas = this.get('canvas');\n        if (canvas && canvas.get('autoDraw')) {\n            var context = canvas.get('context');\n            this.draw(context, targetAttrs);\n        }\n    };\n    ShapeBase.prototype.getShapeBase = function () {\n        return Shape;\n    };\n    ShapeBase.prototype.getGroupBase = function () {\n        return Group;\n    };\n    ShapeBase.prototype.onCanvasChange = function (changeType) {\n        refreshElement(this, changeType);\n    };\n    ShapeBase.prototype.calculateBBox = function () {\n        var el = this.get('el');\n        var bbox = null;\n        if (el) {\n            bbox = el.getBBox();\n        }\n        else {\n            var bboxMethod = getBBoxMethod(this.get('type'));\n            if (bboxMethod) {\n                bbox = bboxMethod(this);\n            }\n        }\n        if (bbox) {\n            var x = bbox.x, y = bbox.y, width = bbox.width, height = bbox.height;\n            var lineWidth = this.getHitLineWidth();\n            var halfWidth = lineWidth / 2;\n            var minX = x - halfWidth;\n            var minY = y - halfWidth;\n            var maxX = x + width + halfWidth;\n            var maxY = y + height + halfWidth;\n            return {\n                x: minX,\n                y: minY,\n                minX: minX,\n                minY: minY,\n                maxX: maxX,\n                maxY: maxY,\n                width: width + lineWidth,\n                height: height + lineWidth,\n            };\n        }\n        return {\n            x: 0,\n            y: 0,\n            minX: 0,\n            minY: 0,\n            maxX: 0,\n            maxY: 0,\n            width: 0,\n            height: 0,\n        };\n    };\n    ShapeBase.prototype.isFill = function () {\n        var _a = this.attr(), fill = _a.fill, fillStyle = _a.fillStyle;\n        return (fill || fillStyle || this.isClipShape()) && this.canFill;\n    };\n    ShapeBase.prototype.isStroke = function () {\n        var _a = this.attr(), stroke = _a.stroke, strokeStyle = _a.strokeStyle;\n        return (stroke || strokeStyle) && this.canStroke;\n    };\n    ShapeBase.prototype.draw = function (context, targetAttrs) {\n        var el = this.get('el');\n        if (this.get('destroyed')) {\n            if (el) {\n                el.parentNode.removeChild(el);\n            }\n        }\n        else {\n            if (!el) {\n                createDom(this);\n            }\n            setClip(this, context);\n            this.createPath(context, targetAttrs);\n            this.shadow(context, targetAttrs);\n            this.strokeAndFill(context, targetAttrs);\n            this.transform(targetAttrs);\n        }\n    };\n    ShapeBase.prototype.createPath = function (context, targetAttrs) { };\n    ShapeBase.prototype.strokeAndFill = function (context, targetAttrs) {\n        var attrs = targetAttrs || this.attr();\n        var fill = attrs.fill, fillStyle = attrs.fillStyle, stroke = attrs.stroke, strokeStyle = attrs.strokeStyle, fillOpacity = attrs.fillOpacity, strokeOpacity = attrs.strokeOpacity, lineWidth = attrs.lineWidth;\n        var el = this.get('el');\n        if (this.canFill) {\n            if (!targetAttrs) {\n                this._setColor(context, 'fill', fill || fillStyle);\n            }\n            else if ('fill' in attrs) {\n                this._setColor(context, 'fill', fill);\n            }\n            else if ('fillStyle' in attrs) {\n                this._setColor(context, 'fill', fillStyle);\n            }\n            if (fillOpacity) {\n                el.setAttribute(SVG_ATTR_MAP['fillOpacity'], fillOpacity);\n            }\n        }\n        if (this.canStroke && lineWidth > 0) {\n            if (!targetAttrs) {\n                this._setColor(context, 'stroke', stroke || strokeStyle);\n            }\n            else if ('stroke' in attrs) {\n                this._setColor(context, 'stroke', stroke);\n            }\n            else if ('strokeStyle' in attrs) {\n                this._setColor(context, 'stroke', strokeStyle);\n            }\n            if (strokeOpacity) {\n                el.setAttribute(SVG_ATTR_MAP['strokeOpacity'], strokeOpacity);\n            }\n            if (lineWidth) {\n                el.setAttribute(SVG_ATTR_MAP['lineWidth'], lineWidth);\n            }\n        }\n    };\n    ShapeBase.prototype._setColor = function (context, attr, value) {\n        var el = this.get('el');\n        if (!value) {\n            el.setAttribute(SVG_ATTR_MAP[attr], 'none');\n            return;\n        }\n        value = value.trim();\n        if (/^[r,R,L,l]{1}[\\s]*\\(/.test(value)) {\n            var id = context.find('gradient', value);\n            if (!id) {\n                id = context.addGradient(value);\n            }\n            el.setAttribute(SVG_ATTR_MAP[attr], \"url(#\" + id + \")\");\n        }\n        else if (/^[p,P]{1}[\\s]*\\(/.test(value)) {\n            var id = context.find('pattern', value);\n            if (!id) {\n                id = context.addPattern(value);\n            }\n            el.setAttribute(SVG_ATTR_MAP[attr], \"url(#\" + id + \")\");\n        }\n        else {\n            el.setAttribute(SVG_ATTR_MAP[attr], value);\n        }\n    };\n    ShapeBase.prototype.shadow = function (context, targetAttrs) {\n        var attrs = this.attr();\n        var _a = targetAttrs || attrs, shadowOffsetX = _a.shadowOffsetX, shadowOffsetY = _a.shadowOffsetY, shadowBlur = _a.shadowBlur, shadowColor = _a.shadowColor;\n        if (shadowOffsetX || shadowOffsetY || shadowBlur || shadowColor) {\n            setShadow(this, context);\n        }\n    };\n    ShapeBase.prototype.transform = function (targetAttrs) {\n        var attrs = this.attr();\n        var matrix = (targetAttrs || attrs).matrix;\n        if (matrix) {\n            setTransform(this);\n        }\n    };\n    ShapeBase.prototype.isInShape = function (refX, refY) {\n        return this.isPointInPath(refX, refY);\n    };\n    ShapeBase.prototype.isPointInPath = function (refX, refY) {\n        var el = this.get('el');\n        var canvas = this.get('canvas');\n        var bbox = canvas.get('el').getBoundingClientRect();\n        var clientX = refX + bbox.left;\n        var clientY = refY + bbox.top;\n        var element = document.elementFromPoint(clientX, clientY);\n        if (element && element.isEqualNode(el)) {\n            return true;\n        }\n        return false;\n    };\n    ShapeBase.prototype.getHitLineWidth = function () {\n        var _a = this.attrs, lineWidth = _a.lineWidth, lineAppendWidth = _a.lineAppendWidth;\n        if (this.isStroke()) {\n            return lineWidth + lineAppendWidth;\n        }\n        return 0;\n    };\n    return ShapeBase;\n}(AbstractShape));\nexport default ShapeBase;\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g-svg/esm/shape/base.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g-svg/esm/shape/base.js"],"names":[],"mappings":"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","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { AbstractShape } from '@antv/g-base';\nimport { setShadow, setTransform, setClip } from '../util/svg';\nimport { createDom } from '../util/dom';\nimport { refreshElement } from '../util/draw';\nimport { SVG_ATTR_MAP } from '../constant';\nimport * as Shape from './index';\nimport Group from '../group';\nimport { getBBoxMethod } from '@antv/g-base/lib/bbox/index';\nvar ShapeBase = /** @class */ (function (_super) {\n    __extends(ShapeBase, _super);\n    function ShapeBase() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'svg';\n        _this.canFill = false;\n        _this.canStroke = false;\n        return _this;\n    }\n    ShapeBase.prototype.getDefaultAttrs = function () {\n        var attrs = _super.prototype.getDefaultAttrs.call(this);\n        // 设置默认值\n        return __assign(__assign({}, attrs), { lineWidth: 1, lineAppendWidth: 0, strokeOpacity: 1, fillOpacity: 1 });\n    };\n    // 覆盖基类的 afterAttrsChange 方法\n    ShapeBase.prototype.afterAttrsChange = function (targetAttrs) {\n        _super.prototype.afterAttrsChange.call(this, targetAttrs);\n        var canvas = this.get('canvas');\n        // 只有挂载到画布下，才对元素进行实际渲染\n        if (canvas && canvas.get('autoDraw')) {\n            var context = canvas.get('context');\n            this.draw(context, targetAttrs);\n        }\n    };\n    ShapeBase.prototype.getShapeBase = function () {\n        return Shape;\n    };\n    ShapeBase.prototype.getGroupBase = function () {\n        return Group;\n    };\n    /**\n     * 一些方法调用会引起画布变化\n     * @param {ChangeType} changeType 改变的类型\n     */\n    ShapeBase.prototype.onCanvasChange = function (changeType) {\n        refreshElement(this, changeType);\n    };\n    ShapeBase.prototype.calculateBBox = function () {\n        var el = this.get('el');\n        var bbox = null;\n        // 包围盒计算依赖于绘制，如果还没有生成对应的 Dom 元素，则包围盒的长宽均为 0\n        if (el) {\n            bbox = el.getBBox();\n        }\n        else {\n            var bboxMethod = getBBoxMethod(this.get('type'));\n            if (bboxMethod) {\n                bbox = bboxMethod(this);\n            }\n        }\n        if (bbox) {\n            var x = bbox.x, y = bbox.y, width = bbox.width, height = bbox.height;\n            var lineWidth = this.getHitLineWidth();\n            var halfWidth = lineWidth / 2;\n            var minX = x - halfWidth;\n            var minY = y - halfWidth;\n            var maxX = x + width + halfWidth;\n            var maxY = y + height + halfWidth;\n            return {\n                x: minX,\n                y: minY,\n                minX: minX,\n                minY: minY,\n                maxX: maxX,\n                maxY: maxY,\n                width: width + lineWidth,\n                height: height + lineWidth,\n            };\n        }\n        return {\n            x: 0,\n            y: 0,\n            minX: 0,\n            minY: 0,\n            maxX: 0,\n            maxY: 0,\n            width: 0,\n            height: 0,\n        };\n    };\n    ShapeBase.prototype.isFill = function () {\n        var _a = this.attr(), fill = _a.fill, fillStyle = _a.fillStyle;\n        return (fill || fillStyle || this.isClipShape()) && this.canFill;\n    };\n    ShapeBase.prototype.isStroke = function () {\n        var _a = this.attr(), stroke = _a.stroke, strokeStyle = _a.strokeStyle;\n        return (stroke || strokeStyle) && this.canStroke;\n    };\n    ShapeBase.prototype.draw = function (context, targetAttrs) {\n        var el = this.get('el');\n        if (this.get('destroyed')) {\n            if (el) {\n                el.parentNode.removeChild(el);\n            }\n        }\n        else {\n            if (!el) {\n                createDom(this);\n            }\n            setClip(this, context);\n            this.createPath(context, targetAttrs);\n            this.shadow(context, targetAttrs);\n            this.strokeAndFill(context, targetAttrs);\n            this.transform(targetAttrs);\n        }\n    };\n    /**\n     * @protected\n     * 绘制图形的路径\n     * @param {Defs} context 上下文\n     * @param {ShapeAttrs} targetAttrs 渲染的目标属性\n     */\n    ShapeBase.prototype.createPath = function (context, targetAttrs) { };\n    // stroke and fill\n    ShapeBase.prototype.strokeAndFill = function (context, targetAttrs) {\n        var attrs = targetAttrs || this.attr();\n        var fill = attrs.fill, fillStyle = attrs.fillStyle, stroke = attrs.stroke, strokeStyle = attrs.strokeStyle, fillOpacity = attrs.fillOpacity, strokeOpacity = attrs.strokeOpacity, lineWidth = attrs.lineWidth;\n        var el = this.get('el');\n        if (this.canFill) {\n            // 初次渲染和更新渲染的逻辑有所不同: 初次渲染值为空时，需要设置为 none，否则就会是黑色，而更新渲染则不需要\n            if (!targetAttrs) {\n                this._setColor(context, 'fill', fill || fillStyle);\n            }\n            else if ('fill' in attrs) {\n                this._setColor(context, 'fill', fill);\n            }\n            else if ('fillStyle' in attrs) {\n                // compatible with fillStyle\n                this._setColor(context, 'fill', fillStyle);\n            }\n            if (fillOpacity) {\n                el.setAttribute(SVG_ATTR_MAP['fillOpacity'], fillOpacity);\n            }\n        }\n        if (this.canStroke && lineWidth > 0) {\n            if (!targetAttrs) {\n                this._setColor(context, 'stroke', stroke || strokeStyle);\n            }\n            else if ('stroke' in attrs) {\n                this._setColor(context, 'stroke', stroke);\n            }\n            else if ('strokeStyle' in attrs) {\n                // compatible with strokeStyle\n                this._setColor(context, 'stroke', strokeStyle);\n            }\n            if (strokeOpacity) {\n                el.setAttribute(SVG_ATTR_MAP['strokeOpacity'], strokeOpacity);\n            }\n            if (lineWidth) {\n                el.setAttribute(SVG_ATTR_MAP['lineWidth'], lineWidth);\n            }\n        }\n    };\n    ShapeBase.prototype._setColor = function (context, attr, value) {\n        var el = this.get('el');\n        if (!value) {\n            // need to set `none` to avoid default value\n            el.setAttribute(SVG_ATTR_MAP[attr], 'none');\n            return;\n        }\n        value = value.trim();\n        if (/^[r,R,L,l]{1}[\\s]*\\(/.test(value)) {\n            var id = context.find('gradient', value);\n            if (!id) {\n                id = context.addGradient(value);\n            }\n            el.setAttribute(SVG_ATTR_MAP[attr], \"url(#\" + id + \")\");\n        }\n        else if (/^[p,P]{1}[\\s]*\\(/.test(value)) {\n            var id = context.find('pattern', value);\n            if (!id) {\n                id = context.addPattern(value);\n            }\n            el.setAttribute(SVG_ATTR_MAP[attr], \"url(#\" + id + \")\");\n        }\n        else {\n            el.setAttribute(SVG_ATTR_MAP[attr], value);\n        }\n    };\n    ShapeBase.prototype.shadow = function (context, targetAttrs) {\n        var attrs = this.attr();\n        var _a = targetAttrs || attrs, shadowOffsetX = _a.shadowOffsetX, shadowOffsetY = _a.shadowOffsetY, shadowBlur = _a.shadowBlur, shadowColor = _a.shadowColor;\n        if (shadowOffsetX || shadowOffsetY || shadowBlur || shadowColor) {\n            setShadow(this, context);\n        }\n    };\n    ShapeBase.prototype.transform = function (targetAttrs) {\n        var attrs = this.attr();\n        var matrix = (targetAttrs || attrs).matrix;\n        if (matrix) {\n            setTransform(this);\n        }\n    };\n    ShapeBase.prototype.isInShape = function (refX, refY) {\n        return this.isPointInPath(refX, refY);\n    };\n    ShapeBase.prototype.isPointInPath = function (refX, refY) {\n        var el = this.get('el');\n        var canvas = this.get('canvas');\n        var bbox = canvas.get('el').getBoundingClientRect();\n        var clientX = refX + bbox.left;\n        var clientY = refY + bbox.top;\n        var element = document.elementFromPoint(clientX, clientY);\n        if (element && element.isEqualNode(el)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * 获取线拾取的宽度\n     * @returns {number} 线的拾取宽度\n     */\n    ShapeBase.prototype.getHitLineWidth = function () {\n        var _a = this.attrs, lineWidth = _a.lineWidth, lineAppendWidth = _a.lineAppendWidth;\n        if (this.isStroke()) {\n            return lineWidth + lineAppendWidth;\n        }\n        return 0;\n    };\n    return ShapeBase;\n}(AbstractShape));\nexport default ShapeBase;\n//# sourceMappingURL=base.js.map"]}]}