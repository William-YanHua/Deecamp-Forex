{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\geometry\\shape\\point\\image.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\geometry\\shape\\point\\image.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { registerShape } from '../base';\r\nimport { getStyle } from '../util/get-style';\r\nregisterShape('point', 'image', {\r\n    draw: function (cfg, container) {\r\n        var size = getStyle(cfg, false, false, 'r').r;\r\n        var points = this.parsePoints(cfg.points);\r\n        var pointPosition = points[0];\r\n        if (cfg.isStack) {\r\n            pointPosition = points[1];\r\n        }\r\n        else if (points.length > 1) {\r\n            var group = container.addGroup();\r\n            for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\r\n                var point = points_1[_i];\r\n                group.addShape('image', {\r\n                    attrs: {\r\n                        x: point.x - size / 2,\r\n                        y: point.y - size,\r\n                        width: size,\r\n                        height: size,\r\n                        img: cfg.shape[1],\r\n                    },\r\n                });\r\n            }\r\n            return group;\r\n        }\r\n        return container.addShape('image', {\r\n            attrs: {\r\n                x: pointPosition.x - size / 2,\r\n                y: pointPosition.y - size,\r\n                width: size,\r\n                height: size,\r\n                img: cfg.shape[1],\r\n            },\r\n        });\r\n    },\r\n    getMarker: function (markerCfg) {\r\n        var color = markerCfg.color;\r\n        return {\r\n            symbol: 'circle',\r\n            style: {\r\n                r: 4.5,\r\n                fill: color,\r\n            },\r\n        };\r\n    },\r\n});\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\geometry\\shape\\point\\image.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\geometry\\shape\\point\\image.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,SAAS,CAAC;AACxC,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC7C,aAAa,CAAC,OAAO,EAAE,OAAO,EAAE;IAC5B,IAAI,EAAE,UAAU,GAAG,EAAE,SAAS;QAC1B,IAAI,IAAI,GAAG,QAAQ,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;QAC9C,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC1C,IAAI,aAAa,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,GAAG,CAAC,OAAO,EAAE;YACb,aAAa,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;SAC7B;aACI,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YACxB,IAAI,KAAK,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;YACjC,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,QAAQ,GAAG,MAAM,EAAE,EAAE,GAAG,QAAQ,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;gBAC5D,IAAI,KAAK,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACzB,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE;oBACpB,KAAK,EAAE;wBACH,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC;wBACrB,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,IAAI;wBACjB,KAAK,EAAE,IAAI;wBACX,MAAM,EAAE,IAAI;wBACZ,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;qBACpB;iBACJ,CAAC,CAAC;aACN;YACD,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,SAAS,CAAC,QAAQ,CAAC,OAAO,EAAE;YAC/B,KAAK,EAAE;gBACH,CAAC,EAAE,aAAa,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC;gBAC7B,CAAC,EAAE,aAAa,CAAC,CAAC,GAAG,IAAI;gBACzB,KAAK,EAAE,IAAI;gBACX,MAAM,EAAE,IAAI;gBACZ,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;aACpB;SACJ,CAAC,CAAC;IACP,CAAC;IACD,SAAS,EAAE,UAAU,SAAS;QAC1B,IAAI,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;QAC5B,OAAO;YACH,MAAM,EAAE,QAAQ;YAChB,KAAK,EAAE;gBACH,CAAC,EAAE,GAAG;gBACN,IAAI,EAAE,KAAK;aACd;SACJ,CAAC;IACN,CAAC;CACJ,CAAC,CAAC","sourcesContent":["import { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\nregisterShape('point', 'image', {\n    draw: function (cfg, container) {\n        var size = getStyle(cfg, false, false, 'r').r;\n        var points = this.parsePoints(cfg.points);\n        var pointPosition = points[0];\n        if (cfg.isStack) {\n            pointPosition = points[1];\n        }\n        else if (points.length > 1) {\n            var group = container.addGroup();\n            for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n                var point = points_1[_i];\n                group.addShape('image', {\n                    attrs: {\n                        x: point.x - size / 2,\n                        y: point.y - size,\n                        width: size,\n                        height: size,\n                        img: cfg.shape[1],\n                    },\n                });\n            }\n            return group;\n        }\n        return container.addShape('image', {\n            attrs: {\n                x: pointPosition.x - size / 2,\n                y: pointPosition.y - size,\n                width: size,\n                height: size,\n                img: cfg.shape[1],\n            },\n        });\n    },\n    getMarker: function (markerCfg) {\n        var color = markerCfg.color;\n        return {\n            symbol: 'circle',\n            style: {\n                r: 4.5,\n                fill: color,\n            },\n        };\n    },\n});\n//# sourceMappingURL=image.js.map"]}]}