{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\grouped-bar\\layer.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\grouped-bar\\layer.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\r\nimport { deepMix, valuesOfKey, sortBy } from '@antv/util';\r\nimport { registerPlotType } from '../../base/global';\r\nimport BaseBarLayer from '../bar/layer';\r\nimport './theme';\r\nvar GroupedBarLayer = (function (_super) {\r\n    __extends(GroupedBarLayer, _super);\r\n    function GroupedBarLayer() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.type = 'groupedBar';\r\n        return _this;\r\n    }\r\n    GroupedBarLayer.getDefaultOptions = function () {\r\n        return deepMix({}, _super.getDefaultOptions.call(this), {\r\n            xAxis: {\r\n                visible: true,\r\n                grid: {\r\n                    visible: true,\r\n                },\r\n            },\r\n            yAxis: {\r\n                visible: true,\r\n                title: {\r\n                    visible: false,\r\n                },\r\n            },\r\n            label: {\r\n                visible: true,\r\n                position: 'right',\r\n                adjustColor: true,\r\n            },\r\n            legend: {\r\n                visible: true,\r\n                position: 'right-top',\r\n                offsetY: 0,\r\n            },\r\n        });\r\n    };\r\n    GroupedBarLayer.prototype.afterRender = function () {\r\n        _super.prototype.afterRender.call(this);\r\n        var names = valuesOfKey(this.options.data, this.options.groupField) || [];\r\n        this.view.on('tooltip:change', function (e) {\r\n            var _a = e.items, items = _a === void 0 ? [] : _a;\r\n            var fixedItems = sortBy(items.slice(), function (item) {\r\n                return names.indexOf(item.name);\r\n            }).reverse();\r\n            fixedItems.forEach(function (item, idx) {\r\n                e.items[idx] = item;\r\n            });\r\n        });\r\n    };\r\n    GroupedBarLayer.prototype.getColorScale = function () {\r\n        var groupField = this.options.groupField;\r\n        if (groupField) {\r\n            return this.view.getScaleByField(groupField);\r\n        }\r\n    };\r\n    GroupedBarLayer.prototype.scale = function () {\r\n        var defaultMeta = {};\r\n        defaultMeta[this.options.groupField] = {\r\n            values: valuesOfKey(this.options.data, this.options.groupField),\r\n        };\r\n        if (!this.options.meta) {\r\n            this.options.meta = defaultMeta;\r\n        }\r\n        else {\r\n            this.options.meta = deepMix({}, this.options.meta, defaultMeta);\r\n        }\r\n        _super.prototype.scale.call(this);\r\n    };\r\n    GroupedBarLayer.prototype.adjustBar = function (bar) {\r\n        bar.adjust = [\r\n            {\r\n                type: 'dodge',\r\n                marginRatio: 0.1,\r\n            },\r\n        ];\r\n    };\r\n    GroupedBarLayer.prototype.geometryTooltip = function () {\r\n        this.bar.tooltip = {};\r\n        var tooltipOptions = this.options.tooltip;\r\n        if (tooltipOptions.fields) {\r\n            this.bar.tooltip.fields = tooltipOptions.fields;\r\n        }\r\n        if (tooltipOptions.formatter) {\r\n            this.bar.tooltip.callback = tooltipOptions.formatter;\r\n            if (!tooltipOptions.fields) {\r\n                this.bar.tooltip.fields = [this.options.xField, this.options.yField, this.options.groupField];\r\n            }\r\n        }\r\n    };\r\n    return GroupedBarLayer;\r\n}(BaseBarLayer));\r\nexport default GroupedBarLayer;\r\nregisterPlotType('groupedBar', GroupedBarLayer);\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\grouped-bar\\layer.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\esm\\plots\\grouped-bar\\layer.js"],"names":[],"mappings":"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","sourcesContent":["import { __extends } from \"tslib\";\nimport { deepMix, valuesOfKey, sortBy } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport BaseBarLayer from '../bar/layer';\nimport './theme';\nvar GroupedBarLayer = /** @class */ (function (_super) {\n    __extends(GroupedBarLayer, _super);\n    function GroupedBarLayer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'groupedBar';\n        return _this;\n    }\n    GroupedBarLayer.getDefaultOptions = function () {\n        return deepMix({}, _super.getDefaultOptions.call(this), {\n            xAxis: {\n                visible: true,\n                grid: {\n                    visible: true,\n                },\n            },\n            yAxis: {\n                visible: true,\n                title: {\n                    visible: false,\n                },\n            },\n            label: {\n                visible: true,\n                position: 'right',\n                adjustColor: true,\n            },\n            legend: {\n                visible: true,\n                position: 'right-top',\n                offsetY: 0,\n            },\n        });\n    };\n    GroupedBarLayer.prototype.afterRender = function () {\n        _super.prototype.afterRender.call(this);\n        var names = valuesOfKey(this.options.data, this.options.groupField) || [];\n        this.view.on('tooltip:change', function (e) {\n            var _a = e.items, items = _a === void 0 ? [] : _a;\n            var fixedItems = sortBy(items.slice(), function (item) {\n                return names.indexOf(item.name);\n            }).reverse();\n            fixedItems.forEach(function (item, idx) {\n                e.items[idx] = item;\n            });\n        });\n    };\n    GroupedBarLayer.prototype.getColorScale = function () {\n        var groupField = this.options.groupField;\n        if (groupField) {\n            return this.view.getScaleByField(groupField);\n        }\n    };\n    GroupedBarLayer.prototype.scale = function () {\n        var defaultMeta = {};\n        defaultMeta[this.options.groupField] = {\n            values: valuesOfKey(this.options.data, this.options.groupField),\n        };\n        if (!this.options.meta) {\n            this.options.meta = defaultMeta;\n        }\n        else {\n            this.options.meta = deepMix({}, this.options.meta, defaultMeta);\n        }\n        _super.prototype.scale.call(this);\n    };\n    GroupedBarLayer.prototype.adjustBar = function (bar) {\n        bar.adjust = [\n            {\n                type: 'dodge',\n                marginRatio: 0.1,\n            },\n        ];\n    };\n    GroupedBarLayer.prototype.geometryTooltip = function () {\n        this.bar.tooltip = {};\n        var tooltipOptions = this.options.tooltip;\n        if (tooltipOptions.fields) {\n            this.bar.tooltip.fields = tooltipOptions.fields;\n        }\n        if (tooltipOptions.formatter) {\n            this.bar.tooltip.callback = tooltipOptions.formatter;\n            if (!tooltipOptions.fields) {\n                this.bar.tooltip.fields = [this.options.xField, this.options.yField, this.options.groupField];\n            }\n        }\n    };\n    return GroupedBarLayer;\n}(BaseBarLayer));\nexport default GroupedBarLayer;\nregisterPlotType('groupedBar', GroupedBarLayer);\n//# sourceMappingURL=layer.js.map"]}]}