{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\scale\\esm\\tick-method\\log.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\scale\\esm\\tick-method\\log.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { getLogPositiveMin, log } from '../util/math';\r\nexport default function calculateLogTicks(cfg) {\r\n    var base = cfg.base, tickCount = cfg.tickCount, min = cfg.min, max = cfg.max, values = cfg.values;\r\n    var minTick;\r\n    var maxTick = log(base, max);\r\n    if (min > 0) {\r\n        minTick = Math.floor(log(base, min));\r\n    }\r\n    else {\r\n        var positiveMin = getLogPositiveMin(values, base, max);\r\n        minTick = Math.floor(log(base, positiveMin));\r\n    }\r\n    var count = maxTick - minTick;\r\n    var avg = Math.ceil(count / tickCount);\r\n    var ticks = [];\r\n    for (var i = minTick; i < maxTick + avg; i = i + avg) {\r\n        ticks.push(Math.pow(base, i));\r\n    }\r\n    if (min <= 0) {\r\n        ticks.unshift(0);\r\n    }\r\n    return ticks;\r\n}\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\scale\\esm\\tick-method\\log.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\scale\\esm\\tick-method\\log.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,GAAG,EAAE,MAAM,cAAc,CAAC;AAMtD,MAAM,CAAC,OAAO,UAAU,iBAAiB,CAAC,GAAG;IACzC,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,SAAS,GAAG,GAAG,CAAC,SAAS,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;IAClG,IAAI,OAAO,CAAC;IACZ,IAAI,OAAO,GAAG,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IAC7B,IAAI,GAAG,GAAG,CAAC,EAAE;QACT,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;KACxC;SACI;QACD,IAAI,WAAW,GAAG,iBAAiB,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;QACvD,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC;KAChD;IACD,IAAI,KAAK,GAAG,OAAO,GAAG,OAAO,CAAC;IAC9B,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,CAAC;IACvC,IAAI,KAAK,GAAG,EAAE,CAAC;IACf,KAAK,IAAI,CAAC,GAAG,OAAO,EAAE,CAAC,GAAG,OAAO,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE;QAClD,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;KACjC;IACD,IAAI,GAAG,IAAI,CAAC,EAAE;QAEV,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;KACpB;IACD,OAAO,KAAK,CAAC;AACjB,CAAC","sourcesContent":["import { getLogPositiveMin, log } from '../util/math';\n/**\n * 计算 log 的 ticks，考虑 min = 0 的场景\n * @param cfg 度量的配置项\n * @returns 计算后的 ticks\n */\nexport default function calculateLogTicks(cfg) {\n    var base = cfg.base, tickCount = cfg.tickCount, min = cfg.min, max = cfg.max, values = cfg.values;\n    var minTick;\n    var maxTick = log(base, max);\n    if (min > 0) {\n        minTick = Math.floor(log(base, min));\n    }\n    else {\n        var positiveMin = getLogPositiveMin(values, base, max);\n        minTick = Math.floor(log(base, positiveMin));\n    }\n    var count = maxTick - minTick;\n    var avg = Math.ceil(count / tickCount);\n    var ticks = [];\n    for (var i = minTick; i < maxTick + avg; i = i + avg) {\n        ticks.push(Math.pow(base, i));\n    }\n    if (min <= 0) {\n        // 最小值 <= 0 时显示 0\n        ticks.unshift(0);\n    }\n    return ticks;\n}\n//# sourceMappingURL=log.js.map"]}]}