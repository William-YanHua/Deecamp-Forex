{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\interaction\\action\\element\\link-by-color.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\interaction\\action\\element\\link-by-color.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\r\nimport Action from '../base';\r\nimport { getCurrentElement, getElementValue, getElementsByField } from '../util';\r\nimport { each } from '@antv/util';\r\nvar LinkByColor = (function (_super) {\r\n    __extends(LinkByColor, _super);\r\n    function LinkByColor() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.cache = {};\r\n        return _this;\r\n    }\r\n    LinkByColor.prototype.getColorScale = function (view, element) {\r\n        var colorAttr = element.geometry.getAttribute('color');\r\n        if (!colorAttr) {\r\n            return null;\r\n        }\r\n        var scale = view.getScaleByField(colorAttr.getFields()[0]);\r\n        return scale;\r\n    };\r\n    LinkByColor.prototype.getLinkPath = function (element, nextElement) {\r\n        var bbox = element.shape.getCanvasBBox();\r\n        var nextBBox = nextElement.shape.getCanvasBBox();\r\n        var path = [\r\n            ['M', bbox.maxX, bbox.minY],\r\n            ['L', nextBBox.minX, nextBBox.minY],\r\n            ['L', nextBBox.minX, nextBBox.maxY],\r\n            ['L', bbox.maxX, bbox.maxY],\r\n            ['Z'],\r\n        ];\r\n        return path;\r\n    };\r\n    LinkByColor.prototype.addLinkShape = function (group, element, nextElement) {\r\n        group.addShape({\r\n            type: 'path',\r\n            attrs: {\r\n                opacity: 0.4,\r\n                fill: element.shape.attr('fill'),\r\n                path: this.getLinkPath(element, nextElement),\r\n            },\r\n        });\r\n    };\r\n    LinkByColor.prototype.linkByElement = function (element) {\r\n        var _this = this;\r\n        var view = this.context.view;\r\n        var scale = this.getColorScale(view, element);\r\n        if (!scale) {\r\n            return;\r\n        }\r\n        var value = getElementValue(element, scale.field);\r\n        if (!this.cache[value]) {\r\n            var elements_1 = getElementsByField(view, scale.field, value);\r\n            var linkGroup = this.linkGroup;\r\n            var group_1 = linkGroup.addGroup();\r\n            this.cache[value] = group_1;\r\n            var count_1 = elements_1.length;\r\n            each(elements_1, function (el, index) {\r\n                if (index < count_1 - 1) {\r\n                    var nextEl = elements_1[index + 1];\r\n                    _this.addLinkShape(group_1, el, nextEl);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    LinkByColor.prototype.removeLink = function (element) {\r\n        var scale = this.getColorScale(this.context.view, element);\r\n        if (!scale) {\r\n            return;\r\n        }\r\n        var value = getElementValue(element, scale.field);\r\n        if (this.cache[value]) {\r\n            this.cache[value].remove();\r\n            this.cache[value] = null;\r\n        }\r\n    };\r\n    LinkByColor.prototype.link = function () {\r\n        var context = this.context;\r\n        if (!this.linkGroup) {\r\n            this.linkGroup = context.view.foregroundGroup.addGroup({\r\n                capture: false,\r\n            });\r\n        }\r\n        var element = getCurrentElement(context);\r\n        if (element) {\r\n            this.linkByElement(element);\r\n        }\r\n    };\r\n    LinkByColor.prototype.unlink = function () {\r\n        var element = getCurrentElement(this.context);\r\n        if (element) {\r\n            this.removeLink(element);\r\n        }\r\n    };\r\n    LinkByColor.prototype.clear = function () {\r\n        if (this.linkGroup) {\r\n            this.linkGroup.clear();\r\n        }\r\n    };\r\n    LinkByColor.prototype.destroy = function () {\r\n        _super.prototype.destroy.call(this);\r\n        if (this.linkGroup) {\r\n            this.linkGroup.remove();\r\n        }\r\n    };\r\n    return LinkByColor;\r\n}(Action));\r\nexport default LinkByColor;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\interaction\\action\\element\\link-by-color.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2plot\\node_modules\\@antv\\g2\\esm\\interaction\\action\\element\\link-by-color.js"],"names":[],"mappings":"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","sourcesContent":["import { __extends } from \"tslib\";\nimport Action from '../base';\nimport { getCurrentElement, getElementValue, getElementsByField } from '../util';\nimport { each } from '@antv/util';\n/**\n * Link Elements by color\n * @ignore\n */\nvar LinkByColor = /** @class */ (function (_super) {\n    __extends(LinkByColor, _super);\n    function LinkByColor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.cache = {};\n        return _this;\n    }\n    // 获取颜色对应的 scale\n    LinkByColor.prototype.getColorScale = function (view, element) {\n        var colorAttr = element.geometry.getAttribute('color');\n        if (!colorAttr) {\n            return null;\n        }\n        var scale = view.getScaleByField(colorAttr.getFields()[0]);\n        return scale;\n    };\n    // 获取连接的 path\n    LinkByColor.prototype.getLinkPath = function (element, nextElement) {\n        var bbox = element.shape.getCanvasBBox();\n        var nextBBox = nextElement.shape.getCanvasBBox();\n        var path = [\n            ['M', bbox.maxX, bbox.minY],\n            ['L', nextBBox.minX, nextBBox.minY],\n            ['L', nextBBox.minX, nextBBox.maxY],\n            ['L', bbox.maxX, bbox.maxY],\n            ['Z'],\n        ];\n        return path;\n    };\n    // 添加连接的图形\n    LinkByColor.prototype.addLinkShape = function (group, element, nextElement) {\n        group.addShape({\n            type: 'path',\n            attrs: {\n                opacity: 0.4,\n                fill: element.shape.attr('fill'),\n                path: this.getLinkPath(element, nextElement),\n            },\n        });\n    };\n    // 使用图形连接\n    LinkByColor.prototype.linkByElement = function (element) {\n        var _this = this;\n        var view = this.context.view;\n        var scale = this.getColorScale(view, element);\n        if (!scale) {\n            return;\n        }\n        var value = getElementValue(element, scale.field);\n        if (!this.cache[value]) {\n            var elements_1 = getElementsByField(view, scale.field, value);\n            var linkGroup = this.linkGroup;\n            var group_1 = linkGroup.addGroup();\n            this.cache[value] = group_1; // 缓存\n            var count_1 = elements_1.length;\n            each(elements_1, function (el, index) {\n                if (index < count_1 - 1) {\n                    var nextEl = elements_1[index + 1];\n                    _this.addLinkShape(group_1, el, nextEl);\n                }\n            });\n        }\n    };\n    // 移除连接\n    LinkByColor.prototype.removeLink = function (element) {\n        var scale = this.getColorScale(this.context.view, element);\n        if (!scale) {\n            return;\n        }\n        var value = getElementValue(element, scale.field);\n        if (this.cache[value]) {\n            this.cache[value].remove();\n            this.cache[value] = null;\n        }\n    };\n    /**\n     * 连接 elements\n     */\n    LinkByColor.prototype.link = function () {\n        var context = this.context;\n        if (!this.linkGroup) {\n            // 不允许被拾取\n            this.linkGroup = context.view.foregroundGroup.addGroup({\n                capture: false,\n            });\n        }\n        var element = getCurrentElement(context);\n        if (element) {\n            this.linkByElement(element);\n        }\n    };\n    /**\n     * 取消连接 elements\n     */\n    LinkByColor.prototype.unlink = function () {\n        var element = getCurrentElement(this.context);\n        if (element) {\n            this.removeLink(element);\n        }\n    };\n    /**\n     * 清除所有连接\n     */\n    LinkByColor.prototype.clear = function () {\n        if (this.linkGroup) {\n            this.linkGroup.clear();\n        }\n    };\n    /**\n     * 销毁\n     */\n    LinkByColor.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        if (this.linkGroup) {\n            this.linkGroup.remove();\n        }\n    };\n    return LinkByColor;\n}(Action));\nexport default LinkByColor;\n//# sourceMappingURL=link-by-color.js.map"]}]}