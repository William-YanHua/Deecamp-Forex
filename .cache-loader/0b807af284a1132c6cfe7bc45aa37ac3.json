{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/heatmap/layer.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/heatmap/layer.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { __assign, __extends } from \"tslib\";\nimport { deepMix, valuesOfKey, each, isObject, isFunction } from '@antv/util';\nimport { getScale } from '@antv/scale';\nimport { registerPlotType } from '../../base/global';\nimport ViewLayer from '../../base/view-layer';\nimport { getRectPath, getCirclePath, getCircleCurve } from './shape';\nimport { getPlotComponents } from './component';\nvar HeatmapLayer = (function (_super) {\n    __extends(HeatmapLayer, _super);\n    function HeatmapLayer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'heatmap';\n        _this.gridSize = [];\n        _this.plotComponents = [];\n        return _this;\n    }\n    HeatmapLayer.getDefaultOptions = function () {\n        return deepMix({}, _super.getDefaultOptions.call(this), {\n            shapeType: 'rect',\n            legend: {\n                visible: true,\n                position: 'right-center',\n            },\n            tooltip: {\n                shared: false,\n                showCrosshairs: false,\n                showMarkers: false,\n            },\n            xAxis: {\n                visible: true,\n                gridAlign: 'center',\n                grid: {\n                    visible: true,\n                },\n                tickLine: {\n                    visible: true,\n                },\n                line: {\n                    visible: false,\n                },\n                label: {\n                    visible: true,\n                    autoHide: true,\n                    autoRotate: true,\n                },\n            },\n            yAxis: {\n                visible: true,\n                gridAlign: 'center',\n                grid: {\n                    visible: true,\n                    align: 'center',\n                },\n                tickLine: {\n                    visible: true,\n                },\n                label: {\n                    autoHide: true,\n                    autoRotate: false,\n                },\n            },\n            color: ['#9ae3d5', '#66cdbb', '#e7a744', '#f1e066', '#f27664', '#e7c1a2'],\n            label: {\n                visible: true,\n                adjustColor: true,\n                adjustPosition: true,\n                offset: 0,\n                style: {\n                    stroke: 'rgba(255,255,255,0)',\n                    lineWidth: 0,\n                },\n            },\n            interactions: [{ type: 'tooltip' }],\n        });\n    };\n    HeatmapLayer.prototype.afterRender = function () {\n        this.renderPlotComponents();\n        _super.prototype.afterRender.call(this);\n    };\n    HeatmapLayer.prototype.changeShape = function (type) {\n        if (this.options.shapeType === type) {\n            return;\n        }\n        this.options.shapeType = type;\n        if (type === 'rect') {\n            var shapes = this.getShape();\n            this.circleToRect(shapes);\n        }\n        else if (type === 'circle') {\n            var shapes = this.getShape();\n            this.rectToCircle(shapes);\n        }\n    };\n    HeatmapLayer.prototype.mappingSize = function (field) {\n        if (this.options.sizeField && this.options.sizeField === field) {\n            return;\n        }\n        this.options.sizeField = field;\n        var values = valuesOfKey(this.options.data, field);\n        var min = Math.min.apply(Math, values);\n        var max = Math.max.apply(Math, values);\n        var LinearScale = getScale('linear');\n        var scale = new LinearScale({\n            min: min,\n            max: max,\n        });\n        var shapes = this.getShape();\n        if (this.options.shapeType === 'rect') {\n            this.rectSizeMapping(shapes, scale, field);\n        }\n        else if (this.options.shapeType === 'circle') {\n            this.circleSizeMapping(shapes, scale, field);\n        }\n    };\n    HeatmapLayer.prototype.disableMappingSize = function () {\n        var shapes = this.getShape();\n        if (this.options.shapeType === 'rect') {\n            this.rectDisableSizeMapping(shapes);\n        }\n        else if (this.options.shapeType === 'circle') {\n            this.circleDisableSizeMapping(shapes);\n        }\n    };\n    HeatmapLayer.prototype.destroy = function () {\n        each(this.plotComponents, function (component) {\n            component.destroy();\n        });\n        _super.prototype.destroy.call(this);\n    };\n    HeatmapLayer.prototype.getSizeScale = function () {\n        var sizeField = this.options.sizeField;\n        if (sizeField) {\n            this.view.getScaleByField(sizeField);\n        }\n    };\n    HeatmapLayer.prototype.geometryParser = function () {\n        return '';\n    };\n    HeatmapLayer.prototype.coord = function () {\n        return;\n    };\n    HeatmapLayer.prototype.legend = function () {\n        this.setConfig('legends', false);\n    };\n    HeatmapLayer.prototype.addGeometry = function () {\n        this.gridSize = this.getGridSize();\n        var geomConfig;\n        if (this.options.shapeType === 'rect') {\n            geomConfig = this.addRect();\n        }\n        else {\n            var circle = this.addCircle();\n            geomConfig = circle;\n        }\n        if (this.options.shapeStyle) {\n            var styleConfig = {};\n            if (isObject(this.options.shapeStyle)) {\n                styleConfig.cfg = this.options.shapeStyle;\n            }\n            else if (isFunction(this.options.shapeType)) {\n                styleConfig.fields = [\n                    this.options.colorField,\n                    this.options.xField,\n                    this.options.yField,\n                    this.options.sizeField,\n                ];\n                styleConfig.callback = this.options.shapeType;\n            }\n            geomConfig.style = styleConfig;\n        }\n        if (this.options.tooltip && (this.options.tooltip.fields || this.options.tooltip.formatter)) {\n            this.geometryTooltip(geomConfig);\n        }\n        this.setConfig('geometry', geomConfig);\n    };\n    HeatmapLayer.prototype.addRect = function () {\n        var size = [0.3, 0.9];\n        if (this.options.shapeSize) {\n            size[0] = this.options.shapeSize[0] / this.gridSize[0];\n            size[1] = this.options.shapeSize[1] / this.gridSize[1];\n        }\n        var rect = {\n            type: 'polygon',\n            position: {\n                fields: [this.options.xField, this.options.yField],\n            },\n            color: {\n                fields: [this.options.colorField],\n                values: this.options.color,\n            },\n            shape: {\n                values: ['rect'],\n            },\n            label: false,\n        };\n        if (this.options.sizeField) {\n            rect.size = {\n                fields: [this.options.sizeField],\n                values: size,\n            };\n        }\n        else {\n            rect.size = {\n                values: [1],\n            };\n        }\n        return rect;\n    };\n    HeatmapLayer.prototype.addCircle = function () {\n        var size = [0.3, 0.9];\n        if (this.options.shapeSize) {\n            size = this.options.shapeSize;\n        }\n        else {\n            size[0] = this.gridSize[0] * size[0] * 0.5;\n            size[1] = this.gridSize[1] * size[1] * 0.5;\n        }\n        var circle = {\n            type: 'point',\n            position: {\n                fields: [this.options.xField, this.options.yField],\n            },\n            color: {\n                fields: [this.options.colorField],\n                values: this.options.color,\n            },\n            shape: {\n                values: ['curvePoint'],\n            },\n            label: false,\n        };\n        if (this.options.sizeField) {\n            circle.size = {\n                fields: [this.options.sizeField],\n                values: size,\n            };\n        }\n        else {\n            circle.size = {\n                values: [Math.min(this.gridSize[0], this.gridSize[1]) * 0.5 * 0.9],\n            };\n        }\n        return circle;\n    };\n    HeatmapLayer.prototype.geometryTooltip = function (config) {\n        config.tooltip = {};\n        var tooltipOptions = this.options.tooltip;\n        if (tooltipOptions.fields) {\n            config.tooltip.fields = tooltipOptions.fields;\n        }\n        if (tooltipOptions.formatter) {\n            config.tooltip.callback = tooltipOptions.formatter;\n            if (!tooltipOptions.fields) {\n                config.tooltip.fields = [this.options.xField, this.options.yField];\n                if (this.options.colorField) {\n                    config.tooltip.fields.push(this.options.colorField);\n                }\n            }\n        }\n    };\n    HeatmapLayer.prototype.getGridSize = function () {\n        if (this.options.padding === 'auto') {\n            return [0, 0];\n        }\n        else {\n            var viewRange = this.getViewRange();\n            var _a = this.options, padding = _a.padding, xField = _a.xField, yField = _a.yField, data = _a.data;\n            var width = viewRange.width - padding[1] - padding[3];\n            var height = viewRange.height - padding[0] - padding[2];\n            var xCount = valuesOfKey(data, xField).length;\n            var yCount = valuesOfKey(data, yField).length;\n            return [width / xCount, height / yCount];\n        }\n    };\n    HeatmapLayer.prototype.circleToRect = function (shapes) {\n        var _this = this;\n        var gridSize = this.gridSize;\n        each(shapes, function (shape) {\n            var _a = shape.get('origin'), x = _a.x, y = _a.y, size = _a.size;\n            var sizeRatio = (size * 2) / Math.min(gridSize[0], gridSize[1]);\n            if (!_this.options.sizeField) {\n                sizeRatio = 1;\n            }\n            var curvePath = getCircleCurve(x, y, size);\n            var rectPath = getRectPath(x, y, gridSize[0], gridSize[1], sizeRatio);\n            shape.stopAnimate();\n            shape.attr('path', curvePath);\n            shape.animate({\n                path: rectPath,\n            }, 500, 'easeLinear');\n        });\n    };\n    HeatmapLayer.prototype.rectToCircle = function (shapes) {\n        var _this = this;\n        each(shapes, function (shape) {\n            var coord = shape.get('coord');\n            var points = shape.get('origin').points;\n            var ps = [];\n            each(points, function (p) {\n                ps.push(coord.convertPoint(p));\n            });\n            var bbox = shape.getBBox();\n            var width = bbox.width;\n            var height = bbox.height;\n            var centerX = bbox.minX + width / 2;\n            var centerY = bbox.minY + height / 2;\n            var offsetRatio = _this.options.sizeField ? 1 : 0.9;\n            var curvePath = getCircleCurve(centerX, centerY, (Math.min(width, height) / 2) * offsetRatio);\n            var circlePath = getCirclePath(centerX, centerY, (Math.min(width, height) / 2) * offsetRatio);\n            shape.stopAnimate();\n            shape.animate({\n                path: curvePath,\n            }, 500, 'easeLinear', function () {\n                shape.attr('path', circlePath);\n            });\n        });\n    };\n    HeatmapLayer.prototype.rectSizeMapping = function (shapes, scale, field) {\n        each(shapes, function (shape) {\n            var data = shape.get('origin').data;\n            var ratio = 0.3 + scale.scale(data[field]) * 0.6;\n            shape.get('origin').size = ratio;\n            var bbox = shape.getBBox();\n            var width = bbox.width;\n            var height = bbox.height;\n            var centerX = bbox.minX + width / 2;\n            var centerY = bbox.minY + height / 2;\n            var path = getRectPath(centerX, centerY, width, height, ratio);\n            shape.stopAnimate();\n            shape.animate({\n                path: path,\n            }, 500, 'easeLinear');\n        });\n    };\n    HeatmapLayer.prototype.circleSizeMapping = function (shapes, scale, field) {\n        each(shapes, function (shape) {\n            var data = shape.get('origin').data;\n            var ratio = 0.3 + scale.scale(data[field]) * 0.6;\n            var _a = shape.get('origin'), x = _a.x, y = _a.y, size = _a.size;\n            var path = getCirclePath(x, y, size * ratio);\n            shape.get('origin').size = size * ratio;\n            shape.stopAnimate();\n            shape.animate({\n                path: path,\n            }, 500, 'easeLinear');\n        });\n    };\n    HeatmapLayer.prototype.circleDisableSizeMapping = function (shapes) {\n        var _this = this;\n        this.options.sizeField = null;\n        each(shapes, function (shape) {\n            var _a = shape.get('origin'), x = _a.x, y = _a.y;\n            var size = Math.min(_this.gridSize[0], _this.gridSize[1]) * 0.9;\n            shape.get('origin').size = size / 2;\n            var path = getCirclePath(x, y, size / 2);\n            shape.stopAnimate();\n            shape.animate({\n                path: path,\n            }, 500, 'easeLinear');\n        });\n    };\n    HeatmapLayer.prototype.rectDisableSizeMapping = function (shapes) {\n        var _this = this;\n        this.options.sizeField = null;\n        each(shapes, function (shape) {\n            var bbox = shape.getBBox();\n            var width = bbox.width;\n            var height = bbox.height;\n            var centerX = bbox.minX + width / 2;\n            var centerY = bbox.minY + height / 2;\n            var path = getRectPath(centerX, centerY, _this.gridSize[0], _this.gridSize[1], 1);\n            shape.get('origin').size = 1;\n            shape.stopAnimate();\n            shape.animate({\n                path: path,\n            }, 500, 'easeLinear');\n        });\n    };\n    HeatmapLayer.prototype.getShape = function () {\n        var elements = this.view.geometries[0].elements;\n        var shapes = [];\n        each(elements, function (ele) {\n            shapes.push(ele.shape);\n        });\n        return shapes;\n    };\n    HeatmapLayer.prototype.renderPlotComponents = function () {\n        var _this = this;\n        each(this.plotComponents, function (component) {\n            component.destroy();\n        });\n        this.plotComponents = [];\n        var componentsType = ['label', 'legend'];\n        each(componentsType, function (t) {\n            var cfg = __assign({ view: _this.view, plot: _this }, _this.options[t]);\n            var component = getPlotComponents(_this, t, cfg);\n            if (component) {\n                component.render();\n                _this.plotComponents.push(component);\n            }\n        });\n    };\n    return HeatmapLayer;\n}(ViewLayer));\nexport default HeatmapLayer;\nregisterPlotType('heatmap', HeatmapLayer);\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/heatmap/layer.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/plots/heatmap/layer.js"],"names":[],"mappings":"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","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { deepMix, valuesOfKey, each, isObject, isFunction } from '@antv/util';\nimport { getScale } from '@antv/scale';\nimport { registerPlotType } from '../../base/global';\nimport ViewLayer from '../../base/view-layer';\nimport { getRectPath, getCirclePath, getCircleCurve } from './shape';\nimport { getPlotComponents } from './component';\nvar HeatmapLayer = /** @class */ (function (_super) {\n    __extends(HeatmapLayer, _super);\n    function HeatmapLayer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'heatmap';\n        _this.gridSize = [];\n        _this.plotComponents = [];\n        return _this;\n    }\n    HeatmapLayer.getDefaultOptions = function () {\n        return deepMix({}, _super.getDefaultOptions.call(this), {\n            shapeType: 'rect',\n            legend: {\n                visible: true,\n                position: 'right-center',\n            },\n            tooltip: {\n                shared: false,\n                showCrosshairs: false,\n                showMarkers: false,\n            },\n            xAxis: {\n                visible: true,\n                gridAlign: 'center',\n                grid: {\n                    visible: true,\n                },\n                tickLine: {\n                    visible: true,\n                },\n                line: {\n                    visible: false,\n                },\n                label: {\n                    visible: true,\n                    autoHide: true,\n                    autoRotate: true,\n                },\n            },\n            yAxis: {\n                visible: true,\n                gridAlign: 'center',\n                grid: {\n                    visible: true,\n                    align: 'center',\n                },\n                tickLine: {\n                    visible: true,\n                },\n                label: {\n                    autoHide: true,\n                    autoRotate: false,\n                },\n            },\n            color: ['#9ae3d5', '#66cdbb', '#e7a744', '#f1e066', '#f27664', '#e7c1a2'],\n            label: {\n                visible: true,\n                adjustColor: true,\n                adjustPosition: true,\n                offset: 0,\n                style: {\n                    stroke: 'rgba(255,255,255,0)',\n                    lineWidth: 0,\n                },\n            },\n            interactions: [{ type: 'tooltip' }],\n        });\n    };\n    HeatmapLayer.prototype.afterRender = function () {\n        this.renderPlotComponents();\n        _super.prototype.afterRender.call(this);\n    };\n    HeatmapLayer.prototype.changeShape = function (type) {\n        if (this.options.shapeType === type) {\n            return;\n        }\n        this.options.shapeType = type;\n        if (type === 'rect') {\n            var shapes = this.getShape();\n            this.circleToRect(shapes);\n        }\n        else if (type === 'circle') {\n            var shapes = this.getShape();\n            this.rectToCircle(shapes);\n        }\n    };\n    HeatmapLayer.prototype.mappingSize = function (field) {\n        if (this.options.sizeField && this.options.sizeField === field) {\n            return;\n        }\n        this.options.sizeField = field;\n        // 创建scale\n        var values = valuesOfKey(this.options.data, field);\n        var min = Math.min.apply(Math, values);\n        var max = Math.max.apply(Math, values);\n        var LinearScale = getScale('linear');\n        var scale = new LinearScale({\n            min: min,\n            max: max,\n        });\n        var shapes = this.getShape();\n        if (this.options.shapeType === 'rect') {\n            this.rectSizeMapping(shapes, scale, field);\n        }\n        else if (this.options.shapeType === 'circle') {\n            this.circleSizeMapping(shapes, scale, field);\n        }\n    };\n    HeatmapLayer.prototype.disableMappingSize = function () {\n        var shapes = this.getShape();\n        if (this.options.shapeType === 'rect') {\n            this.rectDisableSizeMapping(shapes);\n        }\n        else if (this.options.shapeType === 'circle') {\n            this.circleDisableSizeMapping(shapes);\n        }\n    };\n    HeatmapLayer.prototype.destroy = function () {\n        each(this.plotComponents, function (component) {\n            component.destroy();\n        });\n        _super.prototype.destroy.call(this);\n    };\n    HeatmapLayer.prototype.getSizeScale = function () {\n        var sizeField = this.options.sizeField;\n        if (sizeField) {\n            this.view.getScaleByField(sizeField);\n        }\n    };\n    HeatmapLayer.prototype.geometryParser = function () {\n        return '';\n    };\n    HeatmapLayer.prototype.coord = function () {\n        return;\n    };\n    HeatmapLayer.prototype.legend = function () {\n        this.setConfig('legends', false);\n    };\n    HeatmapLayer.prototype.addGeometry = function () {\n        this.gridSize = this.getGridSize();\n        var geomConfig;\n        if (this.options.shapeType === 'rect') {\n            geomConfig = this.addRect();\n        }\n        else {\n            var circle = this.addCircle();\n            geomConfig = circle;\n        }\n        if (this.options.shapeStyle) {\n            var styleConfig = {};\n            if (isObject(this.options.shapeStyle)) {\n                styleConfig.cfg = this.options.shapeStyle;\n            }\n            else if (isFunction(this.options.shapeType)) {\n                styleConfig.fields = [\n                    this.options.colorField,\n                    this.options.xField,\n                    this.options.yField,\n                    this.options.sizeField,\n                ];\n                styleConfig.callback = this.options.shapeType;\n            }\n            geomConfig.style = styleConfig;\n        }\n        if (this.options.tooltip && (this.options.tooltip.fields || this.options.tooltip.formatter)) {\n            this.geometryTooltip(geomConfig);\n        }\n        this.setConfig('geometry', geomConfig);\n    };\n    HeatmapLayer.prototype.addRect = function () {\n        // 如果用户设置了size，将size数值转换为[0,1]区间\n        var size = [0.3, 0.9];\n        if (this.options.shapeSize) {\n            size[0] = this.options.shapeSize[0] / this.gridSize[0];\n            size[1] = this.options.shapeSize[1] / this.gridSize[1];\n        }\n        var rect = {\n            type: 'polygon',\n            position: {\n                fields: [this.options.xField, this.options.yField],\n            },\n            color: {\n                fields: [this.options.colorField],\n                values: this.options.color,\n            },\n            shape: {\n                values: ['rect'],\n            },\n            label: false,\n        };\n        if (this.options.sizeField) {\n            rect.size = {\n                fields: [this.options.sizeField],\n                values: size,\n            };\n        }\n        else {\n            rect.size = {\n                values: [1],\n            };\n        }\n        return rect;\n    };\n    HeatmapLayer.prototype.addCircle = function () {\n        var size = [0.3, 0.9];\n        if (this.options.shapeSize) {\n            size = this.options.shapeSize;\n        }\n        else {\n            size[0] = this.gridSize[0] * size[0] * 0.5;\n            size[1] = this.gridSize[1] * size[1] * 0.5;\n        }\n        var circle = {\n            type: 'point',\n            position: {\n                fields: [this.options.xField, this.options.yField],\n            },\n            color: {\n                fields: [this.options.colorField],\n                values: this.options.color,\n            },\n            shape: {\n                values: ['curvePoint'],\n            },\n            label: false,\n        };\n        if (this.options.sizeField) {\n            circle.size = {\n                fields: [this.options.sizeField],\n                values: size,\n            };\n        }\n        else {\n            circle.size = {\n                values: [Math.min(this.gridSize[0], this.gridSize[1]) * 0.5 * 0.9],\n            };\n        }\n        return circle;\n    };\n    HeatmapLayer.prototype.geometryTooltip = function (config) {\n        config.tooltip = {};\n        var tooltipOptions = this.options.tooltip;\n        if (tooltipOptions.fields) {\n            config.tooltip.fields = tooltipOptions.fields;\n        }\n        if (tooltipOptions.formatter) {\n            config.tooltip.callback = tooltipOptions.formatter;\n            if (!tooltipOptions.fields) {\n                config.tooltip.fields = [this.options.xField, this.options.yField];\n                if (this.options.colorField) {\n                    config.tooltip.fields.push(this.options.colorField);\n                }\n            }\n        }\n    };\n    HeatmapLayer.prototype.getGridSize = function () {\n        if (this.options.padding === 'auto') {\n            return [0, 0];\n        }\n        else {\n            var viewRange = this.getViewRange();\n            var _a = this.options, padding = _a.padding, xField = _a.xField, yField = _a.yField, data = _a.data;\n            var width = viewRange.width - padding[1] - padding[3];\n            var height = viewRange.height - padding[0] - padding[2];\n            var xCount = valuesOfKey(data, xField).length;\n            var yCount = valuesOfKey(data, yField).length;\n            return [width / xCount, height / yCount];\n        }\n    };\n    HeatmapLayer.prototype.circleToRect = function (shapes) {\n        var _this = this;\n        var gridSize = this.gridSize;\n        each(shapes, function (shape) {\n            var _a = shape.get('origin'), x = _a.x, y = _a.y, size = _a.size;\n            var sizeRatio = (size * 2) / Math.min(gridSize[0], gridSize[1]);\n            if (!_this.options.sizeField) {\n                sizeRatio = 1;\n            }\n            var curvePath = getCircleCurve(x, y, size);\n            var rectPath = getRectPath(x, y, gridSize[0], gridSize[1], sizeRatio);\n            shape.stopAnimate();\n            shape.attr('path', curvePath);\n            shape.animate({\n                path: rectPath,\n            }, 500, 'easeLinear');\n        });\n    };\n    HeatmapLayer.prototype.rectToCircle = function (shapes) {\n        var _this = this;\n        each(shapes, function (shape) {\n            var coord = shape.get('coord');\n            var points = shape.get('origin').points;\n            var ps = [];\n            each(points, function (p) {\n                ps.push(coord.convertPoint(p));\n            });\n            var bbox = shape.getBBox();\n            var width = bbox.width;\n            var height = bbox.height;\n            var centerX = bbox.minX + width / 2;\n            var centerY = bbox.minY + height / 2;\n            var offsetRatio = _this.options.sizeField ? 1 : 0.9;\n            var curvePath = getCircleCurve(centerX, centerY, (Math.min(width, height) / 2) * offsetRatio);\n            var circlePath = getCirclePath(centerX, centerY, (Math.min(width, height) / 2) * offsetRatio);\n            shape.stopAnimate();\n            shape.animate({\n                path: curvePath,\n            }, 500, 'easeLinear', function () {\n                shape.attr('path', circlePath);\n            });\n        });\n    };\n    HeatmapLayer.prototype.rectSizeMapping = function (shapes, scale, field) {\n        each(shapes, function (shape) {\n            var data = shape.get('origin').data;\n            var ratio = 0.3 + scale.scale(data[field]) * 0.6;\n            shape.get('origin').size = ratio;\n            var bbox = shape.getBBox();\n            var width = bbox.width;\n            var height = bbox.height;\n            var centerX = bbox.minX + width / 2;\n            var centerY = bbox.minY + height / 2;\n            var path = getRectPath(centerX, centerY, width, height, ratio);\n            shape.stopAnimate();\n            shape.animate({\n                path: path,\n            }, 500, 'easeLinear');\n        });\n    };\n    HeatmapLayer.prototype.circleSizeMapping = function (shapes, scale, field) {\n        each(shapes, function (shape) {\n            var data = shape.get('origin').data;\n            var ratio = 0.3 + scale.scale(data[field]) * 0.6;\n            var _a = shape.get('origin'), x = _a.x, y = _a.y, size = _a.size;\n            var path = getCirclePath(x, y, size * ratio);\n            shape.get('origin').size = size * ratio;\n            shape.stopAnimate();\n            shape.animate({\n                path: path,\n            }, 500, 'easeLinear');\n        });\n    };\n    HeatmapLayer.prototype.circleDisableSizeMapping = function (shapes) {\n        var _this = this;\n        this.options.sizeField = null;\n        each(shapes, function (shape) {\n            var _a = shape.get('origin'), x = _a.x, y = _a.y;\n            var size = Math.min(_this.gridSize[0], _this.gridSize[1]) * 0.9;\n            shape.get('origin').size = size / 2;\n            var path = getCirclePath(x, y, size / 2);\n            shape.stopAnimate();\n            shape.animate({\n                path: path,\n            }, 500, 'easeLinear');\n        });\n    };\n    HeatmapLayer.prototype.rectDisableSizeMapping = function (shapes) {\n        var _this = this;\n        this.options.sizeField = null;\n        each(shapes, function (shape) {\n            var bbox = shape.getBBox();\n            var width = bbox.width;\n            var height = bbox.height;\n            var centerX = bbox.minX + width / 2;\n            var centerY = bbox.minY + height / 2;\n            var path = getRectPath(centerX, centerY, _this.gridSize[0], _this.gridSize[1], 1);\n            shape.get('origin').size = 1;\n            shape.stopAnimate();\n            shape.animate({\n                path: path,\n            }, 500, 'easeLinear');\n        });\n    };\n    HeatmapLayer.prototype.getShape = function () {\n        var elements = this.view.geometries[0].elements;\n        var shapes = [];\n        each(elements, function (ele) {\n            shapes.push(ele.shape);\n        });\n        return shapes;\n    };\n    HeatmapLayer.prototype.renderPlotComponents = function () {\n        var _this = this;\n        each(this.plotComponents, function (component) {\n            component.destroy();\n        });\n        this.plotComponents = [];\n        var componentsType = ['label', 'legend'];\n        each(componentsType, function (t) {\n            var cfg = __assign({ view: _this.view, plot: _this }, _this.options[t]);\n            var component = getPlotComponents(_this, t, cfg);\n            if (component) {\n                component.render();\n                _this.plotComponents.push(component);\n            }\n        });\n    };\n    return HeatmapLayer;\n}(ViewLayer));\nexport default HeatmapLayer;\nregisterPlotType('heatmap', HeatmapLayer);\n//# sourceMappingURL=layer.js.map"]}]}