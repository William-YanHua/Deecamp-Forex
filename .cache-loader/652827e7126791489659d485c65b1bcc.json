{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/d3-regression/src/logarithmic.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/d3-regression/src/logarithmic.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { determination } from \"./utils/determination\";\nimport { interpose } from \"./utils/interpose\";\nimport { ols } from \"./utils/ols\";\nimport { visitPoints } from \"./utils/points\";\nexport default function () {\n    var x = function (d) { return d[0]; }, y = function (d) { return d[1]; }, domain;\n    function logarithmic(data) {\n        var n = 0, X = 0, Y = 0, XY = 0, X2 = 0, xmin = domain ? +domain[0] : Infinity, xmax = domain ? +domain[1] : -Infinity;\n        visitPoints(data, x, y, function (dx, dy) {\n            var lx = Math.log(dx);\n            ++n;\n            X += (lx - X) / n;\n            Y += (dy - Y) / n;\n            XY += (lx * dy - XY) / n;\n            X2 += (lx * lx - X2) / n;\n            if (!domain) {\n                if (dx < xmin)\n                    xmin = dx;\n                if (dx > xmax)\n                    xmax = dx;\n            }\n        });\n        var _a = __read(ols(X, Y, XY, X2), 2), intercept = _a[0], slope = _a[1], fn = function (x) { return slope * Math.log(x) + intercept; }, out = interpose(xmin, xmax, fn);\n        out.a = slope;\n        out.b = intercept;\n        out.predict = fn;\n        out.rSquared = determination(data, x, y, Y, fn);\n        return out;\n    }\n    logarithmic.domain = function (arr) {\n        return arguments.length ? (domain = arr, logarithmic) : domain;\n    };\n    logarithmic.x = function (fn) {\n        return arguments.length ? (x = fn, logarithmic) : x;\n    };\n    logarithmic.y = function (fn) {\n        return arguments.length ? (y = fn, logarithmic) : y;\n    };\n    return logarithmic;\n}\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/d3-regression/src/logarithmic.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/d3-regression/src/logarithmic.js"],"names":[],"mappings":"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","sourcesContent":["import { determination } from \"./utils/determination\";\nimport { interpose } from \"./utils/interpose\";\nimport { ols } from \"./utils/ols\";\nimport { visitPoints } from \"./utils/points\";\n\nexport default function() {\n  let x = d => d[0],\n      y = d => d[1],\n      domain;\n  \n  function logarithmic(data){\n    let n = 0,\n        X = 0,\n        Y = 0,\n        XY = 0,\n        X2 = 0,\n        xmin = domain ? +domain[0] : Infinity,\n        xmax = domain ? +domain[1] : -Infinity;\n    \n    visitPoints(data, x, y, (dx, dy) => {\n      const lx = Math.log(dx);\n      ++n;\n      X += (lx - X) / n;\n      Y += (dy - Y) / n;\n      XY += (lx * dy - XY) / n;\n      X2 += (lx * lx - X2) / n;\n      \n      if (!domain){\n        if (dx < xmin) xmin = dx;\n        if (dx > xmax) xmax = dx;\n      }\n    });\n    \n    const [intercept, slope] = ols(X, Y, XY, X2),\n        fn = x => slope * Math.log(x) + intercept,\n        out = interpose(xmin, xmax, fn);\n        \n    out.a = slope;\n    out.b = intercept;\n    out.predict = fn;\n    out.rSquared = determination(data, x, y, Y, fn);\n\n    return out; \n  }\n  \n  logarithmic.domain = function(arr){\n    return arguments.length ? (domain = arr, logarithmic) : domain;\n  }\n\n  logarithmic.x = function(fn){\n    return arguments.length ? (x = fn, logarithmic) : x;\n  }\n\n  logarithmic.y = function(fn){\n    return arguments.length ? (y = fn, logarithmic) : y;\n  }\n  \n  return logarithmic;\n}"]}]}