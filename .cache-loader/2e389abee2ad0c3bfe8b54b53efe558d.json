{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/util/responsive/rules/node-jitter-upward.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/util/responsive/rules/node-jitter-upward.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { each } from '@antv/util';\nimport { isNodeOverlap } from './clear-overlapping';\nexport default function nodeJitterUpward(shape, option, index, cfg) {\n    var nodes = cfg.nodes.nodes;\n    if (index === 0) {\n        return;\n    }\n    var current = nodes[index];\n    var previous = nodes[index - 1];\n    if (isNodeOverlap(current, previous)) {\n        var element = cfg.plot.view.geometries[0].elements[0];\n        var y = previous.top - current.height / 2;\n        var offset = 10;\n        if (y - offset > cfg.region.top) {\n            var origin_1 = current.shape.get('origin');\n            var shapeId = element.getShapeId(origin_1);\n            var shapes = element.getShapes();\n            var shapeBbox = getShapeById(shapeId, shapes).get('box');\n            var originX = shapeBbox.left + shapeBbox.width / 2;\n            var originY = shapeBbox.top;\n            var container = element.get('labelController').labelsContainer;\n            var labelLine = container.addShape('path', {\n                attrs: {\n                    path: [\n                        ['M', originX, originY],\n                        ['L', current.shape.attr('x'), y],\n                    ],\n                    stroke: '#ccc',\n                    lineWidth: 1,\n                },\n            });\n            var origin_position = { x: shape.attr('x'), y: shape.attr('y') };\n            current.shape.attr('y', y - offset);\n            nodes[index] = cfg.nodes.measure(current.shape);\n            nodes[index].line = labelLine;\n            nodes[index].origin_position = origin_position;\n        }\n    }\n}\nfunction getShapeById(shapeId, shapes) {\n    var target;\n    each(shapes, function (shape) {\n        var s = shape;\n        var id = s.get('id');\n        if (id === shapeId) {\n            target = s;\n        }\n    });\n    return target;\n}\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/util/responsive/rules/node-jitter-upward.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/g2plot/esm/util/responsive/rules/node-jitter-upward.js"],"names":[],"mappings":"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","sourcesContent":["import { each } from '@antv/util';\nimport { isNodeOverlap } from './clear-overlapping';\n/** 图形向上抖开并拉线 */\n// todo 允许设置offset和拉线样式\nexport default function nodeJitterUpward(shape, option, index, cfg) {\n    var nodes = cfg.nodes.nodes;\n    if (index === 0) {\n        return;\n    }\n    var current = nodes[index];\n    var previous = nodes[index - 1];\n    if (isNodeOverlap(current, previous)) {\n        var element = cfg.plot.view.geometries[0].elements[0];\n        var y = previous.top - current.height / 2;\n        var offset = 10;\n        if (y - offset > cfg.region.top) {\n            // 取到label对应的element-shape\n            var origin_1 = current.shape.get('origin');\n            var shapeId = element.getShapeId(origin_1);\n            var shapes = element.getShapes();\n            var shapeBbox = getShapeById(shapeId, shapes).get('box');\n            var originX = shapeBbox.left + shapeBbox.width / 2;\n            var originY = shapeBbox.top;\n            // 拉线\n            var container = element.get('labelController').labelsContainer;\n            var labelLine = container.addShape('path', {\n                attrs: {\n                    path: [\n                        ['M', originX, originY],\n                        ['L', current.shape.attr('x'), y],\n                    ],\n                    stroke: '#ccc',\n                    lineWidth: 1,\n                },\n            });\n            /** 保存labelLine和label初始位置信息 */\n            var origin_position = { x: shape.attr('x'), y: shape.attr('y') };\n            // 更新标签位置，同步更新node\n            current.shape.attr('y', y - offset);\n            nodes[index] = cfg.nodes.measure(current.shape);\n            nodes[index].line = labelLine;\n            nodes[index].origin_position = origin_position;\n        }\n    }\n}\nfunction getShapeById(shapeId, shapes) {\n    var target;\n    each(shapes, function (shape) {\n        var s = shape;\n        var id = s.get('id');\n        if (id === shapeId) {\n            target = s;\n        }\n    });\n    return target;\n}\n//# sourceMappingURL=node-jitter-upward.js.map"]}]}