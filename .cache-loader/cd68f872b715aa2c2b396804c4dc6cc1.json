{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/vfile-location/index.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/vfile-location/index.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["'use strict';\nmodule.exports = factory;\nfunction factory(file) {\n    var contents = indices(String(file));\n    return {\n        toPosition: offsetToPositionFactory(contents),\n        toOffset: positionToOffsetFactory(contents)\n    };\n}\nfunction offsetToPositionFactory(indices) {\n    return offsetToPosition;\n    function offsetToPosition(offset) {\n        var index = -1;\n        var length = indices.length;\n        if (offset < 0) {\n            return {};\n        }\n        while (++index < length) {\n            if (indices[index] > offset) {\n                return {\n                    line: index + 1,\n                    column: offset - (indices[index - 1] || 0) + 1,\n                    offset: offset\n                };\n            }\n        }\n        return {};\n    }\n}\nfunction positionToOffsetFactory(indices) {\n    return positionToOffset;\n    function positionToOffset(position) {\n        var line = position && position.line;\n        var column = position && position.column;\n        if (!isNaN(line) && !isNaN(column) && line - 1 in indices) {\n            return (indices[line - 2] || 0) + column - 1 || 0;\n        }\n        return -1;\n    }\n}\nfunction indices(value) {\n    var result = [];\n    var index = value.indexOf('\\n');\n    while (index !== -1) {\n        result.push(index + 1);\n        index = value.indexOf('\\n', index + 1);\n    }\n    result.push(value.length + 1);\n    return result;\n}\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/vfile-location/index.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/vfile-location/index.js"],"names":[],"mappings":"AAAA,YAAY,CAAA;AAEZ,MAAM,CAAC,OAAO,GAAG,OAAO,CAAA;AAExB,SAAS,OAAO,CAAC,IAAI;IACnB,IAAI,QAAQ,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAA;IAEpC,OAAO;QACL,UAAU,EAAE,uBAAuB,CAAC,QAAQ,CAAC;QAC7C,QAAQ,EAAE,uBAAuB,CAAC,QAAQ,CAAC;KAC5C,CAAA;AACH,CAAC;AAID,SAAS,uBAAuB,CAAC,OAAO;IACtC,OAAO,gBAAgB,CAAA;IAGvB,SAAS,gBAAgB,CAAC,MAAM;QAC9B,IAAI,KAAK,GAAG,CAAC,CAAC,CAAA;QACd,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAA;QAE3B,IAAI,MAAM,GAAG,CAAC,EAAE;YACd,OAAO,EAAE,CAAA;SACV;QAED,OAAO,EAAE,KAAK,GAAG,MAAM,EAAE;YACvB,IAAI,OAAO,CAAC,KAAK,CAAC,GAAG,MAAM,EAAE;gBAC3B,OAAO;oBACL,IAAI,EAAE,KAAK,GAAG,CAAC;oBACf,MAAM,EAAE,MAAM,GAAG,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC;oBAC9C,MAAM,EAAE,MAAM;iBACf,CAAA;aACF;SACF;QAED,OAAO,EAAE,CAAA;IACX,CAAC;AACH,CAAC;AAID,SAAS,uBAAuB,CAAC,OAAO;IACtC,OAAO,gBAAgB,CAAA;IAIvB,SAAS,gBAAgB,CAAC,QAAQ;QAChC,IAAI,IAAI,GAAG,QAAQ,IAAI,QAAQ,CAAC,IAAI,CAAA;QACpC,IAAI,MAAM,GAAG,QAAQ,IAAI,QAAQ,CAAC,MAAM,CAAA;QAExC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,OAAO,EAAE;YACzD,OAAO,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,CAAC,IAAI,CAAC,CAAA;SAClD;QAED,OAAO,CAAC,CAAC,CAAA;IACX,CAAC;AACH,CAAC;AAGD,SAAS,OAAO,CAAC,KAAK;IACpB,IAAI,MAAM,GAAG,EAAE,CAAA;IACf,IAAI,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;IAE/B,OAAO,KAAK,KAAK,CAAC,CAAC,EAAE;QACnB,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAA;QACtB,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC,CAAA;KACvC;IAED,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;IAE7B,OAAO,MAAM,CAAA;AACf,CAAC","sourcesContent":["'use strict'\n\nmodule.exports = factory\n\nfunction factory(file) {\n  var contents = indices(String(file))\n\n  return {\n    toPosition: offsetToPositionFactory(contents),\n    toOffset: positionToOffsetFactory(contents)\n  }\n}\n\n// Factory to get the line and column-based `position` for `offset` in the bound\n// indices.\nfunction offsetToPositionFactory(indices) {\n  return offsetToPosition\n\n  // Get the line and column-based `position` for `offset` in the bound indices.\n  function offsetToPosition(offset) {\n    var index = -1\n    var length = indices.length\n\n    if (offset < 0) {\n      return {}\n    }\n\n    while (++index < length) {\n      if (indices[index] > offset) {\n        return {\n          line: index + 1,\n          column: offset - (indices[index - 1] || 0) + 1,\n          offset: offset\n        }\n      }\n    }\n\n    return {}\n  }\n}\n\n// Factory to get the `offset` for a line and column-based `position` in the\n// bound indices.\nfunction positionToOffsetFactory(indices) {\n  return positionToOffset\n\n  // Get the `offset` for a line and column-based `position` in the bound\n  // indices.\n  function positionToOffset(position) {\n    var line = position && position.line\n    var column = position && position.column\n\n    if (!isNaN(line) && !isNaN(column) && line - 1 in indices) {\n      return (indices[line - 2] || 0) + column - 1 || 0\n    }\n\n    return -1\n  }\n}\n\n// Get indices of line-breaks in `value`.\nfunction indices(value) {\n  var result = []\n  var index = value.indexOf('\\n')\n\n  while (index !== -1) {\n    result.push(index + 1)\n    index = value.indexOf('\\n', index + 1)\n  }\n\n  result.push(value.length + 1)\n\n  return result\n}\n"]}]}