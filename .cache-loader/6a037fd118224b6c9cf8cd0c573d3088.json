{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\node_modules\\@antv\\component\\lib\\tooltip\\mixin\\position.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\node_modules\\@antv\\component\\lib\\tooltip\\mixin\\position.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["var GAP = 20;\r\nvar PositionMixin = {\r\n    _calcTooltipPosition: function _calcTooltipPosition(x, y, position, containerWidth, containerHeight, target) {\r\n        var rectWidth = 0;\r\n        var rectHeight = 0;\r\n        var gap = 20;\r\n        if (target) {\r\n            var rect = target.getBBox();\r\n            rectWidth = rect.width;\r\n            rectHeight = rect.height;\r\n            x = rect.x;\r\n            y = rect.y;\r\n            gap = 5;\r\n        }\r\n        switch (position) {\r\n            case 'inside':\r\n                x = x + rectWidth / 2 - containerWidth / 2;\r\n                y = y + rectHeight / 2 - containerHeight / 2;\r\n                break;\r\n            case 'top':\r\n                x = x + rectWidth / 2 - containerWidth / 2;\r\n                y = y - containerHeight - gap;\r\n                break;\r\n            case 'left':\r\n                x = x - containerWidth - gap;\r\n                y = y + rectHeight / 2 - containerHeight / 2;\r\n                break;\r\n            case 'right':\r\n                x = x + rectWidth + gap;\r\n                y = y + rectHeight / 2 - containerHeight / 2;\r\n                break;\r\n            case 'bottom':\r\n            default:\r\n                x = x + rectWidth / 2 - containerWidth / 2;\r\n                y = y + rectHeight + gap;\r\n                break;\r\n        }\r\n        return [x, y];\r\n    },\r\n    _constraintPositionInBoundary: function _constraintPositionInBoundary(x, y, width, height, viewWidth, viewHeight) {\r\n        if (x + width + GAP > viewWidth) {\r\n            x -= width + GAP;\r\n            x = x < 0 ? 0 : x;\r\n        }\r\n        else if (x + GAP < 0) {\r\n            x = GAP;\r\n        }\r\n        else {\r\n            x += GAP;\r\n        }\r\n        if (y + height + GAP > viewHeight) {\r\n            y -= height + GAP;\r\n            y = y < 0 ? 0 : y;\r\n        }\r\n        else if (y + GAP < 0) {\r\n            y = GAP;\r\n        }\r\n        else {\r\n            y += GAP;\r\n        }\r\n        return [x, y];\r\n    },\r\n    _constraintPositionInPlot: function _constraintPositionInPlot(x, y, width, height, plotRange, onlyHorizontal) {\r\n        if (x + width > plotRange.tr.x) {\r\n            x -= width + 2 * GAP;\r\n        }\r\n        if (x < plotRange.tl.x) {\r\n            x = plotRange.tl.x;\r\n        }\r\n        if (!onlyHorizontal) {\r\n            if (y + height > plotRange.bl.y) {\r\n                y -= height + 2 * GAP;\r\n            }\r\n            if (y < plotRange.tl.y) {\r\n                y = plotRange.tl.y;\r\n            }\r\n        }\r\n        return [x, y];\r\n    }\r\n};\r\nmodule.exports = PositionMixin;\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\node_modules\\@antv\\component\\lib\\tooltip\\mixin\\position.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g2\\node_modules\\@antv\\component\\lib\\tooltip\\mixin\\position.js"],"names":[],"mappings":"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","sourcesContent":["var GAP = 20;\nvar PositionMixin = {\n  _calcTooltipPosition: function _calcTooltipPosition(x, y, position, containerWidth, containerHeight, target) {\n    var rectWidth = 0;\n    var rectHeight = 0;\n    var gap = 20;\n\n    if (target) {\n      var rect = target.getBBox();\n      rectWidth = rect.width;\n      rectHeight = rect.height;\n      x = rect.x;\n      y = rect.y;\n      gap = 5;\n    }\n\n    switch (position) {\n      case 'inside':\n        x = x + rectWidth / 2 - containerWidth / 2;\n        y = y + rectHeight / 2 - containerHeight / 2;\n        break;\n\n      case 'top':\n        x = x + rectWidth / 2 - containerWidth / 2;\n        y = y - containerHeight - gap;\n        break;\n\n      case 'left':\n        x = x - containerWidth - gap;\n        y = y + rectHeight / 2 - containerHeight / 2;\n        break;\n\n      case 'right':\n        x = x + rectWidth + gap;\n        y = y + rectHeight / 2 - containerHeight / 2;\n        break;\n\n      case 'bottom':\n      default:\n        x = x + rectWidth / 2 - containerWidth / 2;\n        y = y + rectHeight + gap;\n        break;\n    }\n\n    return [x, y];\n  },\n  _constraintPositionInBoundary: function _constraintPositionInBoundary(x, y, width, height, viewWidth, viewHeight) {\n    if (x + width + GAP > viewWidth) {\n      x -= width + GAP;\n      x = x < 0 ? 0 : x;\n    } else if (x + GAP < 0) {\n      x = GAP;\n    } else {\n      x += GAP;\n    }\n\n    if (y + height + GAP > viewHeight) {\n      y -= height + GAP;\n      y = y < 0 ? 0 : y;\n    } else if (y + GAP < 0) {\n      y = GAP;\n    } else {\n      y += GAP;\n    }\n\n    return [x, y];\n  },\n  _constraintPositionInPlot: function _constraintPositionInPlot(x, y, width, height, plotRange, onlyHorizontal) {\n    if (x + width > plotRange.tr.x) {\n      x -= width + 2 * GAP;\n    }\n\n    if (x < plotRange.tl.x) {\n      x = plotRange.tl.x;\n    }\n\n    if (!onlyHorizontal) {\n      if (y + height > plotRange.bl.y) {\n        y -= height + 2 * GAP;\n      }\n\n      if (y < plotRange.tl.y) {\n        y = plotRange.tl.y;\n      }\n    }\n\n    return [x, y];\n  }\n};\nmodule.exports = PositionMixin;"]}]}