{"remainingRequest":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js??ref--4-1!/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/scale/esm/base.js","dependencies":[{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/scale/esm/base.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { assign, head, isEmpty, isFunction, isNil, isNumber, isObject, isString, last, map } from '@antv/util';\nimport { getTickMethod } from './tick-method/register';\nvar Scale = (function () {\n    function Scale(cfg) {\n        this.type = 'base';\n        this.isCategory = false;\n        this.isLinear = false;\n        this.isContinuous = false;\n        this.isIdentity = false;\n        this.values = [];\n        this.range = [0, 1];\n        this.ticks = [];\n        this.__cfg__ = cfg;\n        this.initCfg();\n        this.init();\n    }\n    Scale.prototype.translate = function (v) {\n        return v;\n    };\n    Scale.prototype.change = function (cfg) {\n        assign(this.__cfg__, cfg);\n        this.init();\n    };\n    Scale.prototype.clone = function () {\n        return this.constructor(this.__cfg__);\n    };\n    Scale.prototype.getTicks = function () {\n        var _this = this;\n        return map(this.ticks, function (tick, idx) {\n            if (isObject(tick)) {\n                return tick;\n            }\n            return {\n                text: _this.getText(tick, idx),\n                tickValue: tick,\n                value: _this.scale(tick),\n            };\n        });\n    };\n    Scale.prototype.getText = function (value, key) {\n        var formatter = this.formatter;\n        var res = formatter ? formatter(value, key) : value;\n        if (isNil(res) || !isFunction(res.toString)) {\n            return '';\n        }\n        return res.toString();\n    };\n    Scale.prototype.getConfig = function (key) {\n        return this.__cfg__[key];\n    };\n    Scale.prototype.init = function () {\n        assign(this, this.__cfg__);\n        this.setDomain();\n        if (isEmpty(this.getConfig('ticks'))) {\n            this.ticks = this.calculateTicks();\n        }\n    };\n    Scale.prototype.initCfg = function () { };\n    Scale.prototype.setDomain = function () { };\n    Scale.prototype.calculateTicks = function () {\n        var tickMethod = this.tickMethod;\n        var ticks = [];\n        if (isString(tickMethod)) {\n            var method = getTickMethod(tickMethod);\n            if (!method) {\n                throw new Error('There is no method to to calculate ticks!');\n            }\n            ticks = method(this);\n        }\n        else if (isFunction(tickMethod)) {\n            ticks = tickMethod(this);\n        }\n        return ticks;\n    };\n    Scale.prototype.rangeMin = function () {\n        return head(this.range);\n    };\n    Scale.prototype.rangeMax = function () {\n        return last(this.range);\n    };\n    Scale.prototype.calcPercent = function (value, min, max) {\n        if (isNumber(value)) {\n            return (value - min) / (max - min);\n        }\n        return NaN;\n    };\n    Scale.prototype.calcValue = function (percent, min, max) {\n        return min + percent * (max - min);\n    };\n    return Scale;\n}());\nexport default Scale;\n",{"version":3,"file":"/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/scale/esm/base.js","sourceRoot":"","sources":["/run/media/williamyh/新加卷/project/Deecamp-project/system/Web/node_modules/@antv/scale/esm/base.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,YAAY,CAAC;AAC/G,OAAO,EAAE,aAAa,EAAE,MAAM,wBAAwB,CAAC;AACvD,IAAI,KAAK,GAAiB,CAAC;IACvB,SAAS,KAAK,CAAC,GAAG;QAId,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QAInB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAIxB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAItB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAI1B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACnB,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAED,KAAK,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,CAAC;QACnC,OAAO,CAAC,CAAC;IACb,CAAC,CAAC;IAEF,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,GAAG;QAElC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC,CAAC;IACF,KAAK,CAAC,SAAS,CAAC,KAAK,GAAG;QACpB,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC1C,CAAC,CAAC;IAEF,KAAK,CAAC,SAAS,CAAC,QAAQ,GAAG;QACvB,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,OAAO,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,IAAI,EAAE,GAAG;YACtC,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE;gBAEhB,OAAO,IAAI,CAAC;aACf;YACD,OAAO;gBACH,IAAI,EAAE,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;gBAC9B,SAAS,EAAE,IAAI;gBACf,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC;aAC3B,CAAC;QACN,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;IAEF,KAAK,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,KAAK,EAAE,GAAG;QAC1C,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC/B,IAAI,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QACpD,IAAI,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;YACzC,OAAO,EAAE,CAAC;SACb;QACD,OAAO,GAAG,CAAC,QAAQ,EAAE,CAAC;IAC1B,CAAC,CAAC;IAEF,KAAK,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,GAAG;QACrC,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC,CAAC;IAEF,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG;QACnB,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAC3B,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,EAAE;YAClC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;SACtC;IACL,CAAC,CAAC;IAEF,KAAK,CAAC,SAAS,CAAC,OAAO,GAAG,cAAc,CAAC,CAAC;IAC1C,KAAK,CAAC,SAAS,CAAC,SAAS,GAAG,cAAc,CAAC,CAAC;IAC5C,KAAK,CAAC,SAAS,CAAC,cAAc,GAAG;QAC7B,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACjC,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,IAAI,QAAQ,CAAC,UAAU,CAAC,EAAE;YACtB,IAAI,MAAM,GAAG,aAAa,CAAC,UAAU,CAAC,CAAC;YACvC,IAAI,CAAC,MAAM,EAAE;gBACT,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;aAChE;YACD,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;SACxB;aACI,IAAI,UAAU,CAAC,UAAU,CAAC,EAAE;YAC7B,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;SAC5B;QACD,OAAO,KAAK,CAAC;IACjB,CAAC,CAAC;IAEF,KAAK,CAAC,SAAS,CAAC,QAAQ,GAAG;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC,CAAC;IAEF,KAAK,CAAC,SAAS,CAAC,QAAQ,GAAG;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC,CAAC;IAEF,KAAK,CAAC,SAAS,CAAC,WAAW,GAAG,UAAU,KAAK,EAAE,GAAG,EAAE,GAAG;QACnD,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;YACjB,OAAO,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;SACtC;QACD,OAAO,GAAG,CAAC;IACf,CAAC,CAAC;IAEF,KAAK,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,OAAO,EAAE,GAAG,EAAE,GAAG;QACnD,OAAO,GAAG,GAAG,OAAO,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IACvC,CAAC,CAAC;IACF,OAAO,KAAK,CAAC;AACjB,CAAC,EAAE,CAAC,CAAC;AACL,eAAe,KAAK,CAAC","sourcesContent":["import { assign, head, isEmpty, isFunction, isNil, isNumber, isObject, isString, last, map } from '@antv/util';\nimport { getTickMethod } from './tick-method/register';\nvar Scale = /** @class */ (function () {\n    function Scale(cfg) {\n        /**\n         * 度量的类型\n         */\n        this.type = 'base';\n        /**\n         * 是否分类类型的度量\n         */\n        this.isCategory = false;\n        /**\n         * 是否线性度量，有linear, time 度量\n         */\n        this.isLinear = false;\n        /**\n         * 是否连续类型的度量，linear,time,log, pow, quantile, quantize 都支持\n         */\n        this.isContinuous = false;\n        /**\n         * 是否是常量的度量，传入和传出一致\n         */\n        this.isIdentity = false;\n        this.values = [];\n        this.range = [0, 1];\n        this.ticks = [];\n        this.__cfg__ = cfg;\n        this.initCfg();\n        this.init();\n    }\n    // 对于原始值的必要转换，如分类、时间字段需转换成数值，用transform/map命名可能更好\n    Scale.prototype.translate = function (v) {\n        return v;\n    };\n    /** 重新初始化 */\n    Scale.prototype.change = function (cfg) {\n        // 覆盖配置项，而不替代\n        assign(this.__cfg__, cfg);\n        this.init();\n    };\n    Scale.prototype.clone = function () {\n        return this.constructor(this.__cfg__);\n    };\n    /** 获取坐标轴需要的ticks */\n    Scale.prototype.getTicks = function () {\n        var _this = this;\n        return map(this.ticks, function (tick, idx) {\n            if (isObject(tick)) {\n                // 仅当符合Tick类型时才有意义\n                return tick;\n            }\n            return {\n                text: _this.getText(tick, idx),\n                tickValue: tick,\n                value: _this.scale(tick),\n            };\n        });\n    };\n    /** 获取Tick的格式化结果 */\n    Scale.prototype.getText = function (value, key) {\n        var formatter = this.formatter;\n        var res = formatter ? formatter(value, key) : value;\n        if (isNil(res) || !isFunction(res.toString)) {\n            return '';\n        }\n        return res.toString();\n    };\n    // 获取配置项中的值，当前 scale 上的值可能会被修改\n    Scale.prototype.getConfig = function (key) {\n        return this.__cfg__[key];\n    };\n    // scale初始化\n    Scale.prototype.init = function () {\n        assign(this, this.__cfg__);\n        this.setDomain();\n        if (isEmpty(this.getConfig('ticks'))) {\n            this.ticks = this.calculateTicks();\n        }\n    };\n    // 子类上覆盖某些属性，不能直接在类上声明，否则会被覆盖\n    Scale.prototype.initCfg = function () { };\n    Scale.prototype.setDomain = function () { };\n    Scale.prototype.calculateTicks = function () {\n        var tickMethod = this.tickMethod;\n        var ticks = [];\n        if (isString(tickMethod)) {\n            var method = getTickMethod(tickMethod);\n            if (!method) {\n                throw new Error('There is no method to to calculate ticks!');\n            }\n            ticks = method(this);\n        }\n        else if (isFunction(tickMethod)) {\n            ticks = tickMethod(this);\n        }\n        return ticks;\n    };\n    // range 的最小值\n    Scale.prototype.rangeMin = function () {\n        return head(this.range);\n    };\n    // range 的最大值\n    Scale.prototype.rangeMax = function () {\n        return last(this.range);\n    };\n    /** 定义域转 0~1 */\n    Scale.prototype.calcPercent = function (value, min, max) {\n        if (isNumber(value)) {\n            return (value - min) / (max - min);\n        }\n        return NaN;\n    };\n    /** 0~1转定义域 */\n    Scale.prototype.calcValue = function (percent, min, max) {\n        return min + percent * (max - min);\n    };\n    return Scale;\n}());\nexport default Scale;\n//# sourceMappingURL=base.js.map"]}]}