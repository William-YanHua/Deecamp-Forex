{"remainingRequest":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js??ref--4-1!D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-svg\\node_modules\\@antv\\util\\esm\\memoize.js","dependencies":[{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-svg\\node_modules\\@antv\\util\\esm\\memoize.js","mtime":499162500000},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595520254649},{"path":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\ts-loader\\index.js","mtime":1537906253000}],"contextDependencies":[],"result":["import isFunction from './is-function';\r\nexport default (function (f, resolver) {\r\n    if (!isFunction(f)) {\r\n        throw new TypeError('Expected a function');\r\n    }\r\n    var memoized = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        var key = resolver ? resolver.apply(this, args) : args[0];\r\n        var cache = memoized.cache;\r\n        if (cache.has(key)) {\r\n            return cache.get(key);\r\n        }\r\n        var result = f.apply(this, args);\r\n        cache.set(key, result);\r\n        return result;\r\n    };\r\n    memoized.cache = new Map();\r\n    return memoized;\r\n});\r\n",{"version":3,"file":"D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-svg\\node_modules\\@antv\\util\\esm\\memoize.js","sourceRoot":"","sources":["D:\\project\\Deecamp-project\\system\\Web\\node_modules\\@antv\\g-svg\\node_modules\\@antv\\util\\esm\\memoize.js"],"names":[],"mappings":"AAAA,OAAO,UAAU,MAAM,eAAe,CAAC;AAOvC,eAAe,CAAC,UAAU,CAAC,EAAE,QAAQ;IACjC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;QAChB,MAAM,IAAI,SAAS,CAAC,qBAAqB,CAAC,CAAC;KAC9C;IACD,IAAI,QAAQ,GAAG;QACX,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;YAC1C,IAAI,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,EAAE,CAAC,CAAC;SAC5B;QAED,IAAI,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1D,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;QAC3B,IAAI,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YAChB,OAAO,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACzB;QACD,IAAI,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAEjC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QACvB,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;IACF,QAAQ,CAAC,KAAK,GAAG,IAAI,GAAG,EAAE,CAAC;IAC3B,OAAO,QAAQ,CAAC;AACpB,CAAC,CAAC,CAAC","sourcesContent":["import isFunction from './is-function';\n/**\n * _.memoize(calColor);\n * _.memoize(calColor, (...args) => args[0]);\n * @param f\n * @param resolver\n */\nexport default (function (f, resolver) {\n    if (!isFunction(f)) {\n        throw new TypeError('Expected a function');\n    }\n    var memoized = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // 使用方法构造 key，如果不存在 resolver，则直接取第一个参数作为 key\n        var key = resolver ? resolver.apply(this, args) : args[0];\n        var cache = memoized.cache;\n        if (cache.has(key)) {\n            return cache.get(key);\n        }\n        var result = f.apply(this, args);\n        // 缓存起来\n        cache.set(key, result);\n        return result;\n    };\n    memoized.cache = new Map();\n    return memoized;\n});\n//# sourceMappingURL=memoize.js.map"]}]}